
miniRT:     file format elf64-x86-64


Disassembly of section .init:

0000000000002000 <_init>:
    2000:	f3 0f 1e fa          	endbr64 
    2004:	48 83 ec 08          	sub    rsp,0x8
    2008:	48 8b 05 81 ef 00 00 	mov    rax,QWORD PTR [rip+0xef81]        # 10f90 <__gmon_start__@Base>
    200f:	48 85 c0             	test   rax,rax
    2012:	74 02                	je     2016 <_init+0x16>
    2014:	ff d0                	call   rax
    2016:	48 83 c4 08          	add    rsp,0x8
    201a:	c3                   	ret    

Disassembly of section .plt:

0000000000002020 <.plt>:
    2020:	ff 35 52 ed 00 00    	push   QWORD PTR [rip+0xed52]        # 10d78 <_GLOBAL_OFFSET_TABLE_+0x8>
    2026:	f2 ff 25 53 ed 00 00 	bnd jmp QWORD PTR [rip+0xed53]        # 10d80 <_GLOBAL_OFFSET_TABLE_+0x10>
    202d:	0f 1f 00             	nop    DWORD PTR [rax]
    2030:	f3 0f 1e fa          	endbr64 
    2034:	68 00 00 00 00       	push   0x0
    2039:	f2 e9 e1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    203f:	90                   	nop
    2040:	f3 0f 1e fa          	endbr64 
    2044:	68 01 00 00 00       	push   0x1
    2049:	f2 e9 d1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    204f:	90                   	nop
    2050:	f3 0f 1e fa          	endbr64 
    2054:	68 02 00 00 00       	push   0x2
    2059:	f2 e9 c1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    205f:	90                   	nop
    2060:	f3 0f 1e fa          	endbr64 
    2064:	68 03 00 00 00       	push   0x3
    2069:	f2 e9 b1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    206f:	90                   	nop
    2070:	f3 0f 1e fa          	endbr64 
    2074:	68 04 00 00 00       	push   0x4
    2079:	f2 e9 a1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    207f:	90                   	nop
    2080:	f3 0f 1e fa          	endbr64 
    2084:	68 05 00 00 00       	push   0x5
    2089:	f2 e9 91 ff ff ff    	bnd jmp 2020 <_init+0x20>
    208f:	90                   	nop
    2090:	f3 0f 1e fa          	endbr64 
    2094:	68 06 00 00 00       	push   0x6
    2099:	f2 e9 81 ff ff ff    	bnd jmp 2020 <_init+0x20>
    209f:	90                   	nop
    20a0:	f3 0f 1e fa          	endbr64 
    20a4:	68 07 00 00 00       	push   0x7
    20a9:	f2 e9 71 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20af:	90                   	nop
    20b0:	f3 0f 1e fa          	endbr64 
    20b4:	68 08 00 00 00       	push   0x8
    20b9:	f2 e9 61 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20bf:	90                   	nop
    20c0:	f3 0f 1e fa          	endbr64 
    20c4:	68 09 00 00 00       	push   0x9
    20c9:	f2 e9 51 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20cf:	90                   	nop
    20d0:	f3 0f 1e fa          	endbr64 
    20d4:	68 0a 00 00 00       	push   0xa
    20d9:	f2 e9 41 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20df:	90                   	nop
    20e0:	f3 0f 1e fa          	endbr64 
    20e4:	68 0b 00 00 00       	push   0xb
    20e9:	f2 e9 31 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20ef:	90                   	nop
    20f0:	f3 0f 1e fa          	endbr64 
    20f4:	68 0c 00 00 00       	push   0xc
    20f9:	f2 e9 21 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20ff:	90                   	nop
    2100:	f3 0f 1e fa          	endbr64 
    2104:	68 0d 00 00 00       	push   0xd
    2109:	f2 e9 11 ff ff ff    	bnd jmp 2020 <_init+0x20>
    210f:	90                   	nop
    2110:	f3 0f 1e fa          	endbr64 
    2114:	68 0e 00 00 00       	push   0xe
    2119:	f2 e9 01 ff ff ff    	bnd jmp 2020 <_init+0x20>
    211f:	90                   	nop
    2120:	f3 0f 1e fa          	endbr64 
    2124:	68 0f 00 00 00       	push   0xf
    2129:	f2 e9 f1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    212f:	90                   	nop
    2130:	f3 0f 1e fa          	endbr64 
    2134:	68 10 00 00 00       	push   0x10
    2139:	f2 e9 e1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    213f:	90                   	nop
    2140:	f3 0f 1e fa          	endbr64 
    2144:	68 11 00 00 00       	push   0x11
    2149:	f2 e9 d1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    214f:	90                   	nop
    2150:	f3 0f 1e fa          	endbr64 
    2154:	68 12 00 00 00       	push   0x12
    2159:	f2 e9 c1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    215f:	90                   	nop
    2160:	f3 0f 1e fa          	endbr64 
    2164:	68 13 00 00 00       	push   0x13
    2169:	f2 e9 b1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    216f:	90                   	nop
    2170:	f3 0f 1e fa          	endbr64 
    2174:	68 14 00 00 00       	push   0x14
    2179:	f2 e9 a1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    217f:	90                   	nop
    2180:	f3 0f 1e fa          	endbr64 
    2184:	68 15 00 00 00       	push   0x15
    2189:	f2 e9 91 fe ff ff    	bnd jmp 2020 <_init+0x20>
    218f:	90                   	nop
    2190:	f3 0f 1e fa          	endbr64 
    2194:	68 16 00 00 00       	push   0x16
    2199:	f2 e9 81 fe ff ff    	bnd jmp 2020 <_init+0x20>
    219f:	90                   	nop
    21a0:	f3 0f 1e fa          	endbr64 
    21a4:	68 17 00 00 00       	push   0x17
    21a9:	f2 e9 71 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21af:	90                   	nop
    21b0:	f3 0f 1e fa          	endbr64 
    21b4:	68 18 00 00 00       	push   0x18
    21b9:	f2 e9 61 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21bf:	90                   	nop
    21c0:	f3 0f 1e fa          	endbr64 
    21c4:	68 19 00 00 00       	push   0x19
    21c9:	f2 e9 51 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21cf:	90                   	nop
    21d0:	f3 0f 1e fa          	endbr64 
    21d4:	68 1a 00 00 00       	push   0x1a
    21d9:	f2 e9 41 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21df:	90                   	nop
    21e0:	f3 0f 1e fa          	endbr64 
    21e4:	68 1b 00 00 00       	push   0x1b
    21e9:	f2 e9 31 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21ef:	90                   	nop
    21f0:	f3 0f 1e fa          	endbr64 
    21f4:	68 1c 00 00 00       	push   0x1c
    21f9:	f2 e9 21 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21ff:	90                   	nop
    2200:	f3 0f 1e fa          	endbr64 
    2204:	68 1d 00 00 00       	push   0x1d
    2209:	f2 e9 11 fe ff ff    	bnd jmp 2020 <_init+0x20>
    220f:	90                   	nop
    2210:	f3 0f 1e fa          	endbr64 
    2214:	68 1e 00 00 00       	push   0x1e
    2219:	f2 e9 01 fe ff ff    	bnd jmp 2020 <_init+0x20>
    221f:	90                   	nop
    2220:	f3 0f 1e fa          	endbr64 
    2224:	68 1f 00 00 00       	push   0x1f
    2229:	f2 e9 f1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    222f:	90                   	nop
    2230:	f3 0f 1e fa          	endbr64 
    2234:	68 20 00 00 00       	push   0x20
    2239:	f2 e9 e1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    223f:	90                   	nop
    2240:	f3 0f 1e fa          	endbr64 
    2244:	68 21 00 00 00       	push   0x21
    2249:	f2 e9 d1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    224f:	90                   	nop
    2250:	f3 0f 1e fa          	endbr64 
    2254:	68 22 00 00 00       	push   0x22
    2259:	f2 e9 c1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    225f:	90                   	nop
    2260:	f3 0f 1e fa          	endbr64 
    2264:	68 23 00 00 00       	push   0x23
    2269:	f2 e9 b1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    226f:	90                   	nop
    2270:	f3 0f 1e fa          	endbr64 
    2274:	68 24 00 00 00       	push   0x24
    2279:	f2 e9 a1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    227f:	90                   	nop
    2280:	f3 0f 1e fa          	endbr64 
    2284:	68 25 00 00 00       	push   0x25
    2289:	f2 e9 91 fd ff ff    	bnd jmp 2020 <_init+0x20>
    228f:	90                   	nop
    2290:	f3 0f 1e fa          	endbr64 
    2294:	68 26 00 00 00       	push   0x26
    2299:	f2 e9 81 fd ff ff    	bnd jmp 2020 <_init+0x20>
    229f:	90                   	nop
    22a0:	f3 0f 1e fa          	endbr64 
    22a4:	68 27 00 00 00       	push   0x27
    22a9:	f2 e9 71 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22af:	90                   	nop
    22b0:	f3 0f 1e fa          	endbr64 
    22b4:	68 28 00 00 00       	push   0x28
    22b9:	f2 e9 61 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22bf:	90                   	nop
    22c0:	f3 0f 1e fa          	endbr64 
    22c4:	68 29 00 00 00       	push   0x29
    22c9:	f2 e9 51 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22cf:	90                   	nop
    22d0:	f3 0f 1e fa          	endbr64 
    22d4:	68 2a 00 00 00       	push   0x2a
    22d9:	f2 e9 41 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22df:	90                   	nop
    22e0:	f3 0f 1e fa          	endbr64 
    22e4:	68 2b 00 00 00       	push   0x2b
    22e9:	f2 e9 31 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22ef:	90                   	nop
    22f0:	f3 0f 1e fa          	endbr64 
    22f4:	68 2c 00 00 00       	push   0x2c
    22f9:	f2 e9 21 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22ff:	90                   	nop
    2300:	f3 0f 1e fa          	endbr64 
    2304:	68 2d 00 00 00       	push   0x2d
    2309:	f2 e9 11 fd ff ff    	bnd jmp 2020 <_init+0x20>
    230f:	90                   	nop
    2310:	f3 0f 1e fa          	endbr64 
    2314:	68 2e 00 00 00       	push   0x2e
    2319:	f2 e9 01 fd ff ff    	bnd jmp 2020 <_init+0x20>
    231f:	90                   	nop
    2320:	f3 0f 1e fa          	endbr64 
    2324:	68 2f 00 00 00       	push   0x2f
    2329:	f2 e9 f1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    232f:	90                   	nop
    2330:	f3 0f 1e fa          	endbr64 
    2334:	68 30 00 00 00       	push   0x30
    2339:	f2 e9 e1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    233f:	90                   	nop
    2340:	f3 0f 1e fa          	endbr64 
    2344:	68 31 00 00 00       	push   0x31
    2349:	f2 e9 d1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    234f:	90                   	nop
    2350:	f3 0f 1e fa          	endbr64 
    2354:	68 32 00 00 00       	push   0x32
    2359:	f2 e9 c1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    235f:	90                   	nop
    2360:	f3 0f 1e fa          	endbr64 
    2364:	68 33 00 00 00       	push   0x33
    2369:	f2 e9 b1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    236f:	90                   	nop
    2370:	f3 0f 1e fa          	endbr64 
    2374:	68 34 00 00 00       	push   0x34
    2379:	f2 e9 a1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    237f:	90                   	nop
    2380:	f3 0f 1e fa          	endbr64 
    2384:	68 35 00 00 00       	push   0x35
    2389:	f2 e9 91 fc ff ff    	bnd jmp 2020 <_init+0x20>
    238f:	90                   	nop
    2390:	f3 0f 1e fa          	endbr64 
    2394:	68 36 00 00 00       	push   0x36
    2399:	f2 e9 81 fc ff ff    	bnd jmp 2020 <_init+0x20>
    239f:	90                   	nop
    23a0:	f3 0f 1e fa          	endbr64 
    23a4:	68 37 00 00 00       	push   0x37
    23a9:	f2 e9 71 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23af:	90                   	nop
    23b0:	f3 0f 1e fa          	endbr64 
    23b4:	68 38 00 00 00       	push   0x38
    23b9:	f2 e9 61 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23bf:	90                   	nop
    23c0:	f3 0f 1e fa          	endbr64 
    23c4:	68 39 00 00 00       	push   0x39
    23c9:	f2 e9 51 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23cf:	90                   	nop
    23d0:	f3 0f 1e fa          	endbr64 
    23d4:	68 3a 00 00 00       	push   0x3a
    23d9:	f2 e9 41 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23df:	90                   	nop
    23e0:	f3 0f 1e fa          	endbr64 
    23e4:	68 3b 00 00 00       	push   0x3b
    23e9:	f2 e9 31 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23ef:	90                   	nop
    23f0:	f3 0f 1e fa          	endbr64 
    23f4:	68 3c 00 00 00       	push   0x3c
    23f9:	f2 e9 21 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23ff:	90                   	nop
    2400:	f3 0f 1e fa          	endbr64 
    2404:	68 3d 00 00 00       	push   0x3d
    2409:	f2 e9 11 fc ff ff    	bnd jmp 2020 <_init+0x20>
    240f:	90                   	nop
    2410:	f3 0f 1e fa          	endbr64 
    2414:	68 3e 00 00 00       	push   0x3e
    2419:	f2 e9 01 fc ff ff    	bnd jmp 2020 <_init+0x20>
    241f:	90                   	nop
    2420:	f3 0f 1e fa          	endbr64 
    2424:	68 3f 00 00 00       	push   0x3f
    2429:	f2 e9 f1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    242f:	90                   	nop
    2430:	f3 0f 1e fa          	endbr64 
    2434:	68 40 00 00 00       	push   0x40
    2439:	f2 e9 e1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    243f:	90                   	nop

Disassembly of section .plt.got:

0000000000002440 <__cxa_finalize@plt>:
    2440:	f3 0f 1e fa          	endbr64 
    2444:	f2 ff 25 7d eb 00 00 	bnd jmp QWORD PTR [rip+0xeb7d]        # 10fc8 <__cxa_finalize@GLIBC_2.2.5>
    244b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

0000000000002450 <memset@plt>:
    2450:	f3 0f 1e fa          	endbr64 
    2454:	f2 ff 25 2d e9 00 00 	bnd jmp QWORD PTR [rip+0xe92d]        # 10d88 <memset@GLIBC_2.2.5>
    245b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002460 <XClearWindow@plt>:
    2460:	f3 0f 1e fa          	endbr64 
    2464:	f2 ff 25 25 e9 00 00 	bnd jmp QWORD PTR [rip+0xe925]        # 10d90 <XClearWindow@Base>
    246b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002470 <close@plt>:
    2470:	f3 0f 1e fa          	endbr64 
    2474:	f2 ff 25 1d e9 00 00 	bnd jmp QWORD PTR [rip+0xe91d]        # 10d98 <close@GLIBC_2.2.5>
    247b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002480 <shmdt@plt>:
    2480:	f3 0f 1e fa          	endbr64 
    2484:	f2 ff 25 15 e9 00 00 	bnd jmp QWORD PTR [rip+0xe915]        # 10da0 <shmdt@GLIBC_2.2.5>
    248b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002490 <tanf@plt>:
    2490:	f3 0f 1e fa          	endbr64 
    2494:	f2 ff 25 0d e9 00 00 	bnd jmp QWORD PTR [rip+0xe90d]        # 10da8 <tanf@GLIBC_2.2.5>
    249b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024a0 <XStoreName@plt>:
    24a0:	f3 0f 1e fa          	endbr64 
    24a4:	f2 ff 25 05 e9 00 00 	bnd jmp QWORD PTR [rip+0xe905]        # 10db0 <XStoreName@Base>
    24ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024b0 <XGetWMNormalHints@plt>:
    24b0:	f3 0f 1e fa          	endbr64 
    24b4:	f2 ff 25 fd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8fd]        # 10db8 <XGetWMNormalHints@Base>
    24bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024c0 <puts@plt>:
    24c0:	f3 0f 1e fa          	endbr64 
    24c4:	f2 ff 25 f5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8f5]        # 10dc0 <puts@GLIBC_2.2.5>
    24cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024d0 <XAutoRepeatOff@plt>:
    24d0:	f3 0f 1e fa          	endbr64 
    24d4:	f2 ff 25 ed e8 00 00 	bnd jmp QWORD PTR [rip+0xe8ed]        # 10dc8 <XAutoRepeatOff@Base>
    24db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024e0 <exit@plt>:
    24e0:	f3 0f 1e fa          	endbr64 
    24e4:	f2 ff 25 e5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8e5]        # 10dd0 <exit@GLIBC_2.2.5>
    24eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024f0 <__printf_chk@plt>:
    24f0:	f3 0f 1e fa          	endbr64 
    24f4:	f2 ff 25 dd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8dd]        # 10dd8 <__printf_chk@GLIBC_2.3.4>
    24fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002500 <XCreateImage@plt>:
    2500:	f3 0f 1e fa          	endbr64 
    2504:	f2 ff 25 d5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8d5]        # 10de0 <XCreateImage@Base>
    250b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002510 <XShmCreatePixmap@plt>:
    2510:	f3 0f 1e fa          	endbr64 
    2514:	f2 ff 25 cd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8cd]        # 10de8 <XShmCreatePixmap@Base>
    251b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002520 <read@plt>:
    2520:	f3 0f 1e fa          	endbr64 
    2524:	f2 ff 25 c5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8c5]        # 10df0 <read@GLIBC_2.2.5>
    252b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002530 <strncmp@plt>:
    2530:	f3 0f 1e fa          	endbr64 
    2534:	f2 ff 25 bd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8bd]        # 10df8 <strncmp@GLIBC_2.2.5>
    253b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002540 <malloc@plt>:
    2540:	f3 0f 1e fa          	endbr64 
    2544:	f2 ff 25 b5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8b5]        # 10e00 <malloc@GLIBC_2.2.5>
    254b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002550 <XSetWMNormalHints@plt>:
    2550:	f3 0f 1e fa          	endbr64 
    2554:	f2 ff 25 ad e8 00 00 	bnd jmp QWORD PTR [rip+0xe8ad]        # 10e08 <XSetWMNormalHints@Base>
    255b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002560 <XCreateWindow@plt>:
    2560:	f3 0f 1e fa          	endbr64 
    2564:	f2 ff 25 a5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8a5]        # 10e10 <XCreateWindow@Base>
    256b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002570 <XkbKeycodeToKeysym@plt>:
    2570:	f3 0f 1e fa          	endbr64 
    2574:	f2 ff 25 9d e8 00 00 	bnd jmp QWORD PTR [rip+0xe89d]        # 10e18 <XkbKeycodeToKeysym@Base>
    257b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002580 <XCreateColormap@plt>:
    2580:	f3 0f 1e fa          	endbr64 
    2584:	f2 ff 25 95 e8 00 00 	bnd jmp QWORD PTR [rip+0xe895]        # 10e20 <XCreateColormap@Base>
    258b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002590 <fmaxf@plt>:
    2590:	f3 0f 1e fa          	endbr64 
    2594:	f2 ff 25 8d e8 00 00 	bnd jmp QWORD PTR [rip+0xe88d]        # 10e28 <fmaxf@GLIBC_2.2.5>
    259b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025a0 <XAutoRepeatOn@plt>:
    25a0:	f3 0f 1e fa          	endbr64 
    25a4:	f2 ff 25 85 e8 00 00 	bnd jmp QWORD PTR [rip+0xe885]        # 10e30 <XAutoRepeatOn@Base>
    25ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025b0 <XOpenDisplay@plt>:
    25b0:	f3 0f 1e fa          	endbr64 
    25b4:	f2 ff 25 7d e8 00 00 	bnd jmp QWORD PTR [rip+0xe87d]        # 10e38 <XOpenDisplay@Base>
    25bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025c0 <free@plt>:
    25c0:	f3 0f 1e fa          	endbr64 
    25c4:	f2 ff 25 75 e8 00 00 	bnd jmp QWORD PTR [rip+0xe875]        # 10e40 <free@GLIBC_2.2.5>
    25cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025d0 <XCopyArea@plt>:
    25d0:	f3 0f 1e fa          	endbr64 
    25d4:	f2 ff 25 6d e8 00 00 	bnd jmp QWORD PTR [rip+0xe86d]        # 10e48 <XCopyArea@Base>
    25db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025e0 <strlen@plt>:
    25e0:	f3 0f 1e fa          	endbr64 
    25e4:	f2 ff 25 65 e8 00 00 	bnd jmp QWORD PTR [rip+0xe865]        # 10e50 <strlen@GLIBC_2.2.5>
    25eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025f0 <XDestroyWindow@plt>:
    25f0:	f3 0f 1e fa          	endbr64 
    25f4:	f2 ff 25 5d e8 00 00 	bnd jmp QWORD PTR [rip+0xe85d]        # 10e58 <XDestroyWindow@Base>
    25fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002600 <XCloseDisplay@plt>:
    2600:	f3 0f 1e fa          	endbr64 
    2604:	f2 ff 25 55 e8 00 00 	bnd jmp QWORD PTR [rip+0xe855]        # 10e60 <XCloseDisplay@Base>
    260b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002610 <XShmCreateImage@plt>:
    2610:	f3 0f 1e fa          	endbr64 
    2614:	f2 ff 25 4d e8 00 00 	bnd jmp QWORD PTR [rip+0xe84d]        # 10e68 <XShmCreateImage@Base>
    261b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002620 <XFreeGC@plt>:
    2620:	f3 0f 1e fa          	endbr64 
    2624:	f2 ff 25 45 e8 00 00 	bnd jmp QWORD PTR [rip+0xe845]        # 10e70 <XFreeGC@Base>
    262b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002630 <XShmQueryVersion@plt>:
    2630:	f3 0f 1e fa          	endbr64 
    2634:	f2 ff 25 3d e8 00 00 	bnd jmp QWORD PTR [rip+0xe83d]        # 10e78 <XShmQueryVersion@Base>
    263b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002640 <XNextEvent@plt>:
    2640:	f3 0f 1e fa          	endbr64 
    2644:	f2 ff 25 35 e8 00 00 	bnd jmp QWORD PTR [rip+0xe835]        # 10e80 <XNextEvent@Base>
    264b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002650 <XWindowEvent@plt>:
    2650:	f3 0f 1e fa          	endbr64 
    2654:	f2 ff 25 2d e8 00 00 	bnd jmp QWORD PTR [rip+0xe82d]        # 10e88 <XWindowEvent@Base>
    265b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002660 <XSetWMProtocols@plt>:
    2660:	f3 0f 1e fa          	endbr64 
    2664:	f2 ff 25 25 e8 00 00 	bnd jmp QWORD PTR [rip+0xe825]        # 10e90 <XSetWMProtocols@Base>
    266b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002670 <gethostname@plt>:
    2670:	f3 0f 1e fa          	endbr64 
    2674:	f2 ff 25 1d e8 00 00 	bnd jmp QWORD PTR [rip+0xe81d]        # 10e98 <gethostname@GLIBC_2.2.5>
    267b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002680 <fmax@plt>:
    2680:	f3 0f 1e fa          	endbr64 
    2684:	f2 ff 25 15 e8 00 00 	bnd jmp QWORD PTR [rip+0xe815]        # 10ea0 <fmax@GLIBC_2.2.5>
    268b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002690 <XPutBackEvent@plt>:
    2690:	f3 0f 1e fa          	endbr64 
    2694:	f2 ff 25 0d e8 00 00 	bnd jmp QWORD PTR [rip+0xe80d]        # 10ea8 <XPutBackEvent@Base>
    269b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026a0 <XCreateGC@plt>:
    26a0:	f3 0f 1e fa          	endbr64 
    26a4:	f2 ff 25 05 e8 00 00 	bnd jmp QWORD PTR [rip+0xe805]        # 10eb0 <XCreateGC@Base>
    26ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026b0 <getenv@plt>:
    26b0:	f3 0f 1e fa          	endbr64 
    26b4:	f2 ff 25 fd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7fd]        # 10eb8 <getenv@GLIBC_2.2.5>
    26bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026c0 <XFlush@plt>:
    26c0:	f3 0f 1e fa          	endbr64 
    26c4:	f2 ff 25 f5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7f5]        # 10ec0 <XFlush@Base>
    26cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026d0 <XSync@plt>:
    26d0:	f3 0f 1e fa          	endbr64 
    26d4:	f2 ff 25 ed e7 00 00 	bnd jmp QWORD PTR [rip+0xe7ed]        # 10ec8 <XSync@Base>
    26db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026e0 <__stack_chk_fail@plt>:
    26e0:	f3 0f 1e fa          	endbr64 
    26e4:	f2 ff 25 e5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7e5]        # 10ed0 <__stack_chk_fail@GLIBC_2.4>
    26eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026f0 <XPutImage@plt>:
    26f0:	f3 0f 1e fa          	endbr64 
    26f4:	f2 ff 25 dd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7dd]        # 10ed8 <XPutImage@Base>
    26fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002700 <XShmAttach@plt>:
    2700:	f3 0f 1e fa          	endbr64 
    2704:	f2 ff 25 d5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7d5]        # 10ee0 <XShmAttach@Base>
    270b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002710 <calloc@plt>:
    2710:	f3 0f 1e fa          	endbr64 
    2714:	f2 ff 25 cd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7cd]        # 10ee8 <calloc@GLIBC_2.2.5>
    271b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002720 <shmget@plt>:
    2720:	f3 0f 1e fa          	endbr64 
    2724:	f2 ff 25 c5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7c5]        # 10ef0 <shmget@GLIBC_2.2.5>
    272b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002730 <XInternAtom@plt>:
    2730:	f3 0f 1e fa          	endbr64 
    2734:	f2 ff 25 bd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7bd]        # 10ef8 <XInternAtom@Base>
    273b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002740 <XGetVisualInfo@plt>:
    2740:	f3 0f 1e fa          	endbr64 
    2744:	f2 ff 25 b5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7b5]        # 10f00 <XGetVisualInfo@Base>
    274b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002750 <XGetWindowAttributes@plt>:
    2750:	f3 0f 1e fa          	endbr64 
    2754:	f2 ff 25 ad e7 00 00 	bnd jmp QWORD PTR [rip+0xe7ad]        # 10f08 <XGetWindowAttributes@Base>
    275b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002760 <XShmPutImage@plt>:
    2760:	f3 0f 1e fa          	endbr64 
    2764:	f2 ff 25 a5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7a5]        # 10f10 <XShmPutImage@Base>
    276b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002770 <XSetErrorHandler@plt>:
    2770:	f3 0f 1e fa          	endbr64 
    2774:	f2 ff 25 9d e7 00 00 	bnd jmp QWORD PTR [rip+0xe79d]        # 10f18 <XSetErrorHandler@Base>
    277b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002780 <XFreePixmap@plt>:
    2780:	f3 0f 1e fa          	endbr64 
    2784:	f2 ff 25 95 e7 00 00 	bnd jmp QWORD PTR [rip+0xe795]        # 10f20 <XFreePixmap@Base>
    278b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002790 <perror@plt>:
    2790:	f3 0f 1e fa          	endbr64 
    2794:	f2 ff 25 8d e7 00 00 	bnd jmp QWORD PTR [rip+0xe78d]        # 10f28 <perror@GLIBC_2.2.5>
    279b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027a0 <shmctl@plt>:
    27a0:	f3 0f 1e fa          	endbr64 
    27a4:	f2 ff 25 85 e7 00 00 	bnd jmp QWORD PTR [rip+0xe785]        # 10f30 <shmctl@GLIBC_2.2.5>
    27ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027b0 <XCreatePixmap@plt>:
    27b0:	f3 0f 1e fa          	endbr64 
    27b4:	f2 ff 25 7d e7 00 00 	bnd jmp QWORD PTR [rip+0xe77d]        # 10f38 <XCreatePixmap@Base>
    27bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027c0 <XMapRaised@plt>:
    27c0:	f3 0f 1e fa          	endbr64 
    27c4:	f2 ff 25 75 e7 00 00 	bnd jmp QWORD PTR [rip+0xe775]        # 10f40 <XMapRaised@Base>
    27cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027d0 <XShmPixmapFormat@plt>:
    27d0:	f3 0f 1e fa          	endbr64 
    27d4:	f2 ff 25 6d e7 00 00 	bnd jmp QWORD PTR [rip+0xe76d]        # 10f48 <XShmPixmapFormat@Base>
    27db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027e0 <write@plt>:
    27e0:	f3 0f 1e fa          	endbr64 
    27e4:	f2 ff 25 65 e7 00 00 	bnd jmp QWORD PTR [rip+0xe765]        # 10f50 <write@GLIBC_2.2.5>
    27eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027f0 <XSetClipOrigin@plt>:
    27f0:	f3 0f 1e fa          	endbr64 
    27f4:	f2 ff 25 5d e7 00 00 	bnd jmp QWORD PTR [rip+0xe75d]        # 10f58 <XSetClipOrigin@Base>
    27fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002800 <XShmDetach@plt>:
    2800:	f3 0f 1e fa          	endbr64 
    2804:	f2 ff 25 55 e7 00 00 	bnd jmp QWORD PTR [rip+0xe755]        # 10f60 <XShmDetach@Base>
    280b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002810 <open@plt>:
    2810:	f3 0f 1e fa          	endbr64 
    2814:	f2 ff 25 4d e7 00 00 	bnd jmp QWORD PTR [rip+0xe74d]        # 10f68 <open@GLIBC_2.2.5>
    281b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002820 <XPending@plt>:
    2820:	f3 0f 1e fa          	endbr64 
    2824:	f2 ff 25 45 e7 00 00 	bnd jmp QWORD PTR [rip+0xe745]        # 10f70 <XPending@Base>
    282b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002830 <shmat@plt>:
    2830:	f3 0f 1e fa          	endbr64 
    2834:	f2 ff 25 3d e7 00 00 	bnd jmp QWORD PTR [rip+0xe73d]        # 10f78 <shmat@GLIBC_2.2.5>
    283b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002840 <XChangeWindowAttributes@plt>:
    2840:	f3 0f 1e fa          	endbr64 
    2844:	f2 ff 25 35 e7 00 00 	bnd jmp QWORD PTR [rip+0xe735]        # 10f80 <XChangeWindowAttributes@Base>
    284b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002850 <sqrtf@plt>:
    2850:	f3 0f 1e fa          	endbr64 
    2854:	f2 ff 25 2d e7 00 00 	bnd jmp QWORD PTR [rip+0xe72d]        # 10f88 <sqrtf@GLIBC_2.2.5>
    285b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000002860 <main>:
    2860:	f3 0f 1e fa          	endbr64 
    2864:	41 56                	push   r14
    2866:	ba 20 01 00 00       	mov    edx,0x120
    286b:	49 89 f6             	mov    r14,rsi
    286e:	31 f6                	xor    esi,esi
    2870:	41 55                	push   r13
    2872:	41 89 fd             	mov    r13d,edi
    2875:	41 54                	push   r12
    2877:	55                   	push   rbp
    2878:	48 81 ec 88 01 00 00 	sub    rsp,0x188
    287f:	4c 8d 64 24 60       	lea    r12,[rsp+0x60]
    2884:	48 8d 6c 24 20       	lea    rbp,[rsp+0x20]
    2889:	c4 c1 f9 6e cc       	vmovq  xmm1,r12
    288e:	4c 89 e7             	mov    rdi,r12
    2891:	c4 e3 f1 22 c5 01    	vpinsrq xmm0,xmm1,rbp,0x1
    2897:	c5 f9 7f 04 24       	vmovdqa XMMWORD PTR [rsp],xmm0
    289c:	e8 ef 32 00 00       	call   5b90 <ft_memset>
    28a1:	48 89 ef             	mov    rdi,rbp
    28a4:	e8 07 11 00 00       	call   39b0 <init_canvas>
    28a9:	48 89 e9             	mov    rcx,rbp
    28ac:	4c 89 e2             	mov    rdx,r12
    28af:	4c 89 f6             	mov    rsi,r14
    28b2:	44 89 ef             	mov    edi,r13d
    28b5:	e8 f6 14 00 00       	call   3db0 <try_parse>
    28ba:	84 c0                	test   al,al
    28bc:	74 74                	je     2932 <main+0xd2>
    28be:	c5 f9 6f 14 24       	vmovdqa xmm2,XMMWORD PTR [rsp]
    28c3:	48 89 ee             	mov    rsi,rbp
    28c6:	4c 89 e7             	mov    rdi,r12
    28c9:	c5 f9 7f 54 24 10    	vmovdqa XMMWORD PTR [rsp+0x10],xmm2
    28cf:	e8 6c 22 00 00       	call   4b40 <render>
    28d4:	4c 8b 44 24 20       	mov    r8,QWORD PTR [rsp+0x20]
    28d9:	48 8d 0d e0 7e 00 00 	lea    rcx,[rip+0x7ee0]        # a7c0 <mlx_loop_end>
    28e0:	31 d2                	xor    edx,edx
    28e2:	48 8b 7c 24 28       	mov    rdi,QWORD PTR [rsp+0x28]
    28e7:	be 11 00 00 00       	mov    esi,0x11
    28ec:	e8 ff 8a 00 00       	call   b3f0 <mlx_hook>
    28f1:	48 8b 7c 24 28       	mov    rdi,QWORD PTR [rsp+0x28]
    28f6:	48 8d 54 24 10       	lea    rdx,[rsp+0x10]
    28fb:	48 8d 35 9e 02 00 00 	lea    rsi,[rip+0x29e]        # 2ba0 <input_key>
    2902:	e8 59 80 00 00       	call   a960 <mlx_key_hook>
    2907:	48 8b 7c 24 20       	mov    rdi,QWORD PTR [rsp+0x20]
    290c:	e8 cf 7e 00 00       	call   a7e0 <mlx_loop>
    2911:	48 89 ef             	mov    rdi,rbp
    2914:	e8 a7 11 00 00       	call   3ac0 <free_canvas>
    2919:	4c 89 e7             	mov    rdi,r12
    291c:	e8 1f 2e 00 00       	call   5740 <destroy_world>
    2921:	31 c0                	xor    eax,eax
    2923:	48 81 c4 88 01 00 00 	add    rsp,0x188
    292a:	5d                   	pop    rbp
    292b:	41 5c                	pop    r12
    292d:	41 5d                	pop    r13
    292f:	41 5e                	pop    r14
    2931:	c3                   	ret    
    2932:	48 8d 3d cb 96 00 00 	lea    rdi,[rip+0x96cb]        # c004 <_IO_stdin_used+0x4>
    2939:	e8 82 fb ff ff       	call   24c0 <puts@plt>
    293e:	48 89 ef             	mov    rdi,rbp
    2941:	e8 7a 11 00 00       	call   3ac0 <free_canvas>
    2946:	b8 01 00 00 00       	mov    eax,0x1
    294b:	eb d6                	jmp    2923 <main+0xc3>
    294d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000002950 <_start>:
    2950:	f3 0f 1e fa          	endbr64 
    2954:	31 ed                	xor    ebp,ebp
    2956:	49 89 d1             	mov    r9,rdx
    2959:	5e                   	pop    rsi
    295a:	48 89 e2             	mov    rdx,rsp
    295d:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    2961:	50                   	push   rax
    2962:	54                   	push   rsp
    2963:	45 31 c0             	xor    r8d,r8d
    2966:	31 c9                	xor    ecx,ecx
    2968:	48 8d 3d f1 fe ff ff 	lea    rdi,[rip+0xfffffffffffffef1]        # 2860 <main>
    296f:	ff 15 7b e6 00 00    	call   QWORD PTR [rip+0xe67b]        # 10ff0 <__libc_start_main@GLIBC_2.34>
    2975:	f4                   	hlt    
    2976:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    297d:	00 00 00 

0000000000002980 <deregister_tm_clones>:
    2980:	48 8d 3d b9 e7 00 00 	lea    rdi,[rip+0xe7b9]        # 11140 <__TMC_END__>
    2987:	48 8d 05 b2 e7 00 00 	lea    rax,[rip+0xe7b2]        # 11140 <__TMC_END__>
    298e:	48 39 f8             	cmp    rax,rdi
    2991:	74 15                	je     29a8 <deregister_tm_clones+0x28>
    2993:	48 8b 05 16 e6 00 00 	mov    rax,QWORD PTR [rip+0xe616]        # 10fb0 <_ITM_deregisterTMCloneTable@Base>
    299a:	48 85 c0             	test   rax,rax
    299d:	74 09                	je     29a8 <deregister_tm_clones+0x28>
    299f:	ff e0                	jmp    rax
    29a1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    29a8:	c3                   	ret    
    29a9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000029b0 <register_tm_clones>:
    29b0:	48 8d 3d 89 e7 00 00 	lea    rdi,[rip+0xe789]        # 11140 <__TMC_END__>
    29b7:	48 8d 35 82 e7 00 00 	lea    rsi,[rip+0xe782]        # 11140 <__TMC_END__>
    29be:	48 29 fe             	sub    rsi,rdi
    29c1:	48 89 f0             	mov    rax,rsi
    29c4:	48 c1 ee 3f          	shr    rsi,0x3f
    29c8:	48 c1 f8 03          	sar    rax,0x3
    29cc:	48 01 c6             	add    rsi,rax
    29cf:	48 d1 fe             	sar    rsi,1
    29d2:	74 14                	je     29e8 <register_tm_clones+0x38>
    29d4:	48 8b 05 dd e5 00 00 	mov    rax,QWORD PTR [rip+0xe5dd]        # 10fb8 <_ITM_registerTMCloneTable@Base>
    29db:	48 85 c0             	test   rax,rax
    29de:	74 08                	je     29e8 <register_tm_clones+0x38>
    29e0:	ff e0                	jmp    rax
    29e2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    29e8:	c3                   	ret    
    29e9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000029f0 <__do_global_dtors_aux>:
    29f0:	f3 0f 1e fa          	endbr64 
    29f4:	80 3d 45 e7 00 00 00 	cmp    BYTE PTR [rip+0xe745],0x0        # 11140 <__TMC_END__>
    29fb:	75 2b                	jne    2a28 <__do_global_dtors_aux+0x38>
    29fd:	55                   	push   rbp
    29fe:	48 83 3d c2 e5 00 00 	cmp    QWORD PTR [rip+0xe5c2],0x0        # 10fc8 <__cxa_finalize@GLIBC_2.2.5>
    2a05:	00 
    2a06:	48 89 e5             	mov    rbp,rsp
    2a09:	74 0c                	je     2a17 <__do_global_dtors_aux+0x27>
    2a0b:	48 8b 3d f6 e5 00 00 	mov    rdi,QWORD PTR [rip+0xe5f6]        # 11008 <__dso_handle>
    2a12:	e8 29 fa ff ff       	call   2440 <__cxa_finalize@plt>
    2a17:	e8 64 ff ff ff       	call   2980 <deregister_tm_clones>
    2a1c:	c6 05 1d e7 00 00 01 	mov    BYTE PTR [rip+0xe71d],0x1        # 11140 <__TMC_END__>
    2a23:	5d                   	pop    rbp
    2a24:	c3                   	ret    
    2a25:	0f 1f 00             	nop    DWORD PTR [rax]
    2a28:	c3                   	ret    
    2a29:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000002a30 <frame_dummy>:
    2a30:	f3 0f 1e fa          	endbr64 
    2a34:	e9 77 ff ff ff       	jmp    29b0 <register_tm_clones>
    2a39:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000002a40 <try_move_shape>:
    2a40:	f3 0f 1e fa          	endbr64 
    2a44:	83 ee 61             	sub    esi,0x61
    2a47:	45 31 c0             	xor    r8d,r8d
    2a4a:	83 fe 19             	cmp    esi,0x19
    2a4d:	76 09                	jbe    2a58 <try_move_shape+0x18>
    2a4f:	44 89 c0             	mov    eax,r8d
    2a52:	c3                   	ret    
    2a53:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    2a58:	48 c7 c2 f6 ff ba fd 	mov    rdx,0xfffffffffdbafff6
    2a5f:	48 0f a3 f2          	bt     rdx,rsi
    2a63:	72 ea                	jb     2a4f <try_move_shape+0xf>
    2a65:	55                   	push   rbp
    2a66:	48 89 f8             	mov    rax,rdi
    2a69:	bd 0d 00 00 00       	mov    ebp,0xd
    2a6e:	83 fe 16             	cmp    esi,0x16
    2a71:	77 0a                	ja     2a7d <try_move_shape+0x3d>
    2a73:	48 8d 0d 46 96 00 00 	lea    rcx,[rip+0x9646]        # c0c0 <CSWTCH.3>
    2a7a:	8b 2c b1             	mov    ebp,DWORD PTR [rcx+rsi*4]
    2a7d:	48 8b b0 18 01 00 00 	mov    rsi,QWORD PTR [rax+0x118]
    2a84:	48 8d b8 c8 00 00 00 	lea    rdi,[rax+0xc8]
    2a8b:	ff 90 10 01 00 00    	call   QWORD PTR [rax+0x110]
    2a91:	89 ee                	mov    esi,ebp
    2a93:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    2a96:	e8 d5 25 00 00       	call   5070 <move_shape>
    2a9b:	b8 01 00 00 00       	mov    eax,0x1
    2aa0:	5d                   	pop    rbp
    2aa1:	c3                   	ret    
    2aa2:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    2aa9:	00 00 00 00 
    2aad:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000002ab0 <try_rotate_shape>:
    2ab0:	f3 0f 1e fa          	endbr64 
    2ab4:	8d 56 9e             	lea    edx,[rsi-0x62]
    2ab7:	45 31 c0             	xor    r8d,r8d
    2aba:	83 fa 14             	cmp    edx,0x14
    2abd:	77 59                	ja     2b18 <try_rotate_shape+0x68>
    2abf:	48 c7 c1 8e ef ef ff 	mov    rcx,0xffffffffffefef8e
    2ac6:	48 0f a3 d1          	bt     rcx,rdx
    2aca:	72 4c                	jb     2b18 <try_rotate_shape+0x68>
    2acc:	83 ee 66             	sub    esi,0x66
    2acf:	55                   	push   rbp
    2ad0:	48 89 f8             	mov    rax,rdi
    2ad3:	bd 02 00 00 00       	mov    ebp,0x2
    2ad8:	83 fe 10             	cmp    esi,0x10
    2adb:	76 2b                	jbe    2b08 <try_rotate_shape+0x58>
    2add:	48 8b b0 18 01 00 00 	mov    rsi,QWORD PTR [rax+0x118]
    2ae4:	48 8d b8 c8 00 00 00 	lea    rdi,[rax+0xc8]
    2aeb:	ff 90 10 01 00 00    	call   QWORD PTR [rax+0x110]
    2af1:	89 ee                	mov    esi,ebp
    2af3:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    2af6:	e8 35 26 00 00       	call   5130 <rotate_shape>
    2afb:	b8 01 00 00 00       	mov    eax,0x1
    2b00:	5d                   	pop    rbp
    2b01:	c3                   	ret    
    2b02:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    2b08:	48 8d 3d 51 95 00 00 	lea    rdi,[rip+0x9551]        # c060 <CSWTCH.5>
    2b0f:	8b 2c b7             	mov    ebp,DWORD PTR [rdi+rsi*4]
    2b12:	eb c9                	jmp    2add <try_rotate_shape+0x2d>
    2b14:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    2b18:	44 89 c0             	mov    eax,r8d
    2b1b:	c3                   	ret    
    2b1c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000002b20 <try_update_shape_scale>:
    2b20:	f3 0f 1e fa          	endbr64 
    2b24:	55                   	push   rbp
    2b25:	48 89 f8             	mov    rax,rdi
    2b28:	8d 56 97             	lea    edx,[rsi-0x69]
    2b2b:	53                   	push   rbx
    2b2c:	48 83 ec 08          	sub    rsp,0x8
    2b30:	83 fe 75             	cmp    esi,0x75
    2b33:	74 53                	je     2b88 <try_update_shape_scale+0x68>
    2b35:	31 f6                	xor    esi,esi
    2b37:	83 fa 02             	cmp    edx,0x2
    2b3a:	77 3e                	ja     2b7a <try_update_shape_scale+0x5a>
    2b3c:	48 8d 0d dd 94 00 00 	lea    rcx,[rip+0x94dd]        # c020 <CSWTCH.7>
    2b43:	8b 2c 91             	mov    ebp,DWORD PTR [rcx+rdx*4]
    2b46:	48 8b b0 18 01 00 00 	mov    rsi,QWORD PTR [rax+0x118]
    2b4d:	48 8d b8 c8 00 00 00 	lea    rdi,[rax+0xc8]
    2b54:	ff 90 10 01 00 00    	call   QWORD PTR [rax+0x110]
    2b5a:	89 ee                	mov    esi,ebp
    2b5c:	4c 8b 00             	mov    r8,QWORD PTR [rax]
    2b5f:	48 89 c3             	mov    rbx,rax
    2b62:	4c 89 c7             	mov    rdi,r8
    2b65:	41 ff 50 68          	call   QWORD PTR [r8+0x68]
    2b69:	4c 8b 0b             	mov    r9,QWORD PTR [rbx]
    2b6c:	89 ee                	mov    esi,ebp
    2b6e:	4c 89 cf             	mov    rdi,r9
    2b71:	41 ff 51 60          	call   QWORD PTR [r9+0x60]
    2b75:	be 01 00 00 00       	mov    esi,0x1
    2b7a:	48 83 c4 08          	add    rsp,0x8
    2b7e:	89 f0                	mov    eax,esi
    2b80:	5b                   	pop    rbx
    2b81:	5d                   	pop    rbp
    2b82:	c3                   	ret    
    2b83:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    2b88:	bd 0b 00 00 00       	mov    ebp,0xb
    2b8d:	83 fa 0c             	cmp    edx,0xc
    2b90:	77 b4                	ja     2b46 <try_update_shape_scale+0x26>
    2b92:	eb a8                	jmp    2b3c <try_update_shape_scale+0x1c>
    2b94:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    2b9b:	00 00 00 00 
    2b9f:	90                   	nop

0000000000002ba0 <input_key>:
    2ba0:	f3 0f 1e fa          	endbr64 
    2ba4:	41 54                	push   r12
    2ba6:	55                   	push   rbp
    2ba7:	89 fd                	mov    ebp,edi
    2ba9:	53                   	push   rbx
    2baa:	48 89 f3             	mov    rbx,rsi
    2bad:	81 ff 1b ff 00 00    	cmp    edi,0xff1b
    2bb3:	0f 84 d7 00 00 00    	je     2c90 <input_key+0xf0>
    2bb9:	89 f8                	mov    eax,edi
    2bbb:	4c 8b 06             	mov    r8,QWORD PTR [rsi]
    2bbe:	83 e0 fb             	and    eax,0xfffffffb
    2bc1:	83 f8 73             	cmp    eax,0x73
    2bc4:	75 5a                	jne    2c20 <input_key+0x80>
    2bc6:	83 ed 61             	sub    ebp,0x61
    2bc9:	41 bc 0d 00 00 00    	mov    r12d,0xd
    2bcf:	83 fd 16             	cmp    ebp,0x16
    2bd2:	76 3c                	jbe    2c10 <input_key+0x70>
    2bd4:	49 8b b0 18 01 00 00 	mov    rsi,QWORD PTR [r8+0x118]
    2bdb:	49 8d b8 c8 00 00 00 	lea    rdi,[r8+0xc8]
    2be2:	41 ff 90 10 01 00 00 	call   QWORD PTR [r8+0x110]
    2be9:	44 89 e6             	mov    esi,r12d
    2bec:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    2bef:	e8 7c 24 00 00       	call   5070 <move_shape>
    2bf4:	4c 8b 23             	mov    r12,QWORD PTR [rbx]
    2bf7:	48 8b 73 08          	mov    rsi,QWORD PTR [rbx+0x8]
    2bfb:	4c 89 e7             	mov    rdi,r12
    2bfe:	e8 3d 1f 00 00       	call   4b40 <render>
    2c03:	5b                   	pop    rbx
    2c04:	31 c0                	xor    eax,eax
    2c06:	5d                   	pop    rbp
    2c07:	41 5c                	pop    r12
    2c09:	c3                   	ret    
    2c0a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    2c10:	48 8d 3d a9 94 00 00 	lea    rdi,[rip+0x94a9]        # c0c0 <CSWTCH.3>
    2c17:	44 8b 24 af          	mov    r12d,DWORD PTR [rdi+rbp*4]
    2c1b:	eb b7                	jmp    2bd4 <input_key+0x34>
    2c1d:	0f 1f 00             	nop    DWORD PTR [rax]
    2c20:	83 ff 61             	cmp    edi,0x61
    2c23:	74 a1                	je     2bc6 <input_key+0x26>
    2c25:	83 ff 64             	cmp    edi,0x64
    2c28:	74 9c                	je     2bc6 <input_key+0x26>
    2c2a:	83 ff 71             	cmp    edi,0x71
    2c2d:	74 97                	je     2bc6 <input_key+0x26>
    2c2f:	83 ff 7a             	cmp    edi,0x7a
    2c32:	74 92                	je     2bc6 <input_key+0x26>
    2c34:	8d 4f 9e             	lea    ecx,[rdi-0x62]
    2c37:	83 f9 14             	cmp    ecx,0x14
    2c3a:	77 63                	ja     2c9f <input_key+0xff>
    2c3c:	48 c7 c2 8e ef ef ff 	mov    rdx,0xffffffffffefef8e
    2c43:	48 0f a3 ca          	bt     rdx,rcx
    2c47:	0f 82 b3 00 00 00    	jb     2d00 <input_key+0x160>
    2c4d:	83 ed 66             	sub    ebp,0x66
    2c50:	41 bc 02 00 00 00    	mov    r12d,0x2
    2c56:	83 fd 10             	cmp    ebp,0x10
    2c59:	77 0b                	ja     2c66 <input_key+0xc6>
    2c5b:	48 8d 35 fe 93 00 00 	lea    rsi,[rip+0x93fe]        # c060 <CSWTCH.5>
    2c62:	44 8b 24 ae          	mov    r12d,DWORD PTR [rsi+rbp*4]
    2c66:	49 8b b0 18 01 00 00 	mov    rsi,QWORD PTR [r8+0x118]
    2c6d:	49 8d b8 c8 00 00 00 	lea    rdi,[r8+0xc8]
    2c74:	41 ff 90 10 01 00 00 	call   QWORD PTR [r8+0x110]
    2c7b:	44 89 e6             	mov    esi,r12d
    2c7e:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    2c81:	e8 aa 24 00 00       	call   5130 <rotate_shape>
    2c86:	4c 8b 23             	mov    r12,QWORD PTR [rbx]
    2c89:	e9 69 ff ff ff       	jmp    2bf7 <input_key+0x57>
    2c8e:	66 90                	xchg   ax,ax
    2c90:	4c 8b 4e 08          	mov    r9,QWORD PTR [rsi+0x8]
    2c94:	49 8b 39             	mov    rdi,QWORD PTR [r9]
    2c97:	e8 24 7b 00 00       	call   a7c0 <mlx_loop_end>
    2c9c:	4c 8b 03             	mov    r8,QWORD PTR [rbx]
    2c9f:	89 ee                	mov    esi,ebp
    2ca1:	4c 89 c7             	mov    rdi,r8
    2ca4:	e8 77 fe ff ff       	call   2b20 <try_update_shape_scale>
    2ca9:	84 c0                	test   al,al
    2cab:	74 0b                	je     2cb8 <input_key+0x118>
    2cad:	4c 8b 23             	mov    r12,QWORD PTR [rbx]
    2cb0:	e9 42 ff ff ff       	jmp    2bf7 <input_key+0x57>
    2cb5:	0f 1f 00             	nop    DWORD PTR [rax]
    2cb8:	4c 8b 23             	mov    r12,QWORD PTR [rbx]
    2cbb:	83 fd 2c             	cmp    ebp,0x2c
    2cbe:	74 58                	je     2d18 <input_key+0x178>
    2cc0:	83 fd 2e             	cmp    ebp,0x2e
    2cc3:	0f 85 3a ff ff ff    	jne    2c03 <input_key+0x63>
    2cc9:	4d 8b 94 24 18 01 00 	mov    r10,QWORD PTR [r12+0x118]
    2cd0:	00 
    2cd1:	49 8d bc 24 c8 00 00 	lea    rdi,[r12+0xc8]
    2cd8:	00 
    2cd9:	49 8d 6a 01          	lea    rbp,[r10+0x1]
    2cdd:	e8 ce 41 00 00       	call   6eb0 <get_count_in_list>
    2ce2:	31 d2                	xor    edx,edx
    2ce4:	49 89 c3             	mov    r11,rax
    2ce7:	48 89 e8             	mov    rax,rbp
    2cea:	49 f7 f3             	div    r11
    2ced:	49 89 94 24 18 01 00 	mov    QWORD PTR [r12+0x118],rdx
    2cf4:	00 
    2cf5:	eb b6                	jmp    2cad <input_key+0x10d>
    2cf7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    2cfe:	00 00 
    2d00:	89 fe                	mov    esi,edi
    2d02:	4c 89 c7             	mov    rdi,r8
    2d05:	e8 16 fe ff ff       	call   2b20 <try_update_shape_scale>
    2d0a:	84 c0                	test   al,al
    2d0c:	75 9f                	jne    2cad <input_key+0x10d>
    2d0e:	e9 f0 fe ff ff       	jmp    2c03 <input_key+0x63>
    2d13:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    2d18:	4d 8b 84 24 18 01 00 	mov    r8,QWORD PTR [r12+0x118]
    2d1f:	00 
    2d20:	4d 85 c0             	test   r8,r8
    2d23:	74 11                	je     2d36 <input_key+0x196>
    2d25:	49 83 e8 01          	sub    r8,0x1
    2d29:	4d 89 84 24 18 01 00 	mov    QWORD PTR [r12+0x118],r8
    2d30:	00 
    2d31:	e9 c1 fe ff ff       	jmp    2bf7 <input_key+0x57>
    2d36:	49 8d bc 24 c8 00 00 	lea    rdi,[r12+0xc8]
    2d3d:	00 
    2d3e:	e8 6d 41 00 00       	call   6eb0 <get_count_in_list>
    2d43:	48 83 e8 01          	sub    rax,0x1
    2d47:	49 89 84 24 18 01 00 	mov    QWORD PTR [r12+0x118],rax
    2d4e:	00 
    2d4f:	4c 8b 23             	mov    r12,QWORD PTR [rbx]
    2d52:	e9 a0 fe ff ff       	jmp    2bf7 <input_key+0x57>
    2d57:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    2d5e:	00 00 

0000000000002d60 <try_change_shape>:
    2d60:	f3 0f 1e fa          	endbr64 
    2d64:	55                   	push   rbp
    2d65:	53                   	push   rbx
    2d66:	48 89 fb             	mov    rbx,rdi
    2d69:	48 83 ec 08          	sub    rsp,0x8
    2d6d:	83 fe 2c             	cmp    esi,0x2c
    2d70:	74 0e                	je     2d80 <try_change_shape+0x20>
    2d72:	31 c0                	xor    eax,eax
    2d74:	83 fe 2e             	cmp    esi,0x2e
    2d77:	74 57                	je     2dd0 <try_change_shape+0x70>
    2d79:	48 83 c4 08          	add    rsp,0x8
    2d7d:	5b                   	pop    rbx
    2d7e:	5d                   	pop    rbp
    2d7f:	c3                   	ret    
    2d80:	48 8b 8f 18 01 00 00 	mov    rcx,QWORD PTR [rdi+0x118]
    2d87:	48 85 c9             	test   rcx,rcx
    2d8a:	74 1c                	je     2da8 <try_change_shape+0x48>
    2d8c:	48 83 e9 01          	sub    rcx,0x1
    2d90:	b8 01 00 00 00       	mov    eax,0x1
    2d95:	48 89 8f 18 01 00 00 	mov    QWORD PTR [rdi+0x118],rcx
    2d9c:	48 83 c4 08          	add    rsp,0x8
    2da0:	5b                   	pop    rbx
    2da1:	5d                   	pop    rbp
    2da2:	c3                   	ret    
    2da3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    2da8:	48 8d bf c8 00 00 00 	lea    rdi,[rdi+0xc8]
    2daf:	e8 fc 40 00 00       	call   6eb0 <get_count_in_list>
    2db4:	48 83 e8 01          	sub    rax,0x1
    2db8:	48 89 83 18 01 00 00 	mov    QWORD PTR [rbx+0x118],rax
    2dbf:	b8 01 00 00 00       	mov    eax,0x1
    2dc4:	eb b3                	jmp    2d79 <try_change_shape+0x19>
    2dc6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    2dcd:	00 00 00 
    2dd0:	48 8b 87 18 01 00 00 	mov    rax,QWORD PTR [rdi+0x118]
    2dd7:	48 8d bf c8 00 00 00 	lea    rdi,[rdi+0xc8]
    2dde:	48 8d 68 01          	lea    rbp,[rax+0x1]
    2de2:	e8 c9 40 00 00       	call   6eb0 <get_count_in_list>
    2de7:	31 d2                	xor    edx,edx
    2de9:	49 89 c0             	mov    r8,rax
    2dec:	48 89 e8             	mov    rax,rbp
    2def:	49 f7 f0             	div    r8
    2df2:	b8 01 00 00 00       	mov    eax,0x1
    2df7:	48 89 93 18 01 00 00 	mov    QWORD PTR [rbx+0x118],rdx
    2dfe:	e9 76 ff ff ff       	jmp    2d79 <try_change_shape+0x19>
    2e03:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    2e0a:	00 00 00 
    2e0d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000002e10 <init_camera>:
    2e10:	f3 0f 1e fa          	endbr64 
    2e14:	4c 8d 54 24 08       	lea    r10,[rsp+0x8]
    2e19:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    2e1d:	41 ff 72 f8          	push   QWORD PTR [r10-0x8]
    2e21:	55                   	push   rbp
    2e22:	48 89 e5             	mov    rbp,rsp
    2e25:	41 54                	push   r12
    2e27:	49 89 f4             	mov    r12,rsi
    2e2a:	41 52                	push   r10
    2e2c:	53                   	push   rbx
    2e2d:	48 89 fb             	mov    rbx,rdi
    2e30:	48 83 ec 58          	sub    rsp,0x58
    2e34:	c5 fa 7e 4f 38       	vmovq  xmm1,QWORD PTR [rdi+0x38]
    2e39:	c5 fa 7e 47 30       	vmovq  xmm0,QWORD PTR [rdi+0x30]
    2e3e:	e8 6d 41 00 00       	call   6fb0 <normalize_vector3>
    2e43:	48 8d 7d 90          	lea    rdi,[rbp-0x70]
    2e47:	c5 f9 d6 4b 38       	vmovq  QWORD PTR [rbx+0x38],xmm1
    2e4c:	c5 f9 d6 43 30       	vmovq  QWORD PTR [rbx+0x30],xmm0
    2e51:	e8 9a 23 00 00       	call   51f0 <get_local_basis>
    2e56:	49 8b 44 24 30       	mov    rax,QWORD PTR [r12+0x30]
    2e5b:	c5 f9 6f 5d 90       	vmovdqa xmm3,XMMWORD PTR [rbp-0x70]
    2e60:	c5 e8 57 d2          	vxorps xmm2,xmm2,xmm2
    2e64:	c5 f9 6f 65 a0       	vmovdqa xmm4,XMMWORD PTR [rbp-0x60]
    2e69:	c5 f9 6f 6d b0       	vmovdqa xmm5,XMMWORD PTR [rbp-0x50]
    2e6e:	48 85 c0             	test   rax,rax
    2e71:	c5 fa 10 0d a3 92 00 	vmovss xmm1,DWORD PTR [rip+0x92a3]        # c11c <CSWTCH.3+0x5c>
    2e78:	00 
    2e79:	c5 f9 7f 5b 10       	vmovdqa XMMWORD PTR [rbx+0x10],xmm3
    2e7e:	c5 f2 59 73 40       	vmulss xmm6,xmm1,DWORD PTR [rbx+0x40]
    2e83:	c5 f9 7f 63 20       	vmovdqa XMMWORD PTR [rbx+0x20],xmm4
    2e88:	c5 f9 7f 6b 30       	vmovdqa XMMWORD PTR [rbx+0x30],xmm5
    2e8d:	78 41                	js     2ed0 <init_camera+0xc0>
    2e8f:	49 8b 4c 24 28       	mov    rcx,QWORD PTR [r12+0x28]
    2e94:	c4 e1 ea 2a f8       	vcvtsi2ss xmm7,xmm2,rax
    2e99:	48 85 c9             	test   rcx,rcx
    2e9c:	78 51                	js     2eef <init_camera+0xdf>
    2e9e:	c4 61 ea 2a c9       	vcvtsi2ss xmm9,xmm2,rcx
    2ea3:	c4 41 42 5e d1       	vdivss xmm10,xmm7,xmm9
    2ea8:	c6 43 50 01          	mov    BYTE PTR [rbx+0x50],0x1
    2eac:	c5 2a 59 de          	vmulss xmm11,xmm10,xmm6
    2eb0:	c4 41 48 14 e3       	vunpcklps xmm12,xmm6,xmm11
    2eb5:	c5 78 13 63 44       	vmovlps QWORD PTR [rbx+0x44],xmm12
    2eba:	48 83 c4 58          	add    rsp,0x58
    2ebe:	5b                   	pop    rbx
    2ebf:	5f                   	pop    rdi
    2ec0:	41 5c                	pop    r12
    2ec2:	5d                   	pop    rbp
    2ec3:	48 8d 67 f8          	lea    rsp,[rdi-0x8]
    2ec7:	c3                   	ret    
    2ec8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    2ecf:	00 
    2ed0:	48 89 c2             	mov    rdx,rax
    2ed3:	83 e0 01             	and    eax,0x1
    2ed6:	49 8b 4c 24 28       	mov    rcx,QWORD PTR [r12+0x28]
    2edb:	48 d1 ea             	shr    rdx,1
    2ede:	48 09 d0             	or     rax,rdx
    2ee1:	c4 e1 ea 2a c0       	vcvtsi2ss xmm0,xmm2,rax
    2ee6:	c5 fa 58 f8          	vaddss xmm7,xmm0,xmm0
    2eea:	48 85 c9             	test   rcx,rcx
    2eed:	79 af                	jns    2e9e <init_camera+0x8e>
    2eef:	48 89 ce             	mov    rsi,rcx
    2ef2:	83 e1 01             	and    ecx,0x1
    2ef5:	48 d1 ee             	shr    rsi,1
    2ef8:	48 09 f1             	or     rcx,rsi
    2efb:	c4 61 ea 2a c1       	vcvtsi2ss xmm8,xmm2,rcx
    2f00:	c4 41 3a 58 c8       	vaddss xmm9,xmm8,xmm8
    2f05:	eb 9c                	jmp    2ea3 <init_camera+0x93>
    2f07:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    2f0e:	00 00 

0000000000002f10 <is_hit_up_cap>:
    2f10:	f3 0f 1e fa          	endbr64 
    2f14:	41 56                	push   r14
    2f16:	55                   	push   rbp
    2f17:	48 89 f5             	mov    rbp,rsi
    2f1a:	53                   	push   rbx
    2f1b:	48 89 fb             	mov    rbx,rdi
    2f1e:	48 83 ec 50          	sub    rsp,0x50
    2f22:	c5 fa 7e 54 24 70    	vmovq  xmm2,QWORD PTR [rsp+0x70]
    2f28:	c5 fa 7e 5c 24 78    	vmovq  xmm3,QWORD PTR [rsp+0x78]
    2f2e:	c5 f9 d6 44 24 10    	vmovq  QWORD PTR [rsp+0x10],xmm0
    2f34:	c5 f9 d6 4c 24 18    	vmovq  QWORD PTR [rsp+0x18],xmm1
    2f3a:	e8 a1 41 00 00       	call   70e0 <subtract_vector3>
    2f3f:	c5 f9 6f d0          	vmovdqa xmm2,xmm0
    2f43:	c5 f9 6f d9          	vmovdqa xmm3,xmm1
    2f47:	c5 fa 7e 43 40       	vmovq  xmm0,QWORD PTR [rbx+0x40]
    2f4c:	c5 fa 7e 4b 48       	vmovq  xmm1,QWORD PTR [rbx+0x48]
    2f51:	e8 4a 42 00 00       	call   71a0 <dot_product3x3>
    2f56:	c5 fa 7e 4b 48       	vmovq  xmm1,QWORD PTR [rbx+0x48]
    2f5b:	c5 fa 7e 94 24 80 00 	vmovq  xmm2,QWORD PTR [rsp+0x80]
    2f62:	00 00 
    2f64:	c5 fa 7e 9c 24 88 00 	vmovq  xmm3,QWORD PTR [rsp+0x88]
    2f6b:	00 00 
    2f6d:	c4 c1 79 7e c6       	vmovd  r14d,xmm0
    2f72:	c5 fa 7e 43 40       	vmovq  xmm0,QWORD PTR [rbx+0x40]
    2f77:	e8 24 42 00 00       	call   71a0 <dot_product3x3>
    2f7c:	c5 f0 57 c9          	vxorps xmm1,xmm1,xmm1
    2f80:	c5 f8 2e c1          	vucomiss xmm0,xmm1
    2f84:	7a 06                	jp     2f8c <is_hit_up_cap+0x7c>
    2f86:	0f 84 d4 00 00 00    	je     3060 <is_hit_up_cap+0x150>
    2f8c:	c4 c1 79 6e ee       	vmovd  xmm5,r14d
    2f91:	c5 d2 5e e0          	vdivss xmm4,xmm5,xmm0
    2f95:	c5 f8 2f cc          	vcomiss xmm1,xmm4
    2f99:	0f 83 c1 00 00 00    	jae    3060 <is_hit_up_cap+0x150>
    2f9f:	c5 f8 2f 65 30       	vcomiss xmm4,DWORD PTR [rbp+0x30]
    2fa4:	0f 83 b6 00 00 00    	jae    3060 <is_hit_up_cap+0x150>
    2faa:	ff b4 24 88 00 00 00 	push   QWORD PTR [rsp+0x88]
    2fb1:	c5 f8 28 c4          	vmovaps xmm0,xmm4
    2fb5:	ff b4 24 88 00 00 00 	push   QWORD PTR [rsp+0x88]
    2fbc:	ff b4 24 88 00 00 00 	push   QWORD PTR [rsp+0x88]
    2fc3:	ff b4 24 88 00 00 00 	push   QWORD PTR [rsp+0x88]
    2fca:	c5 fa 11 64 24 2c    	vmovss DWORD PTR [rsp+0x2c],xmm4
    2fd0:	e8 eb 17 00 00       	call   47c0 <get_point_in_ray>
    2fd5:	c5 f9 d6 44 24 40    	vmovq  QWORD PTR [rsp+0x40],xmm0
    2fdb:	c5 f9 d6 4c 24 48    	vmovq  QWORD PTR [rsp+0x48],xmm1
    2fe1:	c5 fa 7e 54 24 30    	vmovq  xmm2,QWORD PTR [rsp+0x30]
    2fe7:	c5 fa 7e 5c 24 38    	vmovq  xmm3,QWORD PTR [rsp+0x38]
    2fed:	48 83 c4 20          	add    rsp,0x20
    2ff1:	e8 ea 40 00 00       	call   70e0 <subtract_vector3>
    2ff6:	c5 f9 6f d0          	vmovdqa xmm2,xmm0
    2ffa:	c5 f9 6f d9          	vmovdqa xmm3,xmm1
    2ffe:	e8 9d 41 00 00       	call   71a0 <dot_product3x3>
    3003:	c5 f8 28 d0          	vmovaps xmm2,xmm0
    3007:	c5 fa 10 05 0d 91 00 	vmovss xmm0,DWORD PTR [rip+0x910d]        # c11c <CSWTCH.3+0x5c>
    300e:	00 
    300f:	c5 fa 59 5b 70       	vmulss xmm3,xmm0,DWORD PTR [rbx+0x70]
    3014:	c5 e2 59 f3          	vmulss xmm6,xmm3,xmm3
    3018:	c5 f8 2f d6          	vcomiss xmm2,xmm6
    301c:	73 42                	jae    3060 <is_hit_up_cap+0x150>
    301e:	c5 79 6f 4b 40       	vmovdqa xmm9,XMMWORD PTR [rbx+0x40]
    3023:	c5 79 6f 53 10       	vmovdqa xmm10,XMMWORD PTR [rbx+0x10]
    3028:	48 89 5d 38          	mov    QWORD PTR [rbp+0x38],rbx
    302c:	b8 01 00 00 00       	mov    eax,0x1
    3031:	c5 fa 10 7c 24 0c    	vmovss xmm7,DWORD PTR [rsp+0xc]
    3037:	c5 79 6f 44 24 20    	vmovdqa xmm8,XMMWORD PTR [rsp+0x20]
    303d:	c5 79 7f 4d 10       	vmovdqa XMMWORD PTR [rbp+0x10],xmm9
    3042:	c5 fa 11 7d 30       	vmovss DWORD PTR [rbp+0x30],xmm7
    3047:	c5 79 7f 45 00       	vmovdqa XMMWORD PTR [rbp+0x0],xmm8
    304c:	c5 79 7f 55 20       	vmovdqa XMMWORD PTR [rbp+0x20],xmm10
    3051:	48 83 c4 50          	add    rsp,0x50
    3055:	5b                   	pop    rbx
    3056:	5d                   	pop    rbp
    3057:	41 5e                	pop    r14
    3059:	c3                   	ret    
    305a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    3060:	48 83 c4 50          	add    rsp,0x50
    3064:	31 c0                	xor    eax,eax
    3066:	5b                   	pop    rbx
    3067:	5d                   	pop    rbp
    3068:	41 5e                	pop    r14
    306a:	c3                   	ret    
    306b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003070 <is_hit_down_cap>:
    3070:	f3 0f 1e fa          	endbr64 
    3074:	41 56                	push   r14
    3076:	55                   	push   rbp
    3077:	48 89 f5             	mov    rbp,rsi
    307a:	53                   	push   rbx
    307b:	48 89 fb             	mov    rbx,rdi
    307e:	48 83 ec 50          	sub    rsp,0x50
    3082:	c5 fa 7e 54 24 70    	vmovq  xmm2,QWORD PTR [rsp+0x70]
    3088:	c5 fa 7e 5c 24 78    	vmovq  xmm3,QWORD PTR [rsp+0x78]
    308e:	c5 f9 d6 44 24 10    	vmovq  QWORD PTR [rsp+0x10],xmm0
    3094:	c5 f9 d6 4c 24 18    	vmovq  QWORD PTR [rsp+0x18],xmm1
    309a:	e8 41 40 00 00       	call   70e0 <subtract_vector3>
    309f:	c5 f9 6f d0          	vmovdqa xmm2,xmm0
    30a3:	c5 f9 6f d9          	vmovdqa xmm3,xmm1
    30a7:	c5 fa 7e 43 40       	vmovq  xmm0,QWORD PTR [rbx+0x40]
    30ac:	c5 fa 7e 4b 48       	vmovq  xmm1,QWORD PTR [rbx+0x48]
    30b1:	e8 ea 40 00 00       	call   71a0 <dot_product3x3>
    30b6:	c5 fa 7e 4b 48       	vmovq  xmm1,QWORD PTR [rbx+0x48]
    30bb:	c5 fa 7e 94 24 80 00 	vmovq  xmm2,QWORD PTR [rsp+0x80]
    30c2:	00 00 
    30c4:	c5 fa 7e 9c 24 88 00 	vmovq  xmm3,QWORD PTR [rsp+0x88]
    30cb:	00 00 
    30cd:	c4 c1 79 7e c6       	vmovd  r14d,xmm0
    30d2:	c5 fa 7e 43 40       	vmovq  xmm0,QWORD PTR [rbx+0x40]
    30d7:	e8 c4 40 00 00       	call   71a0 <dot_product3x3>
    30dc:	c5 f0 57 c9          	vxorps xmm1,xmm1,xmm1
    30e0:	c5 f8 2e c1          	vucomiss xmm0,xmm1
    30e4:	7a 06                	jp     30ec <is_hit_down_cap+0x7c>
    30e6:	0f 84 8a 00 00 00    	je     3176 <is_hit_down_cap+0x106>
    30ec:	c4 c1 79 6e ee       	vmovd  xmm5,r14d
    30f1:	c5 d2 5e e0          	vdivss xmm4,xmm5,xmm0
    30f5:	c5 f8 2f cc          	vcomiss xmm1,xmm4
    30f9:	73 7b                	jae    3176 <is_hit_down_cap+0x106>
    30fb:	c5 f8 2f 65 30       	vcomiss xmm4,DWORD PTR [rbp+0x30]
    3100:	73 74                	jae    3176 <is_hit_down_cap+0x106>
    3102:	ff b4 24 88 00 00 00 	push   QWORD PTR [rsp+0x88]
    3109:	c5 f8 28 c4          	vmovaps xmm0,xmm4
    310d:	ff b4 24 88 00 00 00 	push   QWORD PTR [rsp+0x88]
    3114:	ff b4 24 88 00 00 00 	push   QWORD PTR [rsp+0x88]
    311b:	ff b4 24 88 00 00 00 	push   QWORD PTR [rsp+0x88]
    3122:	c5 fa 11 64 24 2c    	vmovss DWORD PTR [rsp+0x2c],xmm4
    3128:	e8 93 16 00 00       	call   47c0 <get_point_in_ray>
    312d:	c5 f9 d6 44 24 40    	vmovq  QWORD PTR [rsp+0x40],xmm0
    3133:	c5 f9 d6 4c 24 48    	vmovq  QWORD PTR [rsp+0x48],xmm1
    3139:	c5 fa 7e 54 24 30    	vmovq  xmm2,QWORD PTR [rsp+0x30]
    313f:	c5 fa 7e 5c 24 38    	vmovq  xmm3,QWORD PTR [rsp+0x38]
    3145:	48 83 c4 20          	add    rsp,0x20
    3149:	e8 92 3f 00 00       	call   70e0 <subtract_vector3>
    314e:	c5 f9 6f d0          	vmovdqa xmm2,xmm0
    3152:	c5 f9 6f d9          	vmovdqa xmm3,xmm1
    3156:	e8 45 40 00 00       	call   71a0 <dot_product3x3>
    315b:	c5 f8 28 d0          	vmovaps xmm2,xmm0
    315f:	c5 fa 10 05 b5 8f 00 	vmovss xmm0,DWORD PTR [rip+0x8fb5]        # c11c <CSWTCH.3+0x5c>
    3166:	00 
    3167:	c5 fa 59 5b 70       	vmulss xmm3,xmm0,DWORD PTR [rbx+0x70]
    316c:	c5 e2 59 f3          	vmulss xmm6,xmm3,xmm3
    3170:	c5 f8 2f d6          	vcomiss xmm2,xmm6
    3174:	72 12                	jb     3188 <is_hit_down_cap+0x118>
    3176:	48 83 c4 50          	add    rsp,0x50
    317a:	31 c0                	xor    eax,eax
    317c:	5b                   	pop    rbx
    317d:	5d                   	pop    rbp
    317e:	41 5e                	pop    r14
    3180:	c3                   	ret    
    3181:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    3188:	c5 fa 10 7c 24 0c    	vmovss xmm7,DWORD PTR [rsp+0xc]
    318e:	c5 79 6f 44 24 20    	vmovdqa xmm8,XMMWORD PTR [rsp+0x20]
    3194:	c5 fa 7e 43 40       	vmovq  xmm0,QWORD PTR [rbx+0x40]
    3199:	c5 fa 7e 4b 48       	vmovq  xmm1,QWORD PTR [rbx+0x48]
    319e:	c5 fa 10 15 7a 8f 00 	vmovss xmm2,DWORD PTR [rip+0x8f7a]        # c120 <CSWTCH.3+0x60>
    31a5:	00 
    31a6:	c5 fa 11 7d 30       	vmovss DWORD PTR [rbp+0x30],xmm7
    31ab:	c5 79 7f 45 00       	vmovdqa XMMWORD PTR [rbp+0x0],xmm8
    31b0:	e8 6b 3f 00 00       	call   7120 <multiply_vector3>
    31b5:	c5 79 6f 4b 10       	vmovdqa xmm9,XMMWORD PTR [rbx+0x10]
    31ba:	48 89 5d 38          	mov    QWORD PTR [rbp+0x38],rbx
    31be:	b8 01 00 00 00       	mov    eax,0x1
    31c3:	c5 f9 d6 45 10       	vmovq  QWORD PTR [rbp+0x10],xmm0
    31c8:	c5 f9 d6 4d 18       	vmovq  QWORD PTR [rbp+0x18],xmm1
    31cd:	c5 79 7f 4d 20       	vmovdqa XMMWORD PTR [rbp+0x20],xmm9
    31d2:	48 83 c4 50          	add    rsp,0x50
    31d6:	5b                   	pop    rbx
    31d7:	5d                   	pop    rbp
    31d8:	41 5e                	pop    r14
    31da:	c3                   	ret    
    31db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000031e0 <is_hit_cylinder_end_cap>:
    31e0:	f3 0f 1e fa          	endbr64 
    31e4:	41 54                	push   r12
    31e6:	49 89 f4             	mov    r12,rsi
    31e9:	55                   	push   rbp
    31ea:	48 89 fd             	mov    rbp,rdi
    31ed:	48 83 ec 58          	sub    rsp,0x58
    31f1:	c5 f9 6f 67 40       	vmovdqa xmm4,XMMWORD PTR [rdi+0x40]
    31f6:	c5 fa 7e 57 40       	vmovq  xmm2,QWORD PTR [rdi+0x40]
    31fb:	c5 fa 7e 4d 08       	vmovq  xmm1,QWORD PTR [rbp+0x8]
    3200:	c5 fa 7e 45 00       	vmovq  xmm0,QWORD PTR [rbp+0x0]
    3205:	48 8d 7c 24 30       	lea    rdi,[rsp+0x30]
    320a:	c5 f9 7f 24 24       	vmovdqa XMMWORD PTR [rsp],xmm4
    320f:	c5 fa 7e 5c 24 08    	vmovq  xmm3,QWORD PTR [rsp+0x8]
    3215:	e8 66 15 00 00       	call   4780 <get_ray>
    321a:	c5 fa 10 2d fa 8e 00 	vmovss xmm5,DWORD PTR [rip+0x8efa]        # c11c <CSWTCH.3+0x5c>
    3221:	00 
    3222:	c5 d2 59 45 74       	vmulss xmm0,xmm5,DWORD PTR [rbp+0x74]
    3227:	ff 74 24 48          	push   QWORD PTR [rsp+0x48]
    322b:	ff 74 24 48          	push   QWORD PTR [rsp+0x48]
    322f:	ff 74 24 48          	push   QWORD PTR [rsp+0x48]
    3233:	ff 74 24 48          	push   QWORD PTR [rsp+0x48]
    3237:	e8 84 15 00 00       	call   47c0 <get_point_in_ray>
    323c:	48 83 c4 20          	add    rsp,0x20
    3240:	4c 89 e6             	mov    rsi,r12
    3243:	48 89 ef             	mov    rdi,rbp
    3246:	ff b4 24 88 00 00 00 	push   QWORD PTR [rsp+0x88]
    324d:	ff b4 24 88 00 00 00 	push   QWORD PTR [rsp+0x88]
    3254:	ff b4 24 88 00 00 00 	push   QWORD PTR [rsp+0x88]
    325b:	ff b4 24 88 00 00 00 	push   QWORD PTR [rsp+0x88]
    3262:	e8 a9 fc ff ff       	call   2f10 <is_hit_up_cap>
    3267:	48 83 c4 20          	add    rsp,0x20
    326b:	84 c0                	test   al,al
    326d:	74 11                	je     3280 <is_hit_cylinder_end_cap+0xa0>
    326f:	48 83 c4 58          	add    rsp,0x58
    3273:	5d                   	pop    rbp
    3274:	41 5c                	pop    r12
    3276:	c3                   	ret    
    3277:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    327e:	00 00 
    3280:	ff 74 24 48          	push   QWORD PTR [rsp+0x48]
    3284:	c5 fa 10 35 90 8e 00 	vmovss xmm6,DWORD PTR [rip+0x8e90]        # c11c <CSWTCH.3+0x5c>
    328b:	00 
    328c:	c5 ca 59 45 74       	vmulss xmm0,xmm6,DWORD PTR [rbp+0x74]
    3291:	ff 74 24 48          	push   QWORD PTR [rsp+0x48]
    3295:	c5 f8 57 05 93 8e 00 	vxorps xmm0,xmm0,XMMWORD PTR [rip+0x8e93]        # c130 <CSWTCH.3+0x70>
    329c:	00 
    329d:	ff 74 24 48          	push   QWORD PTR [rsp+0x48]
    32a1:	ff 74 24 48          	push   QWORD PTR [rsp+0x48]
    32a5:	e8 16 15 00 00       	call   47c0 <get_point_in_ray>
    32aa:	48 83 c4 78          	add    rsp,0x78
    32ae:	4c 89 e6             	mov    rsi,r12
    32b1:	48 89 ef             	mov    rdi,rbp
    32b4:	5d                   	pop    rbp
    32b5:	41 5c                	pop    r12
    32b7:	e9 b4 fd ff ff       	jmp    3070 <is_hit_down_cap>
    32bc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000000032c0 <is_hit_cylinder>:
    32c0:	f3 0f 1e fa          	endbr64 
    32c4:	41 54                	push   r12
    32c6:	49 89 f4             	mov    r12,rsi
    32c9:	55                   	push   rbp
    32ca:	48 89 fd             	mov    rbp,rdi
    32cd:	53                   	push   rbx
    32ce:	48 83 ec 20          	sub    rsp,0x20
    32d2:	ff 77 78             	push   QWORD PTR [rdi+0x78]
    32d5:	ff 77 70             	push   QWORD PTR [rdi+0x70]
    32d8:	ff 77 68             	push   QWORD PTR [rdi+0x68]
    32db:	ff 77 60             	push   QWORD PTR [rdi+0x60]
    32de:	ff 77 58             	push   QWORD PTR [rdi+0x58]
    32e1:	ff 77 50             	push   QWORD PTR [rdi+0x50]
    32e4:	ff 77 48             	push   QWORD PTR [rdi+0x48]
    32e7:	ff 77 40             	push   QWORD PTR [rdi+0x40]
    32ea:	ff 77 38             	push   QWORD PTR [rdi+0x38]
    32ed:	ff 77 30             	push   QWORD PTR [rdi+0x30]
    32f0:	ff 77 28             	push   QWORD PTR [rdi+0x28]
    32f3:	ff 77 20             	push   QWORD PTR [rdi+0x20]
    32f6:	ff 77 18             	push   QWORD PTR [rdi+0x18]
    32f9:	ff 77 10             	push   QWORD PTR [rdi+0x10]
    32fc:	ff 77 08             	push   QWORD PTR [rdi+0x8]
    32ff:	ff 37                	push   QWORD PTR [rdi]
    3301:	ff b4 24 d8 00 00 00 	push   QWORD PTR [rsp+0xd8]
    3308:	ff b4 24 d8 00 00 00 	push   QWORD PTR [rsp+0xd8]
    330f:	ff b4 24 d8 00 00 00 	push   QWORD PTR [rsp+0xd8]
    3316:	ff b4 24 d8 00 00 00 	push   QWORD PTR [rsp+0xd8]
    331d:	e8 ae 03 00 00       	call   36d0 <load_hit_cylinder_equation>
    3322:	c4 41 38 57 c0       	vxorps xmm8,xmm8,xmm8
    3327:	48 81 c4 a0 00 00 00 	add    rsp,0xa0
    332e:	c4 e1 f9 7e cb       	vmovq  rbx,xmm1
    3333:	c4 e1 f9 7e c0       	vmovq  rax,xmm0
    3338:	c5 fa 59 0d e4 8d 00 	vmulss xmm1,xmm0,DWORD PTR [rip+0x8de4]        # c124 <CSWTCH.3+0x64>
    333f:	00 
    3340:	c5 f9 6e f3          	vmovd  xmm6,ebx
    3344:	48 c1 e8 20          	shr    rax,0x20
    3348:	c5 79 6e d0          	vmovd  xmm10,eax
    334c:	c5 a8 57 1d dc 8d 00 	vxorps xmm3,xmm10,XMMWORD PTR [rip+0x8ddc]        # c130 <CSWTCH.3+0x70>
    3353:	00 
    3354:	c5 f2 59 fe          	vmulss xmm7,xmm1,xmm6
    3358:	c4 c2 29 bb fa       	vfmsub231ss xmm7,xmm10,xmm10
    335d:	c5 78 2e c7          	vucomiss xmm8,xmm7
    3361:	0f 87 d1 00 00 00    	ja     3438 <is_hit_cylinder+0x178>
    3367:	c5 c2 51 ff          	vsqrtss xmm7,xmm7,xmm7
    336b:	c5 7a 58 c8          	vaddss xmm9,xmm0,xmm0
    336f:	c5 62 5c df          	vsubss xmm11,xmm3,xmm7
    3373:	c4 41 22 5e e1       	vdivss xmm12,xmm11,xmm9
    3378:	c4 41 78 2f c4       	vcomiss xmm8,xmm12
    337d:	0f 83 45 01 00 00    	jae    34c8 <is_hit_cylinder+0x208>
    3383:	c4 41 78 2f 64 24 30 	vcomiss xmm12,DWORD PTR [r12+0x30]
    338a:	0f 83 38 01 00 00    	jae    34c8 <is_hit_cylinder+0x208>
    3390:	ff 75 78             	push   QWORD PTR [rbp+0x78]
    3393:	48 c1 eb 20          	shr    rbx,0x20
    3397:	c5 78 29 e0          	vmovaps xmm0,xmm12
    339b:	ff 75 70             	push   QWORD PTR [rbp+0x70]
    339e:	ff 75 68             	push   QWORD PTR [rbp+0x68]
    33a1:	ff 75 60             	push   QWORD PTR [rbp+0x60]
    33a4:	ff 75 58             	push   QWORD PTR [rbp+0x58]
    33a7:	ff 75 50             	push   QWORD PTR [rbp+0x50]
    33aa:	ff 75 48             	push   QWORD PTR [rbp+0x48]
    33ad:	ff 75 40             	push   QWORD PTR [rbp+0x40]
    33b0:	ff 75 38             	push   QWORD PTR [rbp+0x38]
    33b3:	ff 75 30             	push   QWORD PTR [rbp+0x30]
    33b6:	ff 75 28             	push   QWORD PTR [rbp+0x28]
    33b9:	ff 75 20             	push   QWORD PTR [rbp+0x20]
    33bc:	ff 75 18             	push   QWORD PTR [rbp+0x18]
    33bf:	ff 75 10             	push   QWORD PTR [rbp+0x10]
    33c2:	ff 75 08             	push   QWORD PTR [rbp+0x8]
    33c5:	ff 75 00             	push   QWORD PTR [rbp+0x0]
    33c8:	ff b4 24 d8 00 00 00 	push   QWORD PTR [rsp+0xd8]
    33cf:	ff b4 24 d8 00 00 00 	push   QWORD PTR [rsp+0xd8]
    33d6:	ff b4 24 d8 00 00 00 	push   QWORD PTR [rsp+0xd8]
    33dd:	ff b4 24 d8 00 00 00 	push   QWORD PTR [rsp+0xd8]
    33e4:	c5 7a 11 a4 24 a0 00 	vmovss DWORD PTR [rsp+0xa0],xmm12
    33eb:	00 00 
    33ed:	e8 ae 04 00 00       	call   38a0 <calculate_cylinder_hit_height>
    33f2:	c5 79 6e f3          	vmovd  xmm14,ebx
    33f6:	c4 41 00 57 ff       	vxorps xmm15,xmm15,xmm15
    33fb:	48 81 c4 a0 00 00 00 	add    rsp,0xa0
    3402:	c4 41 78 2f fe       	vcomiss xmm15,xmm14
    3407:	73 1c                	jae    3425 <is_hit_cylinder+0x165>
    3409:	c5 fa 10 25 0b 8d 00 	vmovss xmm4,DWORD PTR [rip+0x8d0b]        # c11c <CSWTCH.3+0x5c>
    3410:	00 
    3411:	c5 da 59 5d 74       	vmulss xmm3,xmm4,DWORD PTR [rbp+0x74]
    3416:	c5 fa 10 0c 24       	vmovss xmm1,DWORD PTR [rsp]
    341b:	c5 f8 2f c3          	vcomiss xmm0,xmm3
    341f:	0f 86 d3 00 00 00    	jbe    34f8 <is_hit_cylinder+0x238>
    3425:	48 83 c4 20          	add    rsp,0x20
    3429:	4c 89 e6             	mov    rsi,r12
    342c:	48 89 ef             	mov    rdi,rbp
    342f:	5b                   	pop    rbx
    3430:	5d                   	pop    rbp
    3431:	41 5c                	pop    r12
    3433:	e9 a8 fd ff ff       	jmp    31e0 <is_hit_cylinder_end_cap>
    3438:	c5 fa 11 44 24 08    	vmovss DWORD PTR [rsp+0x8],xmm0
    343e:	c5 f8 28 c7          	vmovaps xmm0,xmm7
    3442:	c5 fa 11 3c 24       	vmovss DWORD PTR [rsp],xmm7
    3447:	89 44 24 0c          	mov    DWORD PTR [rsp+0xc],eax
    344b:	c5 fa 11 5c 24 04    	vmovss DWORD PTR [rsp+0x4],xmm3
    3451:	e8 fa f3 ff ff       	call   2850 <sqrtf@plt>
    3456:	c5 fa 10 54 24 08    	vmovss xmm2,DWORD PTR [rsp+0x8]
    345c:	c5 fa 10 6c 24 04    	vmovss xmm5,DWORD PTR [rsp+0x4]
    3462:	c4 41 38 57 c0       	vxorps xmm8,xmm8,xmm8
    3467:	c5 fa 10 3c 24       	vmovss xmm7,DWORD PTR [rsp]
    346c:	c5 7a 10 54 24 0c    	vmovss xmm10,DWORD PTR [rsp+0xc]
    3472:	c5 6a 58 ca          	vaddss xmm9,xmm2,xmm2
    3476:	c5 d2 5c c0          	vsubss xmm0,xmm5,xmm0
    347a:	c4 41 7a 5e e1       	vdivss xmm12,xmm0,xmm9
    347f:	c4 41 78 2f c4       	vcomiss xmm8,xmm12
    3484:	73 17                	jae    349d <is_hit_cylinder+0x1dd>
    3486:	c4 41 78 2f 64 24 30 	vcomiss xmm12,DWORD PTR [r12+0x30]
    348d:	0f 82 fd fe ff ff    	jb     3390 <is_hit_cylinder+0xd0>
    3493:	c5 78 2e c7          	vucomiss xmm8,xmm7
    3497:	0f 86 e5 00 00 00    	jbe    3582 <is_hit_cylinder+0x2c2>
    349d:	c5 f8 28 c7          	vmovaps xmm0,xmm7
    34a1:	c5 7a 11 4c 24 04    	vmovss DWORD PTR [rsp+0x4],xmm9
    34a7:	c5 7a 11 14 24       	vmovss DWORD PTR [rsp],xmm10
    34ac:	e8 9f f3 ff ff       	call   2850 <sqrtf@plt>
    34b1:	c5 7a 10 4c 24 04    	vmovss xmm9,DWORD PTR [rsp+0x4]
    34b7:	c5 7a 10 14 24       	vmovss xmm10,DWORD PTR [rsp]
    34bc:	c4 41 38 57 c0       	vxorps xmm8,xmm8,xmm8
    34c1:	c5 f8 28 f8          	vmovaps xmm7,xmm0
    34c5:	0f 1f 00             	nop    DWORD PTR [rax]
    34c8:	c4 41 42 5c ea       	vsubss xmm13,xmm7,xmm10
    34cd:	c4 41 12 5e e1       	vdivss xmm12,xmm13,xmm9
    34d2:	c4 41 78 2f c4       	vcomiss xmm8,xmm12
    34d7:	73 0d                	jae    34e6 <is_hit_cylinder+0x226>
    34d9:	c4 41 78 2f 64 24 30 	vcomiss xmm12,DWORD PTR [r12+0x30]
    34e0:	0f 82 aa fe ff ff    	jb     3390 <is_hit_cylinder+0xd0>
    34e6:	48 83 c4 20          	add    rsp,0x20
    34ea:	31 c0                	xor    eax,eax
    34ec:	5b                   	pop    rbx
    34ed:	5d                   	pop    rbp
    34ee:	41 5c                	pop    r12
    34f0:	c3                   	ret    
    34f1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    34f8:	ff 74 24 58          	push   QWORD PTR [rsp+0x58]
    34fc:	c5 f8 28 c1          	vmovaps xmm0,xmm1
    3500:	ff 74 24 58          	push   QWORD PTR [rsp+0x58]
    3504:	ff 74 24 58          	push   QWORD PTR [rsp+0x58]
    3508:	ff 74 24 58          	push   QWORD PTR [rsp+0x58]
    350c:	c4 c1 7a 11 4c 24 30 	vmovss DWORD PTR [r12+0x30],xmm1
    3513:	e8 a8 12 00 00       	call   47c0 <get_point_in_ray>
    3518:	c5 fa 10 35 fc 8b 00 	vmovss xmm6,DWORD PTR [rip+0x8bfc]        # c11c <CSWTCH.3+0x5c>
    351f:	00 
    3520:	c5 ca 59 55 70       	vmulss xmm2,xmm6,DWORD PTR [rbp+0x70]
    3525:	c5 fa 7e 5d 08       	vmovq  xmm3,QWORD PTR [rbp+0x8]
    352a:	c4 c1 79 d6 04 24    	vmovq  QWORD PTR [r12],xmm0
    3530:	c4 c1 79 d6 4c 24 08 	vmovq  QWORD PTR [r12+0x8],xmm1
    3537:	c5 fa 11 54 24 20    	vmovss DWORD PTR [rsp+0x20],xmm2
    353d:	c5 fa 7e 55 00       	vmovq  xmm2,QWORD PTR [rbp+0x0]
    3542:	48 83 c4 20          	add    rsp,0x20
    3546:	e8 95 3b 00 00       	call   70e0 <subtract_vector3>
    354b:	c5 fa 10 14 24       	vmovss xmm2,DWORD PTR [rsp]
    3550:	e8 0b 3c 00 00       	call   7160 <divide_vector3>
    3555:	c5 f9 6f 6d 10       	vmovdqa xmm5,XMMWORD PTR [rbp+0x10]
    355a:	49 89 6c 24 38       	mov    QWORD PTR [r12+0x38],rbp
    355f:	b8 01 00 00 00       	mov    eax,0x1
    3564:	c4 c1 79 d6 44 24 10 	vmovq  QWORD PTR [r12+0x10],xmm0
    356b:	c4 c1 79 d6 4c 24 18 	vmovq  QWORD PTR [r12+0x18],xmm1
    3572:	c4 c1 79 7f 6c 24 20 	vmovdqa XMMWORD PTR [r12+0x20],xmm5
    3579:	48 83 c4 20          	add    rsp,0x20
    357d:	5b                   	pop    rbx
    357e:	5d                   	pop    rbp
    357f:	41 5c                	pop    r12
    3581:	c3                   	ret    
    3582:	c5 c2 51 ff          	vsqrtss xmm7,xmm7,xmm7
    3586:	e9 3d ff ff ff       	jmp    34c8 <is_hit_cylinder+0x208>
    358b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003590 <delete_cylinder>:
    3590:	f3 0f 1e fa          	endbr64 
    3594:	e9 27 f0 ff ff       	jmp    25c0 <free@plt>
    3599:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000035a0 <copy_construction_to_cylinder>:
    35a0:	f3 0f 1e fa          	endbr64 
    35a4:	55                   	push   rbp
    35a5:	bf 80 00 00 00       	mov    edi,0x80
    35aa:	48 89 e5             	mov    rbp,rsp
    35ad:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    35b1:	e8 8a ef ff ff       	call   2540 <malloc@plt>
    35b6:	c5 f9 6f 55 10       	vmovdqa xmm2,XMMWORD PTR [rbp+0x10]
    35bb:	c5 f9 6f 5d 20       	vmovdqa xmm3,XMMWORD PTR [rbp+0x20]
    35c0:	48 8d 15 c9 ff ff ff 	lea    rdx,[rip+0xffffffffffffffc9]        # 3590 <delete_cylinder>
    35c7:	c5 fa 7e 05 f1 d9 00 	vmovq  xmm0,QWORD PTR [rip+0xd9f1]        # 10fc0 <_GLOBAL_OFFSET_TABLE_+0x250>
    35ce:	00 
    35cf:	c5 fa 7e 3d f9 d9 00 	vmovq  xmm7,QWORD PTR [rip+0xd9f9]        # 10fd0 <_GLOBAL_OFFSET_TABLE_+0x260>
    35d6:	00 
    35d7:	c5 f9 6f 65 30       	vmovdqa xmm4,XMMWORD PTR [rbp+0x30]
    35dc:	c5 f9 6f 6d 40       	vmovdqa xmm5,XMMWORD PTR [rbp+0x40]
    35e1:	c5 f9 7f 10          	vmovdqa XMMWORD PTR [rax],xmm2
    35e5:	c5 f9 6f 75 50       	vmovdqa xmm6,XMMWORD PTR [rbp+0x50]
    35ea:	48 8b 8d 80 00 00 00 	mov    rcx,QWORD PTR [rbp+0x80]
    35f1:	c5 f9 7f 58 10       	vmovdqa XMMWORD PTR [rax+0x10],xmm3
    35f6:	c4 63 f9 22 c2 01    	vpinsrq xmm8,xmm0,rdx,0x1
    35fc:	c4 e3 c1 22 0d d2 d9 	vpinsrq xmm1,xmm7,QWORD PTR [rip+0xd9d2],0x1        # 10fd8 <_GLOBAL_OFFSET_TABLE_+0x268>
    3603:	00 00 01 
    3606:	c5 f9 7f 60 20       	vmovdqa XMMWORD PTR [rax+0x20],xmm4
    360b:	48 89 48 70          	mov    QWORD PTR [rax+0x70],rcx
    360f:	c4 63 3d 38 c9 01    	vinserti128 ymm9,ymm8,xmm1,0x1
    3615:	c5 f9 7f 68 30       	vmovdqa XMMWORD PTR [rax+0x30],xmm5
    361a:	c5 f9 7f 70 40       	vmovdqa XMMWORD PTR [rax+0x40],xmm6
    361f:	c5 7e 7f 48 50       	vmovdqu YMMWORD PTR [rax+0x50],ymm9
    3624:	c5 f8 77             	vzeroupper 
    3627:	c9                   	leave  
    3628:	c3                   	ret    
    3629:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000003630 <update_scale_diameter_cylinder>:
    3630:	f3 0f 1e fa          	endbr64 
    3634:	53                   	push   rbx
    3635:	48 89 fb             	mov    rbx,rdi
    3638:	83 fe 08             	cmp    esi,0x8
    363b:	74 2b                	je     3668 <update_scale_diameter_cylinder+0x38>
    363d:	83 fe 09             	cmp    esi,0x9
    3640:	74 06                	je     3648 <update_scale_diameter_cylinder+0x18>
    3642:	5b                   	pop    rbx
    3643:	c3                   	ret    
    3644:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    3648:	c5 fa 10 47 70       	vmovss xmm0,DWORD PTR [rdi+0x70]
    364d:	c5 fa 10 0d c7 8a 00 	vmovss xmm1,DWORD PTR [rip+0x8ac7]        # c11c <CSWTCH.3+0x5c>
    3654:	00 
    3655:	c5 fa 5c c1          	vsubss xmm0,xmm0,xmm1
    3659:	e8 32 ef ff ff       	call   2590 <fmaxf@plt>
    365e:	c5 fa 11 43 70       	vmovss DWORD PTR [rbx+0x70],xmm0
    3663:	5b                   	pop    rbx
    3664:	c3                   	ret    
    3665:	0f 1f 00             	nop    DWORD PTR [rax]
    3668:	c5 fa 10 0d ac 8a 00 	vmovss xmm1,DWORD PTR [rip+0x8aac]        # c11c <CSWTCH.3+0x5c>
    366f:	00 
    3670:	c5 f2 58 57 70       	vaddss xmm2,xmm1,DWORD PTR [rdi+0x70]
    3675:	5b                   	pop    rbx
    3676:	c5 fa 11 57 70       	vmovss DWORD PTR [rdi+0x70],xmm2
    367b:	c3                   	ret    
    367c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000003680 <update_scale_height_cylinder>:
    3680:	f3 0f 1e fa          	endbr64 
    3684:	53                   	push   rbx
    3685:	48 89 fb             	mov    rbx,rdi
    3688:	83 fe 0a             	cmp    esi,0xa
    368b:	74 2b                	je     36b8 <update_scale_height_cylinder+0x38>
    368d:	83 fe 0b             	cmp    esi,0xb
    3690:	74 06                	je     3698 <update_scale_height_cylinder+0x18>
    3692:	5b                   	pop    rbx
    3693:	c3                   	ret    
    3694:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    3698:	c5 fa 10 47 74       	vmovss xmm0,DWORD PTR [rdi+0x74]
    369d:	c5 fa 10 0d 77 8a 00 	vmovss xmm1,DWORD PTR [rip+0x8a77]        # c11c <CSWTCH.3+0x5c>
    36a4:	00 
    36a5:	c5 fa 5c c1          	vsubss xmm0,xmm0,xmm1
    36a9:	e8 e2 ee ff ff       	call   2590 <fmaxf@plt>
    36ae:	c5 fa 11 43 74       	vmovss DWORD PTR [rbx+0x74],xmm0
    36b3:	5b                   	pop    rbx
    36b4:	c3                   	ret    
    36b5:	0f 1f 00             	nop    DWORD PTR [rax]
    36b8:	c5 fa 10 0d 5c 8a 00 	vmovss xmm1,DWORD PTR [rip+0x8a5c]        # c11c <CSWTCH.3+0x5c>
    36bf:	00 
    36c0:	c5 f2 58 57 74       	vaddss xmm2,xmm1,DWORD PTR [rdi+0x74]
    36c5:	5b                   	pop    rbx
    36c6:	c5 fa 11 57 74       	vmovss DWORD PTR [rdi+0x74],xmm2
    36cb:	c3                   	ret    
    36cc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000000036d0 <load_hit_cylinder_equation>:
    36d0:	f3 0f 1e fa          	endbr64 
    36d4:	48 81 ec 88 00 00 00 	sub    rsp,0x88
    36db:	c5 fa 10 a4 24 20 01 	vmovss xmm4,DWORD PTR [rsp+0x120]
    36e2:	00 00 
    36e4:	c5 f9 6f bc 24 f0 00 	vmovdqa xmm7,XMMWORD PTR [rsp+0xf0]
    36eb:	00 00 
    36ed:	c5 fa 7e 84 24 90 00 	vmovq  xmm0,QWORD PTR [rsp+0x90]
    36f4:	00 00 
    36f6:	c5 fa 7e 8c 24 98 00 	vmovq  xmm1,QWORD PTR [rsp+0x98]
    36fd:	00 00 
    36ff:	c5 fa 7e 94 24 b0 00 	vmovq  xmm2,QWORD PTR [rsp+0xb0]
    3706:	00 00 
    3708:	c5 fa 11 64 24 1c    	vmovss DWORD PTR [rsp+0x1c],xmm4
    370e:	c5 fa 7e 9c 24 b8 00 	vmovq  xmm3,QWORD PTR [rsp+0xb8]
    3715:	00 00 
    3717:	c5 f9 7f 7c 24 20    	vmovdqa XMMWORD PTR [rsp+0x20],xmm7
    371d:	e8 be 39 00 00       	call   70e0 <subtract_vector3>
    3722:	c5 fa 7e 5c 24 28    	vmovq  xmm3,QWORD PTR [rsp+0x28]
    3728:	c5 fa 7e 54 24 20    	vmovq  xmm2,QWORD PTR [rsp+0x20]
    372e:	c5 f9 d6 44 24 30    	vmovq  QWORD PTR [rsp+0x30],xmm0
    3734:	c5 fa 7e 84 24 a0 00 	vmovq  xmm0,QWORD PTR [rsp+0xa0]
    373b:	00 00 
    373d:	c5 f9 d6 4c 24 38    	vmovq  QWORD PTR [rsp+0x38],xmm1
    3743:	c5 fa 7e 8c 24 a8 00 	vmovq  xmm1,QWORD PTR [rsp+0xa8]
    374a:	00 00 
    374c:	e8 4f 3a 00 00       	call   71a0 <dot_product3x3>
    3751:	c5 fa 7e 4c 24 28    	vmovq  xmm1,QWORD PTR [rsp+0x28]
    3757:	c5 f8 28 d0          	vmovaps xmm2,xmm0
    375b:	c5 fa 7e 44 24 20    	vmovq  xmm0,QWORD PTR [rsp+0x20]
    3761:	e8 ba 39 00 00       	call   7120 <multiply_vector3>
    3766:	c5 f9 6f d0          	vmovdqa xmm2,xmm0
    376a:	c5 f9 6f d9          	vmovdqa xmm3,xmm1
    376e:	c5 fa 7e 84 24 a0 00 	vmovq  xmm0,QWORD PTR [rsp+0xa0]
    3775:	00 00 
    3777:	c5 fa 7e 8c 24 a8 00 	vmovq  xmm1,QWORD PTR [rsp+0xa8]
    377e:	00 00 
    3780:	e8 5b 39 00 00       	call   70e0 <subtract_vector3>
    3785:	c5 fa 7e 5c 24 28    	vmovq  xmm3,QWORD PTR [rsp+0x28]
    378b:	c5 fa 7e 54 24 20    	vmovq  xmm2,QWORD PTR [rsp+0x20]
    3791:	c5 f9 d6 44 24 40    	vmovq  QWORD PTR [rsp+0x40],xmm0
    3797:	c5 fa 7e 44 24 30    	vmovq  xmm0,QWORD PTR [rsp+0x30]
    379d:	c5 f9 d6 4c 24 48    	vmovq  QWORD PTR [rsp+0x48],xmm1
    37a3:	c5 fa 7e 4c 24 38    	vmovq  xmm1,QWORD PTR [rsp+0x38]
    37a9:	e8 f2 39 00 00       	call   71a0 <dot_product3x3>
    37ae:	c5 fa 7e 4c 24 28    	vmovq  xmm1,QWORD PTR [rsp+0x28]
    37b4:	c5 f8 28 d0          	vmovaps xmm2,xmm0
    37b8:	c5 fa 7e 44 24 20    	vmovq  xmm0,QWORD PTR [rsp+0x20]
    37be:	e8 5d 39 00 00       	call   7120 <multiply_vector3>
    37c3:	c5 f9 6f d0          	vmovdqa xmm2,xmm0
    37c7:	c5 f9 6f d9          	vmovdqa xmm3,xmm1
    37cb:	c5 fa 7e 44 24 30    	vmovq  xmm0,QWORD PTR [rsp+0x30]
    37d1:	c5 fa 7e 4c 24 38    	vmovq  xmm1,QWORD PTR [rsp+0x38]
    37d7:	e8 04 39 00 00       	call   70e0 <subtract_vector3>
    37dc:	c5 fa 7e 54 24 40    	vmovq  xmm2,QWORD PTR [rsp+0x40]
    37e2:	c5 fa 7e 5c 24 48    	vmovq  xmm3,QWORD PTR [rsp+0x48]
    37e8:	c5 f9 d6 44 24 50    	vmovq  QWORD PTR [rsp+0x50],xmm0
    37ee:	c5 f9 d6 4c 24 58    	vmovq  QWORD PTR [rsp+0x58],xmm1
    37f4:	c5 f9 6f c2          	vmovdqa xmm0,xmm2
    37f8:	c5 f9 6f cb          	vmovdqa xmm1,xmm3
    37fc:	e8 9f 39 00 00       	call   71a0 <dot_product3x3>
    3801:	c5 fa 7e 54 24 50    	vmovq  xmm2,QWORD PTR [rsp+0x50]
    3807:	c5 fa 7e 5c 24 58    	vmovq  xmm3,QWORD PTR [rsp+0x58]
    380d:	c5 fa 7e 4c 24 48    	vmovq  xmm1,QWORD PTR [rsp+0x48]
    3813:	c5 fa 11 44 24 18    	vmovss DWORD PTR [rsp+0x18],xmm0
    3819:	c5 fa 7e 44 24 40    	vmovq  xmm0,QWORD PTR [rsp+0x40]
    381f:	e8 7c 39 00 00       	call   71a0 <dot_product3x3>
    3824:	c5 fa 7e 54 24 50    	vmovq  xmm2,QWORD PTR [rsp+0x50]
    382a:	c5 fa 7e 5c 24 58    	vmovq  xmm3,QWORD PTR [rsp+0x58]
    3830:	c5 fa 58 f0          	vaddss xmm6,xmm0,xmm0
    3834:	c5 f9 6f cb          	vmovdqa xmm1,xmm3
    3838:	c5 f9 6f c2          	vmovdqa xmm0,xmm2
    383c:	c5 fa 11 34 24       	vmovss DWORD PTR [rsp],xmm6
    3841:	e8 5a 39 00 00       	call   71a0 <dot_product3x3>
    3846:	c5 fa 10 4c 24 1c    	vmovss xmm1,DWORD PTR [rsp+0x1c]
    384c:	c5 fa 10 5c 24 18    	vmovss xmm3,DWORD PTR [rsp+0x18]
    3852:	c5 f2 59 15 c2 88 00 	vmulss xmm2,xmm1,DWORD PTR [rip+0x88c2]        # c11c <CSWTCH.3+0x5c>
    3859:	00 
    385a:	c5 7a 10 0c 24       	vmovss xmm9,DWORD PTR [rsp]
    385f:	c4 41 60 14 d9       	vunpcklps xmm11,xmm3,xmm9
    3864:	c4 e2 79 9d d2       	vfnmadd132ss xmm2,xmm0,xmm2
    3869:	c5 e2 59 05 b3 88 00 	vmulss xmm0,xmm3,DWORD PTR [rip+0x88b3]        # c124 <CSWTCH.3+0x64>
    3870:	00 
    3871:	c5 7a 59 c2          	vmulss xmm8,xmm0,xmm2
    3875:	c4 42 31 bb c1       	vfmsub231ss xmm8,xmm9,xmm9
    387a:	c4 41 68 14 d0       	vunpcklps xmm10,xmm2,xmm8
    387f:	c4 41 20 16 e2       	vmovlhps xmm12,xmm11,xmm10
    3884:	c5 78 29 24 24       	vmovaps XMMWORD PTR [rsp],xmm12
    3889:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
    388e:	c5 fa 7e 04 24       	vmovq  xmm0,QWORD PTR [rsp]
    3893:	48 81 c4 88 00 00 00 	add    rsp,0x88
    389a:	c4 e1 f9 6e c8       	vmovq  xmm1,rax
    389f:	c3                   	ret    

00000000000038a0 <calculate_cylinder_hit_height>:
    38a0:	f3 0f 1e fa          	endbr64 
    38a4:	48 83 ec 48          	sub    rsp,0x48
    38a8:	c5 f8 28 d0          	vmovaps xmm2,xmm0
    38ac:	c5 f9 6f a4 24 b0 00 	vmovdqa xmm4,XMMWORD PTR [rsp+0xb0]
    38b3:	00 00 
    38b5:	c5 fa 7e 44 24 60    	vmovq  xmm0,QWORD PTR [rsp+0x60]
    38bb:	c5 fa 7e 4c 24 68    	vmovq  xmm1,QWORD PTR [rsp+0x68]
    38c1:	c5 f9 7f 24 24       	vmovdqa XMMWORD PTR [rsp],xmm4
    38c6:	e8 55 38 00 00       	call   7120 <multiply_vector3>
    38cb:	c5 f9 6f d0          	vmovdqa xmm2,xmm0
    38cf:	c5 f9 6f d9          	vmovdqa xmm3,xmm1
    38d3:	c5 fa 7e 44 24 50    	vmovq  xmm0,QWORD PTR [rsp+0x50]
    38d9:	c5 fa 7e 4c 24 58    	vmovq  xmm1,QWORD PTR [rsp+0x58]
    38df:	e8 bc 37 00 00       	call   70a0 <add_vector3>
    38e4:	c5 fa 7e 54 24 70    	vmovq  xmm2,QWORD PTR [rsp+0x70]
    38ea:	c5 fa 7e 5c 24 78    	vmovq  xmm3,QWORD PTR [rsp+0x78]
    38f0:	e8 eb 37 00 00       	call   70e0 <subtract_vector3>
    38f5:	c5 f9 6f d0          	vmovdqa xmm2,xmm0
    38f9:	c5 f9 6f d9          	vmovdqa xmm3,xmm1
    38fd:	c5 fa 7e 04 24       	vmovq  xmm0,QWORD PTR [rsp]
    3902:	c5 fa 7e 4c 24 08    	vmovq  xmm1,QWORD PTR [rsp+0x8]
    3908:	e8 93 38 00 00       	call   71a0 <dot_product3x3>
    390d:	c5 f8 54 05 2b 88 00 	vandps xmm0,xmm0,XMMWORD PTR [rip+0x882b]        # c140 <CSWTCH.3+0x80>
    3914:	00 
    3915:	48 83 c4 48          	add    rsp,0x48
    3919:	c3                   	ret    
    391a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000003920 <get_hit_record>:
    3920:	f3 0f 1e fa          	endbr64 
    3924:	41 54                	push   r12
    3926:	ba 10 00 00 00       	mov    edx,0x10
    392b:	49 89 fc             	mov    r12,rdi
    392e:	be 00 00 00 80       	mov    esi,0x80000000
    3933:	55                   	push   rbp
    3934:	48 83 ec 48          	sub    rsp,0x48
    3938:	48 89 e5             	mov    rbp,rsp
    393b:	48 8d 7c 24 20       	lea    rdi,[rsp+0x20]
    3940:	c7 44 24 30 ff ff 7f 	mov    DWORD PTR [rsp+0x30],0x7f7fffff
    3947:	7f 
    3948:	e8 43 22 00 00       	call   5b90 <ft_memset>
    394d:	48 89 ef             	mov    rdi,rbp
    3950:	ba 10 00 00 00       	mov    edx,0x10
    3955:	be 00 00 00 80       	mov    esi,0x80000000
    395a:	e8 31 22 00 00       	call   5b90 <ft_memset>
    395f:	48 8d 7c 24 10       	lea    rdi,[rsp+0x10]
    3964:	ba 10 00 00 00       	mov    edx,0x10
    3969:	be 00 00 00 80       	mov    esi,0x80000000
    396e:	e8 1d 22 00 00       	call   5b90 <ft_memset>
    3973:	c5 f9 6f 04 24       	vmovdqa xmm0,XMMWORD PTR [rsp]
    3978:	4c 89 e0             	mov    rax,r12
    397b:	c5 f9 6f 4c 24 10    	vmovdqa xmm1,XMMWORD PTR [rsp+0x10]
    3981:	c5 f9 6f 54 24 20    	vmovdqa xmm2,XMMWORD PTR [rsp+0x20]
    3987:	c5 f9 6f 5c 24 30    	vmovdqa xmm3,XMMWORD PTR [rsp+0x30]
    398d:	c4 c1 79 7f 04 24    	vmovdqa XMMWORD PTR [r12],xmm0
    3993:	c4 c1 79 7f 4c 24 10 	vmovdqa XMMWORD PTR [r12+0x10],xmm1
    399a:	c4 c1 79 7f 54 24 20 	vmovdqa XMMWORD PTR [r12+0x20],xmm2
    39a1:	c4 c1 79 7f 5c 24 30 	vmovdqa XMMWORD PTR [r12+0x30],xmm3
    39a8:	48 83 c4 48          	add    rsp,0x48
    39ac:	5d                   	pop    rbp
    39ad:	41 5c                	pop    r12
    39af:	c3                   	ret    

00000000000039b0 <init_canvas>:
    39b0:	f3 0f 1e fa          	endbr64 
    39b4:	55                   	push   rbp
    39b5:	31 c0                	xor    eax,eax
    39b7:	53                   	push   rbx
    39b8:	48 89 fb             	mov    rbx,rdi
    39bb:	48 83 ec 08          	sub    rsp,0x8
    39bf:	e8 2c 6b 00 00       	call   a4f0 <mlx_init>
    39c4:	48 89 03             	mov    QWORD PTR [rbx],rax
    39c7:	48 89 c7             	mov    rdi,rax
    39ca:	48 85 c0             	test   rax,rax
    39cd:	0f 84 8d 00 00 00    	je     3a60 <init_canvas+0xb0>
    39d3:	48 8d 53 30          	lea    rdx,[rbx+0x30]
    39d7:	48 8d 73 28          	lea    rsi,[rbx+0x28]
    39db:	e8 f0 7a 00 00       	call   b4d0 <mlx_get_screen_size>
    39e0:	8b 7b 30             	mov    edi,DWORD PTR [rbx+0x30]
    39e3:	be e8 03 00 00       	mov    esi,0x3e8
    39e8:	e8 43 29 00 00       	call   6330 <get_min>
    39ed:	c5 f9 6f 05 ab 87 00 	vmovdqa xmm0,XMMWORD PTR [rip+0x87ab]        # c1a0 <CSWTCH.3+0xe0>
    39f4:	00 
    39f5:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    39f8:	be e8 03 00 00       	mov    esi,0x3e8
    39fd:	48 8d 0d 69 87 00 00 	lea    rcx,[rip+0x8769]        # c16d <CSWTCH.3+0xad>
    3a04:	ba e8 03 00 00       	mov    edx,0x3e8
    3a09:	c5 fa 7f 43 28       	vmovdqu XMMWORD PTR [rbx+0x28],xmm0
    3a0e:	e8 3d 6c 00 00       	call   a650 <mlx_new_window>
    3a13:	48 89 43 08          	mov    QWORD PTR [rbx+0x8],rax
    3a17:	48 89 c6             	mov    rsi,rax
    3a1a:	48 85 c0             	test   rax,rax
    3a1d:	74 61                	je     3a80 <init_canvas+0xd0>
    3a1f:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    3a22:	e8 a9 76 00 00       	call   b0d0 <mlx_clear_window>
    3a27:	8b 53 30             	mov    edx,DWORD PTR [rbx+0x30]
    3a2a:	8b 73 28             	mov    esi,DWORD PTR [rbx+0x28]
    3a2d:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    3a30:	e8 9b 74 00 00       	call   aed0 <mlx_new_image>
    3a35:	48 89 c5             	mov    rbp,rax
    3a38:	48 85 c0             	test   rax,rax
    3a3b:	74 63                	je     3aa0 <init_canvas+0xf0>
    3a3d:	48 89 6b 10          	mov    QWORD PTR [rbx+0x10],rbp
    3a41:	48 83 c4 08          	add    rsp,0x8
    3a45:	48 8d 4b 20          	lea    rcx,[rbx+0x20]
    3a49:	48 8d 53 1c          	lea    rdx,[rbx+0x1c]
    3a4d:	48 8d 73 18          	lea    rsi,[rbx+0x18]
    3a51:	48 89 ef             	mov    rdi,rbp
    3a54:	5b                   	pop    rbx
    3a55:	5d                   	pop    rbp
    3a56:	e9 15 75 00 00       	jmp    af70 <mlx_get_data_addr>
    3a5b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    3a60:	48 8d 3d fa 86 00 00 	lea    rdi,[rip+0x86fa]        # c161 <CSWTCH.3+0xa1>
    3a67:	48 8d 35 e2 86 00 00 	lea    rsi,[rip+0x86e2]        # c150 <CSWTCH.3+0x90>
    3a6e:	e8 5d 2e 00 00       	call   68d0 <exit_by_error>
    3a73:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    3a76:	e9 58 ff ff ff       	jmp    39d3 <init_canvas+0x23>
    3a7b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    3a80:	48 8d 35 ed 86 00 00 	lea    rsi,[rip+0x86ed]        # c174 <CSWTCH.3+0xb4>
    3a87:	48 8d 3d d3 86 00 00 	lea    rdi,[rip+0x86d3]        # c161 <CSWTCH.3+0xa1>
    3a8e:	e8 3d 2e 00 00       	call   68d0 <exit_by_error>
    3a93:	48 8b 73 08          	mov    rsi,QWORD PTR [rbx+0x8]
    3a97:	eb 86                	jmp    3a1f <init_canvas+0x6f>
    3a99:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    3aa0:	48 8d 35 dd 86 00 00 	lea    rsi,[rip+0x86dd]        # c184 <CSWTCH.3+0xc4>
    3aa7:	48 8d 3d e5 86 00 00 	lea    rdi,[rip+0x86e5]        # c193 <CSWTCH.3+0xd3>
    3aae:	e8 1d 2e 00 00       	call   68d0 <exit_by_error>
    3ab3:	eb 88                	jmp    3a3d <init_canvas+0x8d>
    3ab5:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    3abc:	00 00 00 00 

0000000000003ac0 <free_canvas>:
    3ac0:	f3 0f 1e fa          	endbr64 
    3ac4:	53                   	push   rbx
    3ac5:	48 89 fb             	mov    rbx,rdi
    3ac8:	48 8b 77 10          	mov    rsi,QWORD PTR [rdi+0x10]
    3acc:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
    3acf:	e8 6c 79 00 00       	call   b440 <mlx_destroy_image>
    3ad4:	48 c7 43 10 00 00 00 	mov    QWORD PTR [rbx+0x10],0x0
    3adb:	00 
    3adc:	48 8b 73 08          	mov    rsi,QWORD PTR [rbx+0x8]
    3ae0:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    3ae3:	e8 18 76 00 00       	call   b100 <mlx_destroy_window>
    3ae8:	48 c7 43 08 00 00 00 	mov    QWORD PTR [rbx+0x8],0x0
    3aef:	00 
    3af0:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    3af3:	e8 48 7a 00 00       	call   b540 <mlx_destroy_display>
    3af8:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    3afb:	e8 c0 ea ff ff       	call   25c0 <free@plt>
    3b00:	48 c7 03 00 00 00 00 	mov    QWORD PTR [rbx],0x0
    3b07:	5b                   	pop    rbx
    3b08:	c3                   	ret    
    3b09:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000003b10 <init_img>:
    3b10:	f3 0f 1e fa          	endbr64 
    3b14:	48 83 ec 18          	sub    rsp,0x18
    3b18:	8b 57 30             	mov    edx,DWORD PTR [rdi+0x30]
    3b1b:	8b 77 28             	mov    esi,DWORD PTR [rdi+0x28]
    3b1e:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
    3b21:	e8 aa 73 00 00       	call   aed0 <mlx_new_image>
    3b26:	48 85 c0             	test   rax,rax
    3b29:	74 05                	je     3b30 <init_img+0x20>
    3b2b:	48 83 c4 18          	add    rsp,0x18
    3b2f:	c3                   	ret    
    3b30:	48 8d 35 4d 86 00 00 	lea    rsi,[rip+0x864d]        # c184 <CSWTCH.3+0xc4>
    3b37:	48 8d 3d 55 86 00 00 	lea    rdi,[rip+0x8655]        # c193 <CSWTCH.3+0xd3>
    3b3e:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    3b43:	e8 88 2d 00 00       	call   68d0 <exit_by_error>
    3b48:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
    3b4d:	48 83 c4 18          	add    rsp,0x18
    3b51:	c3                   	ret    
    3b52:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    3b59:	00 00 00 
    3b5c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000003b60 <is_valid_file>:
    3b60:	f3 0f 1e fa          	endbr64 
    3b64:	80 3f 00             	cmp    BYTE PTR [rdi],0x0
    3b67:	74 48                	je     3bb1 <is_valid_file+0x51>
    3b69:	55                   	push   rbp
    3b6a:	48 8d 2d 3f 86 00 00 	lea    rbp,[rip+0x863f]        # c1b0 <CSWTCH.3+0xf0>
    3b71:	53                   	push   rbx
    3b72:	48 89 fb             	mov    rbx,rdi
    3b75:	48 83 ec 08          	sub    rsp,0x8
    3b79:	eb 0e                	jmp    3b89 <is_valid_file+0x29>
    3b7b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    3b80:	48 83 c3 01          	add    rbx,0x1
    3b84:	80 3b 00             	cmp    BYTE PTR [rbx],0x0
    3b87:	74 1f                	je     3ba8 <is_valid_file+0x48>
    3b89:	48 89 ee             	mov    rsi,rbp
    3b8c:	48 89 df             	mov    rdi,rbx
    3b8f:	e8 2c 20 00 00       	call   5bc0 <ft_strcmp>
    3b94:	85 c0                	test   eax,eax
    3b96:	75 e8                	jne    3b80 <is_valid_file+0x20>
    3b98:	48 83 c4 08          	add    rsp,0x8
    3b9c:	b8 01 00 00 00       	mov    eax,0x1
    3ba1:	5b                   	pop    rbx
    3ba2:	5d                   	pop    rbp
    3ba3:	c3                   	ret    
    3ba4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    3ba8:	48 83 c4 08          	add    rsp,0x8
    3bac:	31 c0                	xor    eax,eax
    3bae:	5b                   	pop    rbx
    3baf:	5d                   	pop    rbp
    3bb0:	c3                   	ret    
    3bb1:	31 c0                	xor    eax,eax
    3bb3:	c3                   	ret    
    3bb4:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    3bbb:	00 00 00 00 
    3bbf:	90                   	nop

0000000000003bc0 <try_parse_attributes>:
    3bc0:	f3 0f 1e fa          	endbr64 
    3bc4:	41 55                	push   r13
    3bc6:	49 89 d5             	mov    r13,rdx
    3bc9:	41 54                	push   r12
    3bcb:	49 89 f4             	mov    r12,rsi
    3bce:	48 8d 35 df 85 00 00 	lea    rsi,[rip+0x85df]        # c1b4 <CSWTCH.3+0xf4>
    3bd5:	55                   	push   rbp
    3bd6:	48 89 fd             	mov    rbp,rdi
    3bd9:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
    3bdc:	e8 df 1f 00 00       	call   5bc0 <ft_strcmp>
    3be1:	85 c0                	test   eax,eax
    3be3:	75 13                	jne    3bf8 <try_parse_attributes+0x38>
    3be5:	4c 89 e6             	mov    rsi,r12
    3be8:	48 89 ef             	mov    rdi,rbp
    3beb:	5d                   	pop    rbp
    3bec:	41 5c                	pop    r12
    3bee:	41 5d                	pop    r13
    3bf0:	e9 5b 1b 00 00       	jmp    5750 <try_add_ambient_light_to_world>
    3bf5:	0f 1f 00             	nop    DWORD PTR [rax]
    3bf8:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
    3bfc:	48 8d 35 b3 85 00 00 	lea    rsi,[rip+0x85b3]        # c1b6 <CSWTCH.3+0xf6>
    3c03:	e8 b8 1f 00 00       	call   5bc0 <ft_strcmp>
    3c08:	85 c0                	test   eax,eax
    3c0a:	75 14                	jne    3c20 <try_parse_attributes+0x60>
    3c0c:	4c 89 e6             	mov    rsi,r12
    3c0f:	48 89 ef             	mov    rdi,rbp
    3c12:	5d                   	pop    rbp
    3c13:	41 5c                	pop    r12
    3c15:	41 5d                	pop    r13
    3c17:	e9 94 1c 00 00       	jmp    58b0 <try_add_light_to_world>
    3c1c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    3c20:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
    3c24:	48 8d 35 8d 85 00 00 	lea    rsi,[rip+0x858d]        # c1b8 <CSWTCH.3+0xf8>
    3c2b:	e8 90 1f 00 00       	call   5bc0 <ft_strcmp>
    3c30:	85 c0                	test   eax,eax
    3c32:	74 2c                	je     3c60 <try_parse_attributes+0xa0>
    3c34:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
    3c38:	48 8d 35 7b 85 00 00 	lea    rsi,[rip+0x857b]        # c1ba <CSWTCH.3+0xfa>
    3c3f:	e8 7c 1f 00 00       	call   5bc0 <ft_strcmp>
    3c44:	85 c0                	test   eax,eax
    3c46:	75 30                	jne    3c78 <try_parse_attributes+0xb8>
    3c48:	4c 89 e6             	mov    rsi,r12
    3c4b:	48 89 ef             	mov    rdi,rbp
    3c4e:	5d                   	pop    rbp
    3c4f:	41 5c                	pop    r12
    3c51:	41 5d                	pop    r13
    3c53:	e9 c8 03 00 00       	jmp    4020 <try_add_sphere_to_world>
    3c58:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    3c5f:	00 
    3c60:	4c 89 ea             	mov    rdx,r13
    3c63:	4c 89 e6             	mov    rsi,r12
    3c66:	48 89 ef             	mov    rdi,rbp
    3c69:	5d                   	pop    rbp
    3c6a:	41 5c                	pop    r12
    3c6c:	41 5d                	pop    r13
    3c6e:	e9 6d 1b 00 00       	jmp    57e0 <try_add_camera_to_world>
    3c73:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    3c78:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
    3c7c:	48 8d 35 3a 85 00 00 	lea    rsi,[rip+0x853a]        # c1bd <CSWTCH.3+0xfd>
    3c83:	e8 38 1f 00 00       	call   5bc0 <ft_strcmp>
    3c88:	85 c0                	test   eax,eax
    3c8a:	74 24                	je     3cb0 <try_parse_attributes+0xf0>
    3c8c:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
    3c90:	48 8d 35 29 85 00 00 	lea    rsi,[rip+0x8529]        # c1c0 <CSWTCH.3+0x100>
    3c97:	e8 24 1f 00 00       	call   5bc0 <ft_strcmp>
    3c9c:	85 c0                	test   eax,eax
    3c9e:	75 20                	jne    3cc0 <try_parse_attributes+0x100>
    3ca0:	4c 89 e6             	mov    rsi,r12
    3ca3:	48 89 ef             	mov    rdi,rbp
    3ca6:	5d                   	pop    rbp
    3ca7:	41 5c                	pop    r12
    3ca9:	41 5d                	pop    r13
    3cab:	e9 c0 07 00 00       	jmp    4470 <try_add_cylinder_to_world>
    3cb0:	4c 89 e6             	mov    rsi,r12
    3cb3:	48 89 ef             	mov    rdi,rbp
    3cb6:	5d                   	pop    rbp
    3cb7:	41 5c                	pop    r12
    3cb9:	41 5d                	pop    r13
    3cbb:	e9 e0 04 00 00       	jmp    41a0 <try_add_plane_to_world>
    3cc0:	5d                   	pop    rbp
    3cc1:	31 c0                	xor    eax,eax
    3cc3:	41 5c                	pop    r12
    3cc5:	41 5d                	pop    r13
    3cc7:	c3                   	ret    
    3cc8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    3ccf:	00 

0000000000003cd0 <try_parse_file>:
    3cd0:	f3 0f 1e fa          	endbr64 
    3cd4:	41 57                	push   r15
    3cd6:	31 c0                	xor    eax,eax
    3cd8:	45 31 ff             	xor    r15d,r15d
    3cdb:	41 56                	push   r14
    3cdd:	49 89 f6             	mov    r14,rsi
    3ce0:	31 f6                	xor    esi,esi
    3ce2:	41 55                	push   r13
    3ce4:	41 54                	push   r12
    3ce6:	55                   	push   rbp
    3ce7:	53                   	push   rbx
    3ce8:	48 89 d3             	mov    rbx,rdx
    3ceb:	48 83 ec 08          	sub    rsp,0x8
    3cef:	e8 1c eb ff ff       	call   2810 <open@plt>
    3cf4:	41 89 c5             	mov    r13d,eax
    3cf7:	83 f8 ff             	cmp    eax,0xffffffff
    3cfa:	74 65                	je     3d61 <try_parse_file+0x91>
    3cfc:	44 89 ef             	mov    edi,r13d
    3cff:	e8 ac 28 00 00       	call   65b0 <get_next_line>
    3d04:	48 89 c5             	mov    rbp,rax
    3d07:	48 85 c0             	test   rax,rax
    3d0a:	0f 84 8c 00 00 00    	je     3d9c <try_parse_file+0xcc>
    3d10:	48 89 c7             	mov    rdi,rax
    3d13:	e8 48 1e 00 00       	call   5b60 <ft_strlen>
    3d18:	be 20 00 00 00       	mov    esi,0x20
    3d1d:	48 89 ef             	mov    rdi,rbp
    3d20:	c6 44 05 ff 00       	mov    BYTE PTR [rbp+rax*1-0x1],0x0
    3d25:	e8 c6 23 00 00       	call   60f0 <ft_split>
    3d2a:	48 83 38 00          	cmp    QWORD PTR [rax],0x0
    3d2e:	49 89 c4             	mov    r12,rax
    3d31:	74 45                	je     3d78 <try_parse_file+0xa8>
    3d33:	48 89 da             	mov    rdx,rbx
    3d36:	4c 89 f6             	mov    rsi,r14
    3d39:	48 89 c7             	mov    rdi,rax
    3d3c:	e8 7f fe ff ff       	call   3bc0 <try_parse_attributes>
    3d41:	4c 89 e7             	mov    rdi,r12
    3d44:	41 89 c7             	mov    r15d,eax
    3d47:	e8 54 25 00 00       	call   62a0 <clear_words>
    3d4c:	48 89 ef             	mov    rdi,rbp
    3d4f:	e8 6c e8 ff ff       	call   25c0 <free@plt>
    3d54:	45 84 ff             	test   r15b,r15b
    3d57:	75 a3                	jne    3cfc <try_parse_file+0x2c>
    3d59:	44 89 ef             	mov    edi,r13d
    3d5c:	e8 0f e7 ff ff       	call   2470 <close@plt>
    3d61:	48 83 c4 08          	add    rsp,0x8
    3d65:	44 89 f8             	mov    eax,r15d
    3d68:	5b                   	pop    rbx
    3d69:	5d                   	pop    rbp
    3d6a:	41 5c                	pop    r12
    3d6c:	41 5d                	pop    r13
    3d6e:	41 5e                	pop    r14
    3d70:	41 5f                	pop    r15
    3d72:	c3                   	ret    
    3d73:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    3d78:	48 89 c7             	mov    rdi,rax
    3d7b:	e8 20 25 00 00       	call   62a0 <clear_words>
    3d80:	48 89 ef             	mov    rdi,rbp
    3d83:	e8 38 e8 ff ff       	call   25c0 <free@plt>
    3d88:	44 89 ef             	mov    edi,r13d
    3d8b:	e8 20 28 00 00       	call   65b0 <get_next_line>
    3d90:	48 89 c5             	mov    rbp,rax
    3d93:	48 85 c0             	test   rax,rax
    3d96:	0f 85 74 ff ff ff    	jne    3d10 <try_parse_file+0x40>
    3d9c:	41 bf 01 00 00 00    	mov    r15d,0x1
    3da2:	eb b5                	jmp    3d59 <try_parse_file+0x89>
    3da4:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    3dab:	00 00 00 00 
    3daf:	90                   	nop

0000000000003db0 <try_parse>:
    3db0:	f3 0f 1e fa          	endbr64 
    3db4:	83 ff 02             	cmp    edi,0x2
    3db7:	74 07                	je     3dc0 <try_parse+0x10>
    3db9:	31 c0                	xor    eax,eax
    3dbb:	c3                   	ret    
    3dbc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    3dc0:	41 56                	push   r14
    3dc2:	41 55                	push   r13
    3dc4:	49 89 f5             	mov    r13,rsi
    3dc7:	41 54                	push   r12
    3dc9:	55                   	push   rbp
    3dca:	53                   	push   rbx
    3dcb:	48 8b 5e 08          	mov    rbx,QWORD PTR [rsi+0x8]
    3dcf:	80 3b 00             	cmp    BYTE PTR [rbx],0x0
    3dd2:	74 74                	je     3e48 <try_parse+0x98>
    3dd4:	49 89 d4             	mov    r12,rdx
    3dd7:	49 89 ce             	mov    r14,rcx
    3dda:	48 8d 2d cf 83 00 00 	lea    rbp,[rip+0x83cf]        # c1b0 <CSWTCH.3+0xf0>
    3de1:	eb 0e                	jmp    3df1 <try_parse+0x41>
    3de3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    3de8:	48 83 c3 01          	add    rbx,0x1
    3dec:	80 3b 00             	cmp    BYTE PTR [rbx],0x0
    3def:	74 57                	je     3e48 <try_parse+0x98>
    3df1:	48 89 ee             	mov    rsi,rbp
    3df4:	48 89 df             	mov    rdi,rbx
    3df7:	e8 c4 1d 00 00       	call   5bc0 <ft_strcmp>
    3dfc:	85 c0                	test   eax,eax
    3dfe:	75 e8                	jne    3de8 <try_parse+0x38>
    3e00:	4c 89 e7             	mov    rdi,r12
    3e03:	e8 08 19 00 00       	call   5710 <init_world>
    3e08:	49 8b 7d 08          	mov    rdi,QWORD PTR [r13+0x8]
    3e0c:	4c 89 f2             	mov    rdx,r14
    3e0f:	4c 89 e6             	mov    rsi,r12
    3e12:	e8 b9 fe ff ff       	call   3cd0 <try_parse_file>
    3e17:	84 c0                	test   al,al
    3e19:	74 25                	je     3e40 <try_parse+0x90>
    3e1b:	41 80 bc 24 80 00 00 	cmp    BYTE PTR [r12+0x80],0x0
    3e22:	00 00 
    3e24:	74 1a                	je     3e40 <try_parse+0x90>
    3e26:	41 80 7c 24 50 00    	cmp    BYTE PTR [r12+0x50],0x0
    3e2c:	74 12                	je     3e40 <try_parse+0x90>
    3e2e:	41 0f b6 84 24 c0 00 	movzx  eax,BYTE PTR [r12+0xc0]
    3e35:	00 00 
    3e37:	84 c0                	test   al,al
    3e39:	75 0f                	jne    3e4a <try_parse+0x9a>
    3e3b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    3e40:	4c 89 e7             	mov    rdi,r12
    3e43:	e8 f8 18 00 00       	call   5740 <destroy_world>
    3e48:	31 c0                	xor    eax,eax
    3e4a:	5b                   	pop    rbx
    3e4b:	5d                   	pop    rbp
    3e4c:	41 5c                	pop    r12
    3e4e:	41 5d                	pop    r13
    3e50:	41 5e                	pop    r14
    3e52:	c3                   	ret    
    3e53:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    3e5a:	00 00 00 
    3e5d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000003e60 <try_parse_vector3>:
    3e60:	f3 0f 1e fa          	endbr64 
    3e64:	41 55                	push   r13
    3e66:	41 54                	push   r12
    3e68:	55                   	push   rbp
    3e69:	48 89 f5             	mov    rbp,rsi
    3e6c:	be 2c 00 00 00       	mov    esi,0x2c
    3e71:	53                   	push   rbx
    3e72:	48 83 ec 08          	sub    rsp,0x8
    3e76:	e8 75 22 00 00       	call   60f0 <ft_split>
    3e7b:	48 89 ee             	mov    rsi,rbp
    3e7e:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    3e81:	49 89 c4             	mov    r12,rax
    3e84:	e8 27 2b 00 00       	call   69b0 <try_atof>
    3e89:	49 8b 7c 24 08       	mov    rdi,QWORD PTR [r12+0x8]
    3e8e:	48 8d 75 04          	lea    rsi,[rbp+0x4]
    3e92:	89 c3                	mov    ebx,eax
    3e94:	e8 17 2b 00 00       	call   69b0 <try_atof>
    3e99:	49 8b 7c 24 10       	mov    rdi,QWORD PTR [r12+0x10]
    3e9e:	48 8d 75 08          	lea    rsi,[rbp+0x8]
    3ea2:	41 89 c5             	mov    r13d,eax
    3ea5:	e8 06 2b 00 00       	call   69b0 <try_atof>
    3eaa:	4c 89 e7             	mov    rdi,r12
    3ead:	89 c5                	mov    ebp,eax
    3eaf:	e8 ec 23 00 00       	call   62a0 <clear_words>
    3eb4:	89 d8                	mov    eax,ebx
    3eb6:	48 83 c4 08          	add    rsp,0x8
    3eba:	44 21 e8             	and    eax,r13d
    3ebd:	5b                   	pop    rbx
    3ebe:	21 e8                	and    eax,ebp
    3ec0:	5d                   	pop    rbp
    3ec1:	41 5c                	pop    r12
    3ec3:	41 5d                	pop    r13
    3ec5:	c3                   	ret    
    3ec6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    3ecd:	00 00 00 

0000000000003ed0 <try_parse_color>:
    3ed0:	f3 0f 1e fa          	endbr64 
    3ed4:	41 56                	push   r14
    3ed6:	41 55                	push   r13
    3ed8:	41 54                	push   r12
    3eda:	55                   	push   rbp
    3edb:	48 89 f5             	mov    rbp,rsi
    3ede:	be 2c 00 00 00       	mov    esi,0x2c
    3ee3:	53                   	push   rbx
    3ee4:	e8 07 22 00 00       	call   60f0 <ft_split>
    3ee9:	48 89 ee             	mov    rsi,rbp
    3eec:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    3eef:	49 89 c4             	mov    r12,rax
    3ef2:	e8 79 20 00 00       	call   5f70 <try_atoi>
    3ef7:	49 8b 7c 24 08       	mov    rdi,QWORD PTR [r12+0x8]
    3efc:	48 8d 75 04          	lea    rsi,[rbp+0x4]
    3f00:	89 c3                	mov    ebx,eax
    3f02:	e8 69 20 00 00       	call   5f70 <try_atoi>
    3f07:	49 8b 7c 24 10       	mov    rdi,QWORD PTR [r12+0x10]
    3f0c:	48 8d 75 08          	lea    rsi,[rbp+0x8]
    3f10:	41 89 c6             	mov    r14d,eax
    3f13:	e8 58 20 00 00       	call   5f70 <try_atoi>
    3f18:	4c 89 e7             	mov    rdi,r12
    3f1b:	41 89 c5             	mov    r13d,eax
    3f1e:	e8 7d 23 00 00       	call   62a0 <clear_words>
    3f23:	89 d8                	mov    eax,ebx
    3f25:	44 21 f0             	and    eax,r14d
    3f28:	44 20 e8             	and    al,r13b
    3f2b:	75 23                	jne    3f50 <try_parse_color+0x80>
    3f2d:	48 c7 45 00 00 00 00 	mov    QWORD PTR [rbp+0x0],0x0
    3f34:	00 
    3f35:	31 c0                	xor    eax,eax
    3f37:	c7 45 08 00 00 00 00 	mov    DWORD PTR [rbp+0x8],0x0
    3f3e:	5b                   	pop    rbx
    3f3f:	5d                   	pop    rbp
    3f40:	41 5c                	pop    r12
    3f42:	41 5d                	pop    r13
    3f44:	41 5e                	pop    r14
    3f46:	c3                   	ret    
    3f47:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    3f4e:	00 00 
    3f50:	8b 55 04             	mov    edx,DWORD PTR [rbp+0x4]
    3f53:	0b 55 00             	or     edx,DWORD PTR [rbp+0x0]
    3f56:	0b 55 08             	or     edx,DWORD PTR [rbp+0x8]
    3f59:	81 fa ff 00 00 00    	cmp    edx,0xff
    3f5f:	77 cc                	ja     3f2d <try_parse_color+0x5d>
    3f61:	eb db                	jmp    3f3e <try_parse_color+0x6e>
    3f63:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    3f6a:	00 00 00 00 
    3f6e:	66 90                	xchg   ax,ax

0000000000003f70 <is_invalid_normalized_vector3>:
    3f70:	f3 0f 1e fa          	endbr64 
    3f74:	c5 f9 d6 44 24 e8    	vmovq  QWORD PTR [rsp-0x18],xmm0
    3f7a:	c5 fa 10 44 24 e8    	vmovss xmm0,DWORD PTR [rsp-0x18]
    3f80:	b8 01 00 00 00       	mov    eax,0x1
    3f85:	c5 f9 d6 4c 24 f0    	vmovq  QWORD PTR [rsp-0x10],xmm1
    3f8b:	c5 fa 10 0d 31 82 00 	vmovss xmm1,DWORD PTR [rip+0x8231]        # c1c4 <CSWTCH.3+0x104>
    3f92:	00 
    3f93:	c5 f8 2f c1          	vcomiss xmm0,xmm1
    3f97:	76 07                	jbe    3fa0 <is_invalid_normalized_vector3+0x30>
    3f99:	c3                   	ret    
    3f9a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    3fa0:	c5 fa 10 15 78 81 00 	vmovss xmm2,DWORD PTR [rip+0x8178]        # c120 <CSWTCH.3+0x60>
    3fa7:	00 
    3fa8:	c5 f8 2f d0          	vcomiss xmm2,xmm0
    3fac:	77 eb                	ja     3f99 <is_invalid_normalized_vector3+0x29>
    3fae:	c5 fa 10 5c 24 ec    	vmovss xmm3,DWORD PTR [rsp-0x14]
    3fb4:	c5 f8 2f d9          	vcomiss xmm3,xmm1
    3fb8:	77 df                	ja     3f99 <is_invalid_normalized_vector3+0x29>
    3fba:	c5 f8 2f d3          	vcomiss xmm2,xmm3
    3fbe:	77 d9                	ja     3f99 <is_invalid_normalized_vector3+0x29>
    3fc0:	c5 fa 10 64 24 f0    	vmovss xmm4,DWORD PTR [rsp-0x10]
    3fc6:	c5 f8 2f e1          	vcomiss xmm4,xmm1
    3fca:	77 cd                	ja     3f99 <is_invalid_normalized_vector3+0x29>
    3fcc:	c5 f8 2f d4          	vcomiss xmm2,xmm4
    3fd0:	0f 97 c0             	seta   al
    3fd3:	c3                   	ret    
    3fd4:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    3fdb:	00 00 00 00 
    3fdf:	90                   	nop

0000000000003fe0 <is_invalid_ratio_in_range>:
    3fe0:	f3 0f 1e fa          	endbr64 
    3fe4:	c5 f0 57 c9          	vxorps xmm1,xmm1,xmm1
    3fe8:	b8 01 00 00 00       	mov    eax,0x1
    3fed:	c5 f8 2f c8          	vcomiss xmm1,xmm0
    3ff1:	77 0b                	ja     3ffe <is_invalid_ratio_in_range+0x1e>
    3ff3:	c5 f8 2f 05 c9 81 00 	vcomiss xmm0,DWORD PTR [rip+0x81c9]        # c1c4 <CSWTCH.3+0x104>
    3ffa:	00 
    3ffb:	0f 97 c0             	seta   al
    3ffe:	c3                   	ret    
    3fff:	90                   	nop

0000000000004000 <is_invalid_colors>:
    4000:	f3 0f 1e fa          	endbr64 
    4004:	48 89 f8             	mov    rax,rdi
    4007:	48 c1 e8 20          	shr    rax,0x20
    400b:	09 f0                	or     eax,esi
    400d:	09 f8                	or     eax,edi
    400f:	3d ff 00 00 00       	cmp    eax,0xff
    4014:	0f 97 c0             	seta   al
    4017:	c3                   	ret    
    4018:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    401f:	00 

0000000000004020 <try_add_sphere_to_world>:
    4020:	f3 0f 1e fa          	endbr64 
    4024:	4c 8d 54 24 08       	lea    r10,[rsp+0x8]
    4029:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    402d:	41 ff 72 f8          	push   QWORD PTR [r10-0x8]
    4031:	55                   	push   rbp
    4032:	48 89 e5             	mov    rbp,rsp
    4035:	41 55                	push   r13
    4037:	49 89 f5             	mov    r13,rsi
    403a:	41 54                	push   r12
    403c:	41 52                	push   r10
    403e:	53                   	push   rbx
    403f:	48 89 fb             	mov    rbx,rdi
    4042:	48 81 ec f0 00 00 00 	sub    rsp,0xf0
    4049:	e8 b2 22 00 00       	call   6300 <get_count_to_words>
    404e:	48 83 f8 04          	cmp    rax,0x4
    4052:	74 1c                	je     4070 <try_add_sphere_to_world+0x50>
    4054:	45 31 e4             	xor    r12d,r12d
    4057:	48 8d 65 e0          	lea    rsp,[rbp-0x20]
    405b:	44 89 e0             	mov    eax,r12d
    405e:	5b                   	pop    rbx
    405f:	5a                   	pop    rdx
    4060:	41 5c                	pop    r12
    4062:	41 5d                	pop    r13
    4064:	5d                   	pop    rbp
    4065:	48 8d 62 f8          	lea    rsp,[rdx-0x8]
    4069:	c3                   	ret    
    406a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    4070:	48 8b 7b 08          	mov    rdi,QWORD PTR [rbx+0x8]
    4074:	be 2c 00 00 00       	mov    esi,0x2c
    4079:	e8 c2 21 00 00       	call   6240 <get_count_words>
    407e:	48 83 f8 03          	cmp    rax,0x3
    4082:	75 d0                	jne    4054 <try_add_sphere_to_world+0x34>
    4084:	48 8b 7b 18          	mov    rdi,QWORD PTR [rbx+0x18]
    4088:	be 2c 00 00 00       	mov    esi,0x2c
    408d:	e8 ae 21 00 00       	call   6240 <get_count_words>
    4092:	48 83 f8 03          	cmp    rax,0x3
    4096:	75 bc                	jne    4054 <try_add_sphere_to_world+0x34>
    4098:	48 8b 7b 08          	mov    rdi,QWORD PTR [rbx+0x8]
    409c:	48 8d b5 50 ff ff ff 	lea    rsi,[rbp-0xb0]
    40a3:	e8 b8 fd ff ff       	call   3e60 <try_parse_vector3>
    40a8:	84 c0                	test   al,al
    40aa:	74 a8                	je     4054 <try_add_sphere_to_world+0x34>
    40ac:	48 8b 7b 10          	mov    rdi,QWORD PTR [rbx+0x10]
    40b0:	48 8d 75 c0          	lea    rsi,[rbp-0x40]
    40b4:	e8 f7 28 00 00       	call   69b0 <try_atof>
    40b9:	84 c0                	test   al,al
    40bb:	74 97                	je     4054 <try_add_sphere_to_world+0x34>
    40bd:	48 8b 7b 18          	mov    rdi,QWORD PTR [rbx+0x18]
    40c1:	48 8d b5 60 ff ff ff 	lea    rsi,[rbp-0xa0]
    40c8:	e8 03 fe ff ff       	call   3ed0 <try_parse_color>
    40cd:	41 89 c4             	mov    r12d,eax
    40d0:	84 c0                	test   al,al
    40d2:	74 80                	je     4054 <try_add_sphere_to_world+0x34>
    40d4:	c5 f9 ef c0          	vpxor  xmm0,xmm0,xmm0
    40d8:	48 8d bd f0 fe ff ff 	lea    rdi,[rbp-0x110]
    40df:	c5 f9 7f 85 40 ff ff 	vmovdqa XMMWORD PTR [rbp-0xc0],xmm0
    40e6:	ff 
    40e7:	c5 f9 ef c0          	vpxor  xmm0,xmm0,xmm0
    40eb:	c7 85 48 ff ff ff 00 	mov    DWORD PTR [rbp-0xb8],0x3f800000
    40f2:	00 80 3f 
    40f5:	c5 fa 7e 8d 48 ff ff 	vmovq  xmm1,QWORD PTR [rbp-0xb8]
    40fc:	ff 
    40fd:	e8 ee 10 00 00       	call   51f0 <get_local_basis>
    4102:	ff 75 c8             	push   QWORD PTR [rbp-0x38]
    4105:	c5 f9 6f 9d f0 fe ff 	vmovdqa xmm3,XMMWORD PTR [rbp-0x110]
    410c:	ff 
    410d:	c5 f9 6f 8d 00 ff ff 	vmovdqa xmm1,XMMWORD PTR [rbp-0x100]
    4114:	ff 
    4115:	ff 75 c0             	push   QWORD PTR [rbp-0x40]
    4118:	c5 f9 6f 95 10 ff ff 	vmovdqa xmm2,XMMWORD PTR [rbp-0xf0]
    411f:	ff 
    4120:	ff 75 b8             	push   QWORD PTR [rbp-0x48]
    4123:	ff 75 b0             	push   QWORD PTR [rbp-0x50]
    4126:	ff 75 a8             	push   QWORD PTR [rbp-0x58]
    4129:	ff 75 a0             	push   QWORD PTR [rbp-0x60]
    412c:	c5 f9 7f 9d 70 ff ff 	vmovdqa XMMWORD PTR [rbp-0x90],xmm3
    4133:	ff 
    4134:	c5 f9 7f 4d 80       	vmovdqa XMMWORD PTR [rbp-0x80],xmm1
    4139:	48 83 ec 30          	sub    rsp,0x30
    413d:	c5 f9 7f 55 90       	vmovdqa XMMWORD PTR [rbp-0x70],xmm2
    4142:	c5 fa 7f 54 24 20    	vmovdqu XMMWORD PTR [rsp+0x20],xmm2
    4148:	c5 fa 7f 4c 24 10    	vmovdqu XMMWORD PTR [rsp+0x10],xmm1
    414e:	c5 fa 7f 1c 24       	vmovdqu XMMWORD PTR [rsp],xmm3
    4153:	ff b5 68 ff ff ff    	push   QWORD PTR [rbp-0x98]
    4159:	ff b5 60 ff ff ff    	push   QWORD PTR [rbp-0xa0]
    415f:	ff b5 58 ff ff ff    	push   QWORD PTR [rbp-0xa8]
    4165:	ff b5 50 ff ff ff    	push   QWORD PTR [rbp-0xb0]
    416b:	e8 30 14 00 00       	call   55a0 <copy_construction_to_sphere>
    4170:	48 83 ec 80          	sub    rsp,0xffffffffffffff80
    4174:	48 8d b5 38 ff ff ff 	lea    rsi,[rbp-0xc8]
    417b:	49 8d bd c8 00 00 00 	lea    rdi,[r13+0xc8]
    4182:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    4189:	41 ff 95 f0 00 00 00 	call   QWORD PTR [r13+0xf0]
    4190:	e9 c2 fe ff ff       	jmp    4057 <try_add_sphere_to_world+0x37>
    4195:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    419c:	00 00 00 00 

00000000000041a0 <try_add_plane_to_world>:
    41a0:	f3 0f 1e fa          	endbr64 
    41a4:	4c 8d 54 24 08       	lea    r10,[rsp+0x8]
    41a9:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    41ad:	41 ff 72 f8          	push   QWORD PTR [r10-0x8]
    41b1:	55                   	push   rbp
    41b2:	48 89 e5             	mov    rbp,rsp
    41b5:	41 56                	push   r14
    41b7:	41 55                	push   r13
    41b9:	41 54                	push   r12
    41bb:	49 89 f4             	mov    r12,rsi
    41be:	41 52                	push   r10
    41c0:	53                   	push   rbx
    41c1:	48 89 fb             	mov    rbx,rdi
    41c4:	48 81 ec c8 00 00 00 	sub    rsp,0xc8
    41cb:	e8 30 21 00 00       	call   6300 <get_count_to_words>
    41d0:	48 83 f8 04          	cmp    rax,0x4
    41d4:	74 1a                	je     41f0 <try_add_plane_to_world+0x50>
    41d6:	45 31 ed             	xor    r13d,r13d
    41d9:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    41dd:	44 89 e8             	mov    eax,r13d
    41e0:	5b                   	pop    rbx
    41e1:	5a                   	pop    rdx
    41e2:	41 5c                	pop    r12
    41e4:	41 5d                	pop    r13
    41e6:	41 5e                	pop    r14
    41e8:	5d                   	pop    rbp
    41e9:	48 8d 62 f8          	lea    rsp,[rdx-0x8]
    41ed:	c3                   	ret    
    41ee:	66 90                	xchg   ax,ax
    41f0:	48 8b 7b 08          	mov    rdi,QWORD PTR [rbx+0x8]
    41f4:	be 2c 00 00 00       	mov    esi,0x2c
    41f9:	e8 42 20 00 00       	call   6240 <get_count_words>
    41fe:	48 83 f8 03          	cmp    rax,0x3
    4202:	75 d2                	jne    41d6 <try_add_plane_to_world+0x36>
    4204:	48 8b 7b 10          	mov    rdi,QWORD PTR [rbx+0x10]
    4208:	be 2c 00 00 00       	mov    esi,0x2c
    420d:	e8 2e 20 00 00       	call   6240 <get_count_words>
    4212:	48 83 f8 03          	cmp    rax,0x3
    4216:	75 be                	jne    41d6 <try_add_plane_to_world+0x36>
    4218:	48 8b 7b 18          	mov    rdi,QWORD PTR [rbx+0x18]
    421c:	be 2c 00 00 00       	mov    esi,0x2c
    4221:	e8 1a 20 00 00       	call   6240 <get_count_words>
    4226:	48 83 f8 03          	cmp    rax,0x3
    422a:	75 aa                	jne    41d6 <try_add_plane_to_world+0x36>
    422c:	48 8b 7b 08          	mov    rdi,QWORD PTR [rbx+0x8]
    4230:	48 8d b5 60 ff ff ff 	lea    rsi,[rbp-0xa0]
    4237:	e8 24 fc ff ff       	call   3e60 <try_parse_vector3>
    423c:	48 8b 7b 10          	mov    rdi,QWORD PTR [rbx+0x10]
    4240:	48 8d 75 a0          	lea    rsi,[rbp-0x60]
    4244:	41 89 c5             	mov    r13d,eax
    4247:	e8 14 fc ff ff       	call   3e60 <try_parse_vector3>
    424c:	48 8b 7b 18          	mov    rdi,QWORD PTR [rbx+0x18]
    4250:	48 8d b5 70 ff ff ff 	lea    rsi,[rbp-0x90]
    4257:	41 89 c6             	mov    r14d,eax
    425a:	e8 71 fc ff ff       	call   3ed0 <try_parse_color>
    425f:	89 c3                	mov    ebx,eax
    4261:	45 84 ed             	test   r13b,r13b
    4264:	0f 84 6c ff ff ff    	je     41d6 <try_add_plane_to_world+0x36>
    426a:	45 84 f6             	test   r14b,r14b
    426d:	0f 84 63 ff ff ff    	je     41d6 <try_add_plane_to_world+0x36>
    4273:	c5 fa 7e 45 a0       	vmovq  xmm0,QWORD PTR [rbp-0x60]
    4278:	c5 fa 7e 4d a8       	vmovq  xmm1,QWORD PTR [rbp-0x58]
    427d:	e8 ee fc ff ff       	call   3f70 <is_invalid_normalized_vector3>
    4282:	83 f0 01             	xor    eax,0x1
    4285:	41 89 c5             	mov    r13d,eax
    4288:	41 20 dd             	and    r13b,bl
    428b:	0f 84 45 ff ff ff    	je     41d6 <try_add_plane_to_world+0x36>
    4291:	c5 fa 7e 45 a0       	vmovq  xmm0,QWORD PTR [rbp-0x60]
    4296:	c5 fa 7e 4d a8       	vmovq  xmm1,QWORD PTR [rbp-0x58]
    429b:	e8 10 2d 00 00       	call   6fb0 <normalize_vector3>
    42a0:	48 8d bd 10 ff ff ff 	lea    rdi,[rbp-0xf0]
    42a7:	c5 f9 d6 45 a0       	vmovq  QWORD PTR [rbp-0x60],xmm0
    42ac:	c5 f9 d6 4d a8       	vmovq  QWORD PTR [rbp-0x58],xmm1
    42b1:	e8 3a 0f 00 00       	call   51f0 <get_local_basis>
    42b6:	ff 75 c8             	push   QWORD PTR [rbp-0x38]
    42b9:	c5 f9 6f 85 10 ff ff 	vmovdqa xmm0,XMMWORD PTR [rbp-0xf0]
    42c0:	ff 
    42c1:	c5 f9 6f 8d 20 ff ff 	vmovdqa xmm1,XMMWORD PTR [rbp-0xe0]
    42c8:	ff 
    42c9:	ff 75 c0             	push   QWORD PTR [rbp-0x40]
    42cc:	c5 f9 6f 95 30 ff ff 	vmovdqa xmm2,XMMWORD PTR [rbp-0xd0]
    42d3:	ff 
    42d4:	ff 75 b8             	push   QWORD PTR [rbp-0x48]
    42d7:	ff 75 b0             	push   QWORD PTR [rbp-0x50]
    42da:	c5 f9 7f 45 80       	vmovdqa XMMWORD PTR [rbp-0x80],xmm0
    42df:	c5 f9 7f 4d 90       	vmovdqa XMMWORD PTR [rbp-0x70],xmm1
    42e4:	48 83 ec 30          	sub    rsp,0x30
    42e8:	c5 f9 7f 55 a0       	vmovdqa XMMWORD PTR [rbp-0x60],xmm2
    42ed:	c5 fa 7f 54 24 20    	vmovdqu XMMWORD PTR [rsp+0x20],xmm2
    42f3:	c5 fa 7f 4c 24 10    	vmovdqu XMMWORD PTR [rsp+0x10],xmm1
    42f9:	c5 fa 7f 04 24       	vmovdqu XMMWORD PTR [rsp],xmm0
    42fe:	ff b5 78 ff ff ff    	push   QWORD PTR [rbp-0x88]
    4304:	ff b5 70 ff ff ff    	push   QWORD PTR [rbp-0x90]
    430a:	ff b5 68 ff ff ff    	push   QWORD PTR [rbp-0x98]
    4310:	ff b5 60 ff ff ff    	push   QWORD PTR [rbp-0xa0]
    4316:	e8 b5 03 00 00       	call   46d0 <copy_construction_to_plane>
    431b:	48 83 c4 70          	add    rsp,0x70
    431f:	48 8d b5 58 ff ff ff 	lea    rsi,[rbp-0xa8]
    4326:	49 8d bc 24 c8 00 00 	lea    rdi,[r12+0xc8]
    432d:	00 
    432e:	48 89 85 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rax
    4335:	41 ff 94 24 f0 00 00 	call   QWORD PTR [r12+0xf0]
    433c:	00 
    433d:	e9 97 fe ff ff       	jmp    41d9 <try_add_plane_to_world+0x39>
    4342:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    4349:	00 00 00 00 
    434d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000004350 <is_invalid_value_in_plane>:
    4350:	f3 0f 1e fa          	endbr64 
    4354:	41 55                	push   r13
    4356:	41 54                	push   r12
    4358:	55                   	push   rbp
    4359:	48 89 fd             	mov    rbp,rdi
    435c:	53                   	push   rbx
    435d:	48 89 f3             	mov    rbx,rsi
    4360:	48 83 ec 08          	sub    rsp,0x8
    4364:	48 8b 7f 08          	mov    rdi,QWORD PTR [rdi+0x8]
    4368:	e8 f3 fa ff ff       	call   3e60 <try_parse_vector3>
    436d:	48 8b 7d 10          	mov    rdi,QWORD PTR [rbp+0x10]
    4371:	48 8d 73 40          	lea    rsi,[rbx+0x40]
    4375:	41 89 c4             	mov    r12d,eax
    4378:	e8 e3 fa ff ff       	call   3e60 <try_parse_vector3>
    437d:	48 8b 7d 18          	mov    rdi,QWORD PTR [rbp+0x18]
    4381:	48 8d 73 10          	lea    rsi,[rbx+0x10]
    4385:	41 89 c5             	mov    r13d,eax
    4388:	e8 43 fb ff ff       	call   3ed0 <try_parse_color>
    438d:	45 84 e4             	test   r12b,r12b
    4390:	74 05                	je     4397 <is_invalid_value_in_plane+0x47>
    4392:	45 84 ed             	test   r13b,r13b
    4395:	75 19                	jne    43b0 <is_invalid_value_in_plane+0x60>
    4397:	48 83 c4 08          	add    rsp,0x8
    439b:	b8 01 00 00 00       	mov    eax,0x1
    43a0:	5b                   	pop    rbx
    43a1:	5d                   	pop    rbp
    43a2:	41 5c                	pop    r12
    43a4:	41 5d                	pop    r13
    43a6:	c3                   	ret    
    43a7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    43ae:	00 00 
    43b0:	c5 fa 7e 43 40       	vmovq  xmm0,QWORD PTR [rbx+0x40]
    43b5:	c5 fa 7e 4b 48       	vmovq  xmm1,QWORD PTR [rbx+0x48]
    43ba:	89 c5                	mov    ebp,eax
    43bc:	e8 af fb ff ff       	call   3f70 <is_invalid_normalized_vector3>
    43c1:	48 83 c4 08          	add    rsp,0x8
    43c5:	41 89 c0             	mov    r8d,eax
    43c8:	89 e8                	mov    eax,ebp
    43ca:	5b                   	pop    rbx
    43cb:	5d                   	pop    rbp
    43cc:	83 f0 01             	xor    eax,0x1
    43cf:	41 5c                	pop    r12
    43d1:	41 5d                	pop    r13
    43d3:	44 09 c0             	or     eax,r8d
    43d6:	c3                   	ret    
    43d7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    43de:	00 00 

00000000000043e0 <is_invalid_value_in_cylinder>:
    43e0:	f3 0f 1e fa          	endbr64 
    43e4:	55                   	push   rbp
    43e5:	48 89 fd             	mov    rbp,rdi
    43e8:	53                   	push   rbx
    43e9:	48 89 f3             	mov    rbx,rsi
    43ec:	48 83 ec 08          	sub    rsp,0x8
    43f0:	48 8b 7f 08          	mov    rdi,QWORD PTR [rdi+0x8]
    43f4:	e8 67 fa ff ff       	call   3e60 <try_parse_vector3>
    43f9:	84 c0                	test   al,al
    43fb:	75 13                	jne    4410 <is_invalid_value_in_cylinder+0x30>
    43fd:	b8 01 00 00 00       	mov    eax,0x1
    4402:	48 83 c4 08          	add    rsp,0x8
    4406:	5b                   	pop    rbx
    4407:	5d                   	pop    rbp
    4408:	c3                   	ret    
    4409:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    4410:	48 8b 7d 10          	mov    rdi,QWORD PTR [rbp+0x10]
    4414:	48 8d 73 40          	lea    rsi,[rbx+0x40]
    4418:	e8 43 fa ff ff       	call   3e60 <try_parse_vector3>
    441d:	84 c0                	test   al,al
    441f:	74 dc                	je     43fd <is_invalid_value_in_cylinder+0x1d>
    4421:	c5 fa 7e 43 40       	vmovq  xmm0,QWORD PTR [rbx+0x40]
    4426:	c5 fa 7e 4b 48       	vmovq  xmm1,QWORD PTR [rbx+0x48]
    442b:	e8 40 fb ff ff       	call   3f70 <is_invalid_normalized_vector3>
    4430:	84 c0                	test   al,al
    4432:	75 c9                	jne    43fd <is_invalid_value_in_cylinder+0x1d>
    4434:	48 8b 7d 18          	mov    rdi,QWORD PTR [rbp+0x18]
    4438:	48 8d 73 70          	lea    rsi,[rbx+0x70]
    443c:	e8 6f 25 00 00       	call   69b0 <try_atof>
    4441:	84 c0                	test   al,al
    4443:	74 b8                	je     43fd <is_invalid_value_in_cylinder+0x1d>
    4445:	48 8b 7d 20          	mov    rdi,QWORD PTR [rbp+0x20]
    4449:	48 8d 73 74          	lea    rsi,[rbx+0x74]
    444d:	e8 5e 25 00 00       	call   69b0 <try_atof>
    4452:	84 c0                	test   al,al
    4454:	74 a7                	je     43fd <is_invalid_value_in_cylinder+0x1d>
    4456:	48 8b 7d 28          	mov    rdi,QWORD PTR [rbp+0x28]
    445a:	48 8d 73 10          	lea    rsi,[rbx+0x10]
    445e:	e8 6d fa ff ff       	call   3ed0 <try_parse_color>
    4463:	83 f0 01             	xor    eax,0x1
    4466:	eb 9a                	jmp    4402 <is_invalid_value_in_cylinder+0x22>
    4468:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    446f:	00 

0000000000004470 <try_add_cylinder_to_world>:
    4470:	f3 0f 1e fa          	endbr64 
    4474:	4c 8d 54 24 08       	lea    r10,[rsp+0x8]
    4479:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    447d:	41 ff 72 f8          	push   QWORD PTR [r10-0x8]
    4481:	55                   	push   rbp
    4482:	48 89 e5             	mov    rbp,rsp
    4485:	41 54                	push   r12
    4487:	49 89 fc             	mov    r12,rdi
    448a:	41 52                	push   r10
    448c:	53                   	push   rbx
    448d:	48 89 f3             	mov    rbx,rsi
    4490:	48 81 ec f8 00 00 00 	sub    rsp,0xf8
    4497:	e8 64 1e 00 00       	call   6300 <get_count_to_words>
    449c:	48 83 f8 06          	cmp    rax,0x6
    44a0:	74 16                	je     44b8 <try_add_cylinder_to_world+0x48>
    44a2:	48 8d 65 e8          	lea    rsp,[rbp-0x18]
    44a6:	31 c0                	xor    eax,eax
    44a8:	5b                   	pop    rbx
    44a9:	5a                   	pop    rdx
    44aa:	41 5c                	pop    r12
    44ac:	5d                   	pop    rbp
    44ad:	48 8d 62 f8          	lea    rsp,[rdx-0x8]
    44b1:	c3                   	ret    
    44b2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    44b8:	49 8b 7c 24 08       	mov    rdi,QWORD PTR [r12+0x8]
    44bd:	be 2c 00 00 00       	mov    esi,0x2c
    44c2:	e8 79 1d 00 00       	call   6240 <get_count_words>
    44c7:	48 83 f8 03          	cmp    rax,0x3
    44cb:	75 d5                	jne    44a2 <try_add_cylinder_to_world+0x32>
    44cd:	49 8b 7c 24 10       	mov    rdi,QWORD PTR [r12+0x10]
    44d2:	be 2c 00 00 00       	mov    esi,0x2c
    44d7:	e8 64 1d 00 00       	call   6240 <get_count_words>
    44dc:	48 83 f8 03          	cmp    rax,0x3
    44e0:	75 c0                	jne    44a2 <try_add_cylinder_to_world+0x32>
    44e2:	49 8b 7c 24 28       	mov    rdi,QWORD PTR [r12+0x28]
    44e7:	be 2c 00 00 00       	mov    esi,0x2c
    44ec:	e8 4f 1d 00 00       	call   6240 <get_count_words>
    44f1:	48 83 f8 03          	cmp    rax,0x3
    44f5:	75 ab                	jne    44a2 <try_add_cylinder_to_world+0x32>
    44f7:	48 8d b5 50 ff ff ff 	lea    rsi,[rbp-0xb0]
    44fe:	4c 89 e7             	mov    rdi,r12
    4501:	e8 da fe ff ff       	call   43e0 <is_invalid_value_in_cylinder>
    4506:	84 c0                	test   al,al
    4508:	75 98                	jne    44a2 <try_add_cylinder_to_world+0x32>
    450a:	c5 fa 7e 45 90       	vmovq  xmm0,QWORD PTR [rbp-0x70]
    450f:	c5 fa 7e 4d 98       	vmovq  xmm1,QWORD PTR [rbp-0x68]
    4514:	e8 97 2a 00 00       	call   6fb0 <normalize_vector3>
    4519:	48 8d bd f0 fe ff ff 	lea    rdi,[rbp-0x110]
    4520:	c5 f9 d6 45 90       	vmovq  QWORD PTR [rbp-0x70],xmm0
    4525:	c5 f9 d6 4d 98       	vmovq  QWORD PTR [rbp-0x68],xmm1
    452a:	e8 c1 0c 00 00       	call   51f0 <get_local_basis>
    452f:	ff 75 c8             	push   QWORD PTR [rbp-0x38]
    4532:	c5 f9 6f 85 f0 fe ff 	vmovdqa xmm0,XMMWORD PTR [rbp-0x110]
    4539:	ff 
    453a:	c5 f9 6f 8d 00 ff ff 	vmovdqa xmm1,XMMWORD PTR [rbp-0x100]
    4541:	ff 
    4542:	ff 75 c0             	push   QWORD PTR [rbp-0x40]
    4545:	c5 f9 6f 95 10 ff ff 	vmovdqa xmm2,XMMWORD PTR [rbp-0xf0]
    454c:	ff 
    454d:	ff 75 b8             	push   QWORD PTR [rbp-0x48]
    4550:	ff 75 b0             	push   QWORD PTR [rbp-0x50]
    4553:	ff 75 a8             	push   QWORD PTR [rbp-0x58]
    4556:	ff 75 a0             	push   QWORD PTR [rbp-0x60]
    4559:	c5 f9 7f 85 70 ff ff 	vmovdqa XMMWORD PTR [rbp-0x90],xmm0
    4560:	ff 
    4561:	c5 f9 7f 4d 80       	vmovdqa XMMWORD PTR [rbp-0x80],xmm1
    4566:	48 83 ec 30          	sub    rsp,0x30
    456a:	c5 f9 7f 55 90       	vmovdqa XMMWORD PTR [rbp-0x70],xmm2
    456f:	c5 fa 7f 54 24 20    	vmovdqu XMMWORD PTR [rsp+0x20],xmm2
    4575:	c5 fa 7f 4c 24 10    	vmovdqu XMMWORD PTR [rsp+0x10],xmm1
    457b:	c5 fa 7f 04 24       	vmovdqu XMMWORD PTR [rsp],xmm0
    4580:	ff b5 68 ff ff ff    	push   QWORD PTR [rbp-0x98]
    4586:	ff b5 60 ff ff ff    	push   QWORD PTR [rbp-0xa0]
    458c:	ff b5 58 ff ff ff    	push   QWORD PTR [rbp-0xa8]
    4592:	ff b5 50 ff ff ff    	push   QWORD PTR [rbp-0xb0]
    4598:	e8 03 f0 ff ff       	call   35a0 <copy_construction_to_cylinder>
    459d:	48 83 ec 80          	sub    rsp,0xffffffffffffff80
    45a1:	48 8d b5 48 ff ff ff 	lea    rsi,[rbp-0xb8]
    45a8:	48 8d bb c8 00 00 00 	lea    rdi,[rbx+0xc8]
    45af:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
    45b6:	ff 93 f0 00 00 00    	call   QWORD PTR [rbx+0xf0]
    45bc:	48 8d 65 e8          	lea    rsp,[rbp-0x18]
    45c0:	b8 01 00 00 00       	mov    eax,0x1
    45c5:	5b                   	pop    rbx
    45c6:	5a                   	pop    rdx
    45c7:	41 5c                	pop    r12
    45c9:	5d                   	pop    rbp
    45ca:	48 8d 62 f8          	lea    rsp,[rdx-0x8]
    45ce:	c3                   	ret    
    45cf:	90                   	nop

00000000000045d0 <delete_plane>:
    45d0:	f3 0f 1e fa          	endbr64 
    45d4:	e9 e7 df ff ff       	jmp    25c0 <free@plt>
    45d9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000045e0 <is_hit_plane>:
    45e0:	f3 0f 1e fa          	endbr64 
    45e4:	41 56                	push   r14
    45e6:	55                   	push   rbp
    45e7:	48 89 f5             	mov    rbp,rsi
    45ea:	53                   	push   rbx
    45eb:	48 89 fb             	mov    rbx,rdi
    45ee:	48 83 ec 20          	sub    rsp,0x20
    45f2:	c5 fa 7e 07          	vmovq  xmm0,QWORD PTR [rdi]
    45f6:	c5 fa 7e 4f 08       	vmovq  xmm1,QWORD PTR [rdi+0x8]
    45fb:	c5 f9 6f 67 40       	vmovdqa xmm4,XMMWORD PTR [rdi+0x40]
    4600:	c5 fa 7e 54 24 40    	vmovq  xmm2,QWORD PTR [rsp+0x40]
    4606:	c5 fa 7e 5c 24 48    	vmovq  xmm3,QWORD PTR [rsp+0x48]
    460c:	c5 f9 7f 24 24       	vmovdqa XMMWORD PTR [rsp],xmm4
    4611:	e8 ca 2a 00 00       	call   70e0 <subtract_vector3>
    4616:	c5 f9 6f d0          	vmovdqa xmm2,xmm0
    461a:	c5 f9 6f d9          	vmovdqa xmm3,xmm1
    461e:	c5 fa 7e 04 24       	vmovq  xmm0,QWORD PTR [rsp]
    4623:	c5 fa 7e 4c 24 08    	vmovq  xmm1,QWORD PTR [rsp+0x8]
    4629:	e8 72 2b 00 00       	call   71a0 <dot_product3x3>
    462e:	c5 fa 7e 4c 24 08    	vmovq  xmm1,QWORD PTR [rsp+0x8]
    4634:	c5 fa 7e 54 24 50    	vmovq  xmm2,QWORD PTR [rsp+0x50]
    463a:	c5 fa 7e 5c 24 58    	vmovq  xmm3,QWORD PTR [rsp+0x58]
    4640:	c4 c1 79 7e c6       	vmovd  r14d,xmm0
    4645:	c5 fa 7e 04 24       	vmovq  xmm0,QWORD PTR [rsp]
    464a:	e8 51 2b 00 00       	call   71a0 <dot_product3x3>
    464f:	c5 f0 57 c9          	vxorps xmm1,xmm1,xmm1
    4653:	c5 f8 2e c1          	vucomiss xmm0,xmm1
    4657:	7a 07                	jp     4660 <is_hit_plane+0x80>
    4659:	b8 00 00 00 00       	mov    eax,0x0
    465e:	74 5e                	je     46be <is_hit_plane+0xde>
    4660:	c4 c1 79 6e ee       	vmovd  xmm5,r14d
    4665:	31 c0                	xor    eax,eax
    4667:	c5 d2 5e c0          	vdivss xmm0,xmm5,xmm0
    466b:	c5 f8 2f c8          	vcomiss xmm1,xmm0
    466f:	73 4d                	jae    46be <is_hit_plane+0xde>
    4671:	c5 f8 2f 45 30       	vcomiss xmm0,DWORD PTR [rbp+0x30]
    4676:	73 46                	jae    46be <is_hit_plane+0xde>
    4678:	ff 74 24 58          	push   QWORD PTR [rsp+0x58]
    467c:	ff 74 24 58          	push   QWORD PTR [rsp+0x58]
    4680:	ff 74 24 58          	push   QWORD PTR [rsp+0x58]
    4684:	ff 74 24 58          	push   QWORD PTR [rsp+0x58]
    4688:	c5 fa 11 45 30       	vmovss DWORD PTR [rbp+0x30],xmm0
    468d:	e8 2e 01 00 00       	call   47c0 <get_point_in_ray>
    4692:	c5 f9 6f 74 24 20    	vmovdqa xmm6,XMMWORD PTR [rsp+0x20]
    4698:	c5 f9 6f 7b 10       	vmovdqa xmm7,XMMWORD PTR [rbx+0x10]
    469d:	48 89 5d 38          	mov    QWORD PTR [rbp+0x38],rbx
    46a1:	c5 f9 d6 45 00       	vmovq  QWORD PTR [rbp+0x0],xmm0
    46a6:	48 83 c4 20          	add    rsp,0x20
    46aa:	b8 01 00 00 00       	mov    eax,0x1
    46af:	c5 f9 d6 4d 08       	vmovq  QWORD PTR [rbp+0x8],xmm1
    46b4:	c5 f9 7f 75 10       	vmovdqa XMMWORD PTR [rbp+0x10],xmm6
    46b9:	c5 f9 7f 7d 20       	vmovdqa XMMWORD PTR [rbp+0x20],xmm7
    46be:	48 83 c4 20          	add    rsp,0x20
    46c2:	5b                   	pop    rbx
    46c3:	5d                   	pop    rbp
    46c4:	41 5e                	pop    r14
    46c6:	c3                   	ret    
    46c7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    46ce:	00 00 

00000000000046d0 <copy_construction_to_plane>:
    46d0:	f3 0f 1e fa          	endbr64 
    46d4:	55                   	push   rbp
    46d5:	bf 70 00 00 00       	mov    edi,0x70
    46da:	48 89 e5             	mov    rbp,rsp
    46dd:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    46e1:	e8 5a de ff ff       	call   2540 <malloc@plt>
    46e6:	c5 f9 6f 55 10       	vmovdqa xmm2,XMMWORD PTR [rbp+0x10]
    46eb:	c5 f9 6f 5d 20       	vmovdqa xmm3,XMMWORD PTR [rbp+0x20]
    46f0:	48 8d 0d e9 fe ff ff 	lea    rcx,[rip+0xfffffffffffffee9]        # 45e0 <is_hit_plane>
    46f7:	c4 e1 f9 6e c1       	vmovq  xmm0,rcx
    46fc:	c5 f9 6f 65 30       	vmovdqa xmm4,XMMWORD PTR [rbp+0x30]
    4701:	c5 f9 6f 6d 40       	vmovdqa xmm5,XMMWORD PTR [rbp+0x40]
    4706:	48 8d 15 c3 fe ff ff 	lea    rdx,[rip+0xfffffffffffffec3]        # 45d0 <delete_plane>
    470d:	c5 f9 6f 75 50       	vmovdqa xmm6,XMMWORD PTR [rbp+0x50]
    4712:	c5 fa 7e 3d 7e c8 00 	vmovq  xmm7,QWORD PTR [rip+0xc87e]        # 10f98 <_GLOBAL_OFFSET_TABLE_+0x228>
    4719:	00 
    471a:	c4 63 f9 22 c2 01    	vpinsrq xmm8,xmm0,rdx,0x1
    4720:	c5 f9 7f 10          	vmovdqa XMMWORD PTR [rax],xmm2
    4724:	c4 e3 c1 22 0d 72 c8 	vpinsrq xmm1,xmm7,QWORD PTR [rip+0xc872],0x1        # 10fa0 <_GLOBAL_OFFSET_TABLE_+0x230>
    472b:	00 00 01 
    472e:	c5 f9 7f 58 10       	vmovdqa XMMWORD PTR [rax+0x10],xmm3
    4733:	c5 f9 7f 60 20       	vmovdqa XMMWORD PTR [rax+0x20],xmm4
    4738:	c4 63 3d 38 c9 01    	vinserti128 ymm9,ymm8,xmm1,0x1
    473e:	c5 f9 7f 68 30       	vmovdqa XMMWORD PTR [rax+0x30],xmm5
    4743:	c5 f9 7f 70 40       	vmovdqa XMMWORD PTR [rax+0x40],xmm6
    4748:	c5 7e 7f 48 50       	vmovdqu YMMWORD PTR [rax+0x50],ymm9
    474d:	c5 f8 77             	vzeroupper 
    4750:	c9                   	leave  
    4751:	c3                   	ret    
    4752:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    4759:	00 00 00 
    475c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000004760 <update_scale_diameter_plane>:
    4760:	f3 0f 1e fa          	endbr64 
    4764:	c3                   	ret    
    4765:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    476c:	00 00 00 00 

0000000000004770 <update_scale_height_plane>:
    4770:	f3 0f 1e fa          	endbr64 
    4774:	c3                   	ret    
    4775:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    477c:	00 00 00 
    477f:	90                   	nop

0000000000004780 <get_ray>:
    4780:	f3 0f 1e fa          	endbr64 
    4784:	c5 f9 d6 44 24 e8    	vmovq  QWORD PTR [rsp-0x18],xmm0
    478a:	48 89 f8             	mov    rax,rdi
    478d:	c5 f9 d6 4c 24 f0    	vmovq  QWORD PTR [rsp-0x10],xmm1
    4793:	c5 f9 6f 64 24 e8    	vmovdqa xmm4,XMMWORD PTR [rsp-0x18]
    4799:	c5 f9 d6 54 24 d8    	vmovq  QWORD PTR [rsp-0x28],xmm2
    479f:	c5 f9 d6 5c 24 e0    	vmovq  QWORD PTR [rsp-0x20],xmm3
    47a5:	c5 f9 6f 6c 24 d8    	vmovdqa xmm5,XMMWORD PTR [rsp-0x28]
    47ab:	c5 f9 7f 27          	vmovdqa XMMWORD PTR [rdi],xmm4
    47af:	c5 f9 7f 6f 10       	vmovdqa XMMWORD PTR [rdi+0x10],xmm5
    47b4:	c3                   	ret    
    47b5:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    47bc:	00 00 00 00 

00000000000047c0 <get_point_in_ray>:
    47c0:	f3 0f 1e fa          	endbr64 
    47c4:	48 83 ec 28          	sub    rsp,0x28
    47c8:	c5 f8 28 d0          	vmovaps xmm2,xmm0
    47cc:	c5 fa 7e 4c 24 48    	vmovq  xmm1,QWORD PTR [rsp+0x48]
    47d2:	c5 fa 7e 44 24 40    	vmovq  xmm0,QWORD PTR [rsp+0x40]
    47d8:	e8 43 29 00 00       	call   7120 <multiply_vector3>
    47dd:	c5 f9 6f d0          	vmovdqa xmm2,xmm0
    47e1:	c5 f9 6f d9          	vmovdqa xmm3,xmm1
    47e5:	c5 fa 7e 44 24 30    	vmovq  xmm0,QWORD PTR [rsp+0x30]
    47eb:	c5 fa 7e 4c 24 38    	vmovq  xmm1,QWORD PTR [rsp+0x38]
    47f1:	48 83 c4 28          	add    rsp,0x28
    47f5:	e9 a6 28 00 00       	jmp    70a0 <add_vector3>
    47fa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004800 <get_ray_mappied_to_pixel>:
    4800:	f3 0f 1e fa          	endbr64 
    4804:	41 54                	push   r12
    4806:	49 89 fc             	mov    r12,rdi
    4809:	48 83 ec 60          	sub    rsp,0x60
    480d:	c5 fa 11 44 24 0c    	vmovss DWORD PTR [rsp+0xc],xmm0
    4813:	c5 f8 28 c1          	vmovaps xmm0,xmm1
    4817:	e8 04 12 00 00       	call   5a20 <get_radian>
    481c:	e8 6f dc ff ff       	call   2490 <tanf@plt>
    4821:	c5 fa 7e 8c 24 98 00 	vmovq  xmm1,QWORD PTR [rsp+0x98]
    4828:	00 00 
    482a:	c5 f8 28 d0          	vmovaps xmm2,xmm0
    482e:	c5 fa 7e 84 24 90 00 	vmovq  xmm0,QWORD PTR [rsp+0x90]
    4835:	00 00 
    4837:	e8 e4 28 00 00       	call   7120 <multiply_vector3>
    483c:	c5 f9 d6 44 24 10    	vmovq  QWORD PTR [rsp+0x10],xmm0
    4842:	c5 fa 10 44 24 0c    	vmovss xmm0,DWORD PTR [rsp+0xc]
    4848:	c5 f9 d6 4c 24 18    	vmovq  QWORD PTR [rsp+0x18],xmm1
    484e:	e8 cd 11 00 00       	call   5a20 <get_radian>
    4853:	e8 38 dc ff ff       	call   2490 <tanf@plt>
    4858:	c5 fa 7e 8c 24 88 00 	vmovq  xmm1,QWORD PTR [rsp+0x88]
    485f:	00 00 
    4861:	c5 f8 28 d0          	vmovaps xmm2,xmm0
    4865:	c5 fa 7e 84 24 80 00 	vmovq  xmm0,QWORD PTR [rsp+0x80]
    486c:	00 00 
    486e:	e8 ad 28 00 00       	call   7120 <multiply_vector3>
    4873:	c5 f9 6f d0          	vmovdqa xmm2,xmm0
    4877:	c5 f9 6f d9          	vmovdqa xmm3,xmm1
    487b:	c5 fa 7e 44 24 10    	vmovq  xmm0,QWORD PTR [rsp+0x10]
    4881:	c5 fa 7e 4c 24 18    	vmovq  xmm1,QWORD PTR [rsp+0x18]
    4887:	e8 14 28 00 00       	call   70a0 <add_vector3>
    488c:	c5 f9 6f d0          	vmovdqa xmm2,xmm0
    4890:	c5 f9 6f d9          	vmovdqa xmm3,xmm1
    4894:	c5 fa 7e 84 24 a0 00 	vmovq  xmm0,QWORD PTR [rsp+0xa0]
    489b:	00 00 
    489d:	c5 fa 7e 8c 24 a8 00 	vmovq  xmm1,QWORD PTR [rsp+0xa8]
    48a4:	00 00 
    48a6:	e8 f5 27 00 00       	call   70a0 <add_vector3>
    48ab:	e8 00 27 00 00       	call   6fb0 <normalize_vector3>
    48b0:	4c 89 e7             	mov    rdi,r12
    48b3:	c5 f9 6f d0          	vmovdqa xmm2,xmm0
    48b7:	c5 f9 6f d9          	vmovdqa xmm3,xmm1
    48bb:	c5 fa 7e 44 24 70    	vmovq  xmm0,QWORD PTR [rsp+0x70]
    48c1:	c5 fa 7e 4c 24 78    	vmovq  xmm1,QWORD PTR [rsp+0x78]
    48c7:	e8 b4 fe ff ff       	call   4780 <get_ray>
    48cc:	48 83 c4 60          	add    rsp,0x60
    48d0:	4c 89 e0             	mov    rax,r12
    48d3:	41 5c                	pop    r12
    48d5:	c3                   	ret    
    48d6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    48dd:	00 00 00 

00000000000048e0 <load_pixel_color>:
    48e0:	f3 0f 1e fa          	endbr64 
    48e4:	4c 8d 54 24 08       	lea    r10,[rsp+0x8]
    48e9:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    48ed:	41 ff 72 f8          	push   QWORD PTR [r10-0x8]
    48f1:	55                   	push   rbp
    48f2:	48 89 e5             	mov    rbp,rsp
    48f5:	41 57                	push   r15
    48f7:	41 56                	push   r14
    48f9:	4c 8d 75 90          	lea    r14,[rbp-0x70]
    48fd:	41 55                	push   r13
    48ff:	49 89 fd             	mov    r13,rdi
    4902:	48 8d bd 10 ff ff ff 	lea    rdi,[rbp-0xf0]
    4909:	41 54                	push   r12
    490b:	4d 89 d4             	mov    r12,r10
    490e:	4d 8d bd c8 00 00 00 	lea    r15,[r13+0xc8]
    4915:	41 52                	push   r10
    4917:	53                   	push   rbx
    4918:	31 db                	xor    ebx,ebx
    491a:	48 81 ec c0 00 00 00 	sub    rsp,0xc0
    4921:	e8 fa ef ff ff       	call   3920 <get_hit_record>
    4926:	c5 f9 6f 95 10 ff ff 	vmovdqa xmm2,XMMWORD PTR [rbp-0xf0]
    492d:	ff 
    492e:	c5 f9 6f 9d 20 ff ff 	vmovdqa xmm3,XMMWORD PTR [rbp-0xe0]
    4935:	ff 
    4936:	c5 f9 6f a5 30 ff ff 	vmovdqa xmm4,XMMWORD PTR [rbp-0xd0]
    493d:	ff 
    493e:	c5 f9 6f ad 40 ff ff 	vmovdqa xmm5,XMMWORD PTR [rbp-0xc0]
    4945:	ff 
    4946:	49 83 bd d0 00 00 00 	cmp    QWORD PTR [r13+0xd0],0x0
    494d:	00 
    494e:	c5 f9 7f 55 90       	vmovdqa XMMWORD PTR [rbp-0x70],xmm2
    4953:	c5 f9 7f 5d a0       	vmovdqa XMMWORD PTR [rbp-0x60],xmm3
    4958:	c5 f9 7f 65 b0       	vmovdqa XMMWORD PTR [rbp-0x50],xmm4
    495d:	c5 f9 7f 6d c0       	vmovdqa XMMWORD PTR [rbp-0x40],xmm5
    4962:	74 3f                	je     49a3 <load_pixel_color+0xc3>
    4964:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    4968:	48 89 de             	mov    rsi,rbx
    496b:	4c 89 ff             	mov    rdi,r15
    496e:	48 83 c3 01          	add    rbx,0x1
    4972:	e8 09 25 00 00       	call   6e80 <get_element_or_null_in_list>
    4977:	4c 89 f6             	mov    rsi,r14
    497a:	48 8b 00             	mov    rax,QWORD PTR [rax]
    497d:	41 ff 74 24 18       	push   QWORD PTR [r12+0x18]
    4982:	41 ff 74 24 10       	push   QWORD PTR [r12+0x10]
    4987:	41 ff 74 24 08       	push   QWORD PTR [r12+0x8]
    498c:	48 89 c7             	mov    rdi,rax
    498f:	41 ff 34 24          	push   QWORD PTR [r12]
    4993:	ff 50 50             	call   QWORD PTR [rax+0x50]
    4996:	48 83 c4 20          	add    rsp,0x20
    499a:	49 39 9d d0 00 00 00 	cmp    QWORD PTR [r13+0xd0],rbx
    49a1:	77 c5                	ja     4968 <load_pixel_color+0x88>
    49a3:	c5 fa 10 45 c0       	vmovss xmm0,DWORD PTR [rbp-0x40]
    49a8:	c5 f8 2e 05 18 78 00 	vucomiss xmm0,DWORD PTR [rip+0x7818]        # c1c8 <CSWTCH.3+0x108>
    49af:	00 
    49b0:	7a 06                	jp     49b8 <load_pixel_color+0xd8>
    49b2:	0f 84 58 01 00 00    	je     4b10 <load_pixel_color+0x230>
    49b8:	ff 75 c8             	push   QWORD PTR [rbp-0x38]
    49bb:	ff 75 c0             	push   QWORD PTR [rbp-0x40]
    49be:	ff 75 b8             	push   QWORD PTR [rbp-0x48]
    49c1:	ff 75 b0             	push   QWORD PTR [rbp-0x50]
    49c4:	ff 75 a8             	push   QWORD PTR [rbp-0x58]
    49c7:	ff 75 a0             	push   QWORD PTR [rbp-0x60]
    49ca:	ff 75 98             	push   QWORD PTR [rbp-0x68]
    49cd:	ff 75 90             	push   QWORD PTR [rbp-0x70]
    49d0:	41 ff 75 78          	push   QWORD PTR [r13+0x78]
    49d4:	41 ff 75 70          	push   QWORD PTR [r13+0x70]
    49d8:	41 ff 75 68          	push   QWORD PTR [r13+0x68]
    49dc:	41 ff 75 60          	push   QWORD PTR [r13+0x60]
    49e0:	e8 fb 10 00 00       	call   5ae0 <load_ambient_color>
    49e5:	48 83 c4 60          	add    rsp,0x60
    49e9:	ff 75 c8             	push   QWORD PTR [rbp-0x38]
    49ec:	ff 75 c0             	push   QWORD PTR [rbp-0x40]
    49ef:	ff 75 b8             	push   QWORD PTR [rbp-0x48]
    49f2:	ff 75 b0             	push   QWORD PTR [rbp-0x50]
    49f5:	ff 75 a8             	push   QWORD PTR [rbp-0x58]
    49f8:	ff 75 a0             	push   QWORD PTR [rbp-0x60]
    49fb:	ff 75 98             	push   QWORD PTR [rbp-0x68]
    49fe:	ff 75 90             	push   QWORD PTR [rbp-0x70]
    4a01:	41 ff b5 b8 00 00 00 	push   QWORD PTR [r13+0xb8]
    4a08:	41 ff b5 b0 00 00 00 	push   QWORD PTR [r13+0xb0]
    4a0f:	41 ff b5 a8 00 00 00 	push   QWORD PTR [r13+0xa8]
    4a16:	41 ff b5 a0 00 00 00 	push   QWORD PTR [r13+0xa0]
    4a1d:	41 ff b5 98 00 00 00 	push   QWORD PTR [r13+0x98]
    4a24:	41 ff b5 90 00 00 00 	push   QWORD PTR [r13+0x90]
    4a2b:	48 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rax
    4a32:	48 89 95 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rdx
    4a39:	e8 02 10 00 00       	call   5a40 <load_diffuse_color>
    4a3e:	48 8b 8d 78 ff ff ff 	mov    rcx,QWORD PTR [rbp-0x88]
    4a45:	48 83 c4 70          	add    rsp,0x70
    4a49:	48 89 d6             	mov    rsi,rdx
    4a4c:	48 89 55 88          	mov    QWORD PTR [rbp-0x78],rdx
    4a50:	48 8b 95 70 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x90]
    4a57:	48 89 c7             	mov    rdi,rax
    4a5a:	48 89 7d 80          	mov    QWORD PTR [rbp-0x80],rdi
    4a5e:	e8 2d 0f 00 00       	call   5990 <add_color>
    4a63:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
    4a67:	c5 fa 7e 45 90       	vmovq  xmm0,QWORD PTR [rbp-0x70]
    4a6c:	4c 89 ef             	mov    rdi,r13
    4a6f:	c5 fa 7e 4d 98       	vmovq  xmm1,QWORD PTR [rbp-0x68]
    4a74:	48 89 85 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rax
    4a7b:	41 89 c7             	mov    r15d,eax
    4a7e:	48 89 95 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rdx
    4a85:	44 8b a5 64 ff ff ff 	mov    r12d,DWORD PTR [rbp-0x9c]
    4a8c:	44 8b b5 68 ff ff ff 	mov    r14d,DWORD PTR [rbp-0x98]
    4a93:	e8 c8 03 00 00       	call   4e60 <is_shadowed_surface>
    4a98:	84 c0                	test   al,al
    4a9a:	75 44                	jne    4ae0 <load_pixel_color+0x200>
    4a9c:	c4 c1 79 6e f7       	vmovd  xmm6,r15d
    4aa1:	44 89 b5 68 ff ff ff 	mov    DWORD PTR [rbp-0x98],r14d
    4aa8:	48 8b b5 68 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x98]
    4aaf:	c4 c3 49 22 cc 01    	vpinsrd xmm1,xmm6,r12d,0x1
    4ab5:	c4 e1 f9 7e cf       	vmovq  rdi,xmm1
    4aba:	c5 f9 d6 8d 60 ff ff 	vmovq  QWORD PTR [rbp-0xa0],xmm1
    4ac1:	ff 
    4ac2:	e8 a9 0e 00 00       	call   5970 <convert_colors>
    4ac7:	48 8d 65 d0          	lea    rsp,[rbp-0x30]
    4acb:	5b                   	pop    rbx
    4acc:	59                   	pop    rcx
    4acd:	41 5c                	pop    r12
    4acf:	41 5d                	pop    r13
    4ad1:	41 5e                	pop    r14
    4ad3:	41 5f                	pop    r15
    4ad5:	5d                   	pop    rbp
    4ad6:	48 8d 61 f8          	lea    rsp,[rcx-0x8]
    4ada:	c3                   	ret    
    4adb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    4ae0:	44 89 f3             	mov    ebx,r14d
    4ae3:	45 89 fa             	mov    r10d,r15d
    4ae6:	45 89 e5             	mov    r13d,r12d
    4ae9:	c1 eb 1f             	shr    ebx,0x1f
    4aec:	41 c1 ea 1f          	shr    r10d,0x1f
    4af0:	44 01 f3             	add    ebx,r14d
    4af3:	41 c1 ed 1f          	shr    r13d,0x1f
    4af7:	45 01 d7             	add    r15d,r10d
    4afa:	d1 fb                	sar    ebx,1
    4afc:	45 01 ec             	add    r12d,r13d
    4aff:	41 d1 ff             	sar    r15d,1
    4b02:	41 d1 fc             	sar    r12d,1
    4b05:	41 89 de             	mov    r14d,ebx
    4b08:	eb 92                	jmp    4a9c <load_pixel_color+0x1bc>
    4b0a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    4b10:	31 d2                	xor    edx,edx
    4b12:	31 f6                	xor    esi,esi
    4b14:	31 ff                	xor    edi,edi
    4b16:	e8 55 28 00 00       	call   7370 <get_ivector3>
    4b1b:	48 89 d6             	mov    rsi,rdx
    4b1e:	48 89 c7             	mov    rdi,rax
    4b21:	48 89 85 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rax
    4b28:	48 89 95 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rdx
    4b2f:	e8 3c 0e 00 00       	call   5970 <convert_colors>
    4b34:	eb 91                	jmp    4ac7 <load_pixel_color+0x1e7>
    4b36:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    4b3d:	00 00 00 

0000000000004b40 <render>:
    4b40:	f3 0f 1e fa          	endbr64 
    4b44:	41 57                	push   r15
    4b46:	41 56                	push   r14
    4b48:	41 55                	push   r13
    4b4a:	41 54                	push   r12
    4b4c:	55                   	push   rbp
    4b4d:	53                   	push   rbx
    4b4e:	48 89 f3             	mov    rbx,rsi
    4b51:	48 83 ec 38          	sub    rsp,0x38
    4b55:	48 8b 6e 30          	mov    rbp,QWORD PTR [rsi+0x30]
    4b59:	48 85 ed             	test   rbp,rbp
    4b5c:	0f 84 97 01 00 00    	je     4cf9 <render+0x1b9>
    4b62:	49 89 fe             	mov    r14,rdi
    4b65:	c4 41 28 57 d2       	vxorps xmm10,xmm10,xmm10
    4b6a:	4c 8d 64 24 10       	lea    r12,[rsp+0x10]
    4b6f:	45 31 ed             	xor    r13d,r13d
    4b72:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    4b78:	c4 c1 7a 10 66 48    	vmovss xmm4,DWORD PTR [r14+0x48]
    4b7e:	4d 85 ed             	test   r13,r13
    4b81:	0f 88 99 01 00 00    	js     4d20 <render+0x1e0>
    4b87:	c4 c1 aa 2a ed       	vcvtsi2ss xmm5,xmm10,r13
    4b8c:	48 85 ed             	test   rbp,rbp
    4b8f:	0f 88 ac 01 00 00    	js     4d41 <render+0x201>
    4b95:	c4 e1 aa 2a dd       	vcvtsi2ss xmm3,xmm10,rbp
    4b9a:	c5 d2 5e d3          	vdivss xmm2,xmm5,xmm3
    4b9e:	c5 f8 28 c4          	vmovaps xmm0,xmm4
    4ba2:	45 31 ff             	xor    r15d,r15d
    4ba5:	44 89 ed             	mov    ebp,r13d
    4ba8:	c5 d8 57 0d 80 75 00 	vxorps xmm1,xmm4,XMMWORD PTR [rip+0x7580]        # c130 <CSWTCH.3+0x70>
    4baf:	00 
    4bb0:	e8 db 1d 00 00       	call   6990 <lerp>
    4bb5:	48 8b 43 28          	mov    rax,QWORD PTR [rbx+0x28]
    4bb9:	44 89 6c 24 0c       	mov    DWORD PTR [rsp+0xc],r13d
    4bbe:	c4 41 28 57 d2       	vxorps xmm10,xmm10,xmm10
    4bc3:	c5 fa 11 44 24 08    	vmovss DWORD PTR [rsp+0x8],xmm0
    4bc9:	48 85 c0             	test   rax,rax
    4bcc:	0f 85 c7 00 00 00    	jne    4c99 <render+0x159>
    4bd2:	e9 11 01 00 00       	jmp    4ce8 <render+0x1a8>
    4bd7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    4bde:	00 00 
    4be0:	c4 c1 aa 2a ff       	vcvtsi2ss xmm7,xmm10,r15
    4be5:	48 85 c0             	test   rax,rax
    4be8:	0f 88 dc 00 00 00    	js     4cca <render+0x18a>
    4bee:	c4 61 aa 2a c8       	vcvtsi2ss xmm9,xmm10,rax
    4bf3:	c4 c1 42 5e d1       	vdivss xmm2,xmm7,xmm9
    4bf8:	c5 f0 57 05 30 75 00 	vxorps xmm0,xmm1,XMMWORD PTR [rip+0x7530]        # c130 <CSWTCH.3+0x70>
    4bff:	00 
    4c00:	e8 8b 1d 00 00       	call   6990 <lerp>
    4c05:	41 ff 76 48          	push   QWORD PTR [r14+0x48]
    4c09:	4c 89 e7             	mov    rdi,r12
    4c0c:	41 ff 76 40          	push   QWORD PTR [r14+0x40]
    4c10:	41 ff 76 38          	push   QWORD PTR [r14+0x38]
    4c14:	41 ff 76 30          	push   QWORD PTR [r14+0x30]
    4c18:	41 ff 76 28          	push   QWORD PTR [r14+0x28]
    4c1c:	41 ff 76 20          	push   QWORD PTR [r14+0x20]
    4c20:	41 ff 76 18          	push   QWORD PTR [r14+0x18]
    4c24:	41 ff 76 10          	push   QWORD PTR [r14+0x10]
    4c28:	41 ff 76 08          	push   QWORD PTR [r14+0x8]
    4c2c:	41 ff 36             	push   QWORD PTR [r14]
    4c2f:	c5 fa 10 4c 24 58    	vmovss xmm1,DWORD PTR [rsp+0x58]
    4c35:	e8 c6 fb ff ff       	call   4800 <get_ray_mappied_to_pixel>
    4c3a:	48 83 c4 50          	add    rsp,0x50
    4c3e:	4c 89 f7             	mov    rdi,r14
    4c41:	ff 74 24 28          	push   QWORD PTR [rsp+0x28]
    4c45:	ff 74 24 28          	push   QWORD PTR [rsp+0x28]
    4c49:	ff 74 24 28          	push   QWORD PTR [rsp+0x28]
    4c4d:	ff 74 24 28          	push   QWORD PTR [rsp+0x28]
    4c51:	e8 8a fc ff ff       	call   48e0 <load_pixel_color>
    4c56:	89 e9                	mov    ecx,ebp
    4c58:	48 83 c4 20          	add    rsp,0x20
    4c5c:	c4 41 28 57 d2       	vxorps xmm10,xmm10,xmm10
    4c61:	44 09 f9             	or     ecx,r15d
    4c64:	41 89 c2             	mov    r10d,eax
    4c67:	48 8b 43 28          	mov    rax,QWORD PTR [rbx+0x28]
    4c6b:	78 23                	js     4c90 <render+0x150>
    4c6d:	3b 6b 30             	cmp    ebp,DWORD PTR [rbx+0x30]
    4c70:	7d 1e                	jge    4c90 <render+0x150>
    4c72:	41 39 c7             	cmp    r15d,eax
    4c75:	7d 19                	jge    4c90 <render+0x150>
    4c77:	8b 74 24 0c          	mov    esi,DWORD PTR [rsp+0xc]
    4c7b:	48 8b 53 10          	mov    rdx,QWORD PTR [rbx+0x10]
    4c7f:	0f af f0             	imul   esi,eax
    4c82:	48 8b 7a 30          	mov    rdi,QWORD PTR [rdx+0x30]
    4c86:	44 01 fe             	add    esi,r15d
    4c89:	4c 63 c6             	movsxd r8,esi
    4c8c:	46 89 14 87          	mov    DWORD PTR [rdi+r8*4],r10d
    4c90:	49 83 c7 01          	add    r15,0x1
    4c94:	49 39 c7             	cmp    r15,rax
    4c97:	73 4f                	jae    4ce8 <render+0x1a8>
    4c99:	c4 c1 7a 10 4e 44    	vmovss xmm1,DWORD PTR [r14+0x44]
    4c9f:	4d 85 ff             	test   r15,r15
    4ca2:	0f 89 38 ff ff ff    	jns    4be0 <render+0xa0>
    4ca8:	4c 89 ff             	mov    rdi,r15
    4cab:	4d 89 f8             	mov    r8,r15
    4cae:	48 d1 ef             	shr    rdi,1
    4cb1:	41 83 e0 01          	and    r8d,0x1
    4cb5:	4c 09 c7             	or     rdi,r8
    4cb8:	c4 e1 aa 2a f7       	vcvtsi2ss xmm6,xmm10,rdi
    4cbd:	c5 ca 58 fe          	vaddss xmm7,xmm6,xmm6
    4cc1:	48 85 c0             	test   rax,rax
    4cc4:	0f 89 24 ff ff ff    	jns    4bee <render+0xae>
    4cca:	49 89 c1             	mov    r9,rax
    4ccd:	83 e0 01             	and    eax,0x1
    4cd0:	49 d1 e9             	shr    r9,1
    4cd3:	4c 09 c8             	or     rax,r9
    4cd6:	c4 61 aa 2a c0       	vcvtsi2ss xmm8,xmm10,rax
    4cdb:	c4 41 3a 58 c8       	vaddss xmm9,xmm8,xmm8
    4ce0:	e9 0e ff ff ff       	jmp    4bf3 <render+0xb3>
    4ce5:	0f 1f 00             	nop    DWORD PTR [rax]
    4ce8:	48 8b 6b 30          	mov    rbp,QWORD PTR [rbx+0x30]
    4cec:	49 83 c5 01          	add    r13,0x1
    4cf0:	4c 39 ed             	cmp    rbp,r13
    4cf3:	0f 87 7f fe ff ff    	ja     4b78 <render+0x38>
    4cf9:	48 8b 53 10          	mov    rdx,QWORD PTR [rbx+0x10]
    4cfd:	48 8b 73 08          	mov    rsi,QWORD PTR [rbx+0x8]
    4d01:	45 31 c0             	xor    r8d,r8d
    4d04:	31 c9                	xor    ecx,ecx
    4d06:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    4d09:	48 83 c4 38          	add    rsp,0x38
    4d0d:	5b                   	pop    rbx
    4d0e:	5d                   	pop    rbp
    4d0f:	41 5c                	pop    r12
    4d11:	41 5d                	pop    r13
    4d13:	41 5e                	pop    r14
    4d15:	41 5f                	pop    r15
    4d17:	e9 74 62 00 00       	jmp    af90 <mlx_put_image_to_window>
    4d1c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    4d20:	4c 89 e9             	mov    rcx,r13
    4d23:	4c 89 ee             	mov    rsi,r13
    4d26:	48 d1 e9             	shr    rcx,1
    4d29:	83 e6 01             	and    esi,0x1
    4d2c:	48 09 f1             	or     rcx,rsi
    4d2f:	c4 e1 aa 2a d1       	vcvtsi2ss xmm2,xmm10,rcx
    4d34:	c5 ea 58 ea          	vaddss xmm5,xmm2,xmm2
    4d38:	48 85 ed             	test   rbp,rbp
    4d3b:	0f 89 54 fe ff ff    	jns    4b95 <render+0x55>
    4d41:	48 89 ea             	mov    rdx,rbp
    4d44:	83 e5 01             	and    ebp,0x1
    4d47:	48 d1 ea             	shr    rdx,1
    4d4a:	48 09 d5             	or     rbp,rdx
    4d4d:	c4 e1 aa 2a c5       	vcvtsi2ss xmm0,xmm10,rbp
    4d52:	c5 fa 58 d8          	vaddss xmm3,xmm0,xmm0
    4d56:	e9 3f fe ff ff       	jmp    4b9a <render+0x5a>
    4d5b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000004d60 <is_collision>:
    4d60:	f3 0f 1e fa          	endbr64 
    4d64:	c5 fa 10 44 24 38    	vmovss xmm0,DWORD PTR [rsp+0x38]
    4d6a:	c5 f8 2e 05 56 74 00 	vucomiss xmm0,DWORD PTR [rip+0x7456]        # c1c8 <CSWTCH.3+0x108>
    4d71:	00 
    4d72:	ba 01 00 00 00       	mov    edx,0x1
    4d77:	0f 9a c0             	setp   al
    4d7a:	0f 45 c2             	cmovne eax,edx
    4d7d:	c3                   	ret    
    4d7e:	66 90                	xchg   ax,ax

0000000000004d80 <put_color_in_image_frame>:
    4d80:	f3 0f 1e fa          	endbr64 
    4d84:	89 d0                	mov    eax,edx
    4d86:	09 f0                	or     eax,esi
    4d88:	78 1f                	js     4da9 <put_color_in_image_frame+0x29>
    4d8a:	3b 57 30             	cmp    edx,DWORD PTR [rdi+0x30]
    4d8d:	7d 1a                	jge    4da9 <put_color_in_image_frame+0x29>
    4d8f:	48 8b 47 28          	mov    rax,QWORD PTR [rdi+0x28]
    4d93:	39 c6                	cmp    esi,eax
    4d95:	7d 12                	jge    4da9 <put_color_in_image_frame+0x29>
    4d97:	0f af c2             	imul   eax,edx
    4d9a:	48 8b 7f 10          	mov    rdi,QWORD PTR [rdi+0x10]
    4d9e:	48 8b 57 30          	mov    rdx,QWORD PTR [rdi+0x30]
    4da2:	01 f0                	add    eax,esi
    4da4:	48 98                	cdqe   
    4da6:	89 0c 82             	mov    DWORD PTR [rdx+rax*4],ecx
    4da9:	c3                   	ret    
    4daa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004db0 <reflect_light>:
    4db0:	f3 0f 1e fa          	endbr64 
    4db4:	55                   	push   rbp
    4db5:	48 89 f8             	mov    rax,rdi
    4db8:	48 c1 ef 20          	shr    rdi,0x20
    4dbc:	48 89 e5             	mov    rbp,rsp
    4dbf:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    4dc3:	48 89 4c 24 c8       	mov    QWORD PTR [rsp-0x38],rcx
    4dc8:	0f af 74 24 c8       	imul   esi,DWORD PTR [rsp-0x38]
    4dcd:	48 89 54 24 c0       	mov    QWORD PTR [rsp-0x40],rdx
    4dd2:	8b 4c 24 c0          	mov    ecx,DWORD PTR [rsp-0x40]
    4dd6:	0f af 7c 24 c4       	imul   edi,DWORD PTR [rsp-0x3c]
    4ddb:	c7 44 24 ec 00 00 00 	mov    DWORD PTR [rsp-0x14],0x0
    4de2:	00 
    4de3:	48 63 d6             	movsxd rdx,esi
    4de6:	0f af c8             	imul   ecx,eax
    4de9:	4c 69 c2 81 80 80 80 	imul   r8,rdx,0xffffffff80808081
    4df0:	4c 63 d7             	movsxd r10,edi
    4df3:	4d 69 da 81 80 80 80 	imul   r11,r10,0xffffffff80808081
    4dfa:	49 c1 e8 20          	shr    r8,0x20
    4dfe:	41 01 f0             	add    r8d,esi
    4e01:	c1 fe 1f             	sar    esi,0x1f
    4e04:	41 c1 f8 07          	sar    r8d,0x7
    4e08:	49 c1 eb 20          	shr    r11,0x20
    4e0c:	41 29 f0             	sub    r8d,esi
    4e0f:	48 63 f1             	movsxd rsi,ecx
    4e12:	41 01 fb             	add    r11d,edi
    4e15:	c1 ff 1f             	sar    edi,0x1f
    4e18:	4c 69 ce 81 80 80 80 	imul   r9,rsi,0xffffffff80808081
    4e1f:	41 c1 fb 07          	sar    r11d,0x7
    4e23:	44 89 44 24 e8       	mov    DWORD PTR [rsp-0x18],r8d
    4e28:	48 8b 54 24 e8       	mov    rdx,QWORD PTR [rsp-0x18]
    4e2d:	41 29 fb             	sub    r11d,edi
    4e30:	49 c1 e9 20          	shr    r9,0x20
    4e34:	41 01 c9             	add    r9d,ecx
    4e37:	c1 f9 1f             	sar    ecx,0x1f
    4e3a:	41 c1 f9 07          	sar    r9d,0x7
    4e3e:	41 29 c9             	sub    r9d,ecx
    4e41:	c4 c1 79 6e c9       	vmovd  xmm1,r9d
    4e46:	c4 c3 71 22 c3 01    	vpinsrd xmm0,xmm1,r11d,0x1
    4e4c:	c5 f9 d6 44 24 e0    	vmovq  QWORD PTR [rsp-0x20],xmm0
    4e52:	48 8b 44 24 e0       	mov    rax,QWORD PTR [rsp-0x20]
    4e57:	c9                   	leave  
    4e58:	c3                   	ret    
    4e59:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000004e60 <is_shadowed_surface>:
    4e60:	f3 0f 1e fa          	endbr64 
    4e64:	4c 8d 54 24 08       	lea    r10,[rsp+0x8]
    4e69:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    4e6d:	41 ff 72 f8          	push   QWORD PTR [r10-0x8]
    4e71:	55                   	push   rbp
    4e72:	48 89 e5             	mov    rbp,rsp
    4e75:	41 57                	push   r15
    4e77:	41 56                	push   r14
    4e79:	4c 8d 7d 90          	lea    r15,[rbp-0x70]
    4e7d:	41 55                	push   r13
    4e7f:	49 89 f5             	mov    r13,rsi
    4e82:	41 54                	push   r12
    4e84:	49 89 fc             	mov    r12,rdi
    4e87:	41 52                	push   r10
    4e89:	4d 8d b4 24 c8 00 00 	lea    r14,[r12+0xc8]
    4e90:	00 
    4e91:	53                   	push   rbx
    4e92:	31 db                	xor    ebx,ebx
    4e94:	48 81 ec 20 01 00 00 	sub    rsp,0x120
    4e9b:	c5 fa 7e 97 90 00 00 	vmovq  xmm2,QWORD PTR [rdi+0x90]
    4ea2:	00 
    4ea3:	c5 fa 7e 9f 98 00 00 	vmovq  xmm3,QWORD PTR [rdi+0x98]
    4eaa:	00 
    4eab:	c5 f9 d6 85 20 ff ff 	vmovq  QWORD PTR [rbp-0xe0],xmm0
    4eb2:	ff 
    4eb3:	c5 f9 d6 8d 28 ff ff 	vmovq  QWORD PTR [rbp-0xd8],xmm1
    4eba:	ff 
    4ebb:	e8 20 22 00 00       	call   70e0 <subtract_vector3>
    4ec0:	c5 f9 d6 85 30 ff ff 	vmovq  QWORD PTR [rbp-0xd0],xmm0
    4ec7:	ff 
    4ec8:	c5 f9 d6 8d 38 ff ff 	vmovq  QWORD PTR [rbp-0xc8],xmm1
    4ecf:	ff 
    4ed0:	e8 db 20 00 00       	call   6fb0 <normalize_vector3>
    4ed5:	48 8d bd 70 ff ff ff 	lea    rdi,[rbp-0x90]
    4edc:	c5 f9 6f d0          	vmovdqa xmm2,xmm0
    4ee0:	c5 f9 6f d9          	vmovdqa xmm3,xmm1
    4ee4:	c5 f9 d6 85 40 ff ff 	vmovq  QWORD PTR [rbp-0xc0],xmm0
    4eeb:	ff 
    4eec:	c4 c1 7a 7e 84 24 90 	vmovq  xmm0,QWORD PTR [r12+0x90]
    4ef3:	00 00 00 
    4ef6:	c5 f9 d6 8d 48 ff ff 	vmovq  QWORD PTR [rbp-0xb8],xmm1
    4efd:	ff 
    4efe:	c4 c1 7a 7e 8c 24 98 	vmovq  xmm1,QWORD PTR [r12+0x98]
    4f05:	00 00 00 
    4f08:	e8 73 f8 ff ff       	call   4780 <get_ray>
    4f0d:	48 8d bd d0 fe ff ff 	lea    rdi,[rbp-0x130]
    4f14:	e8 07 ea ff ff       	call   3920 <get_hit_record>
    4f19:	c5 f9 6f ad d0 fe ff 	vmovdqa xmm5,XMMWORD PTR [rbp-0x130]
    4f20:	ff 
    4f21:	c5 f9 6f b5 e0 fe ff 	vmovdqa xmm6,XMMWORD PTR [rbp-0x120]
    4f28:	ff 
    4f29:	c5 f9 6f bd f0 fe ff 	vmovdqa xmm7,XMMWORD PTR [rbp-0x110]
    4f30:	ff 
    4f31:	c5 f9 6f 85 00 ff ff 	vmovdqa xmm0,XMMWORD PTR [rbp-0x100]
    4f38:	ff 
    4f39:	49 83 bc 24 d0 00 00 	cmp    QWORD PTR [r12+0xd0],0x0
    4f40:	00 00 
    4f42:	c5 f9 7f 6d 90       	vmovdqa XMMWORD PTR [rbp-0x70],xmm5
    4f47:	c5 f9 7f 75 a0       	vmovdqa XMMWORD PTR [rbp-0x60],xmm6
    4f4c:	c5 f9 7f 7d b0       	vmovdqa XMMWORD PTR [rbp-0x50],xmm7
    4f51:	c5 f9 7f 45 c0       	vmovdqa XMMWORD PTR [rbp-0x40],xmm0
    4f56:	75 16                	jne    4f6e <is_shadowed_surface+0x10e>
    4f58:	e9 03 01 00 00       	jmp    5060 <is_shadowed_surface+0x200>
    4f5d:	0f 1f 00             	nop    DWORD PTR [rax]
    4f60:	49 39 9c 24 d0 00 00 	cmp    QWORD PTR [r12+0xd0],rbx
    4f67:	00 
    4f68:	0f 86 f2 00 00 00    	jbe    5060 <is_shadowed_surface+0x200>
    4f6e:	48 89 de             	mov    rsi,rbx
    4f71:	4c 89 f7             	mov    rdi,r14
    4f74:	48 83 c3 01          	add    rbx,0x1
    4f78:	e8 03 1f 00 00       	call   6e80 <get_element_or_null_in_list>
    4f7d:	48 8b 00             	mov    rax,QWORD PTR [rax]
    4f80:	4c 39 e8             	cmp    rax,r13
    4f83:	74 db                	je     4f60 <is_shadowed_surface+0x100>
    4f85:	ff 75 88             	push   QWORD PTR [rbp-0x78]
    4f88:	4c 89 fe             	mov    rsi,r15
    4f8b:	48 89 c7             	mov    rdi,rax
    4f8e:	ff 75 80             	push   QWORD PTR [rbp-0x80]
    4f91:	ff b5 78 ff ff ff    	push   QWORD PTR [rbp-0x88]
    4f97:	ff b5 70 ff ff ff    	push   QWORD PTR [rbp-0x90]
    4f9d:	ff 50 50             	call   QWORD PTR [rax+0x50]
    4fa0:	48 83 c4 20          	add    rsp,0x20
    4fa4:	84 c0                	test   al,al
    4fa6:	74 b8                	je     4f60 <is_shadowed_surface+0x100>
    4fa8:	c5 fa 7e 8d 28 ff ff 	vmovq  xmm1,QWORD PTR [rbp-0xd8]
    4faf:	ff 
    4fb0:	c5 fa 7e 85 20 ff ff 	vmovq  xmm0,QWORD PTR [rbp-0xe0]
    4fb7:	ff 
    4fb8:	88 85 cb fe ff ff    	mov    BYTE PTR [rbp-0x135],al
    4fbe:	c4 c1 7a 7e 94 24 90 	vmovq  xmm2,QWORD PTR [r12+0x90]
    4fc5:	00 00 00 
    4fc8:	c4 c1 7a 7e 9c 24 98 	vmovq  xmm3,QWORD PTR [r12+0x98]
    4fcf:	00 00 00 
    4fd2:	e8 09 21 00 00       	call   70e0 <subtract_vector3>
    4fd7:	c5 f9 d6 8d 58 ff ff 	vmovq  QWORD PTR [rbp-0xa8],xmm1
    4fde:	ff 
    4fdf:	c5 f9 d6 85 50 ff ff 	vmovq  QWORD PTR [rbp-0xb0],xmm0
    4fe6:	ff 
    4fe7:	e8 74 1f 00 00       	call   6f60 <get_length_in_vector3>
    4fec:	c5 fa 7e 4d 98       	vmovq  xmm1,QWORD PTR [rbp-0x68]
    4ff1:	c4 c1 7a 7e 94 24 90 	vmovq  xmm2,QWORD PTR [r12+0x90]
    4ff8:	00 00 00 
    4ffb:	c4 c1 7a 7e 9c 24 98 	vmovq  xmm3,QWORD PTR [r12+0x98]
    5002:	00 00 00 
    5005:	c5 fa 11 85 cc fe ff 	vmovss DWORD PTR [rbp-0x134],xmm0
    500c:	ff 
    500d:	c5 fa 7e 45 90       	vmovq  xmm0,QWORD PTR [rbp-0x70]
    5012:	e8 c9 20 00 00       	call   70e0 <subtract_vector3>
    5017:	c5 f9 d6 8d 68 ff ff 	vmovq  QWORD PTR [rbp-0x98],xmm1
    501e:	ff 
    501f:	c5 f9 d6 85 60 ff ff 	vmovq  QWORD PTR [rbp-0xa0],xmm0
    5026:	ff 
    5027:	e8 34 1f 00 00       	call   6f60 <get_length_in_vector3>
    502c:	c5 fa 10 8d cc fe ff 	vmovss xmm1,DWORD PTR [rbp-0x134]
    5033:	ff 
    5034:	0f b6 85 cb fe ff ff 	movzx  eax,BYTE PTR [rbp-0x135]
    503b:	c5 f8 2f c8          	vcomiss xmm1,xmm0
    503f:	0f 86 1b ff ff ff    	jbe    4f60 <is_shadowed_surface+0x100>
    5045:	48 8d 65 d0          	lea    rsp,[rbp-0x30]
    5049:	5b                   	pop    rbx
    504a:	5e                   	pop    rsi
    504b:	41 5c                	pop    r12
    504d:	41 5d                	pop    r13
    504f:	41 5e                	pop    r14
    5051:	41 5f                	pop    r15
    5053:	5d                   	pop    rbp
    5054:	48 8d 66 f8          	lea    rsp,[rsi-0x8]
    5058:	c3                   	ret    
    5059:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    5060:	31 c0                	xor    eax,eax
    5062:	eb e1                	jmp    5045 <is_shadowed_surface+0x1e5>
    5064:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    506b:	00 00 00 
    506e:	66 90                	xchg   ax,ax

0000000000005070 <move_shape>:
    5070:	f3 0f 1e fa          	endbr64 
    5074:	83 ee 0c             	sub    esi,0xc
    5077:	83 fe 05             	cmp    esi,0x5
    507a:	0f 87 a7 00 00 00    	ja     5127 <move_shape+0xb7>
    5080:	48 8d 15 45 71 00 00 	lea    rdx,[rip+0x7145]        # c1cc <CSWTCH.3+0x10c>
    5087:	53                   	push   rbx
    5088:	48 89 fb             	mov    rbx,rdi
    508b:	48 63 04 b2          	movsxd rax,DWORD PTR [rdx+rsi*4]
    508f:	48 01 d0             	add    rax,rdx
    5092:	3e ff e0             	notrack jmp rax
    5095:	0f 1f 00             	nop    DWORD PTR [rax]
    5098:	c5 fa 7e 57 40       	vmovq  xmm2,QWORD PTR [rdi+0x40]
    509d:	c5 fa 7e 5f 48       	vmovq  xmm3,QWORD PTR [rdi+0x48]
    50a2:	c5 fa 7e 03          	vmovq  xmm0,QWORD PTR [rbx]
    50a6:	c5 fa 7e 4b 08       	vmovq  xmm1,QWORD PTR [rbx+0x8]
    50ab:	e8 f0 1f 00 00       	call   70a0 <add_vector3>
    50b0:	c5 f9 d6 03          	vmovq  QWORD PTR [rbx],xmm0
    50b4:	c5 f9 d6 4b 08       	vmovq  QWORD PTR [rbx+0x8],xmm1
    50b9:	5b                   	pop    rbx
    50ba:	c3                   	ret    
    50bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    50c0:	c5 fa 7e 57 40       	vmovq  xmm2,QWORD PTR [rdi+0x40]
    50c5:	c5 fa 7e 5f 48       	vmovq  xmm3,QWORD PTR [rdi+0x48]
    50ca:	c5 fa 7e 03          	vmovq  xmm0,QWORD PTR [rbx]
    50ce:	c5 fa 7e 4b 08       	vmovq  xmm1,QWORD PTR [rbx+0x8]
    50d3:	e8 08 20 00 00       	call   70e0 <subtract_vector3>
    50d8:	c5 f9 d6 03          	vmovq  QWORD PTR [rbx],xmm0
    50dc:	c5 f9 d6 4b 08       	vmovq  QWORD PTR [rbx+0x8],xmm1
    50e1:	5b                   	pop    rbx
    50e2:	c3                   	ret    
    50e3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    50e8:	c5 fa 7e 57 30       	vmovq  xmm2,QWORD PTR [rdi+0x30]
    50ed:	c5 fa 7e 5f 38       	vmovq  xmm3,QWORD PTR [rdi+0x38]
    50f2:	eb ae                	jmp    50a2 <move_shape+0x32>
    50f4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    50f8:	c5 fa 7e 57 30       	vmovq  xmm2,QWORD PTR [rdi+0x30]
    50fd:	c5 fa 7e 5f 38       	vmovq  xmm3,QWORD PTR [rdi+0x38]
    5102:	eb c6                	jmp    50ca <move_shape+0x5a>
    5104:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    5108:	c5 fa 7e 57 20       	vmovq  xmm2,QWORD PTR [rdi+0x20]
    510d:	c5 fa 7e 5f 28       	vmovq  xmm3,QWORD PTR [rdi+0x28]
    5112:	eb b6                	jmp    50ca <move_shape+0x5a>
    5114:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    5118:	c5 fa 7e 57 20       	vmovq  xmm2,QWORD PTR [rdi+0x20]
    511d:	c5 fa 7e 5f 28       	vmovq  xmm3,QWORD PTR [rdi+0x28]
    5122:	e9 7b ff ff ff       	jmp    50a2 <move_shape+0x32>
    5127:	c3                   	ret    
    5128:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    512f:	00 

0000000000005130 <rotate_shape>:
    5130:	f3 0f 1e fa          	endbr64 
    5134:	83 fe 07             	cmp    esi,0x7
    5137:	0f 87 a7 00 00 00    	ja     51e4 <rotate_shape+0xb4>
    513d:	48 8d 15 a0 70 00 00 	lea    rdx,[rip+0x70a0]        # c1e4 <CSWTCH.3+0x124>
    5144:	89 f6                	mov    esi,esi
    5146:	53                   	push   rbx
    5147:	48 89 fb             	mov    rbx,rdi
    514a:	48 63 04 b2          	movsxd rax,DWORD PTR [rdx+rsi*4]
    514e:	48 01 d0             	add    rax,rdx
    5151:	3e ff e0             	notrack jmp rax
    5154:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    5158:	c5 fa 7e 57 40       	vmovq  xmm2,QWORD PTR [rdi+0x40]
    515d:	c5 fa 7e 5f 48       	vmovq  xmm3,QWORD PTR [rdi+0x48]
    5162:	c5 fa 7e 03          	vmovq  xmm0,QWORD PTR [rbx]
    5166:	c5 fa 7e 4b 08       	vmovq  xmm1,QWORD PTR [rbx+0x8]
    516b:	e8 70 1f 00 00       	call   70e0 <subtract_vector3>
    5170:	c5 f9 d6 03          	vmovq  QWORD PTR [rbx],xmm0
    5174:	c5 f9 d6 4b 08       	vmovq  QWORD PTR [rbx+0x8],xmm1
    5179:	5b                   	pop    rbx
    517a:	c3                   	ret    
    517b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    5180:	c5 fa 7e 57 30       	vmovq  xmm2,QWORD PTR [rdi+0x30]
    5185:	c5 fa 7e 5f 38       	vmovq  xmm3,QWORD PTR [rdi+0x38]
    518a:	c5 fa 7e 03          	vmovq  xmm0,QWORD PTR [rbx]
    518e:	c5 fa 7e 4b 08       	vmovq  xmm1,QWORD PTR [rbx+0x8]
    5193:	e8 08 1f 00 00       	call   70a0 <add_vector3>
    5198:	c5 f9 d6 03          	vmovq  QWORD PTR [rbx],xmm0
    519c:	c5 f9 d6 4b 08       	vmovq  QWORD PTR [rbx+0x8],xmm1
    51a1:	5b                   	pop    rbx
    51a2:	c3                   	ret    
    51a3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    51a8:	c5 fa 7e 57 30       	vmovq  xmm2,QWORD PTR [rdi+0x30]
    51ad:	c5 fa 7e 5f 38       	vmovq  xmm3,QWORD PTR [rdi+0x38]
    51b2:	eb ae                	jmp    5162 <rotate_shape+0x32>
    51b4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    51b8:	c5 fa 7e 57 20       	vmovq  xmm2,QWORD PTR [rdi+0x20]
    51bd:	c5 fa 7e 5f 28       	vmovq  xmm3,QWORD PTR [rdi+0x28]
    51c2:	eb 9e                	jmp    5162 <rotate_shape+0x32>
    51c4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    51c8:	c5 fa 7e 57 20       	vmovq  xmm2,QWORD PTR [rdi+0x20]
    51cd:	c5 fa 7e 5f 28       	vmovq  xmm3,QWORD PTR [rdi+0x28]
    51d2:	eb b6                	jmp    518a <rotate_shape+0x5a>
    51d4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    51d8:	c5 fa 7e 57 40       	vmovq  xmm2,QWORD PTR [rdi+0x40]
    51dd:	c5 fa 7e 5f 48       	vmovq  xmm3,QWORD PTR [rdi+0x48]
    51e2:	eb a6                	jmp    518a <rotate_shape+0x5a>
    51e4:	c3                   	ret    
    51e5:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    51ec:	00 00 00 00 

00000000000051f0 <get_local_basis>:
    51f0:	f3 0f 1e fa          	endbr64 
    51f4:	41 54                	push   r12
    51f6:	c5 e8 57 d2          	vxorps xmm2,xmm2,xmm2
    51fa:	49 89 fc             	mov    r12,rdi
    51fd:	48 83 ec 20          	sub    rsp,0x20
    5201:	c5 f9 d6 4c 24 08    	vmovq  QWORD PTR [rsp+0x8],xmm1
    5207:	c5 fa 10 0d b5 6f 00 	vmovss xmm1,DWORD PTR [rip+0x6fb5]        # c1c4 <CSWTCH.3+0x104>
    520e:	00 
    520f:	c5 f9 d6 04 24       	vmovq  QWORD PTR [rsp],xmm0
    5214:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    5218:	e8 a3 1c 00 00       	call   6ec0 <get_vector3>
    521d:	c5 fa 7e 14 24       	vmovq  xmm2,QWORD PTR [rsp]
    5222:	c5 fa 7e 5c 24 08    	vmovq  xmm3,QWORD PTR [rsp+0x8]
    5228:	c5 f9 d6 44 24 10    	vmovq  QWORD PTR [rsp+0x10],xmm0
    522e:	c5 f9 d6 4c 24 18    	vmovq  QWORD PTR [rsp+0x18],xmm1
    5234:	e8 a7 1c 00 00       	call   6ee0 <is_uneqaul_vector3>
    5239:	84 c0                	test   al,al
    523b:	74 6b                	je     52a8 <get_local_basis+0xb8>
    523d:	c5 fa 7e 44 24 10    	vmovq  xmm0,QWORD PTR [rsp+0x10]
    5243:	c5 fa 7e 4c 24 18    	vmovq  xmm1,QWORD PTR [rsp+0x18]
    5249:	c5 fa 7e 14 24       	vmovq  xmm2,QWORD PTR [rsp]
    524e:	c5 fa 7e 5c 24 08    	vmovq  xmm3,QWORD PTR [rsp+0x8]
    5254:	e8 07 20 00 00       	call   7260 <cross_product3x3>
    5259:	c4 c1 79 d6 04 24    	vmovq  QWORD PTR [r12],xmm0
    525f:	c5 f9 6f d0          	vmovdqa xmm2,xmm0
    5263:	c5 f9 6f d9          	vmovdqa xmm3,xmm1
    5267:	c5 fa 7e 04 24       	vmovq  xmm0,QWORD PTR [rsp]
    526c:	c4 c1 79 d6 4c 24 08 	vmovq  QWORD PTR [r12+0x8],xmm1
    5273:	c5 fa 7e 4c 24 08    	vmovq  xmm1,QWORD PTR [rsp+0x8]
    5279:	e8 e2 1f 00 00       	call   7260 <cross_product3x3>
    527e:	c5 f9 6f 24 24       	vmovdqa xmm4,XMMWORD PTR [rsp]
    5283:	4c 89 e0             	mov    rax,r12
    5286:	c4 c1 79 d6 44 24 10 	vmovq  QWORD PTR [r12+0x10],xmm0
    528d:	c4 c1 79 d6 4c 24 18 	vmovq  QWORD PTR [r12+0x18],xmm1
    5294:	c4 c1 79 7f 64 24 20 	vmovdqa XMMWORD PTR [r12+0x20],xmm4
    529b:	48 83 c4 20          	add    rsp,0x20
    529f:	41 5c                	pop    r12
    52a1:	c3                   	ret    
    52a2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    52a8:	c5 f0 57 c9          	vxorps xmm1,xmm1,xmm1
    52ac:	c5 fa 10 15 6c 6e 00 	vmovss xmm2,DWORD PTR [rip+0x6e6c]        # c120 <CSWTCH.3+0x60>
    52b3:	00 
    52b4:	c5 f8 28 c1          	vmovaps xmm0,xmm1
    52b8:	e8 03 1c 00 00       	call   6ec0 <get_vector3>
    52bd:	c5 f9 d6 44 24 10    	vmovq  QWORD PTR [rsp+0x10],xmm0
    52c3:	c5 f9 d6 4c 24 18    	vmovq  QWORD PTR [rsp+0x18],xmm1
    52c9:	e9 6f ff ff ff       	jmp    523d <get_local_basis+0x4d>
    52ce:	66 90                	xchg   ax,ax

00000000000052d0 <destroy_shapes>:
    52d0:	f3 0f 1e fa          	endbr64 
    52d4:	55                   	push   rbp
    52d5:	48 89 fd             	mov    rbp,rdi
    52d8:	53                   	push   rbx
    52d9:	48 83 ec 08          	sub    rsp,0x8
    52dd:	48 83 7f 08 00       	cmp    QWORD PTR [rdi+0x8],0x0
    52e2:	74 28                	je     530c <destroy_shapes+0x3c>
    52e4:	31 db                	xor    ebx,ebx
    52e6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    52ed:	00 00 00 
    52f0:	48 89 de             	mov    rsi,rbx
    52f3:	48 89 ef             	mov    rdi,rbp
    52f6:	48 83 c3 01          	add    rbx,0x1
    52fa:	ff 55 48             	call   QWORD PTR [rbp+0x48]
    52fd:	48 8b 00             	mov    rax,QWORD PTR [rax]
    5300:	48 89 c7             	mov    rdi,rax
    5303:	ff 50 58             	call   QWORD PTR [rax+0x58]
    5306:	48 39 5d 08          	cmp    QWORD PTR [rbp+0x8],rbx
    530a:	77 e4                	ja     52f0 <destroy_shapes+0x20>
    530c:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
    5310:	e8 ab d2 ff ff       	call   25c0 <free@plt>
    5315:	48 c7 45 00 00 00 00 	mov    QWORD PTR [rbp+0x0],0x0
    531c:	00 
    531d:	48 83 c4 08          	add    rsp,0x8
    5321:	5b                   	pop    rbx
    5322:	5d                   	pop    rbp
    5323:	c3                   	ret    
    5324:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    532b:	00 00 00 
    532e:	66 90                	xchg   ax,ax

0000000000005330 <delete_sphere>:
    5330:	f3 0f 1e fa          	endbr64 
    5334:	e9 87 d2 ff ff       	jmp    25c0 <free@plt>
    5339:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000005340 <is_hit_sphere>:
    5340:	f3 0f 1e fa          	endbr64 
    5344:	55                   	push   rbp
    5345:	48 89 f5             	mov    rbp,rsi
    5348:	53                   	push   rbx
    5349:	48 89 fb             	mov    rbx,rdi
    534c:	48 83 ec 58          	sub    rsp,0x58
    5350:	c5 fa 7e 17          	vmovq  xmm2,QWORD PTR [rdi]
    5354:	c5 fa 7e 5f 08       	vmovq  xmm3,QWORD PTR [rdi+0x8]
    5359:	c5 fa 7e 44 24 70    	vmovq  xmm0,QWORD PTR [rsp+0x70]
    535f:	c5 fa 7e 4c 24 78    	vmovq  xmm1,QWORD PTR [rsp+0x78]
    5365:	e8 76 1d 00 00       	call   70e0 <subtract_vector3>
    536a:	c5 fa 7e 94 24 80 00 	vmovq  xmm2,QWORD PTR [rsp+0x80]
    5371:	00 00 
    5373:	c5 fa 7e 9c 24 88 00 	vmovq  xmm3,QWORD PTR [rsp+0x88]
    537a:	00 00 
    537c:	c5 f9 d6 44 24 10    	vmovq  QWORD PTR [rsp+0x10],xmm0
    5382:	c5 f9 d6 4c 24 18    	vmovq  QWORD PTR [rsp+0x18],xmm1
    5388:	c5 f9 6f c2          	vmovdqa xmm0,xmm2
    538c:	c5 f9 6f cb          	vmovdqa xmm1,xmm3
    5390:	e8 0b 1e 00 00       	call   71a0 <dot_product3x3>
    5395:	c5 fa 7e 4c 24 18    	vmovq  xmm1,QWORD PTR [rsp+0x18]
    539b:	c5 fa 7e 94 24 80 00 	vmovq  xmm2,QWORD PTR [rsp+0x80]
    53a2:	00 00 
    53a4:	c5 fa 7e 9c 24 88 00 	vmovq  xmm3,QWORD PTR [rsp+0x88]
    53ab:	00 00 
    53ad:	c5 fa 11 44 24 04    	vmovss DWORD PTR [rsp+0x4],xmm0
    53b3:	c5 fa 7e 44 24 10    	vmovq  xmm0,QWORD PTR [rsp+0x10]
    53b9:	e8 e2 1d 00 00       	call   71a0 <dot_product3x3>
    53be:	c5 fa 7e 54 24 10    	vmovq  xmm2,QWORD PTR [rsp+0x10]
    53c4:	c5 fa 7e 5c 24 18    	vmovq  xmm3,QWORD PTR [rsp+0x18]
    53ca:	c5 fa 58 e0          	vaddss xmm4,xmm0,xmm0
    53ce:	c5 f9 6f cb          	vmovdqa xmm1,xmm3
    53d2:	c5 f9 6f c2          	vmovdqa xmm0,xmm2
    53d6:	c5 fa 11 24 24       	vmovss DWORD PTR [rsp],xmm4
    53db:	e8 c0 1d 00 00       	call   71a0 <dot_product3x3>
    53e0:	c5 fa 10 6c 24 04    	vmovss xmm5,DWORD PTR [rsp+0x4]
    53e6:	c5 7a 10 2c 24       	vmovss xmm13,DWORD PTR [rsp]
    53eb:	c4 41 20 57 db       	vxorps xmm11,xmm11,xmm11
    53f0:	c5 d2 59 1d 2c 6d 00 	vmulss xmm3,xmm5,DWORD PTR [rip+0x6d2c]        # c124 <CSWTCH.3+0x64>
    53f7:	00 
    53f8:	c5 f8 28 c8          	vmovaps xmm1,xmm0
    53fc:	c5 fa 10 05 18 6d 00 	vmovss xmm0,DWORD PTR [rip+0x6d18]        # c11c <CSWTCH.3+0x5c>
    5403:	00 
    5404:	c5 fa 59 53 70       	vmulss xmm2,xmm0,DWORD PTR [rbx+0x70]
    5409:	c4 e2 71 9d d2       	vfnmadd132ss xmm2,xmm1,xmm2
    540e:	c5 62 59 d2          	vmulss xmm10,xmm3,xmm2
    5412:	c4 42 11 bb d5       	vfmsub231ss xmm10,xmm13,xmm13
    5417:	c4 41 78 2f da       	vcomiss xmm11,xmm10
    541c:	0f 83 d6 00 00 00    	jae    54f8 <is_hit_sphere+0x1b8>
    5422:	c4 41 78 2e da       	vucomiss xmm11,xmm10
    5427:	c5 90 57 35 01 6d 00 	vxorps xmm6,xmm13,XMMWORD PTR [rip+0x6d01]        # c130 <CSWTCH.3+0x70>
    542e:	00 
    542f:	0f 87 cc 00 00 00    	ja     5501 <is_hit_sphere+0x1c1>
    5435:	c4 41 2a 51 d2       	vsqrtss xmm10,xmm10,xmm10
    543a:	c5 52 58 e5          	vaddss xmm12,xmm5,xmm5
    543e:	c4 41 4a 5c f2       	vsubss xmm14,xmm6,xmm10
    5443:	c4 c1 0a 5e c4       	vdivss xmm0,xmm14,xmm12
    5448:	c5 78 2f d8          	vcomiss xmm11,xmm0
    544c:	73 07                	jae    5455 <is_hit_sphere+0x115>
    544e:	c5 f8 2f 45 30       	vcomiss xmm0,DWORD PTR [rbp+0x30]
    5453:	72 1f                	jb     5474 <is_hit_sphere+0x134>
    5455:	c4 41 2a 5c fd       	vsubss xmm15,xmm10,xmm13
    545a:	c4 c1 02 5e c4       	vdivss xmm0,xmm15,xmm12
    545f:	c5 78 2f d8          	vcomiss xmm11,xmm0
    5463:	0f 83 8f 00 00 00    	jae    54f8 <is_hit_sphere+0x1b8>
    5469:	c5 f8 2f 45 30       	vcomiss xmm0,DWORD PTR [rbp+0x30]
    546e:	0f 83 84 00 00 00    	jae    54f8 <is_hit_sphere+0x1b8>
    5474:	c5 f9 6f a4 24 80 00 	vmovdqa xmm4,XMMWORD PTR [rsp+0x80]
    547b:	00 00 
    547d:	48 83 ec 20          	sub    rsp,0x20
    5481:	c5 fa 11 45 30       	vmovss DWORD PTR [rbp+0x30],xmm0
    5486:	c5 f9 6f 8c 24 90 00 	vmovdqa xmm1,XMMWORD PTR [rsp+0x90]
    548d:	00 00 
    548f:	c5 fa 7f 64 24 10    	vmovdqu XMMWORD PTR [rsp+0x10],xmm4
    5495:	c5 fa 7f 0c 24       	vmovdqu XMMWORD PTR [rsp],xmm1
    549a:	e8 21 f3 ff ff       	call   47c0 <get_point_in_ray>
    549f:	c5 fa 10 53 70       	vmovss xmm2,DWORD PTR [rbx+0x70]
    54a4:	c5 fa 7e 5b 08       	vmovq  xmm3,QWORD PTR [rbx+0x8]
    54a9:	c5 f9 d6 45 00       	vmovq  QWORD PTR [rbp+0x0],xmm0
    54ae:	c5 fa 11 54 24 20    	vmovss DWORD PTR [rsp+0x20],xmm2
    54b4:	c5 fa 7e 13          	vmovq  xmm2,QWORD PTR [rbx]
    54b8:	48 83 c4 20          	add    rsp,0x20
    54bc:	c5 f9 d6 4d 08       	vmovq  QWORD PTR [rbp+0x8],xmm1
    54c1:	e8 1a 1c 00 00       	call   70e0 <subtract_vector3>
    54c6:	c5 fa 10 14 24       	vmovss xmm2,DWORD PTR [rsp]
    54cb:	e8 90 1c 00 00       	call   7160 <divide_vector3>
    54d0:	b8 01 00 00 00       	mov    eax,0x1
    54d5:	c5 f9 d6 45 10       	vmovq  QWORD PTR [rbp+0x10],xmm0
    54da:	c5 f9 6f 43 10       	vmovdqa xmm0,XMMWORD PTR [rbx+0x10]
    54df:	c5 f9 d6 4d 18       	vmovq  QWORD PTR [rbp+0x18],xmm1
    54e4:	48 89 5d 38          	mov    QWORD PTR [rbp+0x38],rbx
    54e8:	c5 f9 7f 45 20       	vmovdqa XMMWORD PTR [rbp+0x20],xmm0
    54ed:	48 83 c4 58          	add    rsp,0x58
    54f1:	5b                   	pop    rbx
    54f2:	5d                   	pop    rbp
    54f3:	c3                   	ret    
    54f4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    54f8:	48 83 c4 58          	add    rsp,0x58
    54fc:	31 c0                	xor    eax,eax
    54fe:	5b                   	pop    rbx
    54ff:	5d                   	pop    rbp
    5500:	c3                   	ret    
    5501:	c5 78 29 d0          	vmovaps xmm0,xmm10
    5505:	c5 7a 11 6c 24 08    	vmovss DWORD PTR [rsp+0x8],xmm13
    550b:	c5 7a 11 14 24       	vmovss DWORD PTR [rsp],xmm10
    5510:	c5 fa 11 74 24 0c    	vmovss DWORD PTR [rsp+0xc],xmm6
    5516:	c5 fa 11 6c 24 04    	vmovss DWORD PTR [rsp+0x4],xmm5
    551c:	e8 2f d3 ff ff       	call   2850 <sqrtf@plt>
    5521:	c5 fa 10 7c 24 04    	vmovss xmm7,DWORD PTR [rsp+0x4]
    5527:	c5 7a 10 44 24 0c    	vmovss xmm8,DWORD PTR [rsp+0xc]
    552d:	c4 41 20 57 db       	vxorps xmm11,xmm11,xmm11
    5532:	c5 7a 10 14 24       	vmovss xmm10,DWORD PTR [rsp]
    5537:	c5 7a 10 6c 24 08    	vmovss xmm13,DWORD PTR [rsp+0x8]
    553d:	c5 42 58 e7          	vaddss xmm12,xmm7,xmm7
    5541:	c5 3a 5c c8          	vsubss xmm9,xmm8,xmm0
    5545:	c4 c1 32 5e c4       	vdivss xmm0,xmm9,xmm12
    554a:	c5 78 2f d8          	vcomiss xmm11,xmm0
    554e:	73 12                	jae    5562 <is_hit_sphere+0x222>
    5550:	c5 f8 2f 45 30       	vcomiss xmm0,DWORD PTR [rbp+0x30]
    5555:	0f 82 19 ff ff ff    	jb     5474 <is_hit_sphere+0x134>
    555b:	c4 41 78 2e da       	vucomiss xmm11,xmm10
    5560:	76 2d                	jbe    558f <is_hit_sphere+0x24f>
    5562:	c5 78 29 d0          	vmovaps xmm0,xmm10
    5566:	c5 7a 11 64 24 04    	vmovss DWORD PTR [rsp+0x4],xmm12
    556c:	c5 7a 11 2c 24       	vmovss DWORD PTR [rsp],xmm13
    5571:	e8 da d2 ff ff       	call   2850 <sqrtf@plt>
    5576:	c5 7a 10 64 24 04    	vmovss xmm12,DWORD PTR [rsp+0x4]
    557c:	c5 7a 10 2c 24       	vmovss xmm13,DWORD PTR [rsp]
    5581:	c4 41 20 57 db       	vxorps xmm11,xmm11,xmm11
    5586:	c5 78 28 d0          	vmovaps xmm10,xmm0
    558a:	e9 c6 fe ff ff       	jmp    5455 <is_hit_sphere+0x115>
    558f:	c4 41 2a 51 d2       	vsqrtss xmm10,xmm10,xmm10
    5594:	e9 bc fe ff ff       	jmp    5455 <is_hit_sphere+0x115>
    5599:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000055a0 <copy_construction_to_sphere>:
    55a0:	f3 0f 1e fa          	endbr64 
    55a4:	55                   	push   rbp
    55a5:	bf 80 00 00 00       	mov    edi,0x80
    55aa:	48 89 e5             	mov    rbp,rsp
    55ad:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    55b1:	e8 8a cf ff ff       	call   2540 <malloc@plt>
    55b6:	c5 f9 6f 55 10       	vmovdqa xmm2,XMMWORD PTR [rbp+0x10]
    55bb:	c5 f9 6f 5d 20       	vmovdqa xmm3,XMMWORD PTR [rbp+0x20]
    55c0:	48 8d 0d 79 fd ff ff 	lea    rcx,[rip+0xfffffffffffffd79]        # 5340 <is_hit_sphere>
    55c7:	c4 e1 f9 6e c1       	vmovq  xmm0,rcx
    55cc:	c5 f9 6f 65 30       	vmovdqa xmm4,XMMWORD PTR [rbp+0x30]
    55d1:	c5 f9 6f 6d 40       	vmovdqa xmm5,XMMWORD PTR [rbp+0x40]
    55d6:	48 8d 15 53 fd ff ff 	lea    rdx,[rip+0xfffffffffffffd53]        # 5330 <delete_sphere>
    55dd:	c5 f9 6f 75 50       	vmovdqa xmm6,XMMWORD PTR [rbp+0x50]
    55e2:	c4 63 f9 22 c2 01    	vpinsrq xmm8,xmm0,rdx,0x1
    55e8:	c5 f9 7f 10          	vmovdqa XMMWORD PTR [rax],xmm2
    55ec:	c5 fa 7e 3d b4 b9 00 	vmovq  xmm7,QWORD PTR [rip+0xb9b4]        # 10fa8 <_GLOBAL_OFFSET_TABLE_+0x238>
    55f3:	00 
    55f4:	c4 e3 c1 22 0d e2 b9 	vpinsrq xmm1,xmm7,QWORD PTR [rip+0xb9e2],0x1        # 10fe0 <_GLOBAL_OFFSET_TABLE_+0x270>
    55fb:	00 00 01 
    55fe:	c5 7a 10 95 80 00 00 	vmovss xmm10,DWORD PTR [rbp+0x80]
    5605:	00 
    5606:	c5 f9 7f 58 10       	vmovdqa XMMWORD PTR [rax+0x10],xmm3
    560b:	c5 f9 7f 60 20       	vmovdqa XMMWORD PTR [rax+0x20],xmm4
    5610:	c4 63 3d 38 c9 01    	vinserti128 ymm9,ymm8,xmm1,0x1
    5616:	c5 f9 7f 68 30       	vmovdqa XMMWORD PTR [rax+0x30],xmm5
    561b:	c5 f9 7f 70 40       	vmovdqa XMMWORD PTR [rax+0x40],xmm6
    5620:	c5 7e 7f 48 50       	vmovdqu YMMWORD PTR [rax+0x50],ymm9
    5625:	c5 7a 11 50 70       	vmovss DWORD PTR [rax+0x70],xmm10
    562a:	c5 f8 77             	vzeroupper 
    562d:	c9                   	leave  
    562e:	c3                   	ret    
    562f:	90                   	nop

0000000000005630 <set_hit_record_by_sphere>:
    5630:	f3 0f 1e fa          	endbr64 
    5634:	55                   	push   rbp
    5635:	48 89 f5             	mov    rbp,rsi
    5638:	53                   	push   rbx
    5639:	48 89 fb             	mov    rbx,rdi
    563c:	48 83 ec 28          	sub    rsp,0x28
    5640:	c5 fa 11 47 30       	vmovss DWORD PTR [rdi+0x30],xmm0
    5645:	ff 74 24 58          	push   QWORD PTR [rsp+0x58]
    5649:	ff 74 24 58          	push   QWORD PTR [rsp+0x58]
    564d:	ff 74 24 58          	push   QWORD PTR [rsp+0x58]
    5651:	ff 74 24 58          	push   QWORD PTR [rsp+0x58]
    5655:	e8 66 f1 ff ff       	call   47c0 <get_point_in_ray>
    565a:	c5 fa 10 65 70       	vmovss xmm4,DWORD PTR [rbp+0x70]
    565f:	c5 fa 7e 55 00       	vmovq  xmm2,QWORD PTR [rbp+0x0]
    5664:	c5 fa 7e 5d 08       	vmovq  xmm3,QWORD PTR [rbp+0x8]
    5669:	c5 f9 d6 03          	vmovq  QWORD PTR [rbx],xmm0
    566d:	c5 fa 11 64 24 2c    	vmovss DWORD PTR [rsp+0x2c],xmm4
    5673:	48 83 c4 20          	add    rsp,0x20
    5677:	c5 f9 d6 4b 08       	vmovq  QWORD PTR [rbx+0x8],xmm1
    567c:	e8 5f 1a 00 00       	call   70e0 <subtract_vector3>
    5681:	c5 fa 10 54 24 0c    	vmovss xmm2,DWORD PTR [rsp+0xc]
    5687:	e8 d4 1a 00 00       	call   7160 <divide_vector3>
    568c:	c5 f9 6f 6d 10       	vmovdqa xmm5,XMMWORD PTR [rbp+0x10]
    5691:	48 89 6b 38          	mov    QWORD PTR [rbx+0x38],rbp
    5695:	c5 f9 d6 43 10       	vmovq  QWORD PTR [rbx+0x10],xmm0
    569a:	c5 f9 d6 4b 18       	vmovq  QWORD PTR [rbx+0x18],xmm1
    569f:	c5 f9 7f 6b 20       	vmovdqa XMMWORD PTR [rbx+0x20],xmm5
    56a4:	48 83 c4 28          	add    rsp,0x28
    56a8:	5b                   	pop    rbx
    56a9:	5d                   	pop    rbp
    56aa:	c3                   	ret    
    56ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000056b0 <update_scale_diameter_sphere>:
    56b0:	f3 0f 1e fa          	endbr64 
    56b4:	53                   	push   rbx
    56b5:	48 89 fb             	mov    rbx,rdi
    56b8:	83 fe 08             	cmp    esi,0x8
    56bb:	74 2b                	je     56e8 <update_scale_diameter_sphere+0x38>
    56bd:	83 fe 09             	cmp    esi,0x9
    56c0:	74 06                	je     56c8 <update_scale_diameter_sphere+0x18>
    56c2:	5b                   	pop    rbx
    56c3:	c3                   	ret    
    56c4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    56c8:	c5 fa 10 47 70       	vmovss xmm0,DWORD PTR [rdi+0x70]
    56cd:	c5 fa 10 0d 47 6a 00 	vmovss xmm1,DWORD PTR [rip+0x6a47]        # c11c <CSWTCH.3+0x5c>
    56d4:	00 
    56d5:	c5 fa 5c c1          	vsubss xmm0,xmm0,xmm1
    56d9:	e8 b2 ce ff ff       	call   2590 <fmaxf@plt>
    56de:	c5 fa 11 43 70       	vmovss DWORD PTR [rbx+0x70],xmm0
    56e3:	5b                   	pop    rbx
    56e4:	c3                   	ret    
    56e5:	0f 1f 00             	nop    DWORD PTR [rax]
    56e8:	c5 fa 10 0d 2c 6a 00 	vmovss xmm1,DWORD PTR [rip+0x6a2c]        # c11c <CSWTCH.3+0x5c>
    56ef:	00 
    56f0:	c5 f2 58 57 70       	vaddss xmm2,xmm1,DWORD PTR [rdi+0x70]
    56f5:	5b                   	pop    rbx
    56f6:	c5 fa 11 57 70       	vmovss DWORD PTR [rdi+0x70],xmm2
    56fb:	c3                   	ret    
    56fc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000005700 <update_scale_height_sphere>:
    5700:	f3 0f 1e fa          	endbr64 
    5704:	c3                   	ret    
    5705:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    570c:	00 00 00 
    570f:	90                   	nop

0000000000005710 <init_world>:
    5710:	f3 0f 1e fa          	endbr64 
    5714:	c6 47 50 00          	mov    BYTE PTR [rdi+0x50],0x0
    5718:	be 08 00 00 00       	mov    esi,0x8
    571d:	48 81 c7 c8 00 00 00 	add    rdi,0xc8
    5724:	c6 47 b8 00          	mov    BYTE PTR [rdi-0x48],0x0
    5728:	c6 47 f8 00          	mov    BYTE PTR [rdi-0x8],0x0
    572c:	48 c7 47 50 00 00 00 	mov    QWORD PTR [rdi+0x50],0x0
    5733:	00 
    5734:	e9 97 16 00 00       	jmp    6dd0 <init_array_list>
    5739:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000005740 <destroy_world>:
    5740:	f3 0f 1e fa          	endbr64 
    5744:	48 81 c7 c8 00 00 00 	add    rdi,0xc8
    574b:	e9 80 fb ff ff       	jmp    52d0 <destroy_shapes>

0000000000005750 <try_add_ambient_light_to_world>:
    5750:	f3 0f 1e fa          	endbr64 
    5754:	55                   	push   rbp
    5755:	48 89 f5             	mov    rbp,rsi
    5758:	53                   	push   rbx
    5759:	48 89 fb             	mov    rbx,rdi
    575c:	48 83 ec 08          	sub    rsp,0x8
    5760:	e8 9b 0b 00 00       	call   6300 <get_count_to_words>
    5765:	48 83 f8 03          	cmp    rax,0x3
    5769:	74 0d                	je     5778 <try_add_ambient_light_to_world+0x28>
    576b:	48 83 c4 08          	add    rsp,0x8
    576f:	31 c0                	xor    eax,eax
    5771:	5b                   	pop    rbx
    5772:	5d                   	pop    rbp
    5773:	c3                   	ret    
    5774:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    5778:	48 8b 7b 10          	mov    rdi,QWORD PTR [rbx+0x10]
    577c:	be 2c 00 00 00       	mov    esi,0x2c
    5781:	e8 ba 0a 00 00       	call   6240 <get_count_words>
    5786:	48 83 f8 03          	cmp    rax,0x3
    578a:	75 df                	jne    576b <try_add_ambient_light_to_world+0x1b>
    578c:	80 bd 80 00 00 00 00 	cmp    BYTE PTR [rbp+0x80],0x0
    5793:	75 d6                	jne    576b <try_add_ambient_light_to_world+0x1b>
    5795:	48 8b 7b 08          	mov    rdi,QWORD PTR [rbx+0x8]
    5799:	48 8d 75 60          	lea    rsi,[rbp+0x60]
    579d:	e8 0e 12 00 00       	call   69b0 <try_atof>
    57a2:	84 c0                	test   al,al
    57a4:	74 c5                	je     576b <try_add_ambient_light_to_world+0x1b>
    57a6:	c5 fa 10 45 60       	vmovss xmm0,DWORD PTR [rbp+0x60]
    57ab:	e8 30 e8 ff ff       	call   3fe0 <is_invalid_ratio_in_range>
    57b0:	84 c0                	test   al,al
    57b2:	75 b7                	jne    576b <try_add_ambient_light_to_world+0x1b>
    57b4:	48 8b 7b 10          	mov    rdi,QWORD PTR [rbx+0x10]
    57b8:	48 8d 75 70          	lea    rsi,[rbp+0x70]
    57bc:	e8 0f e7 ff ff       	call   3ed0 <try_parse_color>
    57c1:	84 c0                	test   al,al
    57c3:	74 a6                	je     576b <try_add_ambient_light_to_world+0x1b>
    57c5:	c6 85 80 00 00 00 01 	mov    BYTE PTR [rbp+0x80],0x1
    57cc:	48 83 c4 08          	add    rsp,0x8
    57d0:	5b                   	pop    rbx
    57d1:	5d                   	pop    rbp
    57d2:	c3                   	ret    
    57d3:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    57da:	00 00 00 00 
    57de:	66 90                	xchg   ax,ax

00000000000057e0 <try_add_camera_to_world>:
    57e0:	f3 0f 1e fa          	endbr64 
    57e4:	41 54                	push   r12
    57e6:	49 89 d4             	mov    r12,rdx
    57e9:	55                   	push   rbp
    57ea:	48 89 f5             	mov    rbp,rsi
    57ed:	53                   	push   rbx
    57ee:	48 89 fb             	mov    rbx,rdi
    57f1:	48 83 ec 10          	sub    rsp,0x10
    57f5:	e8 06 0b 00 00       	call   6300 <get_count_to_words>
    57fa:	48 83 f8 04          	cmp    rax,0x4
    57fe:	74 10                	je     5810 <try_add_camera_to_world+0x30>
    5800:	31 c0                	xor    eax,eax
    5802:	48 83 c4 10          	add    rsp,0x10
    5806:	5b                   	pop    rbx
    5807:	5d                   	pop    rbp
    5808:	41 5c                	pop    r12
    580a:	c3                   	ret    
    580b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    5810:	48 8b 7b 08          	mov    rdi,QWORD PTR [rbx+0x8]
    5814:	be 2c 00 00 00       	mov    esi,0x2c
    5819:	e8 22 0a 00 00       	call   6240 <get_count_words>
    581e:	48 83 f8 03          	cmp    rax,0x3
    5822:	75 dc                	jne    5800 <try_add_camera_to_world+0x20>
    5824:	48 8b 7b 10          	mov    rdi,QWORD PTR [rbx+0x10]
    5828:	be 2c 00 00 00       	mov    esi,0x2c
    582d:	e8 0e 0a 00 00       	call   6240 <get_count_words>
    5832:	48 83 f8 03          	cmp    rax,0x3
    5836:	75 c8                	jne    5800 <try_add_camera_to_world+0x20>
    5838:	80 7d 50 00          	cmp    BYTE PTR [rbp+0x50],0x0
    583c:	75 c2                	jne    5800 <try_add_camera_to_world+0x20>
    583e:	48 8b 7b 08          	mov    rdi,QWORD PTR [rbx+0x8]
    5842:	48 89 ee             	mov    rsi,rbp
    5845:	e8 16 e6 ff ff       	call   3e60 <try_parse_vector3>
    584a:	84 c0                	test   al,al
    584c:	74 b2                	je     5800 <try_add_camera_to_world+0x20>
    584e:	48 8b 7b 10          	mov    rdi,QWORD PTR [rbx+0x10]
    5852:	48 8d 75 30          	lea    rsi,[rbp+0x30]
    5856:	e8 05 e6 ff ff       	call   3e60 <try_parse_vector3>
    585b:	84 c0                	test   al,al
    585d:	74 a1                	je     5800 <try_add_camera_to_world+0x20>
    585f:	48 8b 7b 18          	mov    rdi,QWORD PTR [rbx+0x18]
    5863:	48 8d 75 40          	lea    rsi,[rbp+0x40]
    5867:	e8 44 11 00 00       	call   69b0 <try_atof>
    586c:	84 c0                	test   al,al
    586e:	88 44 24 0f          	mov    BYTE PTR [rsp+0xf],al
    5872:	74 8c                	je     5800 <try_add_camera_to_world+0x20>
    5874:	c5 fa 10 45 40       	vmovss xmm0,DWORD PTR [rbp+0x40]
    5879:	c5 f8 2f 05 83 69 00 	vcomiss xmm0,DWORD PTR [rip+0x6983]        # c204 <CSWTCH.3+0x144>
    5880:	00 
    5881:	0f 87 79 ff ff ff    	ja     5800 <try_add_camera_to_world+0x20>
    5887:	c5 f0 57 c9          	vxorps xmm1,xmm1,xmm1
    588b:	c5 f8 2f c8          	vcomiss xmm1,xmm0
    588f:	0f 87 6b ff ff ff    	ja     5800 <try_add_camera_to_world+0x20>
    5895:	4c 89 e6             	mov    rsi,r12
    5898:	48 89 ef             	mov    rdi,rbp
    589b:	e8 70 d5 ff ff       	call   2e10 <init_camera>
    58a0:	0f b6 44 24 0f       	movzx  eax,BYTE PTR [rsp+0xf]
    58a5:	e9 58 ff ff ff       	jmp    5802 <try_add_camera_to_world+0x22>
    58aa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000058b0 <try_add_light_to_world>:
    58b0:	f3 0f 1e fa          	endbr64 
    58b4:	55                   	push   rbp
    58b5:	48 89 f5             	mov    rbp,rsi
    58b8:	53                   	push   rbx
    58b9:	48 89 fb             	mov    rbx,rdi
    58bc:	48 83 ec 08          	sub    rsp,0x8
    58c0:	e8 3b 0a 00 00       	call   6300 <get_count_to_words>
    58c5:	48 83 f8 04          	cmp    rax,0x4
    58c9:	74 0d                	je     58d8 <try_add_light_to_world+0x28>
    58cb:	48 83 c4 08          	add    rsp,0x8
    58cf:	31 c0                	xor    eax,eax
    58d1:	5b                   	pop    rbx
    58d2:	5d                   	pop    rbp
    58d3:	c3                   	ret    
    58d4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    58d8:	48 8b 7b 08          	mov    rdi,QWORD PTR [rbx+0x8]
    58dc:	be 2c 00 00 00       	mov    esi,0x2c
    58e1:	e8 5a 09 00 00       	call   6240 <get_count_words>
    58e6:	48 83 f8 03          	cmp    rax,0x3
    58ea:	75 df                	jne    58cb <try_add_light_to_world+0x1b>
    58ec:	48 8b 7b 18          	mov    rdi,QWORD PTR [rbx+0x18]
    58f0:	be 2c 00 00 00       	mov    esi,0x2c
    58f5:	e8 46 09 00 00       	call   6240 <get_count_words>
    58fa:	48 83 f8 03          	cmp    rax,0x3
    58fe:	75 cb                	jne    58cb <try_add_light_to_world+0x1b>
    5900:	80 bd c0 00 00 00 00 	cmp    BYTE PTR [rbp+0xc0],0x0
    5907:	75 c2                	jne    58cb <try_add_light_to_world+0x1b>
    5909:	48 8b 7b 08          	mov    rdi,QWORD PTR [rbx+0x8]
    590d:	48 8d b5 90 00 00 00 	lea    rsi,[rbp+0x90]
    5914:	e8 47 e5 ff ff       	call   3e60 <try_parse_vector3>
    5919:	84 c0                	test   al,al
    591b:	74 ae                	je     58cb <try_add_light_to_world+0x1b>
    591d:	48 8b 7b 10          	mov    rdi,QWORD PTR [rbx+0x10]
    5921:	48 8d b5 a0 00 00 00 	lea    rsi,[rbp+0xa0]
    5928:	e8 83 10 00 00       	call   69b0 <try_atof>
    592d:	84 c0                	test   al,al
    592f:	74 9a                	je     58cb <try_add_light_to_world+0x1b>
    5931:	c5 fa 10 85 a0 00 00 	vmovss xmm0,DWORD PTR [rbp+0xa0]
    5938:	00 
    5939:	e8 a2 e6 ff ff       	call   3fe0 <is_invalid_ratio_in_range>
    593e:	84 c0                	test   al,al
    5940:	75 89                	jne    58cb <try_add_light_to_world+0x1b>
    5942:	48 8b 7b 18          	mov    rdi,QWORD PTR [rbx+0x18]
    5946:	48 8d b5 b0 00 00 00 	lea    rsi,[rbp+0xb0]
    594d:	e8 7e e5 ff ff       	call   3ed0 <try_parse_color>
    5952:	84 c0                	test   al,al
    5954:	0f 84 71 ff ff ff    	je     58cb <try_add_light_to_world+0x1b>
    595a:	c6 85 c0 00 00 00 01 	mov    BYTE PTR [rbp+0xc0],0x1
    5961:	48 83 c4 08          	add    rsp,0x8
    5965:	5b                   	pop    rbx
    5966:	5d                   	pop    rbp
    5967:	c3                   	ret    
    5968:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    596f:	00 

0000000000005970 <convert_colors>:
    5970:	f3 0f 1e fa          	endbr64 
    5974:	48 89 f8             	mov    rax,rdi
    5977:	c1 e7 10             	shl    edi,0x10
    597a:	48 c1 e8 20          	shr    rax,0x20
    597e:	c1 e0 08             	shl    eax,0x8
    5981:	01 c7                	add    edi,eax
    5983:	8d 04 37             	lea    eax,[rdi+rsi*1]
    5986:	c3                   	ret    
    5987:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    598e:	00 00 

0000000000005990 <add_color>:
    5990:	f3 0f 1e fa          	endbr64 
    5994:	55                   	push   rbp
    5995:	48 89 d0             	mov    rax,rdx
    5998:	48 89 e5             	mov    rbp,rsp
    599b:	53                   	push   rbx
    599c:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    59a0:	48 83 ec 60          	sub    rsp,0x60
    59a4:	48 89 7c 24 40       	mov    QWORD PTR [rsp+0x40],rdi
    59a9:	01 c7                	add    edi,eax
    59ab:	48 89 74 24 48       	mov    QWORD PTR [rsp+0x48],rsi
    59b0:	be ff 00 00 00       	mov    esi,0xff
    59b5:	48 89 4c 24 38       	mov    QWORD PTR [rsp+0x38],rcx
    59ba:	48 89 44 24 30       	mov    QWORD PTR [rsp+0x30],rax
    59bf:	e8 6c 09 00 00       	call   6330 <get_min>
    59c4:	8b 7c 24 34          	mov    edi,DWORD PTR [rsp+0x34]
    59c8:	be ff 00 00 00       	mov    esi,0xff
    59cd:	03 7c 24 44          	add    edi,DWORD PTR [rsp+0x44]
    59d1:	89 c3                	mov    ebx,eax
    59d3:	e8 58 09 00 00       	call   6330 <get_min>
    59d8:	c5 f9 6e cb          	vmovd  xmm1,ebx
    59dc:	8b 7c 24 38          	mov    edi,DWORD PTR [rsp+0x38]
    59e0:	be ff 00 00 00       	mov    esi,0xff
    59e5:	c4 e3 71 22 c0 01    	vpinsrd xmm0,xmm1,eax,0x1
    59eb:	03 7c 24 48          	add    edi,DWORD PTR [rsp+0x48]
    59ef:	c4 e1 f9 7e c3       	vmovq  rbx,xmm0
    59f4:	e8 37 09 00 00       	call   6330 <get_min>
    59f9:	48 89 5c 24 50       	mov    QWORD PTR [rsp+0x50],rbx
    59fe:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    5a02:	89 44 24 58          	mov    DWORD PTR [rsp+0x58],eax
    5a06:	48 8b 44 24 50       	mov    rax,QWORD PTR [rsp+0x50]
    5a0b:	48 8b 54 24 58       	mov    rdx,QWORD PTR [rsp+0x58]
    5a10:	c9                   	leave  
    5a11:	c3                   	ret    
    5a12:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    5a19:	00 00 00 00 
    5a1d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000005a20 <get_radian>:
    5a20:	f3 0f 1e fa          	endbr64 
    5a24:	c5 fa 59 05 dc 67 00 	vmulss xmm0,xmm0,DWORD PTR [rip+0x67dc]        # c208 <CSWTCH.3+0x148>
    5a2b:	00 
    5a2c:	c5 fa 5e 05 d0 67 00 	vdivss xmm0,xmm0,DWORD PTR [rip+0x67d0]        # c204 <CSWTCH.3+0x144>
    5a33:	00 
    5a34:	c3                   	ret    
    5a35:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    5a3c:	00 00 00 
    5a3f:	90                   	nop

0000000000005a40 <load_diffuse_color>:
    5a40:	f3 0f 1e fa          	endbr64 
    5a44:	48 83 ec 58          	sub    rsp,0x58
    5a48:	c5 fa 7e 4c 24 68    	vmovq  xmm1,QWORD PTR [rsp+0x68]
    5a4e:	c5 fa 7e 44 24 60    	vmovq  xmm0,QWORD PTR [rsp+0x60]
    5a54:	c5 fa 7e 94 24 90 00 	vmovq  xmm2,QWORD PTR [rsp+0x90]
    5a5b:	00 00 
    5a5d:	c5 fa 7e 9c 24 98 00 	vmovq  xmm3,QWORD PTR [rsp+0x98]
    5a64:	00 00 
    5a66:	e8 75 16 00 00       	call   70e0 <subtract_vector3>
    5a6b:	e8 40 15 00 00       	call   6fb0 <normalize_vector3>
    5a70:	c5 fa 7e 94 24 a0 00 	vmovq  xmm2,QWORD PTR [rsp+0xa0]
    5a77:	00 00 
    5a79:	c5 fa 7e 9c 24 a8 00 	vmovq  xmm3,QWORD PTR [rsp+0xa8]
    5a80:	00 00 
    5a82:	e8 19 17 00 00       	call   71a0 <dot_product3x3>
    5a87:	c5 f1 57 c9          	vxorpd xmm1,xmm1,xmm1
    5a8b:	c5 fa 5a c0          	vcvtss2sd xmm0,xmm0,xmm0
    5a8f:	e8 ec cb ff ff       	call   2680 <fmax@plt>
    5a94:	48 8b bc 24 80 00 00 	mov    rdi,QWORD PTR [rsp+0x80]
    5a9b:	00 
    5a9c:	48 8b b4 24 88 00 00 	mov    rsi,QWORD PTR [rsp+0x88]
    5aa3:	00 
    5aa4:	c5 fb 5a c0          	vcvtsd2ss xmm0,xmm0,xmm0
    5aa8:	e8 23 18 00 00       	call   72d0 <multiply_ivector3>
    5aad:	48 8b 8c 24 b8 00 00 	mov    rcx,QWORD PTR [rsp+0xb8]
    5ab4:	00 
    5ab5:	48 89 c6             	mov    rsi,rax
    5ab8:	48 89 54 24 28       	mov    QWORD PTR [rsp+0x28],rdx
    5abd:	48 89 d0             	mov    rax,rdx
    5ac0:	48 8b 94 24 b0 00 00 	mov    rdx,QWORD PTR [rsp+0xb0]
    5ac7:	00 
    5ac8:	48 89 74 24 20       	mov    QWORD PTR [rsp+0x20],rsi
    5acd:	48 89 f7             	mov    rdi,rsi
    5ad0:	48 83 c4 58          	add    rsp,0x58
    5ad4:	48 89 c6             	mov    rsi,rax
    5ad7:	e9 d4 f2 ff ff       	jmp    4db0 <reflect_light>
    5adc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000005ae0 <load_ambient_color>:
    5ae0:	f3 0f 1e fa          	endbr64 
    5ae4:	48 83 ec 48          	sub    rsp,0x48
    5ae8:	48 8b 94 24 90 00 00 	mov    rdx,QWORD PTR [rsp+0x90]
    5aef:	00 
    5af0:	48 8b 8c 24 98 00 00 	mov    rcx,QWORD PTR [rsp+0x98]
    5af7:	00 
    5af8:	48 8b 7c 24 60       	mov    rdi,QWORD PTR [rsp+0x60]
    5afd:	48 8b 74 24 68       	mov    rsi,QWORD PTR [rsp+0x68]
    5b02:	e8 a9 f2 ff ff       	call   4db0 <reflect_light>
    5b07:	c5 fa 10 05 fd 66 00 	vmovss xmm0,DWORD PTR [rip+0x66fd]        # c20c <CSWTCH.3+0x14c>
    5b0e:	00 
    5b0f:	c5 fa 59 4c 24 50    	vmulss xmm1,xmm0,DWORD PTR [rsp+0x50]
    5b15:	48 89 54 24 08       	mov    QWORD PTR [rsp+0x8],rdx
    5b1a:	48 89 04 24          	mov    QWORD PTR [rsp],rax
    5b1e:	c5 fa 2c f9          	vcvttss2si edi,xmm1
    5b22:	89 fa                	mov    edx,edi
    5b24:	89 fe                	mov    esi,edi
    5b26:	e8 45 18 00 00       	call   7370 <get_ivector3>
    5b2b:	48 8b 4c 24 08       	mov    rcx,QWORD PTR [rsp+0x8]
    5b30:	48 89 c6             	mov    rsi,rax
    5b33:	48 89 54 24 18       	mov    QWORD PTR [rsp+0x18],rdx
    5b38:	48 89 d0             	mov    rax,rdx
    5b3b:	48 8b 14 24          	mov    rdx,QWORD PTR [rsp]
    5b3f:	48 89 74 24 10       	mov    QWORD PTR [rsp+0x10],rsi
    5b44:	48 89 f7             	mov    rdi,rsi
    5b47:	48 83 c4 48          	add    rsp,0x48
    5b4b:	48 89 c6             	mov    rsi,rax
    5b4e:	e9 5d f2 ff ff       	jmp    4db0 <reflect_light>
    5b53:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    5b5a:	00 00 00 
    5b5d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000005b60 <ft_strlen>:
    5b60:	f3 0f 1e fa          	endbr64 
    5b64:	31 c0                	xor    eax,eax
    5b66:	80 3f 00             	cmp    BYTE PTR [rdi],0x0
    5b69:	74 15                	je     5b80 <ft_strlen+0x20>
    5b6b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    5b70:	48 83 c0 01          	add    rax,0x1
    5b74:	80 3c 07 00          	cmp    BYTE PTR [rdi+rax*1],0x0
    5b78:	75 f6                	jne    5b70 <ft_strlen+0x10>
    5b7a:	c3                   	ret    
    5b7b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    5b80:	c3                   	ret    
    5b81:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    5b88:	00 00 00 
    5b8b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005b90 <ft_memset>:
    5b90:	f3 0f 1e fa          	endbr64 
    5b94:	48 85 d2             	test   rdx,rdx
    5b97:	74 17                	je     5bb0 <ft_memset+0x20>
    5b99:	48 83 ec 08          	sub    rsp,0x8
    5b9d:	40 0f be f6          	movsx  esi,sil
    5ba1:	e8 aa c8 ff ff       	call   2450 <memset@plt>
    5ba6:	48 83 c4 08          	add    rsp,0x8
    5baa:	c3                   	ret    
    5bab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    5bb0:	48 89 f8             	mov    rax,rdi
    5bb3:	c3                   	ret    
    5bb4:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    5bbb:	00 00 00 
    5bbe:	66 90                	xchg   ax,ax

0000000000005bc0 <ft_strcmp>:
    5bc0:	f3 0f 1e fa          	endbr64 
    5bc4:	0f b6 17             	movzx  edx,BYTE PTR [rdi]
    5bc7:	0f be 0e             	movsx  ecx,BYTE PTR [rsi]
    5bca:	b8 01 00 00 00       	mov    eax,0x1
    5bcf:	38 d1                	cmp    cl,dl
    5bd1:	74 16                	je     5be9 <ft_strcmp+0x29>
    5bd3:	eb 23                	jmp    5bf8 <ft_strcmp+0x38>
    5bd5:	0f 1f 00             	nop    DWORD PTR [rax]
    5bd8:	0f b6 14 07          	movzx  edx,BYTE PTR [rdi+rax*1]
    5bdc:	48 83 c0 01          	add    rax,0x1
    5be0:	0f be 4c 06 ff       	movsx  ecx,BYTE PTR [rsi+rax*1-0x1]
    5be5:	38 ca                	cmp    dl,cl
    5be7:	75 0f                	jne    5bf8 <ft_strcmp+0x38>
    5be9:	84 d2                	test   dl,dl
    5beb:	75 eb                	jne    5bd8 <ft_strcmp+0x18>
    5bed:	31 c0                	xor    eax,eax
    5bef:	29 c8                	sub    eax,ecx
    5bf1:	c3                   	ret    
    5bf2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    5bf8:	0f be c2             	movsx  eax,dl
    5bfb:	29 c8                	sub    eax,ecx
    5bfd:	c3                   	ret    
    5bfe:	66 90                	xchg   ax,ax

0000000000005c00 <ft_strncmp>:
    5c00:	f3 0f 1e fa          	endbr64 
    5c04:	49 89 f9             	mov    r9,rdi
    5c07:	31 c0                	xor    eax,eax
    5c09:	48 89 d7             	mov    rdi,rdx
    5c0c:	48 85 d2             	test   rdx,rdx
    5c0f:	0f 84 ed 01 00 00    	je     5e02 <ft_strncmp+0x202>
    5c15:	41 0f b6 01          	movzx  eax,BYTE PTR [r9]
    5c19:	0f b6 16             	movzx  edx,BYTE PTR [rsi]
    5c1c:	b9 01 00 00 00       	mov    ecx,0x1
    5c21:	38 c2                	cmp    dl,al
    5c23:	0f 85 d7 01 00 00    	jne    5e00 <ft_strncmp+0x200>
    5c29:	4c 8d 47 ff          	lea    r8,[rdi-0x1]
    5c2d:	41 83 e0 07          	and    r8d,0x7
    5c31:	0f 84 00 01 00 00    	je     5d37 <ft_strncmp+0x137>
    5c37:	84 d2                	test   dl,dl
    5c39:	0f 84 c9 01 00 00    	je     5e08 <ft_strncmp+0x208>
    5c3f:	b9 02 00 00 00       	mov    ecx,0x2
    5c44:	41 0f b6 44 09 ff    	movzx  eax,BYTE PTR [r9+rcx*1-0x1]
    5c4a:	0f b6 54 0e ff       	movzx  edx,BYTE PTR [rsi+rcx*1-0x1]
    5c4f:	38 d0                	cmp    al,dl
    5c51:	0f 85 a9 01 00 00    	jne    5e00 <ft_strncmp+0x200>
    5c57:	49 83 f8 01          	cmp    r8,0x1
    5c5b:	0f 84 d6 00 00 00    	je     5d37 <ft_strncmp+0x137>
    5c61:	49 83 f8 02          	cmp    r8,0x2
    5c65:	0f 84 ad 00 00 00    	je     5d18 <ft_strncmp+0x118>
    5c6b:	49 83 f8 03          	cmp    r8,0x3
    5c6f:	0f 84 86 00 00 00    	je     5cfb <ft_strncmp+0xfb>
    5c75:	49 83 f8 04          	cmp    r8,0x4
    5c79:	74 63                	je     5cde <ft_strncmp+0xde>
    5c7b:	49 83 f8 05          	cmp    r8,0x5
    5c7f:	74 40                	je     5cc1 <ft_strncmp+0xc1>
    5c81:	49 83 f8 06          	cmp    r8,0x6
    5c85:	74 1d                	je     5ca4 <ft_strncmp+0xa4>
    5c87:	84 c0                	test   al,al
    5c89:	0f 84 79 01 00 00    	je     5e08 <ft_strncmp+0x208>
    5c8f:	41 0f b6 04 09       	movzx  eax,BYTE PTR [r9+rcx*1]
    5c94:	0f b6 14 0e          	movzx  edx,BYTE PTR [rsi+rcx*1]
    5c98:	48 83 c1 01          	add    rcx,0x1
    5c9c:	38 d0                	cmp    al,dl
    5c9e:	0f 85 5c 01 00 00    	jne    5e00 <ft_strncmp+0x200>
    5ca4:	84 c0                	test   al,al
    5ca6:	0f 84 5c 01 00 00    	je     5e08 <ft_strncmp+0x208>
    5cac:	41 0f b6 04 09       	movzx  eax,BYTE PTR [r9+rcx*1]
    5cb1:	0f b6 14 0e          	movzx  edx,BYTE PTR [rsi+rcx*1]
    5cb5:	48 83 c1 01          	add    rcx,0x1
    5cb9:	38 d0                	cmp    al,dl
    5cbb:	0f 85 3f 01 00 00    	jne    5e00 <ft_strncmp+0x200>
    5cc1:	84 c0                	test   al,al
    5cc3:	0f 84 3f 01 00 00    	je     5e08 <ft_strncmp+0x208>
    5cc9:	41 0f b6 04 09       	movzx  eax,BYTE PTR [r9+rcx*1]
    5cce:	0f b6 14 0e          	movzx  edx,BYTE PTR [rsi+rcx*1]
    5cd2:	48 83 c1 01          	add    rcx,0x1
    5cd6:	38 d0                	cmp    al,dl
    5cd8:	0f 85 22 01 00 00    	jne    5e00 <ft_strncmp+0x200>
    5cde:	84 c0                	test   al,al
    5ce0:	0f 84 22 01 00 00    	je     5e08 <ft_strncmp+0x208>
    5ce6:	41 0f b6 04 09       	movzx  eax,BYTE PTR [r9+rcx*1]
    5ceb:	0f b6 14 0e          	movzx  edx,BYTE PTR [rsi+rcx*1]
    5cef:	48 83 c1 01          	add    rcx,0x1
    5cf3:	38 d0                	cmp    al,dl
    5cf5:	0f 85 05 01 00 00    	jne    5e00 <ft_strncmp+0x200>
    5cfb:	84 c0                	test   al,al
    5cfd:	0f 84 05 01 00 00    	je     5e08 <ft_strncmp+0x208>
    5d03:	41 0f b6 04 09       	movzx  eax,BYTE PTR [r9+rcx*1]
    5d08:	0f b6 14 0e          	movzx  edx,BYTE PTR [rsi+rcx*1]
    5d0c:	48 83 c1 01          	add    rcx,0x1
    5d10:	38 d0                	cmp    al,dl
    5d12:	0f 85 e8 00 00 00    	jne    5e00 <ft_strncmp+0x200>
    5d18:	84 c0                	test   al,al
    5d1a:	0f 84 e8 00 00 00    	je     5e08 <ft_strncmp+0x208>
    5d20:	48 83 c1 01          	add    rcx,0x1
    5d24:	41 0f b6 44 09 ff    	movzx  eax,BYTE PTR [r9+rcx*1-0x1]
    5d2a:	0f b6 54 0e ff       	movzx  edx,BYTE PTR [rsi+rcx*1-0x1]
    5d2f:	38 d0                	cmp    al,dl
    5d31:	0f 85 c9 00 00 00    	jne    5e00 <ft_strncmp+0x200>
    5d37:	84 c0                	test   al,al
    5d39:	0f 84 c9 00 00 00    	je     5e08 <ft_strncmp+0x208>
    5d3f:	48 39 cf             	cmp    rdi,rcx
    5d42:	0f 84 b8 00 00 00    	je     5e00 <ft_strncmp+0x200>
    5d48:	4c 8d 51 01          	lea    r10,[rcx+0x1]
    5d4c:	43 0f b6 44 11 ff    	movzx  eax,BYTE PTR [r9+r10*1-0x1]
    5d52:	42 0f b6 54 16 ff    	movzx  edx,BYTE PTR [rsi+r10*1-0x1]
    5d58:	38 d0                	cmp    al,dl
    5d5a:	0f 85 a0 00 00 00    	jne    5e00 <ft_strncmp+0x200>
    5d60:	84 d2                	test   dl,dl
    5d62:	0f 84 a0 00 00 00    	je     5e08 <ft_strncmp+0x208>
    5d68:	41 0f b6 44 09 01    	movzx  eax,BYTE PTR [r9+rcx*1+0x1]
    5d6e:	0f b6 54 0e 01       	movzx  edx,BYTE PTR [rsi+rcx*1+0x1]
    5d73:	38 d0                	cmp    al,dl
    5d75:	0f 85 85 00 00 00    	jne    5e00 <ft_strncmp+0x200>
    5d7b:	84 d2                	test   dl,dl
    5d7d:	0f 84 85 00 00 00    	je     5e08 <ft_strncmp+0x208>
    5d83:	41 0f b6 44 09 02    	movzx  eax,BYTE PTR [r9+rcx*1+0x2]
    5d89:	0f b6 54 0e 02       	movzx  edx,BYTE PTR [rsi+rcx*1+0x2]
    5d8e:	38 d0                	cmp    al,dl
    5d90:	75 6e                	jne    5e00 <ft_strncmp+0x200>
    5d92:	84 d2                	test   dl,dl
    5d94:	74 72                	je     5e08 <ft_strncmp+0x208>
    5d96:	41 0f b6 44 09 03    	movzx  eax,BYTE PTR [r9+rcx*1+0x3]
    5d9c:	0f b6 54 0e 03       	movzx  edx,BYTE PTR [rsi+rcx*1+0x3]
    5da1:	38 d0                	cmp    al,dl
    5da3:	75 5b                	jne    5e00 <ft_strncmp+0x200>
    5da5:	84 d2                	test   dl,dl
    5da7:	74 5f                	je     5e08 <ft_strncmp+0x208>
    5da9:	43 0f b6 44 11 03    	movzx  eax,BYTE PTR [r9+r10*1+0x3]
    5daf:	42 0f b6 54 16 03    	movzx  edx,BYTE PTR [rsi+r10*1+0x3]
    5db5:	38 d0                	cmp    al,dl
    5db7:	75 47                	jne    5e00 <ft_strncmp+0x200>
    5db9:	84 c0                	test   al,al
    5dbb:	74 4b                	je     5e08 <ft_strncmp+0x208>
    5dbd:	43 0f b6 44 11 04    	movzx  eax,BYTE PTR [r9+r10*1+0x4]
    5dc3:	42 0f b6 54 16 04    	movzx  edx,BYTE PTR [rsi+r10*1+0x4]
    5dc9:	38 d0                	cmp    al,dl
    5dcb:	75 33                	jne    5e00 <ft_strncmp+0x200>
    5dcd:	84 c0                	test   al,al
    5dcf:	74 37                	je     5e08 <ft_strncmp+0x208>
    5dd1:	43 0f b6 44 11 05    	movzx  eax,BYTE PTR [r9+r10*1+0x5]
    5dd7:	42 0f b6 54 16 05    	movzx  edx,BYTE PTR [rsi+r10*1+0x5]
    5ddd:	38 d0                	cmp    al,dl
    5ddf:	75 1f                	jne    5e00 <ft_strncmp+0x200>
    5de1:	84 c0                	test   al,al
    5de3:	74 23                	je     5e08 <ft_strncmp+0x208>
    5de5:	49 8d 4a 07          	lea    rcx,[r10+0x7]
    5de9:	41 0f b6 44 09 ff    	movzx  eax,BYTE PTR [r9+rcx*1-0x1]
    5def:	0f b6 54 0e ff       	movzx  edx,BYTE PTR [rsi+rcx*1-0x1]
    5df4:	38 d0                	cmp    al,dl
    5df6:	0f 84 3b ff ff ff    	je     5d37 <ft_strncmp+0x137>
    5dfc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    5e00:	29 d0                	sub    eax,edx
    5e02:	c3                   	ret    
    5e03:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    5e08:	31 c0                	xor    eax,eax
    5e0a:	29 d0                	sub    eax,edx
    5e0c:	eb f4                	jmp    5e02 <ft_strncmp+0x202>
    5e0e:	66 90                	xchg   ax,ax

0000000000005e10 <ft_atoi>:
    5e10:	f3 0f 1e fa          	endbr64 
    5e14:	eb 0e                	jmp    5e24 <ft_atoi+0x14>
    5e16:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    5e1d:	00 00 00 
    5e20:	48 83 c7 01          	add    rdi,0x1
    5e24:	0f b6 07             	movzx  eax,BYTE PTR [rdi]
    5e27:	8d 50 f7             	lea    edx,[rax-0x9]
    5e2a:	80 fa 04             	cmp    dl,0x4
    5e2d:	76 f1                	jbe    5e20 <ft_atoi+0x10>
    5e2f:	3c 20                	cmp    al,0x20
    5e31:	74 ed                	je     5e20 <ft_atoi+0x10>
    5e33:	3c 2b                	cmp    al,0x2b
    5e35:	74 69                	je     5ea0 <ft_atoi+0x90>
    5e37:	3c 2d                	cmp    al,0x2d
    5e39:	74 45                	je     5e80 <ft_atoi+0x70>
    5e3b:	8d 48 d0             	lea    ecx,[rax-0x30]
    5e3e:	80 f9 09             	cmp    cl,0x9
    5e41:	77 54                	ja     5e97 <ft_atoi+0x87>
    5e43:	be 01 00 00 00       	mov    esi,0x1
    5e48:	45 31 db             	xor    r11d,r11d
    5e4b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    5e50:	83 e8 30             	sub    eax,0x30
    5e53:	4f 8d 14 9b          	lea    r10,[r11+r11*4]
    5e57:	48 83 c7 01          	add    rdi,0x1
    5e5b:	48 0f be c0          	movsx  rax,al
    5e5f:	4e 8d 1c 50          	lea    r11,[rax+r10*2]
    5e63:	0f b6 07             	movzx  eax,BYTE PTR [rdi]
    5e66:	8d 50 d0             	lea    edx,[rax-0x30]
    5e69:	80 fa 09             	cmp    dl,0x9
    5e6c:	76 e2                	jbe    5e50 <ft_atoi+0x40>
    5e6e:	4c 89 d8             	mov    rax,r11
    5e71:	48 f7 d8             	neg    rax
    5e74:	83 fe ff             	cmp    esi,0xffffffff
    5e77:	41 0f 45 c3          	cmovne eax,r11d
    5e7b:	c3                   	ret    
    5e7c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    5e80:	0f b6 47 01          	movzx  eax,BYTE PTR [rdi+0x1]
    5e84:	be ff ff ff ff       	mov    esi,0xffffffff
    5e89:	48 83 c7 01          	add    rdi,0x1
    5e8d:	44 8d 40 d0          	lea    r8d,[rax-0x30]
    5e91:	41 80 f8 09          	cmp    r8b,0x9
    5e95:	76 b1                	jbe    5e48 <ft_atoi+0x38>
    5e97:	31 c0                	xor    eax,eax
    5e99:	c3                   	ret    
    5e9a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    5ea0:	0f b6 47 01          	movzx  eax,BYTE PTR [rdi+0x1]
    5ea4:	be 01 00 00 00       	mov    esi,0x1
    5ea9:	48 83 c7 01          	add    rdi,0x1
    5ead:	44 8d 48 d0          	lea    r9d,[rax-0x30]
    5eb1:	41 80 f9 09          	cmp    r9b,0x9
    5eb5:	76 91                	jbe    5e48 <ft_atoi+0x38>
    5eb7:	eb de                	jmp    5e97 <ft_atoi+0x87>
    5eb9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000005ec0 <ft_atol>:
    5ec0:	f3 0f 1e fa          	endbr64 
    5ec4:	eb 0e                	jmp    5ed4 <ft_atol+0x14>
    5ec6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    5ecd:	00 00 00 
    5ed0:	48 83 c7 01          	add    rdi,0x1
    5ed4:	0f b6 07             	movzx  eax,BYTE PTR [rdi]
    5ed7:	8d 50 f7             	lea    edx,[rax-0x9]
    5eda:	80 fa 04             	cmp    dl,0x4
    5edd:	76 f1                	jbe    5ed0 <ft_atol+0x10>
    5edf:	3c 20                	cmp    al,0x20
    5ee1:	74 ed                	je     5ed0 <ft_atol+0x10>
    5ee3:	3c 2b                	cmp    al,0x2b
    5ee5:	74 69                	je     5f50 <ft_atol+0x90>
    5ee7:	3c 2d                	cmp    al,0x2d
    5ee9:	74 45                	je     5f30 <ft_atol+0x70>
    5eeb:	8d 48 d0             	lea    ecx,[rax-0x30]
    5eee:	80 f9 09             	cmp    cl,0x9
    5ef1:	77 54                	ja     5f47 <ft_atol+0x87>
    5ef3:	be 01 00 00 00       	mov    esi,0x1
    5ef8:	45 31 db             	xor    r11d,r11d
    5efb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    5f00:	83 e8 30             	sub    eax,0x30
    5f03:	4f 8d 14 9b          	lea    r10,[r11+r11*4]
    5f07:	48 83 c7 01          	add    rdi,0x1
    5f0b:	48 0f be c0          	movsx  rax,al
    5f0f:	4e 8d 1c 50          	lea    r11,[rax+r10*2]
    5f13:	0f b6 07             	movzx  eax,BYTE PTR [rdi]
    5f16:	8d 50 d0             	lea    edx,[rax-0x30]
    5f19:	80 fa 09             	cmp    dl,0x9
    5f1c:	76 e2                	jbe    5f00 <ft_atol+0x40>
    5f1e:	4c 89 d8             	mov    rax,r11
    5f21:	48 f7 d8             	neg    rax
    5f24:	83 fe ff             	cmp    esi,0xffffffff
    5f27:	49 0f 45 c3          	cmovne rax,r11
    5f2b:	c3                   	ret    
    5f2c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    5f30:	0f b6 47 01          	movzx  eax,BYTE PTR [rdi+0x1]
    5f34:	be ff ff ff ff       	mov    esi,0xffffffff
    5f39:	48 83 c7 01          	add    rdi,0x1
    5f3d:	44 8d 40 d0          	lea    r8d,[rax-0x30]
    5f41:	41 80 f8 09          	cmp    r8b,0x9
    5f45:	76 b1                	jbe    5ef8 <ft_atol+0x38>
    5f47:	31 c0                	xor    eax,eax
    5f49:	c3                   	ret    
    5f4a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    5f50:	0f b6 47 01          	movzx  eax,BYTE PTR [rdi+0x1]
    5f54:	be 01 00 00 00       	mov    esi,0x1
    5f59:	48 83 c7 01          	add    rdi,0x1
    5f5d:	44 8d 48 d0          	lea    r9d,[rax-0x30]
    5f61:	41 80 f9 09          	cmp    r9b,0x9
    5f65:	76 91                	jbe    5ef8 <ft_atol+0x38>
    5f67:	eb de                	jmp    5f47 <ft_atol+0x87>
    5f69:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000005f70 <try_atoi>:
    5f70:	f3 0f 1e fa          	endbr64 
    5f74:	41 54                	push   r12
    5f76:	49 89 f4             	mov    r12,rsi
    5f79:	55                   	push   rbp
    5f7a:	53                   	push   rbx
    5f7b:	0f b6 2f             	movzx  ebp,BYTE PTR [rdi]
    5f7e:	48 89 fb             	mov    rbx,rdi
    5f81:	c7 06 00 00 00 00    	mov    DWORD PTR [rsi],0x0
    5f87:	0f b6 07             	movzx  eax,BYTE PTR [rdi]
    5f8a:	8d 50 d5             	lea    edx,[rax-0x2b]
    5f8d:	81 e2 fd 00 00 00    	and    edx,0xfd
    5f93:	75 08                	jne    5f9d <try_atoi+0x2d>
    5f95:	0f b6 47 01          	movzx  eax,BYTE PTR [rdi+0x1]
    5f99:	48 83 c3 01          	add    rbx,0x1
    5f9d:	3c 30                	cmp    al,0x30
    5f9f:	75 10                	jne    5fb1 <try_atoi+0x41>
    5fa1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    5fa8:	48 83 c3 01          	add    rbx,0x1
    5fac:	80 3b 30             	cmp    BYTE PTR [rbx],0x30
    5faf:	74 f7                	je     5fa8 <try_atoi+0x38>
    5fb1:	48 89 df             	mov    rdi,rbx
    5fb4:	e8 a7 fb ff ff       	call   5b60 <ft_strlen>
    5fb9:	49 89 c0             	mov    r8,rax
    5fbc:	31 c0                	xor    eax,eax
    5fbe:	49 83 f8 0b          	cmp    r8,0xb
    5fc2:	76 0c                	jbe    5fd0 <try_atoi+0x60>
    5fc4:	5b                   	pop    rbx
    5fc5:	5d                   	pop    rbp
    5fc6:	41 5c                	pop    r12
    5fc8:	c3                   	ret    
    5fc9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    5fd0:	0f b6 0b             	movzx  ecx,BYTE PTR [rbx]
    5fd3:	8d 71 f7             	lea    esi,[rcx-0x9]
    5fd6:	89 cf                	mov    edi,ecx
    5fd8:	40 80 fe 04          	cmp    sil,0x4
    5fdc:	76 09                	jbe    5fe7 <try_atoi+0x77>
    5fde:	80 f9 20             	cmp    cl,0x20
    5fe1:	0f 85 f6 00 00 00    	jne    60dd <try_atoi+0x16d>
    5fe7:	49 89 d9             	mov    r9,rbx
    5fea:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    5ff0:	41 0f b6 41 01       	movzx  eax,BYTE PTR [r9+0x1]
    5ff5:	49 83 c1 01          	add    r9,0x1
    5ff9:	44 8d 50 f7          	lea    r10d,[rax-0x9]
    5ffd:	89 c7                	mov    edi,eax
    5fff:	41 80 fa 04          	cmp    r10b,0x4
    6003:	76 eb                	jbe    5ff0 <try_atoi+0x80>
    6005:	3c 20                	cmp    al,0x20
    6007:	74 e7                	je     5ff0 <try_atoi+0x80>
    6009:	3c 2b                	cmp    al,0x2b
    600b:	0f 84 9f 00 00 00    	je     60b0 <try_atoi+0x140>
    6011:	41 bb 01 00 00 00    	mov    r11d,0x1
    6017:	3c 2d                	cmp    al,0x2d
    6019:	75 0e                	jne    6029 <try_atoi+0xb9>
    601b:	41 0f b6 41 01       	movzx  eax,BYTE PTR [r9+0x1]
    6020:	45 31 db             	xor    r11d,r11d
    6023:	49 83 c1 01          	add    r9,0x1
    6027:	89 c7                	mov    edi,eax
    6029:	83 ef 30             	sub    edi,0x30
    602c:	40 80 ff 09          	cmp    dil,0x9
    6030:	77 66                	ja     6098 <try_atoi+0x128>
    6032:	45 31 c0             	xor    r8d,r8d
    6035:	0f 1f 00             	nop    DWORD PTR [rax]
    6038:	83 e8 30             	sub    eax,0x30
    603b:	4b 8d 14 80          	lea    rdx,[r8+r8*4]
    603f:	49 83 c1 01          	add    r9,0x1
    6043:	48 0f be c0          	movsx  rax,al
    6047:	4c 8d 04 50          	lea    r8,[rax+rdx*2]
    604b:	41 0f b6 01          	movzx  eax,BYTE PTR [r9]
    604f:	8d 70 d0             	lea    esi,[rax-0x30]
    6052:	40 80 fe 09          	cmp    sil,0x9
    6056:	76 e0                	jbe    6038 <try_atoi+0xc8>
    6058:	49 81 f8 ff ff ff 7f 	cmp    r8,0x7fffffff
    605f:	7e 37                	jle    6098 <try_atoi+0x128>
    6061:	31 c0                	xor    eax,eax
    6063:	45 84 db             	test   r11b,r11b
    6066:	74 30                	je     6098 <try_atoi+0x128>
    6068:	5b                   	pop    rbx
    6069:	5d                   	pop    rbp
    606a:	41 5c                	pop    r12
    606c:	c3                   	ret    
    606d:	0f 1f 00             	nop    DWORD PTR [rax]
    6070:	0f be f9             	movsx  edi,cl
    6073:	e8 28 13 00 00       	call   73a0 <ft_isdigit>
    6078:	85 c0                	test   eax,eax
    607a:	74 54                	je     60d0 <try_atoi+0x160>
    607c:	41 8b 0c 24          	mov    ecx,DWORD PTR [r12]
    6080:	44 0f be 13          	movsx  r10d,BYTE PTR [rbx]
    6084:	48 83 c3 01          	add    rbx,0x1
    6088:	44 8d 0c 89          	lea    r9d,[rcx+rcx*4]
    608c:	43 8d 7c 4a d0       	lea    edi,[r10+r9*2-0x30]
    6091:	41 89 3c 24          	mov    DWORD PTR [r12],edi
    6095:	0f b6 0b             	movzx  ecx,BYTE PTR [rbx]
    6098:	84 c9                	test   cl,cl
    609a:	75 d4                	jne    6070 <try_atoi+0x100>
    609c:	40 80 fd 2d          	cmp    bpl,0x2d
    60a0:	75 04                	jne    60a6 <try_atoi+0x136>
    60a2:	41 f7 1c 24          	neg    DWORD PTR [r12]
    60a6:	5b                   	pop    rbx
    60a7:	b8 01 00 00 00       	mov    eax,0x1
    60ac:	5d                   	pop    rbp
    60ad:	41 5c                	pop    r12
    60af:	c3                   	ret    
    60b0:	41 0f b6 41 01       	movzx  eax,BYTE PTR [r9+0x1]
    60b5:	41 bb 01 00 00 00    	mov    r11d,0x1
    60bb:	49 83 c1 01          	add    r9,0x1
    60bf:	89 c7                	mov    edi,eax
    60c1:	e9 63 ff ff ff       	jmp    6029 <try_atoi+0xb9>
    60c6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    60cd:	00 00 00 
    60d0:	5b                   	pop    rbx
    60d1:	5d                   	pop    rbp
    60d2:	41 c7 04 24 00 00 00 	mov    DWORD PTR [r12],0x0
    60d9:	00 
    60da:	41 5c                	pop    r12
    60dc:	c3                   	ret    
    60dd:	89 c8                	mov    eax,ecx
    60df:	49 89 d9             	mov    r9,rbx
    60e2:	e9 22 ff ff ff       	jmp    6009 <try_atoi+0x99>
    60e7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    60ee:	00 00 

00000000000060f0 <ft_split>:
    60f0:	f3 0f 1e fa          	endbr64 
    60f4:	41 57                	push   r15
    60f6:	41 89 f7             	mov    r15d,esi
    60f9:	41 56                	push   r14
    60fb:	41 55                	push   r13
    60fd:	41 54                	push   r12
    60ff:	55                   	push   rbp
    6100:	48 89 fd             	mov    rbp,rdi
    6103:	53                   	push   rbx
    6104:	48 83 ec 08          	sub    rsp,0x8
    6108:	0f b6 07             	movzx  eax,BYTE PTR [rdi]
    610b:	84 c0                	test   al,al
    610d:	0f 84 e3 00 00 00    	je     61f6 <ft_split+0x106>
    6113:	48 89 fa             	mov    rdx,rdi
    6116:	31 f6                	xor    esi,esi
    6118:	b9 01 00 00 00       	mov    ecx,0x1
    611d:	eb 0f                	jmp    612e <ft_split+0x3e>
    611f:	90                   	nop
    6120:	31 c9                	xor    ecx,ecx
    6122:	0f b6 42 01          	movzx  eax,BYTE PTR [rdx+0x1]
    6126:	48 83 c2 01          	add    rdx,0x1
    612a:	84 c0                	test   al,al
    612c:	74 1e                	je     614c <ft_split+0x5c>
    612e:	41 38 c7             	cmp    r15b,al
    6131:	75 ed                	jne    6120 <ft_split+0x30>
    6133:	85 c9                	test   ecx,ecx
    6135:	75 eb                	jne    6122 <ft_split+0x32>
    6137:	0f b6 42 01          	movzx  eax,BYTE PTR [rdx+0x1]
    613b:	48 83 c2 01          	add    rdx,0x1
    613f:	48 83 c6 01          	add    rsi,0x1
    6143:	b9 01 00 00 00       	mov    ecx,0x1
    6148:	84 c0                	test   al,al
    614a:	75 e2                	jne    612e <ft_split+0x3e>
    614c:	83 f9 01             	cmp    ecx,0x1
    614f:	48 83 d6 01          	adc    rsi,0x1
    6153:	bf 08 00 00 00       	mov    edi,0x8
    6158:	e8 83 1c 00 00       	call   7de0 <ft_calloc>
    615d:	44 0f b6 4d 00       	movzx  r9d,BYTE PTR [rbp+0x0]
    6162:	49 89 c5             	mov    r13,rax
    6165:	45 84 c9             	test   r9b,r9b
    6168:	74 71                	je     61db <ft_split+0xeb>
    616a:	45 31 e4             	xor    r12d,r12d
    616d:	48 85 c0             	test   rax,rax
    6170:	74 69                	je     61db <ft_split+0xeb>
    6172:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    6178:	31 db                	xor    ebx,ebx
    617a:	45 38 cf             	cmp    r15b,r9b
    617d:	75 0e                	jne    618d <ft_split+0x9d>
    617f:	eb 6f                	jmp    61f0 <ft_split+0x100>
    6181:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    6188:	40 84 ff             	test   dil,dil
    618b:	74 11                	je     619e <ft_split+0xae>
    618d:	48 89 de             	mov    rsi,rbx
    6190:	48 83 c3 01          	add    rbx,0x1
    6194:	0f b6 7c 1d 00       	movzx  edi,BYTE PTR [rbp+rbx*1+0x0]
    6199:	41 38 ff             	cmp    r15b,dil
    619c:	75 ea                	jne    6188 <ft_split+0x98>
    619e:	48 85 db             	test   rbx,rbx
    61a1:	74 4d                	je     61f0 <ft_split+0x100>
    61a3:	4c 8d 76 02          	lea    r14,[rsi+0x2]
    61a7:	4c 89 f7             	mov    rdi,r14
    61aa:	e8 91 c3 ff ff       	call   2540 <malloc@plt>
    61af:	4d 63 c4             	movsxd r8,r12d
    61b2:	4b 89 44 c5 00       	mov    QWORD PTR [r13+r8*8+0x0],rax
    61b7:	48 89 c7             	mov    rdi,rax
    61ba:	48 85 c0             	test   rax,rax
    61bd:	74 41                	je     6200 <ft_split+0x110>
    61bf:	48 89 ee             	mov    rsi,rbp
    61c2:	4c 89 f2             	mov    rdx,r14
    61c5:	41 83 c4 01          	add    r12d,0x1
    61c9:	48 01 dd             	add    rbp,rbx
    61cc:	e8 3f 1a 00 00       	call   7c10 <ft_strlcpy>
    61d1:	44 0f b6 4d 00       	movzx  r9d,BYTE PTR [rbp+0x0]
    61d6:	45 84 c9             	test   r9b,r9b
    61d9:	75 9d                	jne    6178 <ft_split+0x88>
    61db:	48 83 c4 08          	add    rsp,0x8
    61df:	4c 89 e8             	mov    rax,r13
    61e2:	5b                   	pop    rbx
    61e3:	5d                   	pop    rbp
    61e4:	41 5c                	pop    r12
    61e6:	41 5d                	pop    r13
    61e8:	41 5e                	pop    r14
    61ea:	41 5f                	pop    r15
    61ec:	c3                   	ret    
    61ed:	0f 1f 00             	nop    DWORD PTR [rax]
    61f0:	48 83 c5 01          	add    rbp,0x1
    61f4:	eb db                	jmp    61d1 <ft_split+0xe1>
    61f6:	be 01 00 00 00       	mov    esi,0x1
    61fb:	e9 53 ff ff ff       	jmp    6153 <ft_split+0x63>
    6200:	49 8b 7d 00          	mov    rdi,QWORD PTR [r13+0x0]
    6204:	4c 89 eb             	mov    rbx,r13
    6207:	48 85 ff             	test   rdi,rdi
    620a:	74 19                	je     6225 <ft_split+0x135>
    620c:	e8 af c3 ff ff       	call   25c0 <free@plt>
    6211:	48 83 c3 08          	add    rbx,0x8
    6215:	48 c7 43 f8 00 00 00 	mov    QWORD PTR [rbx-0x8],0x0
    621c:	00 
    621d:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    6220:	48 85 ff             	test   rdi,rdi
    6223:	75 e7                	jne    620c <ft_split+0x11c>
    6225:	4c 89 ef             	mov    rdi,r13
    6228:	45 31 ed             	xor    r13d,r13d
    622b:	e8 90 c3 ff ff       	call   25c0 <free@plt>
    6230:	eb a9                	jmp    61db <ft_split+0xeb>
    6232:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    6239:	00 00 00 00 
    623d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000006240 <get_count_words>:
    6240:	f3 0f 1e fa          	endbr64 
    6244:	0f b6 17             	movzx  edx,BYTE PTR [rdi]
    6247:	84 d2                	test   dl,dl
    6249:	74 45                	je     6290 <get_count_words+0x50>
    624b:	b9 01 00 00 00       	mov    ecx,0x1
    6250:	31 c0                	xor    eax,eax
    6252:	eb 12                	jmp    6266 <get_count_words+0x26>
    6254:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    6258:	31 c9                	xor    ecx,ecx
    625a:	0f b6 57 01          	movzx  edx,BYTE PTR [rdi+0x1]
    625e:	48 83 c7 01          	add    rdi,0x1
    6262:	84 d2                	test   dl,dl
    6264:	74 1e                	je     6284 <get_count_words+0x44>
    6266:	40 38 d6             	cmp    sil,dl
    6269:	75 ed                	jne    6258 <get_count_words+0x18>
    626b:	85 c9                	test   ecx,ecx
    626d:	75 eb                	jne    625a <get_count_words+0x1a>
    626f:	0f b6 57 01          	movzx  edx,BYTE PTR [rdi+0x1]
    6273:	48 83 c7 01          	add    rdi,0x1
    6277:	48 83 c0 01          	add    rax,0x1
    627b:	b9 01 00 00 00       	mov    ecx,0x1
    6280:	84 d2                	test   dl,dl
    6282:	75 e2                	jne    6266 <get_count_words+0x26>
    6284:	83 f9 01             	cmp    ecx,0x1
    6287:	48 83 d0 00          	adc    rax,0x0
    628b:	c3                   	ret    
    628c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    6290:	31 c0                	xor    eax,eax
    6292:	c3                   	ret    
    6293:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    629a:	00 00 00 00 
    629e:	66 90                	xchg   ax,ax

00000000000062a0 <clear_words>:
    62a0:	f3 0f 1e fa          	endbr64 
    62a4:	48 85 ff             	test   rdi,rdi
    62a7:	74 47                	je     62f0 <clear_words+0x50>
    62a9:	55                   	push   rbp
    62aa:	48 89 fd             	mov    rbp,rdi
    62ad:	53                   	push   rbx
    62ae:	48 83 ec 08          	sub    rsp,0x8
    62b2:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
    62b5:	48 85 ff             	test   rdi,rdi
    62b8:	74 1f                	je     62d9 <clear_words+0x39>
    62ba:	48 89 eb             	mov    rbx,rbp
    62bd:	0f 1f 00             	nop    DWORD PTR [rax]
    62c0:	e8 fb c2 ff ff       	call   25c0 <free@plt>
    62c5:	48 83 c3 08          	add    rbx,0x8
    62c9:	48 c7 43 f8 00 00 00 	mov    QWORD PTR [rbx-0x8],0x0
    62d0:	00 
    62d1:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    62d4:	48 85 ff             	test   rdi,rdi
    62d7:	75 e7                	jne    62c0 <clear_words+0x20>
    62d9:	48 83 c4 08          	add    rsp,0x8
    62dd:	48 89 ef             	mov    rdi,rbp
    62e0:	5b                   	pop    rbx
    62e1:	5d                   	pop    rbp
    62e2:	e9 d9 c2 ff ff       	jmp    25c0 <free@plt>
    62e7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    62ee:	00 00 
    62f0:	c3                   	ret    
    62f1:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    62f8:	00 00 00 00 
    62fc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000006300 <get_count_to_words>:
    6300:	f3 0f 1e fa          	endbr64 
    6304:	31 c0                	xor    eax,eax
    6306:	48 83 3f 00          	cmp    QWORD PTR [rdi],0x0
    630a:	74 14                	je     6320 <get_count_to_words+0x20>
    630c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    6310:	48 83 c0 01          	add    rax,0x1
    6314:	48 83 3c c7 00       	cmp    QWORD PTR [rdi+rax*8],0x0
    6319:	75 f5                	jne    6310 <get_count_to_words+0x10>
    631b:	c3                   	ret    
    631c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    6320:	c3                   	ret    
    6321:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    6328:	00 00 00 
    632b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000006330 <get_min>:
    6330:	f3 0f 1e fa          	endbr64 
    6334:	39 f7                	cmp    edi,esi
    6336:	89 f0                	mov    eax,esi
    6338:	0f 4e c7             	cmovle eax,edi
    633b:	c3                   	ret    
    633c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000006340 <get_max>:
    6340:	f3 0f 1e fa          	endbr64 
    6344:	39 f7                	cmp    edi,esi
    6346:	89 f0                	mov    eax,esi
    6348:	0f 4d c7             	cmovge eax,edi
    634b:	c3                   	ret    
    634c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000006350 <get_abs>:
    6350:	f3 0f 1e fa          	endbr64 
    6354:	89 f0                	mov    eax,esi
    6356:	29 f8                	sub    eax,edi
    6358:	29 f7                	sub    edi,esi
    635a:	0f 49 c7             	cmovns eax,edi
    635d:	c3                   	ret    
    635e:	66 90                	xchg   ax,ax

0000000000006360 <read_line_in_file_malloc>:
    6360:	f3 0f 1e fa          	endbr64 
    6364:	41 54                	push   r12
    6366:	be 01 00 00 00       	mov    esi,0x1
    636b:	55                   	push   rbp
    636c:	89 fd                	mov    ebp,edi
    636e:	bf 01 04 00 00       	mov    edi,0x401
    6373:	48 83 ec 08          	sub    rsp,0x8
    6377:	e8 94 c3 ff ff       	call   2710 <calloc@plt>
    637c:	ba 00 04 00 00       	mov    edx,0x400
    6381:	89 ef                	mov    edi,ebp
    6383:	48 89 c6             	mov    rsi,rax
    6386:	49 89 c4             	mov    r12,rax
    6389:	e8 92 c1 ff ff       	call   2520 <read@plt>
    638e:	48 85 c0             	test   rax,rax
    6391:	7e 0b                	jle    639e <read_line_in_file_malloc+0x3e>
    6393:	48 83 c4 08          	add    rsp,0x8
    6397:	4c 89 e0             	mov    rax,r12
    639a:	5d                   	pop    rbp
    639b:	41 5c                	pop    r12
    639d:	c3                   	ret    
    639e:	4c 89 e7             	mov    rdi,r12
    63a1:	45 31 e4             	xor    r12d,r12d
    63a4:	e8 17 c2 ff ff       	call   25c0 <free@plt>
    63a9:	eb e8                	jmp    6393 <read_line_in_file_malloc+0x33>
    63ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000063b0 <join_buffer_in_table_malloc>:
    63b0:	f3 0f 1e fa          	endbr64 
    63b4:	41 56                	push   r14
    63b6:	41 55                	push   r13
    63b8:	41 54                	push   r12
    63ba:	41 89 f4             	mov    r12d,esi
    63bd:	55                   	push   rbp
    63be:	48 89 fd             	mov    rbp,rdi
    63c1:	89 f7                	mov    edi,esi
    63c3:	53                   	push   rbx
    63c4:	e8 97 ff ff ff       	call   6360 <read_line_in_file_malloc>
    63c9:	49 89 c5             	mov    r13,rax
    63cc:	31 c0                	xor    eax,eax
    63ce:	4d 85 ed             	test   r13,r13
    63d1:	0f 84 b1 00 00 00    	je     6488 <join_buffer_in_table_malloc+0xd8>
    63d7:	44 89 e6             	mov    esi,r12d
    63da:	48 89 ef             	mov    rdi,rbp
    63dd:	e8 6e 02 00 00       	call   6650 <get_value_or_null>
    63e2:	48 89 c7             	mov    rdi,rax
    63e5:	48 89 c3             	mov    rbx,rax
    63e8:	e8 73 f7 ff ff       	call   5b60 <ft_strlen>
    63ed:	4c 89 ef             	mov    rdi,r13
    63f0:	49 89 c6             	mov    r14,rax
    63f3:	e8 68 f7 ff ff       	call   5b60 <ft_strlen>
    63f8:	49 8d 7c 06 01       	lea    rdi,[r14+rax*1+0x1]
    63fd:	e8 3e c1 ff ff       	call   2540 <malloc@plt>
    6402:	0f b6 13             	movzx  edx,BYTE PTR [rbx]
    6405:	49 89 c6             	mov    r14,rax
    6408:	84 d2                	test   dl,dl
    640a:	0f 84 88 00 00 00    	je     6498 <join_buffer_in_table_malloc+0xe8>
    6410:	b8 01 00 00 00       	mov    eax,0x1
    6415:	0f 1f 00             	nop    DWORD PTR [rax]
    6418:	41 88 54 06 ff       	mov    BYTE PTR [r14+rax*1-0x1],dl
    641d:	48 63 f0             	movsxd rsi,eax
    6420:	48 89 c1             	mov    rcx,rax
    6423:	48 83 c0 01          	add    rax,0x1
    6427:	0f b6 54 03 ff       	movzx  edx,BYTE PTR [rbx+rax*1-0x1]
    642c:	84 d2                	test   dl,dl
    642e:	75 e8                	jne    6418 <join_buffer_in_table_malloc+0x68>
    6430:	4c 01 f1             	add    rcx,r14
    6433:	45 0f b6 45 00       	movzx  r8d,BYTE PTR [r13+0x0]
    6438:	45 84 c0             	test   r8b,r8b
    643b:	74 2d                	je     646a <join_buffer_in_table_malloc+0xba>
    643d:	8d 46 01             	lea    eax,[rsi+0x1]
    6440:	4c 89 ef             	mov    rdi,r13
    6443:	48 98                	cdqe   
    6445:	48 29 f7             	sub    rdi,rsi
    6448:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    644f:	00 
    6450:	45 88 44 06 ff       	mov    BYTE PTR [r14+rax*1-0x1],r8b
    6455:	48 63 c8             	movsxd rcx,eax
    6458:	48 83 c0 01          	add    rax,0x1
    645c:	44 0f b6 44 07 ff    	movzx  r8d,BYTE PTR [rdi+rax*1-0x1]
    6462:	45 84 c0             	test   r8b,r8b
    6465:	75 e9                	jne    6450 <join_buffer_in_table_malloc+0xa0>
    6467:	4c 01 f1             	add    rcx,r14
    646a:	c6 01 00             	mov    BYTE PTR [rcx],0x0
    646d:	4c 89 ef             	mov    rdi,r13
    6470:	e8 4b c1 ff ff       	call   25c0 <free@plt>
    6475:	4c 89 f2             	mov    rdx,r14
    6478:	44 89 e6             	mov    esi,r12d
    647b:	48 89 ef             	mov    rdi,rbp
    647e:	e8 1d 02 00 00       	call   66a0 <update_key>
    6483:	b8 01 00 00 00       	mov    eax,0x1
    6488:	5b                   	pop    rbx
    6489:	5d                   	pop    rbp
    648a:	41 5c                	pop    r12
    648c:	41 5d                	pop    r13
    648e:	41 5e                	pop    r14
    6490:	c3                   	ret    
    6491:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    6498:	48 89 c1             	mov    rcx,rax
    649b:	31 f6                	xor    esi,esi
    649d:	eb 94                	jmp    6433 <join_buffer_in_table_malloc+0x83>
    649f:	90                   	nop

00000000000064a0 <find_next_line_malloc>:
    64a0:	f3 0f 1e fa          	endbr64 
    64a4:	41 56                	push   r14
    64a6:	41 55                	push   r13
    64a8:	41 89 f5             	mov    r13d,esi
    64ab:	41 54                	push   r12
    64ad:	49 89 fc             	mov    r12,rdi
    64b0:	55                   	push   rbp
    64b1:	53                   	push   rbx
    64b2:	e8 99 01 00 00       	call   6650 <get_value_or_null>
    64b7:	48 89 c5             	mov    rbp,rax
    64ba:	48 85 c0             	test   rax,rax
    64bd:	0f 84 b0 00 00 00    	je     6573 <find_next_line_malloc+0xd3>
    64c3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    64c8:	0f b6 55 00          	movzx  edx,BYTE PTR [rbp+0x0]
    64cc:	84 d2                	test   dl,dl
    64ce:	74 70                	je     6540 <find_next_line_malloc+0xa0>
    64d0:	b8 01 00 00 00       	mov    eax,0x1
    64d5:	80 fa 0a             	cmp    dl,0xa
    64d8:	74 66                	je     6540 <find_next_line_malloc+0xa0>
    64da:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    64e0:	0f b6 54 05 00       	movzx  edx,BYTE PTR [rbp+rax*1+0x0]
    64e5:	89 c1                	mov    ecx,eax
    64e7:	48 89 c3             	mov    rbx,rax
    64ea:	48 83 c0 01          	add    rax,0x1
    64ee:	84 d2                	test   dl,dl
    64f0:	74 56                	je     6548 <find_next_line_malloc+0xa8>
    64f2:	80 fa 0a             	cmp    dl,0xa
    64f5:	75 e9                	jne    64e0 <find_next_line_malloc+0x40>
    64f7:	83 c1 01             	add    ecx,0x1
    64fa:	48 89 ef             	mov    rdi,rbp
    64fd:	48 63 f1             	movsxd rsi,ecx
    6500:	e8 7b 19 00 00       	call   7e80 <ft_strndup_malloc>
    6505:	48 89 ef             	mov    rdi,rbp
    6508:	49 89 c6             	mov    r14,rax
    650b:	e8 50 f6 ff ff       	call   5b60 <ft_strlen>
    6510:	48 8d 7c 1d 01       	lea    rdi,[rbp+rbx*1+0x1]
    6515:	48 29 d8             	sub    rax,rbx
    6518:	48 8d 70 ff          	lea    rsi,[rax-0x1]
    651c:	e8 5f 19 00 00       	call   7e80 <ft_strndup_malloc>
    6521:	44 89 ee             	mov    esi,r13d
    6524:	4c 89 e7             	mov    rdi,r12
    6527:	48 89 c2             	mov    rdx,rax
    652a:	e8 71 01 00 00       	call   66a0 <update_key>
    652f:	5b                   	pop    rbx
    6530:	4c 89 f0             	mov    rax,r14
    6533:	5d                   	pop    rbp
    6534:	41 5c                	pop    r12
    6536:	41 5d                	pop    r13
    6538:	41 5e                	pop    r14
    653a:	c3                   	ret    
    653b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    6540:	31 c9                	xor    ecx,ecx
    6542:	31 db                	xor    ebx,ebx
    6544:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    6548:	80 fa 0a             	cmp    dl,0xa
    654b:	74 aa                	je     64f7 <find_next_line_malloc+0x57>
    654d:	44 89 ee             	mov    esi,r13d
    6550:	4c 89 e7             	mov    rdi,r12
    6553:	e8 58 fe ff ff       	call   63b0 <join_buffer_in_table_malloc>
    6558:	84 c0                	test   al,al
    655a:	74 19                	je     6575 <find_next_line_malloc+0xd5>
    655c:	44 89 ee             	mov    esi,r13d
    655f:	4c 89 e7             	mov    rdi,r12
    6562:	e8 e9 00 00 00       	call   6650 <get_value_or_null>
    6567:	48 89 c5             	mov    rbp,rax
    656a:	48 85 c0             	test   rax,rax
    656d:	0f 85 55 ff ff ff    	jne    64c8 <find_next_line_malloc+0x28>
    6573:	31 ed                	xor    ebp,ebp
    6575:	48 89 ef             	mov    rdi,rbp
    6578:	e8 e3 f5 ff ff       	call   5b60 <ft_strlen>
    657d:	48 89 ef             	mov    rdi,rbp
    6580:	48 89 c6             	mov    rsi,rax
    6583:	e8 f8 18 00 00       	call   7e80 <ft_strndup_malloc>
    6588:	44 89 ee             	mov    esi,r13d
    658b:	4c 89 e7             	mov    rdi,r12
    658e:	49 89 c6             	mov    r14,rax
    6591:	e8 0a 02 00 00       	call   67a0 <remove_key>
    6596:	5b                   	pop    rbx
    6597:	4c 89 f0             	mov    rax,r14
    659a:	5d                   	pop    rbp
    659b:	41 5c                	pop    r12
    659d:	41 5d                	pop    r13
    659f:	41 5e                	pop    r14
    65a1:	c3                   	ret    
    65a2:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    65a9:	00 00 00 00 
    65ad:	0f 1f 00             	nop    DWORD PTR [rax]

00000000000065b0 <get_next_line>:
    65b0:	f3 0f 1e fa          	endbr64 
    65b4:	41 55                	push   r13
    65b6:	4c 8d 2d a3 ab 00 00 	lea    r13,[rip+0xaba3]        # 11160 <table.0>
    65bd:	89 fe                	mov    esi,edi
    65bf:	41 54                	push   r12
    65c1:	55                   	push   rbp
    65c2:	89 fd                	mov    ebp,edi
    65c4:	4c 89 ef             	mov    rdi,r13
    65c7:	e8 84 00 00 00       	call   6650 <get_value_or_null>
    65cc:	48 85 c0             	test   rax,rax
    65cf:	74 37                	je     6608 <get_next_line+0x58>
    65d1:	89 ee                	mov    esi,ebp
    65d3:	4c 89 ef             	mov    rdi,r13
    65d6:	e8 c5 fe ff ff       	call   64a0 <find_next_line_malloc>
    65db:	4c 89 ef             	mov    rdi,r13
    65de:	89 ee                	mov    esi,ebp
    65e0:	49 89 c4             	mov    r12,rax
    65e3:	e8 68 00 00 00       	call   6650 <get_value_or_null>
    65e8:	48 89 c7             	mov    rdi,rax
    65eb:	48 85 c0             	test   rax,rax
    65ee:	74 0a                	je     65fa <get_next_line+0x4a>
    65f0:	e8 6b f5 ff ff       	call   5b60 <ft_strlen>
    65f5:	48 85 c0             	test   rax,rax
    65f8:	74 36                	je     6630 <get_next_line+0x80>
    65fa:	4c 89 e0             	mov    rax,r12
    65fd:	5d                   	pop    rbp
    65fe:	41 5c                	pop    r12
    6600:	41 5d                	pop    r13
    6602:	c3                   	ret    
    6603:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    6608:	89 ef                	mov    edi,ebp
    660a:	e8 51 fd ff ff       	call   6360 <read_line_in_file_malloc>
    660f:	49 89 c4             	mov    r12,rax
    6612:	48 85 c0             	test   rax,rax
    6615:	74 e3                	je     65fa <get_next_line+0x4a>
    6617:	48 89 c2             	mov    rdx,rax
    661a:	89 ee                	mov    esi,ebp
    661c:	4c 89 ef             	mov    rdi,r13
    661f:	e8 7c 00 00 00       	call   66a0 <update_key>
    6624:	eb ab                	jmp    65d1 <get_next_line+0x21>
    6626:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    662d:	00 00 00 
    6630:	89 ee                	mov    esi,ebp
    6632:	4c 89 ef             	mov    rdi,r13
    6635:	e8 66 01 00 00       	call   67a0 <remove_key>
    663a:	4c 89 e0             	mov    rax,r12
    663d:	5d                   	pop    rbp
    663e:	41 5c                	pop    r12
    6640:	41 5d                	pop    r13
    6642:	c3                   	ret    
    6643:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    664a:	00 00 00 
    664d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000006650 <get_value_or_null>:
    6650:	f3 0f 1e fa          	endbr64 
    6654:	48 63 c6             	movsxd rax,esi
    6657:	89 f2                	mov    edx,esi
    6659:	41 89 f1             	mov    r9d,esi
    665c:	48 69 c8 6b 4c a4 07 	imul   rcx,rax,0x7a44c6b
    6663:	c1 fa 1f             	sar    edx,0x1f
    6666:	48 c1 f9 21          	sar    rcx,0x21
    666a:	29 d1                	sub    ecx,edx
    666c:	44 6b c1 43          	imul   r8d,ecx,0x43
    6670:	45 29 c1             	sub    r9d,r8d
    6673:	4d 63 d1             	movsxd r10,r9d
    6676:	4a 8b 04 d7          	mov    rax,QWORD PTR [rdi+r10*8]
    667a:	48 85 c0             	test   rax,rax
    667d:	75 12                	jne    6691 <get_value_or_null+0x41>
    667f:	eb 19                	jmp    669a <get_value_or_null+0x4a>
    6681:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    6688:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    668c:	48 85 c0             	test   rax,rax
    668f:	74 08                	je     6699 <get_value_or_null+0x49>
    6691:	39 30                	cmp    DWORD PTR [rax],esi
    6693:	75 f3                	jne    6688 <get_value_or_null+0x38>
    6695:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    6699:	c3                   	ret    
    669a:	c3                   	ret    
    669b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000066a0 <update_key>:
    66a0:	f3 0f 1e fa          	endbr64 
    66a4:	48 63 c6             	movsxd rax,esi
    66a7:	41 56                	push   r14
    66a9:	49 89 d6             	mov    r14,rdx
    66ac:	48 69 c8 6b 4c a4 07 	imul   rcx,rax,0x7a44c6b
    66b3:	89 c2                	mov    edx,eax
    66b5:	41 55                	push   r13
    66b7:	41 89 c5             	mov    r13d,eax
    66ba:	c1 fa 1f             	sar    edx,0x1f
    66bd:	41 54                	push   r12
    66bf:	49 89 c4             	mov    r12,rax
    66c2:	55                   	push   rbp
    66c3:	48 c1 f9 21          	sar    rcx,0x21
    66c7:	53                   	push   rbx
    66c8:	29 d1                	sub    ecx,edx
    66ca:	6b d9 43             	imul   ebx,ecx,0x43
    66cd:	41 29 dd             	sub    r13d,ebx
    66d0:	4d 63 ed             	movsxd r13,r13d
    66d3:	4a 8b 2c ef          	mov    rbp,QWORD PTR [rdi+r13*8]
    66d7:	48 85 ed             	test   rbp,rbp
    66da:	0f 84 7e 00 00 00    	je     675e <update_key+0xbe>
    66e0:	49 89 ed             	mov    r13,rbp
    66e3:	eb 0c                	jmp    66f1 <update_key+0x51>
    66e5:	0f 1f 00             	nop    DWORD PTR [rax]
    66e8:	4d 8b 6d 10          	mov    r13,QWORD PTR [r13+0x10]
    66ec:	4d 85 ed             	test   r13,r13
    66ef:	74 27                	je     6718 <update_key+0x78>
    66f1:	45 39 65 00          	cmp    DWORD PTR [r13+0x0],r12d
    66f5:	75 f1                	jne    66e8 <update_key+0x48>
    66f7:	49 8b 7d 08          	mov    rdi,QWORD PTR [r13+0x8]
    66fb:	e8 c0 be ff ff       	call   25c0 <free@plt>
    6700:	4d 89 75 08          	mov    QWORD PTR [r13+0x8],r14
    6704:	b8 01 00 00 00       	mov    eax,0x1
    6709:	5b                   	pop    rbx
    670a:	5d                   	pop    rbp
    670b:	41 5c                	pop    r12
    670d:	41 5d                	pop    r13
    670f:	41 5e                	pop    r14
    6711:	c3                   	ret    
    6712:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    6718:	bf 18 00 00 00       	mov    edi,0x18
    671d:	e8 1e be ff ff       	call   2540 <malloc@plt>
    6722:	48 85 c0             	test   rax,rax
    6725:	74 66                	je     678d <update_key+0xed>
    6727:	44 89 20             	mov    DWORD PTR [rax],r12d
    672a:	4c 89 70 08          	mov    QWORD PTR [rax+0x8],r14
    672e:	48 c7 40 10 00 00 00 	mov    QWORD PTR [rax+0x10],0x0
    6735:	00 
    6736:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    673d:	00 00 00 
    6740:	48 89 ee             	mov    rsi,rbp
    6743:	48 8b 6d 10          	mov    rbp,QWORD PTR [rbp+0x10]
    6747:	48 85 ed             	test   rbp,rbp
    674a:	75 f4                	jne    6740 <update_key+0xa0>
    674c:	48 89 46 10          	mov    QWORD PTR [rsi+0x10],rax
    6750:	b8 01 00 00 00       	mov    eax,0x1
    6755:	5b                   	pop    rbx
    6756:	5d                   	pop    rbp
    6757:	41 5c                	pop    r12
    6759:	41 5d                	pop    r13
    675b:	41 5e                	pop    r14
    675d:	c3                   	ret    
    675e:	48 89 fb             	mov    rbx,rdi
    6761:	bf 18 00 00 00       	mov    edi,0x18
    6766:	e8 d5 bd ff ff       	call   2540 <malloc@plt>
    676b:	48 85 c0             	test   rax,rax
    676e:	74 1d                	je     678d <update_key+0xed>
    6770:	44 89 20             	mov    DWORD PTR [rax],r12d
    6773:	4c 89 70 08          	mov    QWORD PTR [rax+0x8],r14
    6777:	48 c7 40 10 00 00 00 	mov    QWORD PTR [rax+0x10],0x0
    677e:	00 
    677f:	4a 89 04 eb          	mov    QWORD PTR [rbx+r13*8],rax
    6783:	b8 01 00 00 00       	mov    eax,0x1
    6788:	e9 7c ff ff ff       	jmp    6709 <update_key+0x69>
    678d:	31 c0                	xor    eax,eax
    678f:	e9 75 ff ff ff       	jmp    6709 <update_key+0x69>
    6794:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    679b:	00 00 00 00 
    679f:	90                   	nop

00000000000067a0 <remove_key>:
    67a0:	f3 0f 1e fa          	endbr64 
    67a4:	48 63 c6             	movsxd rax,esi
    67a7:	89 f2                	mov    edx,esi
    67a9:	41 55                	push   r13
    67ab:	41 89 f5             	mov    r13d,esi
    67ae:	48 69 c8 6b 4c a4 07 	imul   rcx,rax,0x7a44c6b
    67b5:	c1 fa 1f             	sar    edx,0x1f
    67b8:	41 54                	push   r12
    67ba:	55                   	push   rbp
    67bb:	53                   	push   rbx
    67bc:	48 c1 f9 21          	sar    rcx,0x21
    67c0:	29 d1                	sub    ecx,edx
    67c2:	6b d9 43             	imul   ebx,ecx,0x43
    67c5:	48 83 ec 08          	sub    rsp,0x8
    67c9:	41 29 dd             	sub    r13d,ebx
    67cc:	4d 63 ed             	movsxd r13,r13d
    67cf:	4a 8b 2c ef          	mov    rbp,QWORD PTR [rdi+r13*8]
    67d3:	48 85 ed             	test   rbp,rbp
    67d6:	74 56                	je     682e <remove_key+0x8e>
    67d8:	49 89 fc             	mov    r12,rdi
    67db:	31 db                	xor    ebx,ebx
    67dd:	eb 10                	jmp    67ef <remove_key+0x4f>
    67df:	90                   	nop
    67e0:	48 8b 45 10          	mov    rax,QWORD PTR [rbp+0x10]
    67e4:	48 89 eb             	mov    rbx,rbp
    67e7:	48 85 c0             	test   rax,rax
    67ea:	74 2b                	je     6817 <remove_key+0x77>
    67ec:	48 89 c5             	mov    rbp,rax
    67ef:	39 75 00             	cmp    DWORD PTR [rbp+0x0],esi
    67f2:	75 ec                	jne    67e0 <remove_key+0x40>
    67f4:	48 8b 7d 08          	mov    rdi,QWORD PTR [rbp+0x8]
    67f8:	e8 c3 bd ff ff       	call   25c0 <free@plt>
    67fd:	48 8b 75 10          	mov    rsi,QWORD PTR [rbp+0x10]
    6801:	48 85 db             	test   rbx,rbx
    6804:	74 22                	je     6828 <remove_key+0x88>
    6806:	48 89 73 10          	mov    QWORD PTR [rbx+0x10],rsi
    680a:	48 89 ef             	mov    rdi,rbp
    680d:	e8 ae bd ff ff       	call   25c0 <free@plt>
    6812:	b8 01 00 00 00       	mov    eax,0x1
    6817:	48 83 c4 08          	add    rsp,0x8
    681b:	5b                   	pop    rbx
    681c:	5d                   	pop    rbp
    681d:	41 5c                	pop    r12
    681f:	41 5d                	pop    r13
    6821:	c3                   	ret    
    6822:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    6828:	4b 89 34 ec          	mov    QWORD PTR [r12+r13*8],rsi
    682c:	eb dc                	jmp    680a <remove_key+0x6a>
    682e:	31 c0                	xor    eax,eax
    6830:	eb e5                	jmp    6817 <remove_key+0x77>
    6832:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    6839:	00 00 00 00 
    683d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000006840 <add_last_node_malloc>:
    6840:	f3 0f 1e fa          	endbr64 
    6844:	41 54                	push   r12
    6846:	49 89 d4             	mov    r12,rdx
    6849:	55                   	push   rbp
    684a:	48 89 fd             	mov    rbp,rdi
    684d:	bf 18 00 00 00       	mov    edi,0x18
    6852:	53                   	push   rbx
    6853:	89 f3                	mov    ebx,esi
    6855:	e8 e6 bc ff ff       	call   2540 <malloc@plt>
    685a:	48 85 c0             	test   rax,rax
    685d:	74 68                	je     68c7 <add_last_node_malloc+0x87>
    685f:	48 63 d3             	movsxd rdx,ebx
    6862:	89 d9                	mov    ecx,ebx
    6864:	89 18                	mov    DWORD PTR [rax],ebx
    6866:	48 69 f2 6b 4c a4 07 	imul   rsi,rdx,0x7a44c6b
    686d:	c1 f9 1f             	sar    ecx,0x1f
    6870:	4c 89 60 08          	mov    QWORD PTR [rax+0x8],r12
    6874:	48 c7 40 10 00 00 00 	mov    QWORD PTR [rax+0x10],0x0
    687b:	00 
    687c:	48 c1 fe 21          	sar    rsi,0x21
    6880:	29 ce                	sub    esi,ecx
    6882:	6b fe 43             	imul   edi,esi,0x43
    6885:	29 fb                	sub    ebx,edi
    6887:	4c 63 c3             	movsxd r8,ebx
    688a:	4e 8b 54 c5 00       	mov    r10,QWORD PTR [rbp+r8*8+0x0]
    688f:	4d 85 d2             	test   r10,r10
    6892:	74 24                	je     68b8 <add_last_node_malloc+0x78>
    6894:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    6898:	4d 89 d1             	mov    r9,r10
    689b:	4d 8b 52 10          	mov    r10,QWORD PTR [r10+0x10]
    689f:	4d 85 d2             	test   r10,r10
    68a2:	75 f4                	jne    6898 <add_last_node_malloc+0x58>
    68a4:	49 89 41 10          	mov    QWORD PTR [r9+0x10],rax
    68a8:	b8 01 00 00 00       	mov    eax,0x1
    68ad:	5b                   	pop    rbx
    68ae:	5d                   	pop    rbp
    68af:	41 5c                	pop    r12
    68b1:	c3                   	ret    
    68b2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    68b8:	4a 89 44 c5 00       	mov    QWORD PTR [rbp+r8*8+0x0],rax
    68bd:	5b                   	pop    rbx
    68be:	b8 01 00 00 00       	mov    eax,0x1
    68c3:	5d                   	pop    rbp
    68c4:	41 5c                	pop    r12
    68c6:	c3                   	ret    
    68c7:	31 c0                	xor    eax,eax
    68c9:	eb e2                	jmp    68ad <add_last_node_malloc+0x6d>
    68cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000068d0 <exit_by_error>:
    68d0:	f3 0f 1e fa          	endbr64 
    68d4:	41 54                	push   r12
    68d6:	49 89 fc             	mov    r12,rdi
    68d9:	48 8d 3d 30 59 00 00 	lea    rdi,[rip+0x5930]        # c210 <CSWTCH.3+0x150>
    68e0:	55                   	push   rbp
    68e1:	48 89 f5             	mov    rbp,rsi
    68e4:	48 83 ec 08          	sub    rsp,0x8
    68e8:	e8 a3 be ff ff       	call   2790 <perror@plt>
    68ed:	be 02 00 00 00       	mov    esi,0x2
    68f2:	4c 89 e7             	mov    rdi,r12
    68f5:	e8 a6 1d 00 00       	call   86a0 <ft_putstr_fd>
    68fa:	be 02 00 00 00       	mov    esi,0x2
    68ff:	48 8d 3d 0f 59 00 00 	lea    rdi,[rip+0x590f]        # c215 <CSWTCH.3+0x155>
    6906:	e8 95 1d 00 00       	call   86a0 <ft_putstr_fd>
    690b:	48 89 ef             	mov    rdi,rbp
    690e:	be 02 00 00 00       	mov    esi,0x2
    6913:	e8 b8 1d 00 00       	call   86d0 <ft_putendl_fd>
    6918:	bf 01 00 00 00       	mov    edi,0x1
    691d:	e8 be bb ff ff       	call   24e0 <exit@plt>
    6922:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    6929:	00 00 00 00 
    692d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000006930 <exit_by_exception>:
    6930:	f3 0f 1e fa          	endbr64 
    6934:	50                   	push   rax
    6935:	58                   	pop    rax
    6936:	31 c0                	xor    eax,eax
    6938:	48 89 f2             	mov    rdx,rsi
    693b:	48 83 ec 08          	sub    rsp,0x8
    693f:	48 89 fe             	mov    rsi,rdi
    6942:	48 8d 3d cf 58 00 00 	lea    rdi,[rip+0x58cf]        # c218 <CSWTCH.3+0x158>
    6949:	e8 12 20 00 00       	call   8960 <ft_printf>
    694e:	31 ff                	xor    edi,edi
    6950:	e8 8b bb ff ff       	call   24e0 <exit@plt>
    6955:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    695c:	00 00 00 
    695f:	90                   	nop

0000000000006960 <lerp_int>:
    6960:	f3 0f 1e fa          	endbr64 
    6964:	c5 f0 57 c9          	vxorps xmm1,xmm1,xmm1
    6968:	c5 fa 10 15 54 58 00 	vmovss xmm2,DWORD PTR [rip+0x5854]        # c1c4 <CSWTCH.3+0x104>
    696f:	00 
    6970:	c5 f2 2a ee          	vcvtsi2ss xmm5,xmm1,esi
    6974:	c5 f2 2a df          	vcvtsi2ss xmm3,xmm1,edi
    6978:	c5 ea 5c e0          	vsubss xmm4,xmm2,xmm0
    697c:	c5 d2 59 c0          	vmulss xmm0,xmm5,xmm0
    6980:	c4 e2 79 99 e3       	vfmadd132ss xmm4,xmm0,xmm3
    6985:	c5 fa 2c c4          	vcvttss2si eax,xmm4
    6989:	c3                   	ret    
    698a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000006990 <lerp>:
    6990:	f3 0f 1e fa          	endbr64 
    6994:	c5 f8 28 d8          	vmovaps xmm3,xmm0
    6998:	c5 fa 10 05 24 58 00 	vmovss xmm0,DWORD PTR [rip+0x5824]        # c1c4 <CSWTCH.3+0x104>
    699f:	00 
    69a0:	c5 fa 5c c2          	vsubss xmm0,xmm0,xmm2
    69a4:	c5 ea 59 d1          	vmulss xmm2,xmm2,xmm1
    69a8:	c4 e2 69 99 c3       	vfmadd132ss xmm0,xmm2,xmm3
    69ad:	c3                   	ret    
    69ae:	66 90                	xchg   ax,ax

00000000000069b0 <try_atof>:
    69b0:	f3 0f 1e fa          	endbr64 
    69b4:	41 57                	push   r15
    69b6:	41 56                	push   r14
    69b8:	41 55                	push   r13
    69ba:	41 54                	push   r12
    69bc:	49 89 fc             	mov    r12,rdi
    69bf:	55                   	push   rbp
    69c0:	53                   	push   rbx
    69c1:	48 89 f3             	mov    rbx,rsi
    69c4:	48 83 ec 18          	sub    rsp,0x18
    69c8:	c7 06 00 00 00 00    	mov    DWORD PTR [rsi],0x0
    69ce:	be 2e 00 00 00       	mov    esi,0x2e
    69d3:	e8 28 1d 00 00       	call   8700 <indexof>
    69d8:	83 f8 ff             	cmp    eax,0xffffffff
    69db:	0f 84 bf 00 00 00    	je     6aa0 <try_atof+0xf0>
    69e1:	48 63 e8             	movsxd rbp,eax
    69e4:	4c 89 e7             	mov    rdi,r12
    69e7:	48 89 ee             	mov    rsi,rbp
    69ea:	e8 91 14 00 00       	call   7e80 <ft_strndup_malloc>
    69ef:	49 8d 7c 2c 01       	lea    rdi,[r12+rbp*1+0x1]
    69f4:	49 89 c5             	mov    r13,rax
    69f7:	e8 44 14 00 00       	call   7e40 <ft_strdup>
    69fc:	4c 89 ef             	mov    rdi,r13
    69ff:	48 8d 74 24 0c       	lea    rsi,[rsp+0xc]
    6a04:	48 89 c5             	mov    rbp,rax
    6a07:	e8 64 f5 ff ff       	call   5f70 <try_atoi>
    6a0c:	48 89 ef             	mov    rdi,rbp
    6a0f:	41 89 c4             	mov    r12d,eax
    6a12:	e8 49 f1 ff ff       	call   5b60 <ft_strlen>
    6a17:	48 83 f8 0a          	cmp    rax,0xa
    6a1b:	76 2b                	jbe    6a48 <try_atof+0x98>
    6a1d:	4c 89 ef             	mov    rdi,r13
    6a20:	45 31 e4             	xor    r12d,r12d
    6a23:	e8 98 bb ff ff       	call   25c0 <free@plt>
    6a28:	48 89 ef             	mov    rdi,rbp
    6a2b:	e8 90 bb ff ff       	call   25c0 <free@plt>
    6a30:	48 83 c4 18          	add    rsp,0x18
    6a34:	44 89 e0             	mov    eax,r12d
    6a37:	5b                   	pop    rbx
    6a38:	5d                   	pop    rbp
    6a39:	41 5c                	pop    r12
    6a3b:	41 5d                	pop    r13
    6a3d:	41 5e                	pop    r14
    6a3f:	41 5f                	pop    r15
    6a41:	c3                   	ret    
    6a42:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    6a48:	48 89 ef             	mov    rdi,rbp
    6a4b:	e8 70 f4 ff ff       	call   5ec0 <ft_atol>
    6a50:	48 3d ff ff ff 7f    	cmp    rax,0x7fffffff
    6a56:	7f c5                	jg     6a1d <try_atof+0x6d>
    6a58:	0f be 7d 00          	movsx  edi,BYTE PTR [rbp+0x0]
    6a5c:	40 84 ff             	test   dil,dil
    6a5f:	0f 84 2c 01 00 00    	je     6b91 <try_atof+0x1e1>
    6a65:	49 89 ee             	mov    r14,rbp
    6a68:	45 31 ff             	xor    r15d,r15d
    6a6b:	eb 22                	jmp    6a8f <try_atof+0xdf>
    6a6d:	0f 1f 00             	nop    DWORD PTR [rax]
    6a70:	41 0f be 06          	movsx  eax,BYTE PTR [r14]
    6a74:	41 0f be 7e 01       	movsx  edi,BYTE PTR [r14+0x1]
    6a79:	43 8d 14 bf          	lea    edx,[r15+r15*4]
    6a7d:	49 83 c6 01          	add    r14,0x1
    6a81:	44 8d 7c 50 d0       	lea    r15d,[rax+rdx*2-0x30]
    6a86:	40 84 ff             	test   dil,dil
    6a89:	0f 84 09 01 00 00    	je     6b98 <try_atof+0x1e8>
    6a8f:	e8 0c 09 00 00       	call   73a0 <ft_isdigit>
    6a94:	85 c0                	test   eax,eax
    6a96:	75 d8                	jne    6a70 <try_atof+0xc0>
    6a98:	eb 83                	jmp    6a1d <try_atof+0x6d>
    6a9a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    6aa0:	4c 89 e7             	mov    rdi,r12
    6aa3:	48 8d 74 24 0c       	lea    rsi,[rsp+0xc]
    6aa8:	45 31 ff             	xor    r15d,r15d
    6aab:	e8 c0 f4 ff ff       	call   5f70 <try_atoi>
    6ab0:	41 89 c4             	mov    r12d,eax
    6ab3:	45 84 e4             	test   r12b,r12b
    6ab6:	0f 84 74 ff ff ff    	je     6a30 <try_atof+0x80>
    6abc:	49 63 ff             	movsxd rdi,r15d
    6abf:	e8 8c 1b 00 00       	call   8650 <get_digit>
    6ac4:	c5 e8 57 d2          	vxorps xmm2,xmm2,xmm2
    6ac8:	c4 c1 6a 2a c7       	vcvtsi2ss xmm0,xmm2,r15d
    6acd:	89 c6                	mov    esi,eax
    6acf:	85 c0                	test   eax,eax
    6ad1:	0f 8e 8d 00 00 00    	jle    6b64 <try_atof+0x1b4>
    6ad7:	89 c1                	mov    ecx,eax
    6ad9:	c5 fa 10 0d 4f 57 00 	vmovss xmm1,DWORD PTR [rip+0x574f]        # c230 <CSWTCH.3+0x170>
    6ae0:	00 
    6ae1:	31 ff                	xor    edi,edi
    6ae3:	83 e1 07             	and    ecx,0x7
    6ae6:	74 55                	je     6b3d <try_atof+0x18d>
    6ae8:	83 f9 01             	cmp    ecx,0x1
    6aeb:	74 45                	je     6b32 <try_atof+0x182>
    6aed:	83 f9 02             	cmp    ecx,0x2
    6af0:	74 39                	je     6b2b <try_atof+0x17b>
    6af2:	83 f9 03             	cmp    ecx,0x3
    6af5:	74 2d                	je     6b24 <try_atof+0x174>
    6af7:	83 f9 04             	cmp    ecx,0x4
    6afa:	74 21                	je     6b1d <try_atof+0x16d>
    6afc:	83 f9 05             	cmp    ecx,0x5
    6aff:	74 15                	je     6b16 <try_atof+0x166>
    6b01:	83 f9 06             	cmp    ecx,0x6
    6b04:	74 09                	je     6b0f <try_atof+0x15f>
    6b06:	c5 fa 5e c1          	vdivss xmm0,xmm0,xmm1
    6b0a:	bf 01 00 00 00       	mov    edi,0x1
    6b0f:	83 c7 01             	add    edi,0x1
    6b12:	c5 fa 5e c1          	vdivss xmm0,xmm0,xmm1
    6b16:	83 c7 01             	add    edi,0x1
    6b19:	c5 fa 5e c1          	vdivss xmm0,xmm0,xmm1
    6b1d:	83 c7 01             	add    edi,0x1
    6b20:	c5 fa 5e c1          	vdivss xmm0,xmm0,xmm1
    6b24:	83 c7 01             	add    edi,0x1
    6b27:	c5 fa 5e c1          	vdivss xmm0,xmm0,xmm1
    6b2b:	83 c7 01             	add    edi,0x1
    6b2e:	c5 fa 5e c1          	vdivss xmm0,xmm0,xmm1
    6b32:	83 c7 01             	add    edi,0x1
    6b35:	c5 fa 5e c1          	vdivss xmm0,xmm0,xmm1
    6b39:	39 fe                	cmp    esi,edi
    6b3b:	74 27                	je     6b64 <try_atof+0x1b4>
    6b3d:	83 c7 08             	add    edi,0x8
    6b40:	c5 fa 5e d9          	vdivss xmm3,xmm0,xmm1
    6b44:	c5 e2 5e e1          	vdivss xmm4,xmm3,xmm1
    6b48:	c5 da 5e e9          	vdivss xmm5,xmm4,xmm1
    6b4c:	c5 d2 5e f1          	vdivss xmm6,xmm5,xmm1
    6b50:	c5 ca 5e f9          	vdivss xmm7,xmm6,xmm1
    6b54:	c5 42 5e c1          	vdivss xmm8,xmm7,xmm1
    6b58:	c5 3a 5e c9          	vdivss xmm9,xmm8,xmm1
    6b5c:	c5 b2 5e c1          	vdivss xmm0,xmm9,xmm1
    6b60:	39 fe                	cmp    esi,edi
    6b62:	75 d9                	jne    6b3d <try_atof+0x18d>
    6b64:	c5 6a 2a 54 24 0c    	vcvtsi2ss xmm10,xmm2,DWORD PTR [rsp+0xc]
    6b6a:	c4 41 20 57 db       	vxorps xmm11,xmm11,xmm11
    6b6f:	c5 78 57 2d b9 55 00 	vxorps xmm13,xmm0,XMMWORD PTR [rip+0x55b9]        # c130 <CSWTCH.3+0x70>
    6b76:	00 
    6b77:	c4 41 2a c2 f3 01    	vcmpltss xmm14,xmm10,xmm11
    6b7d:	c4 43 79 4a fd e0    	vblendvps xmm15,xmm0,xmm13,xmm14
    6b83:	c4 c1 2a 58 d7       	vaddss xmm2,xmm10,xmm15
    6b88:	c5 fa 11 13          	vmovss DWORD PTR [rbx],xmm2
    6b8c:	e9 9f fe ff ff       	jmp    6a30 <try_atof+0x80>
    6b91:	45 31 ff             	xor    r15d,r15d
    6b94:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    6b98:	4c 89 ef             	mov    rdi,r13
    6b9b:	e8 20 ba ff ff       	call   25c0 <free@plt>
    6ba0:	48 89 ef             	mov    rdi,rbp
    6ba3:	e8 18 ba ff ff       	call   25c0 <free@plt>
    6ba8:	e9 06 ff ff ff       	jmp    6ab3 <try_atof+0x103>
    6bad:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000006bb0 <do_foreach>:
    6bb0:	f3 0f 1e fa          	endbr64 
    6bb4:	41 55                	push   r13
    6bb6:	41 54                	push   r12
    6bb8:	55                   	push   rbp
    6bb9:	53                   	push   rbx
    6bba:	48 83 ec 08          	sub    rsp,0x8
    6bbe:	48 83 7f 08 00       	cmp    QWORD PTR [rdi+0x8],0x0
    6bc3:	4c 8b 2f             	mov    r13,QWORD PTR [rdi]
    6bc6:	74 20                	je     6be8 <do_foreach+0x38>
    6bc8:	48 89 fd             	mov    rbp,rdi
    6bcb:	49 89 f4             	mov    r12,rsi
    6bce:	31 db                	xor    ebx,ebx
    6bd0:	48 8b 7d 18          	mov    rdi,QWORD PTR [rbp+0x18]
    6bd4:	48 0f af fb          	imul   rdi,rbx
    6bd8:	48 83 c3 01          	add    rbx,0x1
    6bdc:	4c 01 ef             	add    rdi,r13
    6bdf:	41 ff d4             	call   r12
    6be2:	48 39 5d 08          	cmp    QWORD PTR [rbp+0x8],rbx
    6be6:	77 e8                	ja     6bd0 <do_foreach+0x20>
    6be8:	48 83 c4 08          	add    rsp,0x8
    6bec:	5b                   	pop    rbx
    6bed:	5d                   	pop    rbp
    6bee:	41 5c                	pop    r12
    6bf0:	41 5d                	pop    r13
    6bf2:	c3                   	ret    
    6bf3:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    6bfa:	00 00 00 00 
    6bfe:	66 90                	xchg   ax,ax

0000000000006c00 <add_in_list>:
    6c00:	f3 0f 1e fa          	endbr64 
    6c04:	55                   	push   rbp
    6c05:	48 89 f5             	mov    rbp,rsi
    6c08:	53                   	push   rbx
    6c09:	48 89 fb             	mov    rbx,rdi
    6c0c:	48 83 ec 08          	sub    rsp,0x8
    6c10:	48 8b 77 08          	mov    rsi,QWORD PTR [rdi+0x8]
    6c14:	48 8b 57 18          	mov    rdx,QWORD PTR [rdi+0x18]
    6c18:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
    6c1b:	48 3b 73 10          	cmp    rsi,QWORD PTR [rbx+0x10]
    6c1f:	74 1f                	je     6c40 <add_in_list+0x40>
    6c21:	48 0f af f2          	imul   rsi,rdx
    6c25:	48 01 f7             	add    rdi,rsi
    6c28:	48 89 ee             	mov    rsi,rbp
    6c2b:	e8 90 07 00 00       	call   73c0 <ft_memcpy>
    6c30:	48 83 43 08 01       	add    QWORD PTR [rbx+0x8],0x1
    6c35:	48 83 c4 08          	add    rsp,0x8
    6c39:	5b                   	pop    rbx
    6c3a:	5d                   	pop    rbp
    6c3b:	c3                   	ret    
    6c3c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    6c40:	48 0f af f2          	imul   rsi,rdx
    6c44:	48 8d 14 36          	lea    rdx,[rsi+rsi*1]
    6c48:	e8 e3 1f 00 00       	call   8c30 <ft_realloc>
    6c4d:	48 d1 63 10          	shl    QWORD PTR [rbx+0x10],1
    6c51:	48 89 03             	mov    QWORD PTR [rbx],rax
    6c54:	48 89 c7             	mov    rdi,rax
    6c57:	48 85 c0             	test   rax,rax
    6c5a:	74 d9                	je     6c35 <add_in_list+0x35>
    6c5c:	48 8b 73 08          	mov    rsi,QWORD PTR [rbx+0x8]
    6c60:	48 8b 53 18          	mov    rdx,QWORD PTR [rbx+0x18]
    6c64:	eb bb                	jmp    6c21 <add_in_list+0x21>
    6c66:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    6c6d:	00 00 00 

0000000000006c70 <destroy_list>:
    6c70:	f3 0f 1e fa          	endbr64 
    6c74:	41 55                	push   r13
    6c76:	41 54                	push   r12
    6c78:	55                   	push   rbp
    6c79:	48 89 fd             	mov    rbp,rdi
    6c7c:	53                   	push   rbx
    6c7d:	48 83 ec 08          	sub    rsp,0x8
    6c81:	48 83 7f 08 00       	cmp    QWORD PTR [rdi+0x8],0x0
    6c86:	4c 8b 2f             	mov    r13,QWORD PTR [rdi]
    6c89:	74 21                	je     6cac <destroy_list+0x3c>
    6c8b:	49 89 f4             	mov    r12,rsi
    6c8e:	31 db                	xor    ebx,ebx
    6c90:	48 8b 7d 18          	mov    rdi,QWORD PTR [rbp+0x18]
    6c94:	48 0f af fb          	imul   rdi,rbx
    6c98:	48 83 c3 01          	add    rbx,0x1
    6c9c:	4c 01 ef             	add    rdi,r13
    6c9f:	41 ff d4             	call   r12
    6ca2:	48 3b 5d 08          	cmp    rbx,QWORD PTR [rbp+0x8]
    6ca6:	72 e8                	jb     6c90 <destroy_list+0x20>
    6ca8:	4c 8b 6d 00          	mov    r13,QWORD PTR [rbp+0x0]
    6cac:	4c 89 ef             	mov    rdi,r13
    6caf:	e8 0c b9 ff ff       	call   25c0 <free@plt>
    6cb4:	48 c7 45 00 00 00 00 	mov    QWORD PTR [rbp+0x0],0x0
    6cbb:	00 
    6cbc:	48 83 c4 08          	add    rsp,0x8
    6cc0:	5b                   	pop    rbx
    6cc1:	5d                   	pop    rbp
    6cc2:	41 5c                	pop    r12
    6cc4:	41 5d                	pop    r13
    6cc6:	c3                   	ret    
    6cc7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    6cce:	00 00 

0000000000006cd0 <clear_in_list>:
    6cd0:	f3 0f 1e fa          	endbr64 
    6cd4:	55                   	push   rbp
    6cd5:	48 8d 05 d4 fe ff ff 	lea    rax,[rip+0xfffffffffffffed4]        # 6bb0 <do_foreach>
    6cdc:	48 8d 15 1d ff ff ff 	lea    rdx,[rip+0xffffffffffffff1d]        # 6c00 <add_in_list>
    6ce3:	48 8d 0d 86 ff ff ff 	lea    rcx,[rip+0xffffffffffffff86]        # 6c70 <destroy_list>
    6cea:	c4 e1 f9 6e d8       	vmovq  xmm3,rax
    6cef:	48 89 e5             	mov    rbp,rsp
    6cf2:	41 56                	push   r14
    6cf4:	49 89 fe             	mov    r14,rdi
    6cf7:	41 55                	push   r13
    6cf9:	41 54                	push   r12
    6cfb:	53                   	push   rbx
    6cfc:	48 8d 1d cd ff ff ff 	lea    rbx,[rip+0xffffffffffffffcd]        # 6cd0 <clear_in_list>
    6d03:	c4 e1 f9 6e c3       	vmovq  xmm0,rbx
    6d08:	c4 e3 f9 22 e9 01    	vpinsrq xmm5,xmm0,rcx,0x1
    6d0e:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    6d12:	48 83 ec 40          	sub    rsp,0x40
    6d16:	c5 fa 7e 25 da a2 00 	vmovq  xmm4,QWORD PTR [rip+0xa2da]        # 10ff8 <_GLOBAL_OFFSET_TABLE_+0x288>
    6d1d:	00 
    6d1e:	48 83 7f 08 00       	cmp    QWORD PTR [rdi+0x8],0x0
    6d23:	c4 e3 e1 22 15 bb a2 	vpinsrq xmm2,xmm3,QWORD PTR [rip+0xa2bb],0x1        # 10fe8 <_GLOBAL_OFFSET_TABLE_+0x278>
    6d2a:	00 00 01 
    6d2d:	4c 8b 2f             	mov    r13,QWORD PTR [rdi]
    6d30:	c4 e3 d9 22 ca 01    	vpinsrq xmm1,xmm4,rdx,0x1
    6d36:	c4 e3 75 38 f5 01    	vinserti128 ymm6,ymm1,xmm5,0x1
    6d3c:	c5 f9 7f 54 24 10    	vmovdqa XMMWORD PTR [rsp+0x10],xmm2
    6d42:	c5 fd 7f 74 24 20    	vmovdqa YMMWORD PTR [rsp+0x20],ymm6
    6d48:	74 7e                	je     6dc8 <clear_in_list+0xf8>
    6d4a:	49 89 f4             	mov    r12,rsi
    6d4d:	31 db                	xor    ebx,ebx
    6d4f:	c5 f8 77             	vzeroupper 
    6d52:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    6d58:	49 8b 7e 18          	mov    rdi,QWORD PTR [r14+0x18]
    6d5c:	48 0f af fb          	imul   rdi,rbx
    6d60:	48 83 c3 01          	add    rbx,0x1
    6d64:	4c 01 ef             	add    rdi,r13
    6d67:	41 ff d4             	call   r12
    6d6a:	49 3b 5e 08          	cmp    rbx,QWORD PTR [r14+0x8]
    6d6e:	72 e8                	jb     6d58 <clear_in_list+0x88>
    6d70:	4d 8b 2e             	mov    r13,QWORD PTR [r14]
    6d73:	4c 89 ef             	mov    rdi,r13
    6d76:	e8 45 b8 ff ff       	call   25c0 <free@plt>
    6d7b:	49 8b 7e 18          	mov    rdi,QWORD PTR [r14+0x18]
    6d7f:	be 0a 00 00 00       	mov    esi,0xa
    6d84:	c5 f9 6f 3d b4 54 00 	vmovdqa xmm7,XMMWORD PTR [rip+0x54b4]        # c240 <CSWTCH.3+0x180>
    6d8b:	00 
    6d8c:	c4 c1 7a 7f 7e 08    	vmovdqu XMMWORD PTR [r14+0x8],xmm7
    6d92:	e8 49 10 00 00       	call   7de0 <ft_calloc>
    6d97:	c5 7d 6f 44 24 20    	vmovdqa ymm8,YMMWORD PTR [rsp+0x20]
    6d9d:	c5 79 6f 4c 24 10    	vmovdqa xmm9,XMMWORD PTR [rsp+0x10]
    6da3:	49 89 06             	mov    QWORD PTR [r14],rax
    6da6:	c4 41 7e 7f 46 20    	vmovdqu YMMWORD PTR [r14+0x20],ymm8
    6dac:	c4 41 7a 7f 4e 40    	vmovdqu XMMWORD PTR [r14+0x40],xmm9
    6db2:	c5 f8 77             	vzeroupper 
    6db5:	48 8d 65 e0          	lea    rsp,[rbp-0x20]
    6db9:	5b                   	pop    rbx
    6dba:	41 5c                	pop    r12
    6dbc:	41 5d                	pop    r13
    6dbe:	41 5e                	pop    r14
    6dc0:	5d                   	pop    rbp
    6dc1:	c3                   	ret    
    6dc2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    6dc8:	c5 f8 77             	vzeroupper 
    6dcb:	eb a6                	jmp    6d73 <clear_in_list+0xa3>
    6dcd:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000006dd0 <init_array_list>:
    6dd0:	f3 0f 1e fa          	endbr64 
    6dd4:	55                   	push   rbp
    6dd5:	48 8d 05 d4 fd ff ff 	lea    rax,[rip+0xfffffffffffffdd4]        # 6bb0 <do_foreach>
    6ddc:	48 8d 15 1d fe ff ff 	lea    rdx,[rip+0xfffffffffffffe1d]        # 6c00 <add_in_list>
    6de3:	48 8d 0d 86 fe ff ff 	lea    rcx,[rip+0xfffffffffffffe86]        # 6c70 <destroy_list>
    6dea:	c4 e1 f9 6e c8       	vmovq  xmm1,rax
    6def:	48 89 e5             	mov    rbp,rsp
    6df2:	53                   	push   rbx
    6df3:	48 89 fb             	mov    rbx,rdi
    6df6:	48 89 f7             	mov    rdi,rsi
    6df9:	48 8d 35 d0 fe ff ff 	lea    rsi,[rip+0xfffffffffffffed0]        # 6cd0 <clear_in_list>
    6e00:	c4 e1 f9 6e d6       	vmovq  xmm2,rsi
    6e05:	be 0a 00 00 00       	mov    esi,0xa
    6e0a:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    6e0e:	c4 e3 e9 22 e9 01    	vpinsrq xmm5,xmm2,rcx,0x1
    6e14:	48 83 ec 40          	sub    rsp,0x40
    6e18:	c5 fa 7e 1d d8 a1 00 	vmovq  xmm3,QWORD PTR [rip+0xa1d8]        # 10ff8 <_GLOBAL_OFFSET_TABLE_+0x288>
    6e1f:	00 
    6e20:	c5 f9 6f 3d 18 54 00 	vmovdqa xmm7,XMMWORD PTR [rip+0x5418]        # c240 <CSWTCH.3+0x180>
    6e27:	00 
    6e28:	48 89 7b 18          	mov    QWORD PTR [rbx+0x18],rdi
    6e2c:	c4 e3 f1 22 05 b2 a1 	vpinsrq xmm0,xmm1,QWORD PTR [rip+0xa1b2],0x1        # 10fe8 <_GLOBAL_OFFSET_TABLE_+0x278>
    6e33:	00 00 01 
    6e36:	c4 e3 e1 22 e2 01    	vpinsrq xmm4,xmm3,rdx,0x1
    6e3c:	c5 fa 7f 7b 08       	vmovdqu XMMWORD PTR [rbx+0x8],xmm7
    6e41:	c4 e3 5d 38 f5 01    	vinserti128 ymm6,ymm4,xmm5,0x1
    6e47:	c5 f9 7f 44 24 10    	vmovdqa XMMWORD PTR [rsp+0x10],xmm0
    6e4d:	c5 fd 7f 74 24 20    	vmovdqa YMMWORD PTR [rsp+0x20],ymm6
    6e53:	c5 f8 77             	vzeroupper 
    6e56:	e8 85 0f 00 00       	call   7de0 <ft_calloc>
    6e5b:	c5 7d 6f 44 24 20    	vmovdqa ymm8,YMMWORD PTR [rsp+0x20]
    6e61:	c5 79 6f 4c 24 10    	vmovdqa xmm9,XMMWORD PTR [rsp+0x10]
    6e67:	48 89 03             	mov    QWORD PTR [rbx],rax
    6e6a:	c5 7e 7f 43 20       	vmovdqu YMMWORD PTR [rbx+0x20],ymm8
    6e6f:	c5 7a 7f 4b 40       	vmovdqu XMMWORD PTR [rbx+0x40],xmm9
    6e74:	c5 f8 77             	vzeroupper 
    6e77:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    6e7b:	c9                   	leave  
    6e7c:	c3                   	ret    
    6e7d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000006e80 <get_element_or_null_in_list>:
    6e80:	f3 0f 1e fa          	endbr64 
    6e84:	48 39 77 08          	cmp    QWORD PTR [rdi+0x8],rsi
    6e88:	76 16                	jbe    6ea0 <get_element_or_null_in_list+0x20>
    6e8a:	48 0f af 77 18       	imul   rsi,QWORD PTR [rdi+0x18]
    6e8f:	48 8b 07             	mov    rax,QWORD PTR [rdi]
    6e92:	48 01 f0             	add    rax,rsi
    6e95:	c3                   	ret    
    6e96:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    6e9d:	00 00 00 
    6ea0:	31 c0                	xor    eax,eax
    6ea2:	c3                   	ret    
    6ea3:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    6eaa:	00 00 00 00 
    6eae:	66 90                	xchg   ax,ax

0000000000006eb0 <get_count_in_list>:
    6eb0:	f3 0f 1e fa          	endbr64 
    6eb4:	48 8b 47 08          	mov    rax,QWORD PTR [rdi+0x8]
    6eb8:	c3                   	ret    
    6eb9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000006ec0 <get_vector3>:
    6ec0:	f3 0f 1e fa          	endbr64 
    6ec4:	55                   	push   rbp
    6ec5:	c5 f8 14 c1          	vunpcklps xmm0,xmm0,xmm1
    6ec9:	48 89 e5             	mov    rbp,rsp
    6ecc:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    6ed0:	c5 fa 11 54 24 f8    	vmovss DWORD PTR [rsp-0x8],xmm2
    6ed6:	c5 fa 7e 4c 24 f8    	vmovq  xmm1,QWORD PTR [rsp-0x8]
    6edc:	c9                   	leave  
    6edd:	c3                   	ret    
    6ede:	66 90                	xchg   ax,ax

0000000000006ee0 <is_uneqaul_vector3>:
    6ee0:	f3 0f 1e fa          	endbr64 
    6ee4:	c5 f9 d6 44 24 e8    	vmovq  QWORD PTR [rsp-0x18],xmm0
    6eea:	c5 fa 10 44 24 e8    	vmovss xmm0,DWORD PTR [rsp-0x18]
    6ef0:	b8 01 00 00 00       	mov    eax,0x1
    6ef5:	c5 f9 d6 54 24 d8    	vmovq  QWORD PTR [rsp-0x28],xmm2
    6efb:	c5 fa 5c 54 24 d8    	vsubss xmm2,xmm0,DWORD PTR [rsp-0x28]
    6f01:	c5 f9 d6 4c 24 f0    	vmovq  QWORD PTR [rsp-0x10],xmm1
    6f07:	c5 fa 10 0d 31 52 00 	vmovss xmm1,DWORD PTR [rip+0x5231]        # c140 <CSWTCH.3+0x80>
    6f0e:	00 
    6f0f:	c5 f9 d6 5c 24 e0    	vmovq  QWORD PTR [rsp-0x20],xmm3
    6f15:	c5 e8 54 d9          	vandps xmm3,xmm2,xmm1
    6f19:	c5 f8 2f 1d 43 53 00 	vcomiss xmm3,DWORD PTR [rip+0x5343]        # c264 <CSWTCH.3+0x1a4>
    6f20:	00 
    6f21:	77 1a                	ja     6f3d <is_uneqaul_vector3+0x5d>
    6f23:	c5 fa 10 64 24 ec    	vmovss xmm4,DWORD PTR [rsp-0x14]
    6f29:	c5 da 5c 6c 24 dc    	vsubss xmm5,xmm4,DWORD PTR [rsp-0x24]
    6f2f:	c5 d0 54 f1          	vandps xmm6,xmm5,xmm1
    6f33:	c5 f8 2f 35 29 53 00 	vcomiss xmm6,DWORD PTR [rip+0x5329]        # c264 <CSWTCH.3+0x1a4>
    6f3a:	00 
    6f3b:	76 03                	jbe    6f40 <is_uneqaul_vector3+0x60>
    6f3d:	c3                   	ret    
    6f3e:	66 90                	xchg   ax,ax
    6f40:	c5 fa 10 7c 24 f0    	vmovss xmm7,DWORD PTR [rsp-0x10]
    6f46:	c5 42 5c 44 24 e0    	vsubss xmm8,xmm7,DWORD PTR [rsp-0x20]
    6f4c:	c5 38 54 c9          	vandps xmm9,xmm8,xmm1
    6f50:	c5 78 2f 0d 0c 53 00 	vcomiss xmm9,DWORD PTR [rip+0x530c]        # c264 <CSWTCH.3+0x1a4>
    6f57:	00 
    6f58:	0f 97 c0             	seta   al
    6f5b:	c3                   	ret    
    6f5c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000006f60 <get_length_in_vector3>:
    6f60:	f3 0f 1e fa          	endbr64 
    6f64:	c5 f9 d6 44 24 e8    	vmovq  QWORD PTR [rsp-0x18],xmm0
    6f6a:	c5 fa 10 54 24 ec    	vmovss xmm2,DWORD PTR [rsp-0x14]
    6f70:	c5 d8 57 e4          	vxorps xmm4,xmm4,xmm4
    6f74:	c5 f9 d6 4c 24 f0    	vmovq  QWORD PTR [rsp-0x10],xmm1
    6f7a:	c5 fa 10 4c 24 e8    	vmovss xmm1,DWORD PTR [rsp-0x18]
    6f80:	c5 fa 10 44 24 f0    	vmovss xmm0,DWORD PTR [rsp-0x10]
    6f86:	c5 ea 59 da          	vmulss xmm3,xmm2,xmm2
    6f8a:	c4 e2 61 99 c9       	vfmadd132ss xmm1,xmm3,xmm1
    6f8f:	c4 e2 71 99 c0       	vfmadd132ss xmm0,xmm1,xmm0
    6f94:	c5 f8 2e e0          	vucomiss xmm4,xmm0
    6f98:	77 05                	ja     6f9f <get_length_in_vector3+0x3f>
    6f9a:	c5 fa 51 c0          	vsqrtss xmm0,xmm0,xmm0
    6f9e:	c3                   	ret    
    6f9f:	e9 ac b8 ff ff       	jmp    2850 <sqrtf@plt>
    6fa4:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    6fab:	00 00 00 00 
    6faf:	90                   	nop

0000000000006fb0 <normalize_vector3>:
    6fb0:	f3 0f 1e fa          	endbr64 
    6fb4:	4c 8d 54 24 08       	lea    r10,[rsp+0x8]
    6fb9:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    6fbd:	41 ff 72 f8          	push   QWORD PTR [r10-0x8]
    6fc1:	55                   	push   rbp
    6fc2:	48 89 e5             	mov    rbp,rsp
    6fc5:	41 52                	push   r10
    6fc7:	48 83 ec 68          	sub    rsp,0x68
    6fcb:	c5 f9 d6 45 d0       	vmovq  QWORD PTR [rbp-0x30],xmm0
    6fd0:	c5 fa 10 65 d4       	vmovss xmm4,DWORD PTR [rbp-0x2c]
    6fd5:	c5 fa 10 55 d0       	vmovss xmm2,DWORD PTR [rbp-0x30]
    6fda:	c5 f9 d6 4d d8       	vmovq  QWORD PTR [rbp-0x28],xmm1
    6fdf:	c5 fa 10 5d d8       	vmovss xmm3,DWORD PTR [rbp-0x28]
    6fe4:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    6fe8:	c5 da 59 cc          	vmulss xmm1,xmm4,xmm4
    6fec:	c4 e2 69 b9 ca       	vfmadd231ss xmm1,xmm2,xmm2
    6ff1:	c4 e2 61 b9 cb       	vfmadd231ss xmm1,xmm3,xmm3
    6ff6:	c5 f8 2e c1          	vucomiss xmm0,xmm1
    6ffa:	77 28                	ja     7024 <normalize_vector3+0x74>
    6ffc:	c5 f2 51 c9          	vsqrtss xmm1,xmm1,xmm1
    7000:	c5 ea 5e e9          	vdivss xmm5,xmm2,xmm1
    7004:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7008:	c5 da 5e f1          	vdivss xmm6,xmm4,xmm1
    700c:	c5 e2 5e f9          	vdivss xmm7,xmm3,xmm1
    7010:	c5 d0 14 c6          	vunpcklps xmm0,xmm5,xmm6
    7014:	c5 fa 11 7d e8       	vmovss DWORD PTR [rbp-0x18],xmm7
    7019:	c5 fa 7e 4d e8       	vmovq  xmm1,QWORD PTR [rbp-0x18]
    701e:	c9                   	leave  
    701f:	48 8d 60 f8          	lea    rsp,[rax-0x8]
    7023:	c3                   	ret    
    7024:	c5 f8 28 c1          	vmovaps xmm0,xmm1
    7028:	c5 fa 11 55 a4       	vmovss DWORD PTR [rbp-0x5c],xmm2
    702d:	c5 fa 11 65 a8       	vmovss DWORD PTR [rbp-0x58],xmm4
    7032:	c5 fa 11 5d ac       	vmovss DWORD PTR [rbp-0x54],xmm3
    7037:	e8 14 b8 ff ff       	call   2850 <sqrtf@plt>
    703c:	c5 fa 10 55 a4       	vmovss xmm2,DWORD PTR [rbp-0x5c]
    7041:	c5 fa 10 65 a8       	vmovss xmm4,DWORD PTR [rbp-0x58]
    7046:	c5 fa 10 5d ac       	vmovss xmm3,DWORD PTR [rbp-0x54]
    704b:	c5 f8 28 c8          	vmovaps xmm1,xmm0
    704f:	eb af                	jmp    7000 <normalize_vector3+0x50>
    7051:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    7058:	00 00 00 00 
    705c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000007060 <print_vector3>:
    7060:	f3 0f 1e fa          	endbr64 
    7064:	c5 e0 57 db          	vxorps xmm3,xmm3,xmm3
    7068:	c5 f9 d6 44 24 e8    	vmovq  QWORD PTR [rsp-0x18],xmm0
    706e:	48 89 fa             	mov    rdx,rdi
    7071:	48 8d 35 d8 51 00 00 	lea    rsi,[rip+0x51d8]        # c250 <CSWTCH.3+0x190>
    7078:	c5 f9 d6 4c 24 f0    	vmovq  QWORD PTR [rsp-0x10],xmm1
    707e:	bf 01 00 00 00       	mov    edi,0x1
    7083:	b8 03 00 00 00       	mov    eax,0x3
    7088:	c5 e2 5a 44 24 e8    	vcvtss2sd xmm0,xmm3,DWORD PTR [rsp-0x18]
    708e:	c5 e2 5a 54 24 f0    	vcvtss2sd xmm2,xmm3,DWORD PTR [rsp-0x10]
    7094:	c5 e2 5a 4c 24 ec    	vcvtss2sd xmm1,xmm3,DWORD PTR [rsp-0x14]
    709a:	e9 51 b4 ff ff       	jmp    24f0 <__printf_chk@plt>
    709f:	90                   	nop

00000000000070a0 <add_vector3>:
    70a0:	f3 0f 1e fa          	endbr64 
    70a4:	55                   	push   rbp
    70a5:	48 89 e5             	mov    rbp,rsp
    70a8:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    70ac:	c5 f9 d6 44 24 e0    	vmovq  QWORD PTR [rsp-0x20],xmm0
    70b2:	c5 f9 d6 4c 24 e8    	vmovq  QWORD PTR [rsp-0x18],xmm1
    70b8:	c5 f8 28 64 24 e0    	vmovaps xmm4,XMMWORD PTR [rsp-0x20]
    70be:	c5 f9 d6 54 24 d0    	vmovq  QWORD PTR [rsp-0x30],xmm2
    70c4:	c5 f9 d6 5c 24 d8    	vmovq  QWORD PTR [rsp-0x28],xmm3
    70ca:	c5 d8 58 44 24 d0    	vaddps xmm0,xmm4,XMMWORD PTR [rsp-0x30]
    70d0:	c5 f8 29 44 24 f0    	vmovaps XMMWORD PTR [rsp-0x10],xmm0
    70d6:	c5 fa 7e 4c 24 f8    	vmovq  xmm1,QWORD PTR [rsp-0x8]
    70dc:	c9                   	leave  
    70dd:	c3                   	ret    
    70de:	66 90                	xchg   ax,ax

00000000000070e0 <subtract_vector3>:
    70e0:	f3 0f 1e fa          	endbr64 
    70e4:	55                   	push   rbp
    70e5:	48 89 e5             	mov    rbp,rsp
    70e8:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    70ec:	c5 f9 d6 44 24 e0    	vmovq  QWORD PTR [rsp-0x20],xmm0
    70f2:	c5 f9 d6 4c 24 e8    	vmovq  QWORD PTR [rsp-0x18],xmm1
    70f8:	c5 f8 28 64 24 e0    	vmovaps xmm4,XMMWORD PTR [rsp-0x20]
    70fe:	c5 f9 d6 54 24 d0    	vmovq  QWORD PTR [rsp-0x30],xmm2
    7104:	c5 f9 d6 5c 24 d8    	vmovq  QWORD PTR [rsp-0x28],xmm3
    710a:	c5 d8 5c 44 24 d0    	vsubps xmm0,xmm4,XMMWORD PTR [rsp-0x30]
    7110:	c5 f8 29 44 24 f0    	vmovaps XMMWORD PTR [rsp-0x10],xmm0
    7116:	c5 fa 7e 4c 24 f8    	vmovq  xmm1,QWORD PTR [rsp-0x8]
    711c:	c9                   	leave  
    711d:	c3                   	ret    
    711e:	66 90                	xchg   ax,ax

0000000000007120 <multiply_vector3>:
    7120:	f3 0f 1e fa          	endbr64 
    7124:	55                   	push   rbp
    7125:	c5 e8 c6 d2 00       	vshufps xmm2,xmm2,xmm2,0x0
    712a:	48 89 e5             	mov    rbp,rsp
    712d:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    7131:	c5 f9 d6 44 24 e0    	vmovq  QWORD PTR [rsp-0x20],xmm0
    7137:	c5 f9 d6 4c 24 e8    	vmovq  QWORD PTR [rsp-0x18],xmm1
    713d:	c5 e8 59 4c 24 e0    	vmulps xmm1,xmm2,XMMWORD PTR [rsp-0x20]
    7143:	c5 f8 29 4c 24 f0    	vmovaps XMMWORD PTR [rsp-0x10],xmm1
    7149:	c5 f9 6f c1          	vmovdqa xmm0,xmm1
    714d:	c5 fa 7e 4c 24 f8    	vmovq  xmm1,QWORD PTR [rsp-0x8]
    7153:	c9                   	leave  
    7154:	c3                   	ret    
    7155:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    715c:	00 00 00 00 

0000000000007160 <divide_vector3>:
    7160:	f3 0f 1e fa          	endbr64 
    7164:	55                   	push   rbp
    7165:	c5 e8 c6 d2 00       	vshufps xmm2,xmm2,xmm2,0x0
    716a:	48 89 e5             	mov    rbp,rsp
    716d:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    7171:	c5 f9 d6 44 24 e0    	vmovq  QWORD PTR [rsp-0x20],xmm0
    7177:	c5 f9 d6 4c 24 e8    	vmovq  QWORD PTR [rsp-0x18],xmm1
    717d:	c5 f8 28 5c 24 e0    	vmovaps xmm3,XMMWORD PTR [rsp-0x20]
    7183:	c5 e0 5e c2          	vdivps xmm0,xmm3,xmm2
    7187:	c5 f8 29 44 24 f0    	vmovaps XMMWORD PTR [rsp-0x10],xmm0
    718d:	c5 fa 7e 4c 24 f8    	vmovq  xmm1,QWORD PTR [rsp-0x8]
    7193:	c9                   	leave  
    7194:	c3                   	ret    
    7195:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    719c:	00 00 00 
    719f:	90                   	nop

00000000000071a0 <dot_product3x3>:
    71a0:	f3 0f 1e fa          	endbr64 
    71a4:	c5 e8 59 d0          	vmulps xmm2,xmm2,xmm0
    71a8:	c5 f9 d6 5c 24 e0    	vmovq  QWORD PTR [rsp-0x20],xmm3
    71ae:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    71b2:	c5 fa 10 64 24 e0    	vmovss xmm4,DWORD PTR [rsp-0x20]
    71b8:	c5 f9 d6 4c 24 f0    	vmovq  QWORD PTR [rsp-0x10],xmm1
    71be:	c5 fa 16 da          	vmovshdup xmm3,xmm2
    71c2:	c5 fa 58 ca          	vaddss xmm1,xmm0,xmm2
    71c6:	c5 f2 58 c3          	vaddss xmm0,xmm1,xmm3
    71ca:	c4 e2 59 b9 44 24 f0 	vfmadd231ss xmm0,xmm4,DWORD PTR [rsp-0x10]
    71d1:	c3                   	ret    
    71d2:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    71d9:	00 00 00 00 
    71dd:	0f 1f 00             	nop    DWORD PTR [rax]

00000000000071e0 <dot_product4x4>:
    71e0:	f3 0f 1e fa          	endbr64 
    71e4:	c5 f9 d6 44 24 d8    	vmovq  QWORD PTR [rsp-0x28],xmm0
    71ea:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    71ee:	c5 f9 d6 54 24 e8    	vmovq  QWORD PTR [rsp-0x18],xmm2
    71f4:	c5 f9 d6 5c 24 f0    	vmovq  QWORD PTR [rsp-0x10],xmm3
    71fa:	c5 f8 28 64 24 e8    	vmovaps xmm4,XMMWORD PTR [rsp-0x18]
    7200:	c5 f9 d6 4c 24 e0    	vmovq  QWORD PTR [rsp-0x20],xmm1
    7206:	c5 d8 59 4c 24 d8    	vmulps xmm1,xmm4,XMMWORD PTR [rsp-0x28]
    720c:	c5 fa 58 d9          	vaddss xmm3,xmm0,xmm1
    7210:	c5 f0 c6 d1 55       	vshufps xmm2,xmm1,xmm1,0x55
    7215:	c5 f0 15 f1          	vunpckhps xmm6,xmm1,xmm1
    7219:	c5 70 c6 c1 ff       	vshufps xmm8,xmm1,xmm1,0xff
    721e:	c5 e2 58 ea          	vaddss xmm5,xmm3,xmm2
    7222:	c5 d2 58 fe          	vaddss xmm7,xmm5,xmm6
    7226:	c4 c1 42 58 c0       	vaddss xmm0,xmm7,xmm8
    722b:	c3                   	ret    
    722c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000007230 <dot_product>:
    7230:	f3 0f 1e fa          	endbr64 
    7234:	c5 f8 10 0f          	vmovups xmm1,XMMWORD PTR [rdi]
    7238:	c5 f0 59 1e          	vmulps xmm3,xmm1,XMMWORD PTR [rsi]
    723c:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    7240:	c5 fa 58 e3          	vaddss xmm4,xmm0,xmm3
    7244:	c5 e0 c6 d3 55       	vshufps xmm2,xmm3,xmm3,0x55
    7249:	c5 e0 15 f3          	vunpckhps xmm6,xmm3,xmm3
    724d:	c5 60 c6 c3 ff       	vshufps xmm8,xmm3,xmm3,0xff
    7252:	c5 ea 58 ec          	vaddss xmm5,xmm2,xmm4
    7256:	c5 ca 58 fd          	vaddss xmm7,xmm6,xmm5
    725a:	c4 c1 42 58 c0       	vaddss xmm0,xmm7,xmm8
    725f:	c3                   	ret    

0000000000007260 <cross_product3x3>:
    7260:	f3 0f 1e fa          	endbr64 
    7264:	55                   	push   rbp
    7265:	48 89 e5             	mov    rbp,rsp
    7268:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    726c:	c5 f9 d6 44 24 e0    	vmovq  QWORD PTR [rsp-0x20],xmm0
    7272:	c5 f9 d6 54 24 d0    	vmovq  QWORD PTR [rsp-0x30],xmm2
    7278:	c5 fa 10 6c 24 d0    	vmovss xmm5,DWORD PTR [rsp-0x30]
    727e:	c5 fa 10 54 24 e0    	vmovss xmm2,DWORD PTR [rsp-0x20]
    7284:	c5 f9 d6 4c 24 e8    	vmovq  QWORD PTR [rsp-0x18],xmm1
    728a:	c5 fa 7e 4c 24 e4    	vmovq  xmm1,QWORD PTR [rsp-0x1c]
    7290:	c5 fa 10 7c 24 e8    	vmovss xmm7,DWORD PTR [rsp-0x18]
    7296:	c5 f9 d6 5c 24 d8    	vmovq  QWORD PTR [rsp-0x28],xmm3
    729c:	c5 fa 7e 64 24 d4    	vmovq  xmm4,QWORD PTR [rsp-0x2c]
    72a2:	c5 fa 10 74 24 d8    	vmovss xmm6,DWORD PTR [rsp-0x28]
    72a8:	c5 72 59 d5          	vmulss xmm10,xmm1,xmm5
    72ac:	c5 c0 14 c2          	vunpcklps xmm0,xmm7,xmm2
    72b0:	c5 c8 14 dd          	vunpcklps xmm3,xmm6,xmm5
    72b4:	c5 60 59 c1          	vmulps xmm8,xmm3,xmm1
    72b8:	c4 e2 29 9b d4       	vfmsub132ss xmm2,xmm10,xmm4
    72bd:	c4 e2 39 9c c4       	vfnmadd132ps xmm0,xmm8,xmm4
    72c2:	c5 fa 11 54 24 f8    	vmovss DWORD PTR [rsp-0x8],xmm2
    72c8:	c5 fa 7e 4c 24 f8    	vmovq  xmm1,QWORD PTR [rsp-0x8]
    72ce:	c9                   	leave  
    72cf:	c3                   	ret    

00000000000072d0 <multiply_ivector3>:
    72d0:	f3 0f 1e fa          	endbr64 
    72d4:	c5 f0 57 c9          	vxorps xmm1,xmm1,xmm1
    72d8:	c5 f8 28 d0          	vmovaps xmm2,xmm0
    72dc:	55                   	push   rbp
    72dd:	c4 e1 f9 6e e7       	vmovq  xmm4,rdi
    72e2:	c5 f2 2a c6          	vcvtsi2ss xmm0,xmm1,esi
    72e6:	c5 fa 12 f2          	vmovsldup xmm6,xmm2
    72ea:	c5 f8 5b ec          	vcvtdq2ps xmm5,xmm4
    72ee:	48 89 e5             	mov    rbp,rsp
    72f1:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    72f5:	c7 44 24 ec 00 00 00 	mov    DWORD PTR [rsp-0x14],0x0
    72fc:	00 
    72fd:	c5 fa 59 da          	vmulss xmm3,xmm0,xmm2
    7301:	c5 d0 59 fe          	vmulps xmm7,xmm5,xmm6
    7305:	c5 fa 2c c3          	vcvttss2si eax,xmm3
    7309:	c5 7a 5b c7          	vcvttps2dq xmm8,xmm7
    730d:	c5 79 d6 44 24 e0    	vmovq  QWORD PTR [rsp-0x20],xmm8
    7313:	89 44 24 e8          	mov    DWORD PTR [rsp-0x18],eax
    7317:	48 8b 44 24 e0       	mov    rax,QWORD PTR [rsp-0x20]
    731c:	48 8b 54 24 e8       	mov    rdx,QWORD PTR [rsp-0x18]
    7321:	c9                   	leave  
    7322:	c3                   	ret    
    7323:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    732a:	00 00 00 00 
    732e:	66 90                	xchg   ax,ax

0000000000007330 <add_ivector3>:
    7330:	f3 0f 1e fa          	endbr64 
    7334:	55                   	push   rbp
    7335:	c4 e1 f9 6e cf       	vmovq  xmm1,rdi
    733a:	48 89 e5             	mov    rbp,rsp
    733d:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    7341:	48 89 54 24 d0       	mov    QWORD PTR [rsp-0x30],rdx
    7346:	c5 fa 7e 44 24 d0    	vmovq  xmm0,QWORD PTR [rsp-0x30]
    734c:	48 89 4c 24 d8       	mov    QWORD PTR [rsp-0x28],rcx
    7351:	03 74 24 d8          	add    esi,DWORD PTR [rsp-0x28]
    7355:	c5 f9 fe d1          	vpaddd xmm2,xmm0,xmm1
    7359:	89 74 24 f8          	mov    DWORD PTR [rsp-0x8],esi
    735d:	48 8b 54 24 f8       	mov    rdx,QWORD PTR [rsp-0x8]
    7362:	c5 f9 d6 54 24 f0    	vmovq  QWORD PTR [rsp-0x10],xmm2
    7368:	48 8b 44 24 f0       	mov    rax,QWORD PTR [rsp-0x10]
    736d:	c9                   	leave  
    736e:	c3                   	ret    
    736f:	90                   	nop

0000000000007370 <get_ivector3>:
    7370:	f3 0f 1e fa          	endbr64 
    7374:	55                   	push   rbp
    7375:	c5 f9 6e cf          	vmovd  xmm1,edi
    7379:	c4 e3 71 22 c6 01    	vpinsrd xmm0,xmm1,esi,0x1
    737f:	48 89 e5             	mov    rbp,rsp
    7382:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    7386:	89 54 24 f8          	mov    DWORD PTR [rsp-0x8],edx
    738a:	c5 f9 d6 44 24 f0    	vmovq  QWORD PTR [rsp-0x10],xmm0
    7390:	48 8b 54 24 f8       	mov    rdx,QWORD PTR [rsp-0x8]
    7395:	48 8b 44 24 f0       	mov    rax,QWORD PTR [rsp-0x10]
    739a:	c9                   	leave  
    739b:	c3                   	ret    
    739c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000000073a0 <ft_isdigit>:
    73a0:	f3 0f 1e fa          	endbr64 
    73a4:	83 ef 30             	sub    edi,0x30
    73a7:	31 c0                	xor    eax,eax
    73a9:	83 ff 09             	cmp    edi,0x9
    73ac:	0f 96 c0             	setbe  al
    73af:	c1 e0 0b             	shl    eax,0xb
    73b2:	c3                   	ret    
    73b3:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    73ba:	00 00 00 
    73bd:	0f 1f 00             	nop    DWORD PTR [rax]

00000000000073c0 <ft_memcpy>:
    73c0:	f3 0f 1e fa          	endbr64 
    73c4:	48 89 f1             	mov    rcx,rsi
    73c7:	48 89 f8             	mov    rax,rdi
    73ca:	48 89 d6             	mov    rsi,rdx
    73cd:	48 85 d2             	test   rdx,rdx
    73d0:	0f 84 03 03 00 00    	je     76d9 <ft_memcpy+0x319>
    73d6:	48 8d 52 ff          	lea    rdx,[rdx-0x1]
    73da:	48 39 cf             	cmp    rdi,rcx
    73dd:	0f 88 fd 02 00 00    	js     76e0 <ft_memcpy+0x320>
    73e3:	4c 8d 0c 17          	lea    r9,[rdi+rdx*1]
    73e7:	4c 8d 54 31 fe       	lea    r10,[rcx+rsi*1-0x2]
    73ec:	4d 29 d1             	sub    r9,r10
    73ef:	49 83 c1 1e          	add    r9,0x1e
    73f3:	49 83 f9 1e          	cmp    r9,0x1e
    73f7:	0f 86 f3 05 00 00    	jbe    79f0 <ft_memcpy+0x630>
    73fd:	48 83 fa 0e          	cmp    rdx,0xe
    7401:	0f 86 e9 05 00 00    	jbe    79f0 <ft_memcpy+0x630>
    7407:	48 83 fa 1e          	cmp    rdx,0x1e
    740b:	0f 86 78 01 00 00    	jbe    7589 <ft_memcpy+0x1c9>
    7411:	49 89 f0             	mov    r8,rsi
    7414:	4c 8d 4e e0          	lea    r9,[rsi-0x20]
    7418:	49 83 e0 e0          	and    r8,0xffffffffffffffe0
    741c:	4e 8d 14 09          	lea    r10,[rcx+r9*1]
    7420:	49 01 f9             	add    r9,rdi
    7423:	31 ff                	xor    edi,edi
    7425:	4d 89 c3             	mov    r11,r8
    7428:	49 83 e8 20          	sub    r8,0x20
    742c:	49 c1 e8 05          	shr    r8,0x5
    7430:	49 f7 db             	neg    r11
    7433:	49 83 c0 01          	add    r8,0x1
    7437:	41 83 e0 07          	and    r8d,0x7
    743b:	0f 84 91 00 00 00    	je     74d2 <ft_memcpy+0x112>
    7441:	49 83 f8 01          	cmp    r8,0x1
    7445:	74 72                	je     74b9 <ft_memcpy+0xf9>
    7447:	49 83 f8 02          	cmp    r8,0x2
    744b:	74 5c                	je     74a9 <ft_memcpy+0xe9>
    744d:	49 83 f8 03          	cmp    r8,0x3
    7451:	74 46                	je     7499 <ft_memcpy+0xd9>
    7453:	49 83 f8 04          	cmp    r8,0x4
    7457:	74 30                	je     7489 <ft_memcpy+0xc9>
    7459:	49 83 f8 05          	cmp    r8,0x5
    745d:	74 1a                	je     7479 <ft_memcpy+0xb9>
    745f:	49 83 f8 06          	cmp    r8,0x6
    7463:	0f 85 6d 07 00 00    	jne    7bd6 <ft_memcpy+0x816>
    7469:	c4 c1 7e 6f 34 3a    	vmovdqu ymm6,YMMWORD PTR [r10+rdi*1]
    746f:	c4 c1 7e 7f 34 39    	vmovdqu YMMWORD PTR [r9+rdi*1],ymm6
    7475:	48 83 ef 20          	sub    rdi,0x20
    7479:	c4 c1 7e 6f 14 3a    	vmovdqu ymm2,YMMWORD PTR [r10+rdi*1]
    747f:	c4 c1 7e 7f 14 39    	vmovdqu YMMWORD PTR [r9+rdi*1],ymm2
    7485:	48 83 ef 20          	sub    rdi,0x20
    7489:	c4 c1 7e 6f 04 3a    	vmovdqu ymm0,YMMWORD PTR [r10+rdi*1]
    748f:	c4 c1 7e 7f 04 39    	vmovdqu YMMWORD PTR [r9+rdi*1],ymm0
    7495:	48 83 ef 20          	sub    rdi,0x20
    7499:	c4 c1 7e 6f 24 3a    	vmovdqu ymm4,YMMWORD PTR [r10+rdi*1]
    749f:	c4 c1 7e 7f 24 39    	vmovdqu YMMWORD PTR [r9+rdi*1],ymm4
    74a5:	48 83 ef 20          	sub    rdi,0x20
    74a9:	c4 c1 7e 6f 0c 3a    	vmovdqu ymm1,YMMWORD PTR [r10+rdi*1]
    74af:	c4 c1 7e 7f 0c 39    	vmovdqu YMMWORD PTR [r9+rdi*1],ymm1
    74b5:	48 83 ef 20          	sub    rdi,0x20
    74b9:	c4 c1 7e 6f 2c 3a    	vmovdqu ymm5,YMMWORD PTR [r10+rdi*1]
    74bf:	c4 c1 7e 7f 2c 39    	vmovdqu YMMWORD PTR [r9+rdi*1],ymm5
    74c5:	48 83 ef 20          	sub    rdi,0x20
    74c9:	49 39 fb             	cmp    r11,rdi
    74cc:	0f 84 90 00 00 00    	je     7562 <ft_memcpy+0x1a2>
    74d2:	c4 c1 7e 6f 3c 3a    	vmovdqu ymm7,YMMWORD PTR [r10+rdi*1]
    74d8:	c4 c1 7e 7f 3c 39    	vmovdqu YMMWORD PTR [r9+rdi*1],ymm7
    74de:	c4 41 7e 6f 44 3a e0 	vmovdqu ymm8,YMMWORD PTR [r10+rdi*1-0x20]
    74e5:	c4 41 7e 7f 44 39 e0 	vmovdqu YMMWORD PTR [r9+rdi*1-0x20],ymm8
    74ec:	c4 41 7e 6f 4c 3a c0 	vmovdqu ymm9,YMMWORD PTR [r10+rdi*1-0x40]
    74f3:	c4 41 7e 7f 4c 39 c0 	vmovdqu YMMWORD PTR [r9+rdi*1-0x40],ymm9
    74fa:	c4 41 7e 6f 54 3a a0 	vmovdqu ymm10,YMMWORD PTR [r10+rdi*1-0x60]
    7501:	c4 41 7e 7f 54 39 a0 	vmovdqu YMMWORD PTR [r9+rdi*1-0x60],ymm10
    7508:	c4 41 7e 6f 5c 3a 80 	vmovdqu ymm11,YMMWORD PTR [r10+rdi*1-0x80]
    750f:	c4 41 7e 7f 5c 39 80 	vmovdqu YMMWORD PTR [r9+rdi*1-0x80],ymm11
    7516:	c4 41 7e 6f a4 3a 60 	vmovdqu ymm12,YMMWORD PTR [r10+rdi*1-0xa0]
    751d:	ff ff ff 
    7520:	c4 41 7e 7f a4 39 60 	vmovdqu YMMWORD PTR [r9+rdi*1-0xa0],ymm12
    7527:	ff ff ff 
    752a:	c4 41 7e 6f ac 3a 40 	vmovdqu ymm13,YMMWORD PTR [r10+rdi*1-0xc0]
    7531:	ff ff ff 
    7534:	c4 41 7e 7f ac 39 40 	vmovdqu YMMWORD PTR [r9+rdi*1-0xc0],ymm13
    753b:	ff ff ff 
    753e:	c4 41 7e 6f b4 3a 20 	vmovdqu ymm14,YMMWORD PTR [r10+rdi*1-0xe0]
    7545:	ff ff ff 
    7548:	c4 41 7e 7f b4 39 20 	vmovdqu YMMWORD PTR [r9+rdi*1-0xe0],ymm14
    754f:	ff ff ff 
    7552:	48 81 ef 00 01 00 00 	sub    rdi,0x100
    7559:	49 39 fb             	cmp    r11,rdi
    755c:	0f 85 70 ff ff ff    	jne    74d2 <ft_memcpy+0x112>
    7562:	49 89 f1             	mov    r9,rsi
    7565:	49 83 e1 e0          	and    r9,0xffffffffffffffe0
    7569:	4c 29 ca             	sub    rdx,r9
    756c:	4c 39 ce             	cmp    rsi,r9
    756f:	0f 84 61 01 00 00    	je     76d6 <ft_memcpy+0x316>
    7575:	4c 29 ce             	sub    rsi,r9
    7578:	4c 8d 56 ff          	lea    r10,[rsi-0x1]
    757c:	49 83 fa 0e          	cmp    r10,0xe
    7580:	0f 86 71 06 00 00    	jbe    7bf7 <ft_memcpy+0x837>
    7586:	c5 f8 77             	vzeroupper 
    7589:	c5 7a 6f 7c 31 f0    	vmovdqu xmm15,XMMWORD PTR [rcx+rsi*1-0x10]
    758f:	49 89 f0             	mov    r8,rsi
    7592:	49 83 e0 f0          	and    r8,0xfffffffffffffff0
    7596:	c5 7a 7f 7c 30 f0    	vmovdqu XMMWORD PTR [rax+rsi*1-0x10],xmm15
    759c:	4c 29 c2             	sub    rdx,r8
    759f:	49 39 f0             	cmp    r8,rsi
    75a2:	0f 84 31 01 00 00    	je     76d9 <ft_memcpy+0x319>
    75a8:	0f b6 34 11          	movzx  esi,BYTE PTR [rcx+rdx*1]
    75ac:	4c 8d 5a ff          	lea    r11,[rdx-0x1]
    75b0:	40 88 34 10          	mov    BYTE PTR [rax+rdx*1],sil
    75b4:	48 85 d2             	test   rdx,rdx
    75b7:	0f 84 1c 01 00 00    	je     76d9 <ft_memcpy+0x319>
    75bd:	0f b6 7c 11 ff       	movzx  edi,BYTE PTR [rcx+rdx*1-0x1]
    75c2:	4c 8d 4a fe          	lea    r9,[rdx-0x2]
    75c6:	40 88 7c 10 ff       	mov    BYTE PTR [rax+rdx*1-0x1],dil
    75cb:	4d 85 db             	test   r11,r11
    75ce:	0f 84 05 01 00 00    	je     76d9 <ft_memcpy+0x319>
    75d4:	44 0f b6 54 11 fe    	movzx  r10d,BYTE PTR [rcx+rdx*1-0x2]
    75da:	4c 8d 42 fd          	lea    r8,[rdx-0x3]
    75de:	44 88 54 10 fe       	mov    BYTE PTR [rax+rdx*1-0x2],r10b
    75e3:	4d 85 c9             	test   r9,r9
    75e6:	0f 84 ed 00 00 00    	je     76d9 <ft_memcpy+0x319>
    75ec:	0f b6 74 11 fd       	movzx  esi,BYTE PTR [rcx+rdx*1-0x3]
    75f1:	4c 8d 5a fc          	lea    r11,[rdx-0x4]
    75f5:	40 88 74 10 fd       	mov    BYTE PTR [rax+rdx*1-0x3],sil
    75fa:	4d 85 c0             	test   r8,r8
    75fd:	0f 84 d6 00 00 00    	je     76d9 <ft_memcpy+0x319>
    7603:	0f b6 7c 11 fc       	movzx  edi,BYTE PTR [rcx+rdx*1-0x4]
    7608:	4c 8d 4a fb          	lea    r9,[rdx-0x5]
    760c:	40 88 7c 10 fc       	mov    BYTE PTR [rax+rdx*1-0x4],dil
    7611:	4d 85 db             	test   r11,r11
    7614:	0f 84 bf 00 00 00    	je     76d9 <ft_memcpy+0x319>
    761a:	44 0f b6 54 11 fb    	movzx  r10d,BYTE PTR [rcx+rdx*1-0x5]
    7620:	4c 8d 42 fa          	lea    r8,[rdx-0x6]
    7624:	44 88 54 10 fb       	mov    BYTE PTR [rax+rdx*1-0x5],r10b
    7629:	4d 85 c9             	test   r9,r9
    762c:	0f 84 a7 00 00 00    	je     76d9 <ft_memcpy+0x319>
    7632:	0f b6 74 11 fa       	movzx  esi,BYTE PTR [rcx+rdx*1-0x6]
    7637:	4c 8d 5a f9          	lea    r11,[rdx-0x7]
    763b:	40 88 74 10 fa       	mov    BYTE PTR [rax+rdx*1-0x6],sil
    7640:	4d 85 c0             	test   r8,r8
    7643:	0f 84 90 00 00 00    	je     76d9 <ft_memcpy+0x319>
    7649:	0f b6 7c 11 f9       	movzx  edi,BYTE PTR [rcx+rdx*1-0x7]
    764e:	4c 8d 4a f8          	lea    r9,[rdx-0x8]
    7652:	40 88 7c 10 f9       	mov    BYTE PTR [rax+rdx*1-0x7],dil
    7657:	4d 85 db             	test   r11,r11
    765a:	74 7d                	je     76d9 <ft_memcpy+0x319>
    765c:	44 0f b6 54 11 f8    	movzx  r10d,BYTE PTR [rcx+rdx*1-0x8]
    7662:	4c 8d 42 f7          	lea    r8,[rdx-0x9]
    7666:	44 88 54 10 f8       	mov    BYTE PTR [rax+rdx*1-0x8],r10b
    766b:	4d 85 c9             	test   r9,r9
    766e:	74 69                	je     76d9 <ft_memcpy+0x319>
    7670:	0f b6 74 11 f7       	movzx  esi,BYTE PTR [rcx+rdx*1-0x9]
    7675:	4c 8d 5a f6          	lea    r11,[rdx-0xa]
    7679:	40 88 74 10 f7       	mov    BYTE PTR [rax+rdx*1-0x9],sil
    767e:	4d 85 c0             	test   r8,r8
    7681:	74 56                	je     76d9 <ft_memcpy+0x319>
    7683:	0f b6 7c 11 f6       	movzx  edi,BYTE PTR [rcx+rdx*1-0xa]
    7688:	4c 8d 4a f5          	lea    r9,[rdx-0xb]
    768c:	40 88 7c 10 f6       	mov    BYTE PTR [rax+rdx*1-0xa],dil
    7691:	4d 85 db             	test   r11,r11
    7694:	74 43                	je     76d9 <ft_memcpy+0x319>
    7696:	44 0f b6 54 11 f5    	movzx  r10d,BYTE PTR [rcx+rdx*1-0xb]
    769c:	4c 8d 42 f4          	lea    r8,[rdx-0xc]
    76a0:	44 88 54 10 f5       	mov    BYTE PTR [rax+rdx*1-0xb],r10b
    76a5:	4d 85 c9             	test   r9,r9
    76a8:	74 2f                	je     76d9 <ft_memcpy+0x319>
    76aa:	0f b6 74 11 f4       	movzx  esi,BYTE PTR [rcx+rdx*1-0xc]
    76af:	4c 8d 5a f3          	lea    r11,[rdx-0xd]
    76b3:	40 88 74 10 f4       	mov    BYTE PTR [rax+rdx*1-0xc],sil
    76b8:	4d 85 c0             	test   r8,r8
    76bb:	74 1c                	je     76d9 <ft_memcpy+0x319>
    76bd:	0f b6 7c 11 f3       	movzx  edi,BYTE PTR [rcx+rdx*1-0xd]
    76c2:	40 88 7c 10 f3       	mov    BYTE PTR [rax+rdx*1-0xd],dil
    76c7:	4d 85 db             	test   r11,r11
    76ca:	74 0d                	je     76d9 <ft_memcpy+0x319>
    76cc:	0f b6 4c 11 f2       	movzx  ecx,BYTE PTR [rcx+rdx*1-0xe]
    76d1:	88 4c 10 f2          	mov    BYTE PTR [rax+rdx*1-0xe],cl
    76d5:	c3                   	ret    
    76d6:	c5 f8 77             	vzeroupper 
    76d9:	c3                   	ret    
    76da:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    76e0:	4c 8d 41 01          	lea    r8,[rcx+0x1]
    76e4:	4c 29 c7             	sub    rdi,r8
    76e7:	48 83 ff 1e          	cmp    rdi,0x1e
    76eb:	0f 86 ef 03 00 00    	jbe    7ae0 <ft_memcpy+0x720>
    76f1:	48 83 fa 0e          	cmp    rdx,0xe
    76f5:	0f 86 e5 03 00 00    	jbe    7ae0 <ft_memcpy+0x720>
    76fb:	48 83 fa 1e          	cmp    rdx,0x1e
    76ff:	0f 86 e7 04 00 00    	jbe    7bec <ft_memcpy+0x82c>
    7705:	49 89 f1             	mov    r9,rsi
    7708:	45 31 db             	xor    r11d,r11d
    770b:	49 83 e1 e0          	and    r9,0xffffffffffffffe0
    770f:	4d 8d 51 e0          	lea    r10,[r9-0x20]
    7713:	49 c1 ea 05          	shr    r10,0x5
    7717:	49 83 c2 01          	add    r10,0x1
    771b:	41 83 e2 07          	and    r10d,0x7
    771f:	0f 84 9b 00 00 00    	je     77c0 <ft_memcpy+0x400>
    7725:	49 83 fa 01          	cmp    r10,0x1
    7729:	74 7c                	je     77a7 <ft_memcpy+0x3e7>
    772b:	49 83 fa 02          	cmp    r10,0x2
    772f:	74 66                	je     7797 <ft_memcpy+0x3d7>
    7731:	49 83 fa 03          	cmp    r10,0x3
    7735:	74 50                	je     7787 <ft_memcpy+0x3c7>
    7737:	49 83 fa 04          	cmp    r10,0x4
    773b:	74 3a                	je     7777 <ft_memcpy+0x3b7>
    773d:	49 83 fa 05          	cmp    r10,0x5
    7741:	74 24                	je     7767 <ft_memcpy+0x3a7>
    7743:	49 83 fa 06          	cmp    r10,0x6
    7747:	74 0e                	je     7757 <ft_memcpy+0x397>
    7749:	c5 fe 6f 19          	vmovdqu ymm3,YMMWORD PTR [rcx]
    774d:	41 bb 20 00 00 00    	mov    r11d,0x20
    7753:	c5 fe 7f 18          	vmovdqu YMMWORD PTR [rax],ymm3
    7757:	c4 a1 7e 6f 34 19    	vmovdqu ymm6,YMMWORD PTR [rcx+r11*1]
    775d:	c4 a1 7e 7f 34 18    	vmovdqu YMMWORD PTR [rax+r11*1],ymm6
    7763:	49 83 c3 20          	add    r11,0x20
    7767:	c4 a1 7e 6f 14 19    	vmovdqu ymm2,YMMWORD PTR [rcx+r11*1]
    776d:	c4 a1 7e 7f 14 18    	vmovdqu YMMWORD PTR [rax+r11*1],ymm2
    7773:	49 83 c3 20          	add    r11,0x20
    7777:	c4 a1 7e 6f 04 19    	vmovdqu ymm0,YMMWORD PTR [rcx+r11*1]
    777d:	c4 a1 7e 7f 04 18    	vmovdqu YMMWORD PTR [rax+r11*1],ymm0
    7783:	49 83 c3 20          	add    r11,0x20
    7787:	c4 a1 7e 6f 24 19    	vmovdqu ymm4,YMMWORD PTR [rcx+r11*1]
    778d:	c4 a1 7e 7f 24 18    	vmovdqu YMMWORD PTR [rax+r11*1],ymm4
    7793:	49 83 c3 20          	add    r11,0x20
    7797:	c4 a1 7e 6f 0c 19    	vmovdqu ymm1,YMMWORD PTR [rcx+r11*1]
    779d:	c4 a1 7e 7f 0c 18    	vmovdqu YMMWORD PTR [rax+r11*1],ymm1
    77a3:	49 83 c3 20          	add    r11,0x20
    77a7:	c4 a1 7e 6f 2c 19    	vmovdqu ymm5,YMMWORD PTR [rcx+r11*1]
    77ad:	c4 a1 7e 7f 2c 18    	vmovdqu YMMWORD PTR [rax+r11*1],ymm5
    77b3:	49 83 c3 20          	add    r11,0x20
    77b7:	4d 39 cb             	cmp    r11,r9
    77ba:	0f 84 96 00 00 00    	je     7856 <ft_memcpy+0x496>
    77c0:	c4 a1 7e 6f 3c 19    	vmovdqu ymm7,YMMWORD PTR [rcx+r11*1]
    77c6:	c4 a1 7e 7f 3c 18    	vmovdqu YMMWORD PTR [rax+r11*1],ymm7
    77cc:	c4 21 7e 6f 44 19 20 	vmovdqu ymm8,YMMWORD PTR [rcx+r11*1+0x20]
    77d3:	c4 21 7e 7f 44 18 20 	vmovdqu YMMWORD PTR [rax+r11*1+0x20],ymm8
    77da:	c4 21 7e 6f 4c 19 40 	vmovdqu ymm9,YMMWORD PTR [rcx+r11*1+0x40]
    77e1:	c4 21 7e 7f 4c 18 40 	vmovdqu YMMWORD PTR [rax+r11*1+0x40],ymm9
    77e8:	c4 21 7e 6f 54 19 60 	vmovdqu ymm10,YMMWORD PTR [rcx+r11*1+0x60]
    77ef:	c4 21 7e 7f 54 18 60 	vmovdqu YMMWORD PTR [rax+r11*1+0x60],ymm10
    77f6:	c4 21 7e 6f 9c 19 80 	vmovdqu ymm11,YMMWORD PTR [rcx+r11*1+0x80]
    77fd:	00 00 00 
    7800:	c4 21 7e 7f 9c 18 80 	vmovdqu YMMWORD PTR [rax+r11*1+0x80],ymm11
    7807:	00 00 00 
    780a:	c4 21 7e 6f a4 19 a0 	vmovdqu ymm12,YMMWORD PTR [rcx+r11*1+0xa0]
    7811:	00 00 00 
    7814:	c4 21 7e 7f a4 18 a0 	vmovdqu YMMWORD PTR [rax+r11*1+0xa0],ymm12
    781b:	00 00 00 
    781e:	c4 21 7e 6f ac 19 c0 	vmovdqu ymm13,YMMWORD PTR [rcx+r11*1+0xc0]
    7825:	00 00 00 
    7828:	c4 21 7e 7f ac 18 c0 	vmovdqu YMMWORD PTR [rax+r11*1+0xc0],ymm13
    782f:	00 00 00 
    7832:	c4 21 7e 6f b4 19 e0 	vmovdqu ymm14,YMMWORD PTR [rcx+r11*1+0xe0]
    7839:	00 00 00 
    783c:	c4 21 7e 7f b4 18 e0 	vmovdqu YMMWORD PTR [rax+r11*1+0xe0],ymm14
    7843:	00 00 00 
    7846:	49 81 c3 00 01 00 00 	add    r11,0x100
    784d:	4d 39 cb             	cmp    r11,r9
    7850:	0f 85 6a ff ff ff    	jne    77c0 <ft_memcpy+0x400>
    7856:	48 89 f2             	mov    rdx,rsi
    7859:	48 83 e2 e0          	and    rdx,0xffffffffffffffe0
    785d:	40 f6 c6 1f          	test   sil,0x1f
    7861:	0f 84 6f fe ff ff    	je     76d6 <ft_memcpy+0x316>
    7867:	48 89 f7             	mov    rdi,rsi
    786a:	48 29 d7             	sub    rdi,rdx
    786d:	4c 8d 47 ff          	lea    r8,[rdi-0x1]
    7871:	49 83 f8 0e          	cmp    r8,0xe
    7875:	0f 86 84 03 00 00    	jbe    7bff <ft_memcpy+0x83f>
    787b:	c5 f8 77             	vzeroupper 
    787e:	c5 7a 6f 3c 11       	vmovdqu xmm15,XMMWORD PTR [rcx+rdx*1]
    7883:	49 89 f9             	mov    r9,rdi
    7886:	49 83 e1 f0          	and    r9,0xfffffffffffffff0
    788a:	c5 7a 7f 3c 10       	vmovdqu XMMWORD PTR [rax+rdx*1],xmm15
    788f:	4c 01 ca             	add    rdx,r9
    7892:	4c 39 cf             	cmp    rdi,r9
    7895:	0f 84 3e fe ff ff    	je     76d9 <ft_memcpy+0x319>
    789b:	44 0f b6 14 11       	movzx  r10d,BYTE PTR [rcx+rdx*1]
    78a0:	4c 8d 5a 01          	lea    r11,[rdx+0x1]
    78a4:	44 88 14 10          	mov    BYTE PTR [rax+rdx*1],r10b
    78a8:	4c 39 de             	cmp    rsi,r11
    78ab:	0f 86 28 fe ff ff    	jbe    76d9 <ft_memcpy+0x319>
    78b1:	0f b6 7c 11 01       	movzx  edi,BYTE PTR [rcx+rdx*1+0x1]
    78b6:	4c 8d 42 02          	lea    r8,[rdx+0x2]
    78ba:	40 88 7c 10 01       	mov    BYTE PTR [rax+rdx*1+0x1],dil
    78bf:	4c 39 c6             	cmp    rsi,r8
    78c2:	0f 86 11 fe ff ff    	jbe    76d9 <ft_memcpy+0x319>
    78c8:	44 0f b6 4c 11 02    	movzx  r9d,BYTE PTR [rcx+rdx*1+0x2]
    78ce:	4c 8d 52 03          	lea    r10,[rdx+0x3]
    78d2:	44 88 4c 10 02       	mov    BYTE PTR [rax+rdx*1+0x2],r9b
    78d7:	4c 39 d6             	cmp    rsi,r10
    78da:	0f 86 f9 fd ff ff    	jbe    76d9 <ft_memcpy+0x319>
    78e0:	44 0f b6 5c 11 03    	movzx  r11d,BYTE PTR [rcx+rdx*1+0x3]
    78e6:	48 8d 7a 04          	lea    rdi,[rdx+0x4]
    78ea:	44 88 5c 10 03       	mov    BYTE PTR [rax+rdx*1+0x3],r11b
    78ef:	48 39 fe             	cmp    rsi,rdi
    78f2:	0f 86 e1 fd ff ff    	jbe    76d9 <ft_memcpy+0x319>
    78f8:	44 0f b6 44 11 04    	movzx  r8d,BYTE PTR [rcx+rdx*1+0x4]
    78fe:	4c 8d 4a 05          	lea    r9,[rdx+0x5]
    7902:	44 88 44 10 04       	mov    BYTE PTR [rax+rdx*1+0x4],r8b
    7907:	4c 39 ce             	cmp    rsi,r9
    790a:	0f 86 c9 fd ff ff    	jbe    76d9 <ft_memcpy+0x319>
    7910:	44 0f b6 54 11 05    	movzx  r10d,BYTE PTR [rcx+rdx*1+0x5]
    7916:	4c 8d 5a 06          	lea    r11,[rdx+0x6]
    791a:	44 88 54 10 05       	mov    BYTE PTR [rax+rdx*1+0x5],r10b
    791f:	4c 39 de             	cmp    rsi,r11
    7922:	0f 86 b1 fd ff ff    	jbe    76d9 <ft_memcpy+0x319>
    7928:	0f b6 7c 11 06       	movzx  edi,BYTE PTR [rcx+rdx*1+0x6]
    792d:	4c 8d 42 07          	lea    r8,[rdx+0x7]
    7931:	40 88 7c 10 06       	mov    BYTE PTR [rax+rdx*1+0x6],dil
    7936:	4c 39 c6             	cmp    rsi,r8
    7939:	0f 86 9a fd ff ff    	jbe    76d9 <ft_memcpy+0x319>
    793f:	44 0f b6 4c 11 07    	movzx  r9d,BYTE PTR [rcx+rdx*1+0x7]
    7945:	4c 8d 52 08          	lea    r10,[rdx+0x8]
    7949:	44 88 4c 10 07       	mov    BYTE PTR [rax+rdx*1+0x7],r9b
    794e:	4c 39 d6             	cmp    rsi,r10
    7951:	0f 86 82 fd ff ff    	jbe    76d9 <ft_memcpy+0x319>
    7957:	44 0f b6 5c 11 08    	movzx  r11d,BYTE PTR [rcx+rdx*1+0x8]
    795d:	48 8d 7a 09          	lea    rdi,[rdx+0x9]
    7961:	44 88 5c 10 08       	mov    BYTE PTR [rax+rdx*1+0x8],r11b
    7966:	48 39 fe             	cmp    rsi,rdi
    7969:	0f 86 6a fd ff ff    	jbe    76d9 <ft_memcpy+0x319>
    796f:	44 0f b6 44 11 09    	movzx  r8d,BYTE PTR [rcx+rdx*1+0x9]
    7975:	4c 8d 4a 0a          	lea    r9,[rdx+0xa]
    7979:	44 88 44 10 09       	mov    BYTE PTR [rax+rdx*1+0x9],r8b
    797e:	4c 39 ce             	cmp    rsi,r9
    7981:	0f 86 52 fd ff ff    	jbe    76d9 <ft_memcpy+0x319>
    7987:	44 0f b6 54 11 0a    	movzx  r10d,BYTE PTR [rcx+rdx*1+0xa]
    798d:	4c 8d 5a 0b          	lea    r11,[rdx+0xb]
    7991:	44 88 54 10 0a       	mov    BYTE PTR [rax+rdx*1+0xa],r10b
    7996:	4c 39 de             	cmp    rsi,r11
    7999:	0f 86 3a fd ff ff    	jbe    76d9 <ft_memcpy+0x319>
    799f:	0f b6 7c 11 0b       	movzx  edi,BYTE PTR [rcx+rdx*1+0xb]
    79a4:	4c 8d 42 0c          	lea    r8,[rdx+0xc]
    79a8:	40 88 7c 10 0b       	mov    BYTE PTR [rax+rdx*1+0xb],dil
    79ad:	4c 39 c6             	cmp    rsi,r8
    79b0:	0f 86 23 fd ff ff    	jbe    76d9 <ft_memcpy+0x319>
    79b6:	44 0f b6 4c 11 0c    	movzx  r9d,BYTE PTR [rcx+rdx*1+0xc]
    79bc:	4c 8d 52 0d          	lea    r10,[rdx+0xd]
    79c0:	44 88 4c 10 0c       	mov    BYTE PTR [rax+rdx*1+0xc],r9b
    79c5:	4c 39 d6             	cmp    rsi,r10
    79c8:	0f 86 0b fd ff ff    	jbe    76d9 <ft_memcpy+0x319>
    79ce:	44 0f b6 5c 11 0d    	movzx  r11d,BYTE PTR [rcx+rdx*1+0xd]
    79d4:	48 8d 7a 0e          	lea    rdi,[rdx+0xe]
    79d8:	44 88 5c 10 0d       	mov    BYTE PTR [rax+rdx*1+0xd],r11b
    79dd:	48 39 fe             	cmp    rsi,rdi
    79e0:	0f 86 f3 fc ff ff    	jbe    76d9 <ft_memcpy+0x319>
    79e6:	0f b6 4c 11 0e       	movzx  ecx,BYTE PTR [rcx+rdx*1+0xe]
    79eb:	88 4c 10 0e          	mov    BYTE PTR [rax+rdx*1+0xe],cl
    79ef:	c3                   	ret    
    79f0:	4c 8d 4a 01          	lea    r9,[rdx+0x1]
    79f4:	41 83 e1 07          	and    r9d,0x7
    79f8:	0f 84 83 00 00 00    	je     7a81 <ft_memcpy+0x6c1>
    79fe:	49 83 f9 01          	cmp    r9,0x1
    7a02:	74 6a                	je     7a6e <ft_memcpy+0x6ae>
    7a04:	49 83 f9 02          	cmp    r9,0x2
    7a08:	74 57                	je     7a61 <ft_memcpy+0x6a1>
    7a0a:	49 83 f9 03          	cmp    r9,0x3
    7a0e:	74 45                	je     7a55 <ft_memcpy+0x695>
    7a10:	49 83 f9 04          	cmp    r9,0x4
    7a14:	74 32                	je     7a48 <ft_memcpy+0x688>
    7a16:	49 83 f9 05          	cmp    r9,0x5
    7a1a:	74 20                	je     7a3c <ft_memcpy+0x67c>
    7a1c:	49 83 f9 06          	cmp    r9,0x6
    7a20:	74 0d                	je     7a2f <ft_memcpy+0x66f>
    7a22:	44 0f b6 14 11       	movzx  r10d,BYTE PTR [rcx+rdx*1]
    7a27:	44 88 14 10          	mov    BYTE PTR [rax+rdx*1],r10b
    7a2b:	48 83 ea 01          	sub    rdx,0x1
    7a2f:	44 0f b6 04 11       	movzx  r8d,BYTE PTR [rcx+rdx*1]
    7a34:	44 88 04 10          	mov    BYTE PTR [rax+rdx*1],r8b
    7a38:	48 83 ea 01          	sub    rdx,0x1
    7a3c:	0f b6 34 11          	movzx  esi,BYTE PTR [rcx+rdx*1]
    7a40:	40 88 34 10          	mov    BYTE PTR [rax+rdx*1],sil
    7a44:	48 83 ea 01          	sub    rdx,0x1
    7a48:	44 0f b6 1c 11       	movzx  r11d,BYTE PTR [rcx+rdx*1]
    7a4d:	44 88 1c 10          	mov    BYTE PTR [rax+rdx*1],r11b
    7a51:	48 83 ea 01          	sub    rdx,0x1
    7a55:	0f b6 3c 11          	movzx  edi,BYTE PTR [rcx+rdx*1]
    7a59:	40 88 3c 10          	mov    BYTE PTR [rax+rdx*1],dil
    7a5d:	48 83 ea 01          	sub    rdx,0x1
    7a61:	44 0f b6 0c 11       	movzx  r9d,BYTE PTR [rcx+rdx*1]
    7a66:	44 88 0c 10          	mov    BYTE PTR [rax+rdx*1],r9b
    7a6a:	48 83 ea 01          	sub    rdx,0x1
    7a6e:	44 0f b6 14 11       	movzx  r10d,BYTE PTR [rcx+rdx*1]
    7a73:	44 88 14 10          	mov    BYTE PTR [rax+rdx*1],r10b
    7a77:	48 83 ea 01          	sub    rdx,0x1
    7a7b:	0f 82 75 01 00 00    	jb     7bf6 <ft_memcpy+0x836>
    7a81:	44 0f b6 04 11       	movzx  r8d,BYTE PTR [rcx+rdx*1]
    7a86:	44 88 04 10          	mov    BYTE PTR [rax+rdx*1],r8b
    7a8a:	0f b6 74 11 ff       	movzx  esi,BYTE PTR [rcx+rdx*1-0x1]
    7a8f:	40 88 74 10 ff       	mov    BYTE PTR [rax+rdx*1-0x1],sil
    7a94:	44 0f b6 5c 11 fe    	movzx  r11d,BYTE PTR [rcx+rdx*1-0x2]
    7a9a:	44 88 5c 10 fe       	mov    BYTE PTR [rax+rdx*1-0x2],r11b
    7a9f:	0f b6 7c 11 fd       	movzx  edi,BYTE PTR [rcx+rdx*1-0x3]
    7aa4:	40 88 7c 10 fd       	mov    BYTE PTR [rax+rdx*1-0x3],dil
    7aa9:	44 0f b6 4c 11 fc    	movzx  r9d,BYTE PTR [rcx+rdx*1-0x4]
    7aaf:	44 88 4c 10 fc       	mov    BYTE PTR [rax+rdx*1-0x4],r9b
    7ab4:	44 0f b6 54 11 fb    	movzx  r10d,BYTE PTR [rcx+rdx*1-0x5]
    7aba:	44 88 54 10 fb       	mov    BYTE PTR [rax+rdx*1-0x5],r10b
    7abf:	44 0f b6 44 11 fa    	movzx  r8d,BYTE PTR [rcx+rdx*1-0x6]
    7ac5:	44 88 44 10 fa       	mov    BYTE PTR [rax+rdx*1-0x6],r8b
    7aca:	0f b6 74 11 f9       	movzx  esi,BYTE PTR [rcx+rdx*1-0x7]
    7acf:	40 88 74 10 f9       	mov    BYTE PTR [rax+rdx*1-0x7],sil
    7ad4:	48 83 ea 08          	sub    rdx,0x8
    7ad8:	48 83 fa ff          	cmp    rdx,0xffffffffffffffff
    7adc:	75 a3                	jne    7a81 <ft_memcpy+0x6c1>
    7ade:	c3                   	ret    
    7adf:	90                   	nop
    7ae0:	49 89 f0             	mov    r8,rsi
    7ae3:	45 31 c9             	xor    r9d,r9d
    7ae6:	41 83 e0 07          	and    r8d,0x7
    7aea:	0f 84 86 00 00 00    	je     7b76 <ft_memcpy+0x7b6>
    7af0:	49 83 f8 01          	cmp    r8,0x1
    7af4:	74 6a                	je     7b60 <ft_memcpy+0x7a0>
    7af6:	49 83 f8 02          	cmp    r8,0x2
    7afa:	74 57                	je     7b53 <ft_memcpy+0x793>
    7afc:	49 83 f8 03          	cmp    r8,0x3
    7b00:	74 44                	je     7b46 <ft_memcpy+0x786>
    7b02:	49 83 f8 04          	cmp    r8,0x4
    7b06:	74 31                	je     7b39 <ft_memcpy+0x779>
    7b08:	49 83 f8 05          	cmp    r8,0x5
    7b0c:	74 1e                	je     7b2c <ft_memcpy+0x76c>
    7b0e:	49 83 f8 06          	cmp    r8,0x6
    7b12:	74 0b                	je     7b1f <ft_memcpy+0x75f>
    7b14:	0f b6 11             	movzx  edx,BYTE PTR [rcx]
    7b17:	41 b9 01 00 00 00    	mov    r9d,0x1
    7b1d:	88 10                	mov    BYTE PTR [rax],dl
    7b1f:	46 0f b6 14 09       	movzx  r10d,BYTE PTR [rcx+r9*1]
    7b24:	46 88 14 08          	mov    BYTE PTR [rax+r9*1],r10b
    7b28:	49 83 c1 01          	add    r9,0x1
    7b2c:	46 0f b6 1c 09       	movzx  r11d,BYTE PTR [rcx+r9*1]
    7b31:	46 88 1c 08          	mov    BYTE PTR [rax+r9*1],r11b
    7b35:	49 83 c1 01          	add    r9,0x1
    7b39:	42 0f b6 3c 09       	movzx  edi,BYTE PTR [rcx+r9*1]
    7b3e:	42 88 3c 08          	mov    BYTE PTR [rax+r9*1],dil
    7b42:	49 83 c1 01          	add    r9,0x1
    7b46:	46 0f b6 04 09       	movzx  r8d,BYTE PTR [rcx+r9*1]
    7b4b:	46 88 04 08          	mov    BYTE PTR [rax+r9*1],r8b
    7b4f:	49 83 c1 01          	add    r9,0x1
    7b53:	42 0f b6 14 09       	movzx  edx,BYTE PTR [rcx+r9*1]
    7b58:	42 88 14 08          	mov    BYTE PTR [rax+r9*1],dl
    7b5c:	49 83 c1 01          	add    r9,0x1
    7b60:	46 0f b6 14 09       	movzx  r10d,BYTE PTR [rcx+r9*1]
    7b65:	46 88 14 08          	mov    BYTE PTR [rax+r9*1],r10b
    7b69:	49 83 c1 01          	add    r9,0x1
    7b6d:	4c 39 ce             	cmp    rsi,r9
    7b70:	0f 84 91 00 00 00    	je     7c07 <ft_memcpy+0x847>
    7b76:	46 0f b6 1c 09       	movzx  r11d,BYTE PTR [rcx+r9*1]
    7b7b:	46 88 1c 08          	mov    BYTE PTR [rax+r9*1],r11b
    7b7f:	42 0f b6 7c 09 01    	movzx  edi,BYTE PTR [rcx+r9*1+0x1]
    7b85:	42 88 7c 08 01       	mov    BYTE PTR [rax+r9*1+0x1],dil
    7b8a:	46 0f b6 44 09 02    	movzx  r8d,BYTE PTR [rcx+r9*1+0x2]
    7b90:	46 88 44 08 02       	mov    BYTE PTR [rax+r9*1+0x2],r8b
    7b95:	42 0f b6 54 09 03    	movzx  edx,BYTE PTR [rcx+r9*1+0x3]
    7b9b:	42 88 54 08 03       	mov    BYTE PTR [rax+r9*1+0x3],dl
    7ba0:	46 0f b6 54 09 04    	movzx  r10d,BYTE PTR [rcx+r9*1+0x4]
    7ba6:	46 88 54 08 04       	mov    BYTE PTR [rax+r9*1+0x4],r10b
    7bab:	46 0f b6 5c 09 05    	movzx  r11d,BYTE PTR [rcx+r9*1+0x5]
    7bb1:	46 88 5c 08 05       	mov    BYTE PTR [rax+r9*1+0x5],r11b
    7bb6:	42 0f b6 7c 09 06    	movzx  edi,BYTE PTR [rcx+r9*1+0x6]
    7bbc:	42 88 7c 08 06       	mov    BYTE PTR [rax+r9*1+0x6],dil
    7bc1:	46 0f b6 44 09 07    	movzx  r8d,BYTE PTR [rcx+r9*1+0x7]
    7bc7:	46 88 44 08 07       	mov    BYTE PTR [rax+r9*1+0x7],r8b
    7bcc:	49 83 c1 08          	add    r9,0x8
    7bd0:	4c 39 ce             	cmp    rsi,r9
    7bd3:	75 a1                	jne    7b76 <ft_memcpy+0x7b6>
    7bd5:	c3                   	ret    
    7bd6:	c4 c1 7e 6f 1a       	vmovdqu ymm3,YMMWORD PTR [r10]
    7bdb:	48 c7 c7 e0 ff ff ff 	mov    rdi,0xffffffffffffffe0
    7be2:	c4 c1 7e 7f 19       	vmovdqu YMMWORD PTR [r9],ymm3
    7be7:	e9 7d f8 ff ff       	jmp    7469 <ft_memcpy+0xa9>
    7bec:	48 89 f7             	mov    rdi,rsi
    7bef:	31 d2                	xor    edx,edx
    7bf1:	e9 88 fc ff ff       	jmp    787e <ft_memcpy+0x4be>
    7bf6:	c3                   	ret    
    7bf7:	c5 f8 77             	vzeroupper 
    7bfa:	e9 a9 f9 ff ff       	jmp    75a8 <ft_memcpy+0x1e8>
    7bff:	c5 f8 77             	vzeroupper 
    7c02:	e9 94 fc ff ff       	jmp    789b <ft_memcpy+0x4db>
    7c07:	c3                   	ret    
    7c08:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    7c0f:	00 

0000000000007c10 <ft_strlcpy>:
    7c10:	f3 0f 1e fa          	endbr64 
    7c14:	41 54                	push   r12
    7c16:	49 89 d4             	mov    r12,rdx
    7c19:	55                   	push   rbp
    7c1a:	48 89 f5             	mov    rbp,rsi
    7c1d:	53                   	push   rbx
    7c1e:	48 89 fb             	mov    rbx,rdi
    7c21:	48 89 f7             	mov    rdi,rsi
    7c24:	e8 37 df ff ff       	call   5b60 <ft_strlen>
    7c29:	49 89 c0             	mov    r8,rax
    7c2c:	4d 85 e4             	test   r12,r12
    7c2f:	0f 84 9e 01 00 00    	je     7dd3 <ft_strlcpy+0x1c3>
    7c35:	49 83 fc 01          	cmp    r12,0x1
    7c39:	0f 84 91 01 00 00    	je     7dd0 <ft_strlcpy+0x1c0>
    7c3f:	4a 8d 54 23 ff       	lea    rdx,[rbx+r12*1-0x1]
    7c44:	48 89 d0             	mov    rax,rdx
    7c47:	48 29 d8             	sub    rax,rbx
    7c4a:	83 e0 07             	and    eax,0x7
    7c4d:	0f 84 e0 00 00 00    	je     7d33 <ft_strlcpy+0x123>
    7c53:	48 83 f8 01          	cmp    rax,0x1
    7c57:	0f 84 b3 00 00 00    	je     7d10 <ft_strlcpy+0x100>
    7c5d:	48 83 f8 02          	cmp    rax,0x2
    7c61:	0f 84 90 00 00 00    	je     7cf7 <ft_strlcpy+0xe7>
    7c67:	48 83 f8 03          	cmp    rax,0x3
    7c6b:	74 71                	je     7cde <ft_strlcpy+0xce>
    7c6d:	48 83 f8 04          	cmp    rax,0x4
    7c71:	74 52                	je     7cc5 <ft_strlcpy+0xb5>
    7c73:	48 83 f8 05          	cmp    rax,0x5
    7c77:	74 34                	je     7cad <ft_strlcpy+0x9d>
    7c79:	48 83 f8 06          	cmp    rax,0x6
    7c7d:	74 16                	je     7c95 <ft_strlcpy+0x85>
    7c7f:	0f b6 4d 00          	movzx  ecx,BYTE PTR [rbp+0x0]
    7c83:	84 c9                	test   cl,cl
    7c85:	0f 84 45 01 00 00    	je     7dd0 <ft_strlcpy+0x1c0>
    7c8b:	88 0b                	mov    BYTE PTR [rbx],cl
    7c8d:	48 83 c3 01          	add    rbx,0x1
    7c91:	48 83 c5 01          	add    rbp,0x1
    7c95:	0f b6 75 00          	movzx  esi,BYTE PTR [rbp+0x0]
    7c99:	40 84 f6             	test   sil,sil
    7c9c:	0f 84 2e 01 00 00    	je     7dd0 <ft_strlcpy+0x1c0>
    7ca2:	40 88 33             	mov    BYTE PTR [rbx],sil
    7ca5:	48 83 c3 01          	add    rbx,0x1
    7ca9:	48 83 c5 01          	add    rbp,0x1
    7cad:	0f b6 7d 00          	movzx  edi,BYTE PTR [rbp+0x0]
    7cb1:	40 84 ff             	test   dil,dil
    7cb4:	0f 84 16 01 00 00    	je     7dd0 <ft_strlcpy+0x1c0>
    7cba:	40 88 3b             	mov    BYTE PTR [rbx],dil
    7cbd:	48 83 c3 01          	add    rbx,0x1
    7cc1:	48 83 c5 01          	add    rbp,0x1
    7cc5:	44 0f b6 4d 00       	movzx  r9d,BYTE PTR [rbp+0x0]
    7cca:	45 84 c9             	test   r9b,r9b
    7ccd:	0f 84 fd 00 00 00    	je     7dd0 <ft_strlcpy+0x1c0>
    7cd3:	44 88 0b             	mov    BYTE PTR [rbx],r9b
    7cd6:	48 83 c3 01          	add    rbx,0x1
    7cda:	48 83 c5 01          	add    rbp,0x1
    7cde:	44 0f b6 55 00       	movzx  r10d,BYTE PTR [rbp+0x0]
    7ce3:	45 84 d2             	test   r10b,r10b
    7ce6:	0f 84 e4 00 00 00    	je     7dd0 <ft_strlcpy+0x1c0>
    7cec:	44 88 13             	mov    BYTE PTR [rbx],r10b
    7cef:	48 83 c3 01          	add    rbx,0x1
    7cf3:	48 83 c5 01          	add    rbp,0x1
    7cf7:	44 0f b6 5d 00       	movzx  r11d,BYTE PTR [rbp+0x0]
    7cfc:	45 84 db             	test   r11b,r11b
    7cff:	0f 84 cb 00 00 00    	je     7dd0 <ft_strlcpy+0x1c0>
    7d05:	44 88 1b             	mov    BYTE PTR [rbx],r11b
    7d08:	48 83 c3 01          	add    rbx,0x1
    7d0c:	48 83 c5 01          	add    rbp,0x1
    7d10:	44 0f b6 65 00       	movzx  r12d,BYTE PTR [rbp+0x0]
    7d15:	45 84 e4             	test   r12b,r12b
    7d18:	0f 84 b2 00 00 00    	je     7dd0 <ft_strlcpy+0x1c0>
    7d1e:	48 83 c3 01          	add    rbx,0x1
    7d22:	48 83 c5 01          	add    rbp,0x1
    7d26:	44 88 63 ff          	mov    BYTE PTR [rbx-0x1],r12b
    7d2a:	48 39 da             	cmp    rdx,rbx
    7d2d:	0f 84 9d 00 00 00    	je     7dd0 <ft_strlcpy+0x1c0>
    7d33:	0f b6 4d 00          	movzx  ecx,BYTE PTR [rbp+0x0]
    7d37:	84 c9                	test   cl,cl
    7d39:	0f 84 91 00 00 00    	je     7dd0 <ft_strlcpy+0x1c0>
    7d3f:	88 0b                	mov    BYTE PTR [rbx],cl
    7d41:	0f b6 75 01          	movzx  esi,BYTE PTR [rbp+0x1]
    7d45:	48 8d 43 01          	lea    rax,[rbx+0x1]
    7d49:	48 89 c3             	mov    rbx,rax
    7d4c:	40 84 f6             	test   sil,sil
    7d4f:	74 7f                	je     7dd0 <ft_strlcpy+0x1c0>
    7d51:	40 88 33             	mov    BYTE PTR [rbx],sil
    7d54:	0f b6 7d 02          	movzx  edi,BYTE PTR [rbp+0x2]
    7d58:	48 83 c3 01          	add    rbx,0x1
    7d5c:	40 84 ff             	test   dil,dil
    7d5f:	74 6f                	je     7dd0 <ft_strlcpy+0x1c0>
    7d61:	40 88 78 01          	mov    BYTE PTR [rax+0x1],dil
    7d65:	44 0f b6 4d 03       	movzx  r9d,BYTE PTR [rbp+0x3]
    7d6a:	48 8d 58 02          	lea    rbx,[rax+0x2]
    7d6e:	45 84 c9             	test   r9b,r9b
    7d71:	74 5d                	je     7dd0 <ft_strlcpy+0x1c0>
    7d73:	44 88 48 02          	mov    BYTE PTR [rax+0x2],r9b
    7d77:	44 0f b6 55 04       	movzx  r10d,BYTE PTR [rbp+0x4]
    7d7c:	48 8d 58 03          	lea    rbx,[rax+0x3]
    7d80:	45 84 d2             	test   r10b,r10b
    7d83:	74 4b                	je     7dd0 <ft_strlcpy+0x1c0>
    7d85:	44 88 50 03          	mov    BYTE PTR [rax+0x3],r10b
    7d89:	44 0f b6 5d 05       	movzx  r11d,BYTE PTR [rbp+0x5]
    7d8e:	48 8d 58 04          	lea    rbx,[rax+0x4]
    7d92:	45 84 db             	test   r11b,r11b
    7d95:	74 39                	je     7dd0 <ft_strlcpy+0x1c0>
    7d97:	44 88 58 04          	mov    BYTE PTR [rax+0x4],r11b
    7d9b:	44 0f b6 65 06       	movzx  r12d,BYTE PTR [rbp+0x6]
    7da0:	48 8d 58 05          	lea    rbx,[rax+0x5]
    7da4:	45 84 e4             	test   r12b,r12b
    7da7:	74 27                	je     7dd0 <ft_strlcpy+0x1c0>
    7da9:	44 88 60 05          	mov    BYTE PTR [rax+0x5],r12b
    7dad:	0f b6 4d 07          	movzx  ecx,BYTE PTR [rbp+0x7]
    7db1:	48 8d 58 06          	lea    rbx,[rax+0x6]
    7db5:	84 c9                	test   cl,cl
    7db7:	74 17                	je     7dd0 <ft_strlcpy+0x1c0>
    7db9:	48 8d 58 07          	lea    rbx,[rax+0x7]
    7dbd:	48 83 c5 08          	add    rbp,0x8
    7dc1:	88 4b ff             	mov    BYTE PTR [rbx-0x1],cl
    7dc4:	48 39 da             	cmp    rdx,rbx
    7dc7:	0f 85 66 ff ff ff    	jne    7d33 <ft_strlcpy+0x123>
    7dcd:	0f 1f 00             	nop    DWORD PTR [rax]
    7dd0:	c6 03 00             	mov    BYTE PTR [rbx],0x0
    7dd3:	5b                   	pop    rbx
    7dd4:	4c 89 c0             	mov    rax,r8
    7dd7:	5d                   	pop    rbp
    7dd8:	41 5c                	pop    r12
    7dda:	c3                   	ret    
    7ddb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000007de0 <ft_calloc>:
    7de0:	f3 0f 1e fa          	endbr64 
    7de4:	48 85 ff             	test   rdi,rdi
    7de7:	74 47                	je     7e30 <ft_calloc+0x50>
    7de9:	48 85 f6             	test   rsi,rsi
    7dec:	74 42                	je     7e30 <ft_calloc+0x50>
    7dee:	41 55                	push   r13
    7df0:	48 89 f8             	mov    rax,rdi
    7df3:	41 54                	push   r12
    7df5:	48 83 ec 08          	sub    rsp,0x8
    7df9:	48 f7 e6             	mul    rsi
    7dfc:	49 89 c4             	mov    r12,rax
    7dff:	70 36                	jo     7e37 <ft_calloc+0x57>
    7e01:	48 89 c7             	mov    rdi,rax
    7e04:	e8 37 a7 ff ff       	call   2540 <malloc@plt>
    7e09:	49 89 c5             	mov    r13,rax
    7e0c:	48 85 c0             	test   rax,rax
    7e0f:	74 0b                	je     7e1c <ft_calloc+0x3c>
    7e11:	4c 89 e6             	mov    rsi,r12
    7e14:	48 89 c7             	mov    rdi,rax
    7e17:	e8 94 0e 00 00       	call   8cb0 <ft_bzero>
    7e1c:	48 83 c4 08          	add    rsp,0x8
    7e20:	4c 89 e8             	mov    rax,r13
    7e23:	41 5c                	pop    r12
    7e25:	41 5d                	pop    r13
    7e27:	c3                   	ret    
    7e28:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    7e2f:	00 
    7e30:	31 ff                	xor    edi,edi
    7e32:	e9 09 a7 ff ff       	jmp    2540 <malloc@plt>
    7e37:	45 31 ed             	xor    r13d,r13d
    7e3a:	eb e0                	jmp    7e1c <ft_calloc+0x3c>
    7e3c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000007e40 <ft_strdup>:
    7e40:	f3 0f 1e fa          	endbr64 
    7e44:	41 55                	push   r13
    7e46:	41 54                	push   r12
    7e48:	55                   	push   rbp
    7e49:	48 89 fd             	mov    rbp,rdi
    7e4c:	e8 0f dd ff ff       	call   5b60 <ft_strlen>
    7e51:	4c 8d 68 01          	lea    r13,[rax+0x1]
    7e55:	4c 89 ef             	mov    rdi,r13
    7e58:	e8 e3 a6 ff ff       	call   2540 <malloc@plt>
    7e5d:	49 89 c4             	mov    r12,rax
    7e60:	48 85 c0             	test   rax,rax
    7e63:	74 0e                	je     7e73 <ft_strdup+0x33>
    7e65:	4c 89 ea             	mov    rdx,r13
    7e68:	48 89 ee             	mov    rsi,rbp
    7e6b:	48 89 c7             	mov    rdi,rax
    7e6e:	e8 9d fd ff ff       	call   7c10 <ft_strlcpy>
    7e73:	4c 89 e0             	mov    rax,r12
    7e76:	5d                   	pop    rbp
    7e77:	41 5c                	pop    r12
    7e79:	41 5d                	pop    r13
    7e7b:	c3                   	ret    
    7e7c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000007e80 <ft_strndup_malloc>:
    7e80:	f3 0f 1e fa          	endbr64 
    7e84:	55                   	push   rbp
    7e85:	48 89 f5             	mov    rbp,rsi
    7e88:	53                   	push   rbx
    7e89:	48 89 fb             	mov    rbx,rdi
    7e8c:	48 8d 7e 01          	lea    rdi,[rsi+0x1]
    7e90:	48 83 ec 08          	sub    rsp,0x8
    7e94:	e8 a7 a6 ff ff       	call   2540 <malloc@plt>
    7e99:	49 89 c0             	mov    r8,rax
    7e9c:	48 85 c0             	test   rax,rax
    7e9f:	0f 84 91 01 00 00    	je     8036 <ft_strndup_malloc+0x1b6>
    7ea5:	0f b6 13             	movzx  edx,BYTE PTR [rbx]
    7ea8:	48 85 ed             	test   rbp,rbp
    7eab:	0f 84 8f 01 00 00    	je     8040 <ft_strndup_malloc+0x1c0>
    7eb1:	84 d2                	test   dl,dl
    7eb3:	0f 84 87 01 00 00    	je     8040 <ft_strndup_malloc+0x1c0>
    7eb9:	48 8d 4d ff          	lea    rcx,[rbp-0x1]
    7ebd:	31 c0                	xor    eax,eax
    7ebf:	83 e1 07             	and    ecx,0x7
    7ec2:	0f 84 be 00 00 00    	je     7f86 <ft_strndup_malloc+0x106>
    7ec8:	b8 01 00 00 00       	mov    eax,0x1
    7ecd:	41 88 10             	mov    BYTE PTR [r8],dl
    7ed0:	0f b6 14 03          	movzx  edx,BYTE PTR [rbx+rax*1]
    7ed4:	48 83 fd 01          	cmp    rbp,0x1
    7ed8:	0f 86 52 01 00 00    	jbe    8030 <ft_strndup_malloc+0x1b0>
    7ede:	84 d2                	test   dl,dl
    7ee0:	0f 84 4a 01 00 00    	je     8030 <ft_strndup_malloc+0x1b0>
    7ee6:	48 83 f9 01          	cmp    rcx,0x1
    7eea:	0f 84 96 00 00 00    	je     7f86 <ft_strndup_malloc+0x106>
    7ef0:	48 83 f9 02          	cmp    rcx,0x2
    7ef4:	74 7c                	je     7f72 <ft_strndup_malloc+0xf2>
    7ef6:	48 83 f9 03          	cmp    rcx,0x3
    7efa:	74 62                	je     7f5e <ft_strndup_malloc+0xde>
    7efc:	48 83 f9 04          	cmp    rcx,0x4
    7f00:	74 48                	je     7f4a <ft_strndup_malloc+0xca>
    7f02:	48 83 f9 05          	cmp    rcx,0x5
    7f06:	74 2e                	je     7f36 <ft_strndup_malloc+0xb6>
    7f08:	48 83 f9 06          	cmp    rcx,0x6
    7f0c:	74 14                	je     7f22 <ft_strndup_malloc+0xa2>
    7f0e:	41 88 14 00          	mov    BYTE PTR [r8+rax*1],dl
    7f12:	48 83 c0 01          	add    rax,0x1
    7f16:	0f b6 14 03          	movzx  edx,BYTE PTR [rbx+rax*1]
    7f1a:	84 d2                	test   dl,dl
    7f1c:	0f 84 0e 01 00 00    	je     8030 <ft_strndup_malloc+0x1b0>
    7f22:	41 88 14 00          	mov    BYTE PTR [r8+rax*1],dl
    7f26:	48 83 c0 01          	add    rax,0x1
    7f2a:	0f b6 14 03          	movzx  edx,BYTE PTR [rbx+rax*1]
    7f2e:	84 d2                	test   dl,dl
    7f30:	0f 84 fa 00 00 00    	je     8030 <ft_strndup_malloc+0x1b0>
    7f36:	41 88 14 00          	mov    BYTE PTR [r8+rax*1],dl
    7f3a:	48 83 c0 01          	add    rax,0x1
    7f3e:	0f b6 14 03          	movzx  edx,BYTE PTR [rbx+rax*1]
    7f42:	84 d2                	test   dl,dl
    7f44:	0f 84 e6 00 00 00    	je     8030 <ft_strndup_malloc+0x1b0>
    7f4a:	41 88 14 00          	mov    BYTE PTR [r8+rax*1],dl
    7f4e:	48 83 c0 01          	add    rax,0x1
    7f52:	0f b6 14 03          	movzx  edx,BYTE PTR [rbx+rax*1]
    7f56:	84 d2                	test   dl,dl
    7f58:	0f 84 d2 00 00 00    	je     8030 <ft_strndup_malloc+0x1b0>
    7f5e:	41 88 14 00          	mov    BYTE PTR [r8+rax*1],dl
    7f62:	48 83 c0 01          	add    rax,0x1
    7f66:	0f b6 14 03          	movzx  edx,BYTE PTR [rbx+rax*1]
    7f6a:	84 d2                	test   dl,dl
    7f6c:	0f 84 be 00 00 00    	je     8030 <ft_strndup_malloc+0x1b0>
    7f72:	41 88 14 00          	mov    BYTE PTR [r8+rax*1],dl
    7f76:	48 83 c0 01          	add    rax,0x1
    7f7a:	0f b6 14 03          	movzx  edx,BYTE PTR [rbx+rax*1]
    7f7e:	84 d2                	test   dl,dl
    7f80:	0f 84 aa 00 00 00    	je     8030 <ft_strndup_malloc+0x1b0>
    7f86:	41 88 14 00          	mov    BYTE PTR [r8+rax*1],dl
    7f8a:	48 8d 50 01          	lea    rdx,[rax+0x1]
    7f8e:	0f b6 34 13          	movzx  esi,BYTE PTR [rbx+rdx*1]
    7f92:	48 89 d0             	mov    rax,rdx
    7f95:	48 39 d5             	cmp    rbp,rdx
    7f98:	0f 86 92 00 00 00    	jbe    8030 <ft_strndup_malloc+0x1b0>
    7f9e:	40 84 f6             	test   sil,sil
    7fa1:	0f 84 89 00 00 00    	je     8030 <ft_strndup_malloc+0x1b0>
    7fa7:	48 83 c0 01          	add    rax,0x1
    7fab:	41 88 34 10          	mov    BYTE PTR [r8+rdx*1],sil
    7faf:	0f b6 3c 03          	movzx  edi,BYTE PTR [rbx+rax*1]
    7fb3:	40 84 ff             	test   dil,dil
    7fb6:	74 78                	je     8030 <ft_strndup_malloc+0x1b0>
    7fb8:	44 0f b6 4c 13 02    	movzx  r9d,BYTE PTR [rbx+rdx*1+0x2]
    7fbe:	41 88 3c 00          	mov    BYTE PTR [r8+rax*1],dil
    7fc2:	48 8d 42 02          	lea    rax,[rdx+0x2]
    7fc6:	45 84 c9             	test   r9b,r9b
    7fc9:	74 65                	je     8030 <ft_strndup_malloc+0x1b0>
    7fcb:	44 0f b6 54 13 03    	movzx  r10d,BYTE PTR [rbx+rdx*1+0x3]
    7fd1:	45 88 4c 10 02       	mov    BYTE PTR [r8+rdx*1+0x2],r9b
    7fd6:	48 8d 42 03          	lea    rax,[rdx+0x3]
    7fda:	45 84 d2             	test   r10b,r10b
    7fdd:	74 51                	je     8030 <ft_strndup_malloc+0x1b0>
    7fdf:	44 0f b6 5c 13 04    	movzx  r11d,BYTE PTR [rbx+rdx*1+0x4]
    7fe5:	45 88 54 10 03       	mov    BYTE PTR [r8+rdx*1+0x3],r10b
    7fea:	48 8d 42 04          	lea    rax,[rdx+0x4]
    7fee:	45 84 db             	test   r11b,r11b
    7ff1:	74 3d                	je     8030 <ft_strndup_malloc+0x1b0>
    7ff3:	0f b6 4c 13 05       	movzx  ecx,BYTE PTR [rbx+rdx*1+0x5]
    7ff8:	45 88 5c 10 04       	mov    BYTE PTR [r8+rdx*1+0x4],r11b
    7ffd:	48 8d 42 05          	lea    rax,[rdx+0x5]
    8001:	84 c9                	test   cl,cl
    8003:	74 2b                	je     8030 <ft_strndup_malloc+0x1b0>
    8005:	0f b6 74 13 06       	movzx  esi,BYTE PTR [rbx+rdx*1+0x6]
    800a:	41 88 4c 10 05       	mov    BYTE PTR [r8+rdx*1+0x5],cl
    800f:	48 8d 42 06          	lea    rax,[rdx+0x6]
    8013:	40 84 f6             	test   sil,sil
    8016:	74 18                	je     8030 <ft_strndup_malloc+0x1b0>
    8018:	41 88 74 10 06       	mov    BYTE PTR [r8+rdx*1+0x6],sil
    801d:	48 8d 42 07          	lea    rax,[rdx+0x7]
    8021:	0f b6 54 13 07       	movzx  edx,BYTE PTR [rbx+rdx*1+0x7]
    8026:	84 d2                	test   dl,dl
    8028:	0f 85 58 ff ff ff    	jne    7f86 <ft_strndup_malloc+0x106>
    802e:	66 90                	xchg   ax,ax
    8030:	4c 01 c0             	add    rax,r8
    8033:	c6 00 00             	mov    BYTE PTR [rax],0x0
    8036:	48 83 c4 08          	add    rsp,0x8
    803a:	4c 89 c0             	mov    rax,r8
    803d:	5b                   	pop    rbx
    803e:	5d                   	pop    rbp
    803f:	c3                   	ret    
    8040:	4c 89 c0             	mov    rax,r8
    8043:	eb ee                	jmp    8033 <ft_strndup_malloc+0x1b3>
    8045:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    804c:	00 00 00 
    804f:	90                   	nop

0000000000008050 <ft_itoa>:
    8050:	f3 0f 1e fa          	endbr64 
    8054:	41 54                	push   r12
    8056:	31 f6                	xor    esi,esi
    8058:	55                   	push   rbp
    8059:	48 bd 67 66 66 66 66 	movabs rbp,0x6666666666666667
    8060:	66 66 66 
    8063:	53                   	push   rbx
    8064:	48 63 df             	movsxd rbx,edi
    8067:	48 89 d9             	mov    rcx,rbx
    806a:	48 85 db             	test   rbx,rbx
    806d:	0f 84 ad 01 00 00    	je     8220 <ft_itoa+0x1d0>
    8073:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    8078:	48 89 c8             	mov    rax,rcx
    807b:	48 89 cf             	mov    rdi,rcx
    807e:	48 83 c6 01          	add    rsi,0x1
    8082:	48 f7 ed             	imul   rbp
    8085:	48 c1 ff 3f          	sar    rdi,0x3f
    8089:	48 c1 fa 02          	sar    rdx,0x2
    808d:	48 89 d1             	mov    rcx,rdx
    8090:	48 29 f9             	sub    rcx,rdi
    8093:	75 e3                	jne    8078 <ft_itoa+0x28>
    8095:	49 89 dc             	mov    r12,rbx
    8098:	49 c1 ec 3f          	shr    r12,0x3f
    809c:	49 01 f4             	add    r12,rsi
    809f:	49 8d 7c 24 01       	lea    rdi,[r12+0x1]
    80a4:	e8 97 a4 ff ff       	call   2540 <malloc@plt>
    80a9:	49 89 c0             	mov    r8,rax
    80ac:	48 85 c0             	test   rax,rax
    80af:	0f 84 1b 01 00 00    	je     81d0 <ft_itoa+0x180>
    80b5:	4e 8d 1c 20          	lea    r11,[rax+r12*1]
    80b9:	49 89 c1             	mov    r9,rax
    80bc:	41 c6 03 00          	mov    BYTE PTR [r11],0x0
    80c0:	48 85 db             	test   rbx,rbx
    80c3:	0f 88 17 01 00 00    	js     81e0 <ft_itoa+0x190>
    80c9:	49 8d 4b ff          	lea    rcx,[r11-0x1]
    80cd:	4d 8d 61 ff          	lea    r12,[r9-0x1]
    80d1:	4c 39 c9             	cmp    rcx,r9
    80d4:	0f 82 f6 00 00 00    	jb     81d0 <ft_itoa+0x180>
    80da:	49 b9 cd cc cc cc cc 	movabs r9,0xcccccccccccccccd
    80e1:	cc cc cc 
    80e4:	48 89 cf             	mov    rdi,rcx
    80e7:	4c 29 e7             	sub    rdi,r12
    80ea:	83 e7 03             	and    edi,0x3
    80ed:	74 5b                	je     814a <ft_itoa+0xfa>
    80ef:	48 83 ff 01          	cmp    rdi,0x1
    80f3:	74 2b                	je     8120 <ft_itoa+0xd0>
    80f5:	48 83 ff 02          	cmp    rdi,0x2
    80f9:	0f 85 41 01 00 00    	jne    8240 <ft_itoa+0x1f0>
    80ff:	48 89 d8             	mov    rax,rbx
    8102:	48 83 e9 01          	sub    rcx,0x1
    8106:	49 f7 e1             	mul    r9
    8109:	48 c1 ea 03          	shr    rdx,0x3
    810d:	4c 8d 1c 92          	lea    r11,[rdx+rdx*4]
    8111:	4d 01 db             	add    r11,r11
    8114:	4c 29 db             	sub    rbx,r11
    8117:	83 c3 30             	add    ebx,0x30
    811a:	88 59 01             	mov    BYTE PTR [rcx+0x1],bl
    811d:	48 89 d3             	mov    rbx,rdx
    8120:	48 89 d8             	mov    rax,rbx
    8123:	48 83 e9 01          	sub    rcx,0x1
    8127:	49 f7 e1             	mul    r9
    812a:	48 c1 ea 03          	shr    rdx,0x3
    812e:	48 8d 34 92          	lea    rsi,[rdx+rdx*4]
    8132:	48 01 f6             	add    rsi,rsi
    8135:	48 29 f3             	sub    rbx,rsi
    8138:	83 c3 30             	add    ebx,0x30
    813b:	88 59 01             	mov    BYTE PTR [rcx+0x1],bl
    813e:	48 89 d3             	mov    rbx,rdx
    8141:	49 39 cc             	cmp    r12,rcx
    8144:	0f 84 86 00 00 00    	je     81d0 <ft_itoa+0x180>
    814a:	48 89 d8             	mov    rax,rbx
    814d:	48 83 e9 04          	sub    rcx,0x4
    8151:	49 f7 e1             	mul    r9
    8154:	48 89 d5             	mov    rbp,rdx
    8157:	48 c1 ed 03          	shr    rbp,0x3
    815b:	48 89 e8             	mov    rax,rbp
    815e:	48 8d 7c ad 00       	lea    rdi,[rbp+rbp*4+0x0]
    8163:	49 f7 e1             	mul    r9
    8166:	48 01 ff             	add    rdi,rdi
    8169:	48 29 fb             	sub    rbx,rdi
    816c:	83 c3 30             	add    ebx,0x30
    816f:	49 89 d2             	mov    r10,rdx
    8172:	88 59 04             	mov    BYTE PTR [rcx+0x4],bl
    8175:	49 c1 ea 03          	shr    r10,0x3
    8179:	4c 89 d0             	mov    rax,r10
    817c:	4f 8d 1c 92          	lea    r11,[r10+r10*4]
    8180:	49 f7 e1             	mul    r9
    8183:	4d 01 db             	add    r11,r11
    8186:	4c 29 dd             	sub    rbp,r11
    8189:	83 c5 30             	add    ebp,0x30
    818c:	48 89 d6             	mov    rsi,rdx
    818f:	40 88 69 03          	mov    BYTE PTR [rcx+0x3],bpl
    8193:	48 c1 ee 03          	shr    rsi,0x3
    8197:	48 89 f0             	mov    rax,rsi
    819a:	48 8d 1c b6          	lea    rbx,[rsi+rsi*4]
    819e:	49 f7 e1             	mul    r9
    81a1:	48 01 db             	add    rbx,rbx
    81a4:	49 29 da             	sub    r10,rbx
    81a7:	41 83 c2 30          	add    r10d,0x30
    81ab:	48 89 d3             	mov    rbx,rdx
    81ae:	44 88 51 02          	mov    BYTE PTR [rcx+0x2],r10b
    81b2:	48 c1 eb 03          	shr    rbx,0x3
    81b6:	48 8d 2c 9b          	lea    rbp,[rbx+rbx*4]
    81ba:	48 01 ed             	add    rbp,rbp
    81bd:	48 29 ee             	sub    rsi,rbp
    81c0:	83 c6 30             	add    esi,0x30
    81c3:	40 88 71 01          	mov    BYTE PTR [rcx+0x1],sil
    81c7:	49 39 cc             	cmp    r12,rcx
    81ca:	0f 85 7a ff ff ff    	jne    814a <ft_itoa+0xfa>
    81d0:	5b                   	pop    rbx
    81d1:	4c 89 c0             	mov    rax,r8
    81d4:	5d                   	pop    rbp
    81d5:	41 5c                	pop    r12
    81d7:	c3                   	ret    
    81d8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    81df:	00 
    81e0:	c6 00 2d             	mov    BYTE PTR [rax],0x2d
    81e3:	4c 8d 48 01          	lea    r9,[rax+0x1]
    81e7:	48 89 d8             	mov    rax,rbx
    81ea:	49 89 da             	mov    r10,rbx
    81ed:	48 f7 ed             	imul   rbp
    81f0:	49 c1 fa 3f          	sar    r10,0x3f
    81f4:	49 83 eb 01          	sub    r11,0x1
    81f8:	48 c1 fa 02          	sar    rdx,0x2
    81fc:	48 89 d6             	mov    rsi,rdx
    81ff:	4c 29 d6             	sub    rsi,r10
    8202:	48 8d 2c b6          	lea    rbp,[rsi+rsi*4]
    8206:	48 01 ed             	add    rbp,rbp
    8209:	48 29 eb             	sub    rbx,rbp
    820c:	83 c3 30             	add    ebx,0x30
    820f:	41 88 5b 01          	mov    BYTE PTR [r11+0x1],bl
    8213:	4c 89 d3             	mov    rbx,r10
    8216:	48 29 d3             	sub    rbx,rdx
    8219:	e9 ab fe ff ff       	jmp    80c9 <ft_itoa+0x79>
    821e:	66 90                	xchg   ax,ax
    8220:	bf 02 00 00 00       	mov    edi,0x2
    8225:	41 bc 30 00 00 00    	mov    r12d,0x30
    822b:	e8 10 a3 ff ff       	call   2540 <malloc@plt>
    8230:	49 89 c0             	mov    r8,rax
    8233:	66 44 89 20          	mov    WORD PTR [rax],r12w
    8237:	5b                   	pop    rbx
    8238:	4c 89 c0             	mov    rax,r8
    823b:	5d                   	pop    rbp
    823c:	41 5c                	pop    r12
    823e:	c3                   	ret    
    823f:	90                   	nop
    8240:	48 89 d8             	mov    rax,rbx
    8243:	49 f7 e1             	mul    r9
    8246:	48 c1 ea 03          	shr    rdx,0x3
    824a:	4c 8d 14 92          	lea    r10,[rdx+rdx*4]
    824e:	4d 01 d2             	add    r10,r10
    8251:	4c 29 d3             	sub    rbx,r10
    8254:	83 c3 30             	add    ebx,0x30
    8257:	88 19                	mov    BYTE PTR [rcx],bl
    8259:	48 89 d3             	mov    rbx,rdx
    825c:	49 8d 4b fe          	lea    rcx,[r11-0x2]
    8260:	e9 9a fe ff ff       	jmp    80ff <ft_itoa+0xaf>
    8265:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    826c:	00 00 00 00 

0000000000008270 <ft_uitoa>:
    8270:	f3 0f 1e fa          	endbr64 
    8274:	48 b9 cd cc cc cc cc 	movabs rcx,0xcccccccccccccccd
    827b:	cc cc cc 
    827e:	41 54                	push   r12
    8280:	55                   	push   rbp
    8281:	31 ed                	xor    ebp,ebp
    8283:	53                   	push   rbx
    8284:	89 fb                	mov    ebx,edi
    8286:	48 89 da             	mov    rdx,rbx
    8289:	48 85 db             	test   rbx,rbx
    828c:	0f 84 4e 01 00 00    	je     83e0 <ft_uitoa+0x170>
    8292:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    8298:	48 89 d0             	mov    rax,rdx
    829b:	49 89 ec             	mov    r12,rbp
    829e:	48 83 c5 01          	add    rbp,0x1
    82a2:	48 f7 e1             	mul    rcx
    82a5:	48 c1 ea 03          	shr    rdx,0x3
    82a9:	75 ed                	jne    8298 <ft_uitoa+0x28>
    82ab:	49 8d 7c 24 02       	lea    rdi,[r12+0x2]
    82b0:	e8 8b a2 ff ff       	call   2540 <malloc@plt>
    82b5:	49 89 c0             	mov    r8,rax
    82b8:	48 85 c0             	test   rax,rax
    82bb:	0f 84 17 01 00 00    	je     83d8 <ft_uitoa+0x168>
    82c1:	c6 04 28 00          	mov    BYTE PTR [rax+rbp*1],0x0
    82c5:	49 01 c4             	add    r12,rax
    82c8:	0f 82 0a 01 00 00    	jb     83d8 <ft_uitoa+0x168>
    82ce:	4c 89 e6             	mov    rsi,r12
    82d1:	4c 8d 50 ff          	lea    r10,[rax-0x1]
    82d5:	49 b9 cd cc cc cc cc 	movabs r9,0xcccccccccccccccd
    82dc:	cc cc cc 
    82df:	48 29 c6             	sub    rsi,rax
    82e2:	48 83 c6 01          	add    rsi,0x1
    82e6:	83 e6 03             	and    esi,0x3
    82e9:	74 5f                	je     834a <ft_uitoa+0xda>
    82eb:	48 83 fe 01          	cmp    rsi,0x1
    82ef:	74 2d                	je     831e <ft_uitoa+0xae>
    82f1:	48 83 fe 02          	cmp    rsi,0x2
    82f5:	0f 85 05 01 00 00    	jne    8400 <ft_uitoa+0x190>
    82fb:	48 89 d8             	mov    rax,rbx
    82fe:	49 83 ec 01          	sub    r12,0x1
    8302:	49 f7 e1             	mul    r9
    8305:	48 c1 ea 03          	shr    rdx,0x3
    8309:	4c 8d 1c 92          	lea    r11,[rdx+rdx*4]
    830d:	4d 01 db             	add    r11,r11
    8310:	4c 29 db             	sub    rbx,r11
    8313:	83 c3 30             	add    ebx,0x30
    8316:	41 88 5c 24 01       	mov    BYTE PTR [r12+0x1],bl
    831b:	48 89 d3             	mov    rbx,rdx
    831e:	48 89 d8             	mov    rax,rbx
    8321:	49 83 ec 01          	sub    r12,0x1
    8325:	49 f7 e1             	mul    r9
    8328:	48 c1 ea 03          	shr    rdx,0x3
    832c:	48 8d 2c 92          	lea    rbp,[rdx+rdx*4]
    8330:	48 01 ed             	add    rbp,rbp
    8333:	48 29 eb             	sub    rbx,rbp
    8336:	83 c3 30             	add    ebx,0x30
    8339:	41 88 5c 24 01       	mov    BYTE PTR [r12+0x1],bl
    833e:	48 89 d3             	mov    rbx,rdx
    8341:	4d 39 e2             	cmp    r10,r12
    8344:	0f 84 8e 00 00 00    	je     83d8 <ft_uitoa+0x168>
    834a:	48 89 d8             	mov    rax,rbx
    834d:	49 83 ec 04          	sub    r12,0x4
    8351:	49 f7 e1             	mul    r9
    8354:	48 89 d1             	mov    rcx,rdx
    8357:	48 c1 e9 03          	shr    rcx,0x3
    835b:	48 89 c8             	mov    rax,rcx
    835e:	48 8d 34 89          	lea    rsi,[rcx+rcx*4]
    8362:	49 f7 e1             	mul    r9
    8365:	48 01 f6             	add    rsi,rsi
    8368:	48 29 f3             	sub    rbx,rsi
    836b:	83 c3 30             	add    ebx,0x30
    836e:	49 89 d3             	mov    r11,rdx
    8371:	41 88 5c 24 04       	mov    BYTE PTR [r12+0x4],bl
    8376:	49 c1 eb 03          	shr    r11,0x3
    837a:	4c 89 d8             	mov    rax,r11
    837d:	4b 8d 3c 9b          	lea    rdi,[r11+r11*4]
    8381:	49 f7 e1             	mul    r9
    8384:	48 01 ff             	add    rdi,rdi
    8387:	48 29 f9             	sub    rcx,rdi
    838a:	83 c1 30             	add    ecx,0x30
    838d:	48 89 d5             	mov    rbp,rdx
    8390:	41 88 4c 24 03       	mov    BYTE PTR [r12+0x3],cl
    8395:	48 c1 ed 03          	shr    rbp,0x3
    8399:	48 89 e8             	mov    rax,rbp
    839c:	48 8d 5c ad 00       	lea    rbx,[rbp+rbp*4+0x0]
    83a1:	48 89 ee             	mov    rsi,rbp
    83a4:	49 f7 e1             	mul    r9
    83a7:	48 01 db             	add    rbx,rbx
    83aa:	49 29 db             	sub    r11,rbx
    83ad:	41 83 c3 30          	add    r11d,0x30
    83b1:	48 89 d3             	mov    rbx,rdx
    83b4:	45 88 5c 24 02       	mov    BYTE PTR [r12+0x2],r11b
    83b9:	48 c1 eb 03          	shr    rbx,0x3
    83bd:	48 8d 0c 9b          	lea    rcx,[rbx+rbx*4]
    83c1:	48 01 c9             	add    rcx,rcx
    83c4:	48 29 ce             	sub    rsi,rcx
    83c7:	83 c6 30             	add    esi,0x30
    83ca:	41 88 74 24 01       	mov    BYTE PTR [r12+0x1],sil
    83cf:	4d 39 e2             	cmp    r10,r12
    83d2:	0f 85 72 ff ff ff    	jne    834a <ft_uitoa+0xda>
    83d8:	5b                   	pop    rbx
    83d9:	4c 89 c0             	mov    rax,r8
    83dc:	5d                   	pop    rbp
    83dd:	41 5c                	pop    r12
    83df:	c3                   	ret    
    83e0:	bf 02 00 00 00       	mov    edi,0x2
    83e5:	41 bc 30 00 00 00    	mov    r12d,0x30
    83eb:	e8 50 a1 ff ff       	call   2540 <malloc@plt>
    83f0:	49 89 c0             	mov    r8,rax
    83f3:	66 44 89 20          	mov    WORD PTR [rax],r12w
    83f7:	5b                   	pop    rbx
    83f8:	4c 89 c0             	mov    rax,r8
    83fb:	5d                   	pop    rbp
    83fc:	41 5c                	pop    r12
    83fe:	c3                   	ret    
    83ff:	90                   	nop
    8400:	48 89 d8             	mov    rax,rbx
    8403:	49 83 ec 01          	sub    r12,0x1
    8407:	49 f7 e1             	mul    r9
    840a:	48 c1 ea 03          	shr    rdx,0x3
    840e:	48 8d 3c 92          	lea    rdi,[rdx+rdx*4]
    8412:	48 01 ff             	add    rdi,rdi
    8415:	48 29 fb             	sub    rbx,rdi
    8418:	83 c3 30             	add    ebx,0x30
    841b:	41 88 5c 24 01       	mov    BYTE PTR [r12+0x1],bl
    8420:	48 89 d3             	mov    rbx,rdx
    8423:	e9 d3 fe ff ff       	jmp    82fb <ft_uitoa+0x8b>
    8428:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    842f:	00 

0000000000008430 <ft_ltoa>:
    8430:	f3 0f 1e fa          	endbr64 
    8434:	41 54                	push   r12
    8436:	55                   	push   rbp
    8437:	53                   	push   rbx
    8438:	48 85 ff             	test   rdi,rdi
    843b:	0f 84 bf 01 00 00    	je     8600 <ft_ltoa+0x1d0>
    8441:	48 89 fb             	mov    rbx,rdi
    8444:	48 89 f9             	mov    rcx,rdi
    8447:	31 f6                	xor    esi,esi
    8449:	48 bd 67 66 66 66 66 	movabs rbp,0x6666666666666667
    8450:	66 66 66 
    8453:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    8458:	48 89 c8             	mov    rax,rcx
    845b:	48 89 cf             	mov    rdi,rcx
    845e:	48 83 c6 01          	add    rsi,0x1
    8462:	48 f7 ed             	imul   rbp
    8465:	48 c1 ff 3f          	sar    rdi,0x3f
    8469:	48 c1 fa 02          	sar    rdx,0x2
    846d:	48 89 d1             	mov    rcx,rdx
    8470:	48 29 f9             	sub    rcx,rdi
    8473:	75 e3                	jne    8458 <ft_ltoa+0x28>
    8475:	49 89 dc             	mov    r12,rbx
    8478:	49 c1 ec 3f          	shr    r12,0x3f
    847c:	49 01 f4             	add    r12,rsi
    847f:	49 8d 7c 24 01       	lea    rdi,[r12+0x1]
    8484:	e8 b7 a0 ff ff       	call   2540 <malloc@plt>
    8489:	49 89 c0             	mov    r8,rax
    848c:	48 85 c0             	test   rax,rax
    848f:	0f 84 1b 01 00 00    	je     85b0 <ft_ltoa+0x180>
    8495:	4e 8d 1c 20          	lea    r11,[rax+r12*1]
    8499:	49 89 c1             	mov    r9,rax
    849c:	41 c6 03 00          	mov    BYTE PTR [r11],0x0
    84a0:	48 85 db             	test   rbx,rbx
    84a3:	0f 88 17 01 00 00    	js     85c0 <ft_ltoa+0x190>
    84a9:	49 8d 4b ff          	lea    rcx,[r11-0x1]
    84ad:	4d 8d 61 ff          	lea    r12,[r9-0x1]
    84b1:	4c 39 c9             	cmp    rcx,r9
    84b4:	0f 82 f6 00 00 00    	jb     85b0 <ft_ltoa+0x180>
    84ba:	49 b9 cd cc cc cc cc 	movabs r9,0xcccccccccccccccd
    84c1:	cc cc cc 
    84c4:	48 89 cf             	mov    rdi,rcx
    84c7:	4c 29 e7             	sub    rdi,r12
    84ca:	83 e7 03             	and    edi,0x3
    84cd:	74 5b                	je     852a <ft_ltoa+0xfa>
    84cf:	48 83 ff 01          	cmp    rdi,0x1
    84d3:	74 2b                	je     8500 <ft_ltoa+0xd0>
    84d5:	48 83 ff 02          	cmp    rdi,0x2
    84d9:	0f 85 41 01 00 00    	jne    8620 <ft_ltoa+0x1f0>
    84df:	48 89 d8             	mov    rax,rbx
    84e2:	48 83 e9 01          	sub    rcx,0x1
    84e6:	49 f7 e1             	mul    r9
    84e9:	48 c1 ea 03          	shr    rdx,0x3
    84ed:	4c 8d 1c 92          	lea    r11,[rdx+rdx*4]
    84f1:	4d 01 db             	add    r11,r11
    84f4:	4c 29 db             	sub    rbx,r11
    84f7:	83 c3 30             	add    ebx,0x30
    84fa:	88 59 01             	mov    BYTE PTR [rcx+0x1],bl
    84fd:	48 89 d3             	mov    rbx,rdx
    8500:	48 89 d8             	mov    rax,rbx
    8503:	48 83 e9 01          	sub    rcx,0x1
    8507:	49 f7 e1             	mul    r9
    850a:	48 c1 ea 03          	shr    rdx,0x3
    850e:	48 8d 34 92          	lea    rsi,[rdx+rdx*4]
    8512:	48 01 f6             	add    rsi,rsi
    8515:	48 29 f3             	sub    rbx,rsi
    8518:	83 c3 30             	add    ebx,0x30
    851b:	88 59 01             	mov    BYTE PTR [rcx+0x1],bl
    851e:	48 89 d3             	mov    rbx,rdx
    8521:	4c 39 e1             	cmp    rcx,r12
    8524:	0f 84 86 00 00 00    	je     85b0 <ft_ltoa+0x180>
    852a:	48 89 d8             	mov    rax,rbx
    852d:	48 83 e9 04          	sub    rcx,0x4
    8531:	49 f7 e1             	mul    r9
    8534:	48 89 d5             	mov    rbp,rdx
    8537:	48 c1 ed 03          	shr    rbp,0x3
    853b:	48 89 e8             	mov    rax,rbp
    853e:	48 8d 7c ad 00       	lea    rdi,[rbp+rbp*4+0x0]
    8543:	49 f7 e1             	mul    r9
    8546:	48 01 ff             	add    rdi,rdi
    8549:	48 29 fb             	sub    rbx,rdi
    854c:	83 c3 30             	add    ebx,0x30
    854f:	49 89 d2             	mov    r10,rdx
    8552:	88 59 04             	mov    BYTE PTR [rcx+0x4],bl
    8555:	49 c1 ea 03          	shr    r10,0x3
    8559:	4c 89 d0             	mov    rax,r10
    855c:	4f 8d 1c 92          	lea    r11,[r10+r10*4]
    8560:	49 f7 e1             	mul    r9
    8563:	4d 01 db             	add    r11,r11
    8566:	4c 29 dd             	sub    rbp,r11
    8569:	83 c5 30             	add    ebp,0x30
    856c:	48 89 d6             	mov    rsi,rdx
    856f:	40 88 69 03          	mov    BYTE PTR [rcx+0x3],bpl
    8573:	48 c1 ee 03          	shr    rsi,0x3
    8577:	48 89 f0             	mov    rax,rsi
    857a:	48 8d 1c b6          	lea    rbx,[rsi+rsi*4]
    857e:	49 f7 e1             	mul    r9
    8581:	48 01 db             	add    rbx,rbx
    8584:	49 29 da             	sub    r10,rbx
    8587:	41 83 c2 30          	add    r10d,0x30
    858b:	48 89 d3             	mov    rbx,rdx
    858e:	44 88 51 02          	mov    BYTE PTR [rcx+0x2],r10b
    8592:	48 c1 eb 03          	shr    rbx,0x3
    8596:	48 8d 2c 9b          	lea    rbp,[rbx+rbx*4]
    859a:	48 01 ed             	add    rbp,rbp
    859d:	48 29 ee             	sub    rsi,rbp
    85a0:	83 c6 30             	add    esi,0x30
    85a3:	40 88 71 01          	mov    BYTE PTR [rcx+0x1],sil
    85a7:	4c 39 e1             	cmp    rcx,r12
    85aa:	0f 85 7a ff ff ff    	jne    852a <ft_ltoa+0xfa>
    85b0:	5b                   	pop    rbx
    85b1:	4c 89 c0             	mov    rax,r8
    85b4:	5d                   	pop    rbp
    85b5:	41 5c                	pop    r12
    85b7:	c3                   	ret    
    85b8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    85bf:	00 
    85c0:	c6 00 2d             	mov    BYTE PTR [rax],0x2d
    85c3:	4c 8d 48 01          	lea    r9,[rax+0x1]
    85c7:	48 89 d8             	mov    rax,rbx
    85ca:	49 89 da             	mov    r10,rbx
    85cd:	48 f7 ed             	imul   rbp
    85d0:	49 c1 fa 3f          	sar    r10,0x3f
    85d4:	49 83 eb 01          	sub    r11,0x1
    85d8:	48 c1 fa 02          	sar    rdx,0x2
    85dc:	48 89 d6             	mov    rsi,rdx
    85df:	4c 29 d6             	sub    rsi,r10
    85e2:	48 8d 2c b6          	lea    rbp,[rsi+rsi*4]
    85e6:	48 01 ed             	add    rbp,rbp
    85e9:	48 29 eb             	sub    rbx,rbp
    85ec:	83 c3 30             	add    ebx,0x30
    85ef:	41 88 5b 01          	mov    BYTE PTR [r11+0x1],bl
    85f3:	4c 89 d3             	mov    rbx,r10
    85f6:	48 29 d3             	sub    rbx,rdx
    85f9:	e9 ab fe ff ff       	jmp    84a9 <ft_ltoa+0x79>
    85fe:	66 90                	xchg   ax,ax
    8600:	bf 02 00 00 00       	mov    edi,0x2
    8605:	41 bc 30 00 00 00    	mov    r12d,0x30
    860b:	e8 30 9f ff ff       	call   2540 <malloc@plt>
    8610:	49 89 c0             	mov    r8,rax
    8613:	66 44 89 20          	mov    WORD PTR [rax],r12w
    8617:	5b                   	pop    rbx
    8618:	4c 89 c0             	mov    rax,r8
    861b:	5d                   	pop    rbp
    861c:	41 5c                	pop    r12
    861e:	c3                   	ret    
    861f:	90                   	nop
    8620:	48 89 d8             	mov    rax,rbx
    8623:	49 f7 e1             	mul    r9
    8626:	48 c1 ea 03          	shr    rdx,0x3
    862a:	4c 8d 14 92          	lea    r10,[rdx+rdx*4]
    862e:	4d 01 d2             	add    r10,r10
    8631:	4c 29 d3             	sub    rbx,r10
    8634:	83 c3 30             	add    ebx,0x30
    8637:	88 19                	mov    BYTE PTR [rcx],bl
    8639:	48 89 d3             	mov    rbx,rdx
    863c:	49 8d 4b fe          	lea    rcx,[r11-0x2]
    8640:	e9 9a fe ff ff       	jmp    84df <ft_ltoa+0xaf>
    8645:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    864c:	00 00 00 00 

0000000000008650 <get_digit>:
    8650:	f3 0f 1e fa          	endbr64 
    8654:	45 31 c0             	xor    r8d,r8d
    8657:	48 85 ff             	test   rdi,rdi
    865a:	74 31                	je     868d <get_digit+0x3d>
    865c:	48 b9 67 66 66 66 66 	movabs rcx,0x6666666666666667
    8663:	66 66 66 
    8666:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    866d:	00 00 00 
    8670:	48 89 f8             	mov    rax,rdi
    8673:	48 89 fe             	mov    rsi,rdi
    8676:	49 83 c0 01          	add    r8,0x1
    867a:	48 f7 e9             	imul   rcx
    867d:	48 c1 fe 3f          	sar    rsi,0x3f
    8681:	48 c1 fa 02          	sar    rdx,0x2
    8685:	48 89 d7             	mov    rdi,rdx
    8688:	48 29 f7             	sub    rdi,rsi
    868b:	75 e3                	jne    8670 <get_digit+0x20>
    868d:	4c 89 c0             	mov    rax,r8
    8690:	c3                   	ret    
    8691:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    8698:	00 00 00 
    869b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000086a0 <ft_putstr_fd>:
    86a0:	f3 0f 1e fa          	endbr64 
    86a4:	41 54                	push   r12
    86a6:	41 89 f4             	mov    r12d,esi
    86a9:	55                   	push   rbp
    86aa:	48 89 fd             	mov    rbp,rdi
    86ad:	48 83 ec 08          	sub    rsp,0x8
    86b1:	e8 aa d4 ff ff       	call   5b60 <ft_strlen>
    86b6:	48 89 ee             	mov    rsi,rbp
    86b9:	44 89 e7             	mov    edi,r12d
    86bc:	48 89 c2             	mov    rdx,rax
    86bf:	e8 1c a1 ff ff       	call   27e0 <write@plt>
    86c4:	48 83 c4 08          	add    rsp,0x8
    86c8:	5d                   	pop    rbp
    86c9:	41 5c                	pop    r12
    86cb:	c3                   	ret    
    86cc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000000086d0 <ft_putendl_fd>:
    86d0:	f3 0f 1e fa          	endbr64 
    86d4:	55                   	push   rbp
    86d5:	89 f5                	mov    ebp,esi
    86d7:	53                   	push   rbx
    86d8:	48 83 ec 08          	sub    rsp,0x8
    86dc:	e8 bf ff ff ff       	call   86a0 <ft_putstr_fd>
    86e1:	89 ef                	mov    edi,ebp
    86e3:	ba 01 00 00 00       	mov    edx,0x1
    86e8:	48 8d 35 73 3b 00 00 	lea    rsi,[rip+0x3b73]        # c262 <CSWTCH.3+0x1a2>
    86ef:	89 c3                	mov    ebx,eax
    86f1:	e8 ea a0 ff ff       	call   27e0 <write@plt>
    86f6:	48 83 c4 08          	add    rsp,0x8
    86fa:	01 d8                	add    eax,ebx
    86fc:	5b                   	pop    rbx
    86fd:	5d                   	pop    rbp
    86fe:	c3                   	ret    
    86ff:	90                   	nop

0000000000008700 <indexof>:
    8700:	f3 0f 1e fa          	endbr64 
    8704:	0f b6 17             	movzx  edx,BYTE PTR [rdi]
    8707:	84 d2                	test   dl,dl
    8709:	74 1d                	je     8728 <indexof+0x28>
    870b:	48 89 f8             	mov    rax,rdi
    870e:	eb 0c                	jmp    871c <indexof+0x1c>
    8710:	0f b6 50 01          	movzx  edx,BYTE PTR [rax+0x1]
    8714:	48 83 c0 01          	add    rax,0x1
    8718:	84 d2                	test   dl,dl
    871a:	74 0c                	je     8728 <indexof+0x28>
    871c:	40 38 d6             	cmp    sil,dl
    871f:	75 ef                	jne    8710 <indexof+0x10>
    8721:	29 f8                	sub    eax,edi
    8723:	c3                   	ret    
    8724:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    8728:	b8 ff ff ff ff       	mov    eax,0xffffffff
    872d:	c3                   	ret    
    872e:	66 90                	xchg   ax,ax

0000000000008730 <try_format_str>:
    8730:	f3 0f 1e fa          	endbr64 
    8734:	41 55                	push   r13
    8736:	41 54                	push   r12
    8738:	55                   	push   rbp
    8739:	53                   	push   rbx
    873a:	48 83 ec 08          	sub    rsp,0x8
    873e:	48 8b 07             	mov    rax,QWORD PTR [rdi]
    8741:	80 38 00             	cmp    BYTE PTR [rax],0x0
    8744:	0f 84 08 02 00 00    	je     8952 <try_format_str+0x222>
    874a:	49 89 fd             	mov    r13,rdi
    874d:	48 89 f3             	mov    rbx,rsi
    8750:	48 89 d5             	mov    rbp,rdx
    8753:	45 31 e4             	xor    r12d,r12d
    8756:	eb 30                	jmp    8788 <try_format_str+0x58>
    8758:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    875f:	00 
    8760:	ba 01 00 00 00       	mov    edx,0x1
    8765:	bf 01 00 00 00       	mov    edi,0x1
    876a:	e8 71 a0 ff ff       	call   27e0 <write@plt>
    876f:	49 8b 7d 00          	mov    rdi,QWORD PTR [r13+0x0]
    8773:	41 01 c4             	add    r12d,eax
    8776:	48 8d 4f 01          	lea    rcx,[rdi+0x1]
    877a:	49 89 4d 00          	mov    QWORD PTR [r13+0x0],rcx
    877e:	80 7f 01 00          	cmp    BYTE PTR [rdi+0x1],0x0
    8782:	0f 84 49 01 00 00    	je     88d1 <try_format_str+0x1a1>
    8788:	31 f6                	xor    esi,esi
    878a:	ba 0c 00 00 00       	mov    edx,0xc
    878f:	48 89 ef             	mov    rdi,rbp
    8792:	e8 f9 d3 ff ff       	call   5b90 <ft_memset>
    8797:	49 8b 75 00          	mov    rsi,QWORD PTR [r13+0x0]
    879b:	80 3e 25             	cmp    BYTE PTR [rsi],0x25
    879e:	75 c0                	jne    8760 <try_format_str+0x30>
    87a0:	48 83 c6 01          	add    rsi,0x1
    87a4:	49 89 75 00          	mov    QWORD PTR [r13+0x0],rsi
    87a8:	0f be 3e             	movsx  edi,BYTE PTR [rsi]
    87ab:	49 89 f0             	mov    r8,rsi
    87ae:	40 80 ff 2d          	cmp    dil,0x2d
    87b2:	74 24                	je     87d8 <try_format_str+0xa8>
    87b4:	40 80 ff 2b          	cmp    dil,0x2b
    87b8:	74 26                	je     87e0 <try_format_str+0xb0>
    87ba:	40 80 ff 20          	cmp    dil,0x20
    87be:	74 30                	je     87f0 <try_format_str+0xc0>
    87c0:	40 80 ff 30          	cmp    dil,0x30
    87c4:	74 3a                	je     8800 <try_format_str+0xd0>
    87c6:	40 80 ff 23          	cmp    dil,0x23
    87ca:	75 44                	jne    8810 <try_format_str+0xe0>
    87cc:	80 4d 00 10          	or     BYTE PTR [rbp+0x0],0x10
    87d0:	eb ce                	jmp    87a0 <try_format_str+0x70>
    87d2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    87d8:	80 4d 00 02          	or     BYTE PTR [rbp+0x0],0x2
    87dc:	eb c2                	jmp    87a0 <try_format_str+0x70>
    87de:	66 90                	xchg   ax,ax
    87e0:	80 4d 00 01          	or     BYTE PTR [rbp+0x0],0x1
    87e4:	eb ba                	jmp    87a0 <try_format_str+0x70>
    87e6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    87ed:	00 00 00 
    87f0:	80 4d 00 04          	or     BYTE PTR [rbp+0x0],0x4
    87f4:	eb aa                	jmp    87a0 <try_format_str+0x70>
    87f6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    87fd:	00 00 00 
    8800:	80 4d 00 08          	or     BYTE PTR [rbp+0x0],0x8
    8804:	eb 9a                	jmp    87a0 <try_format_str+0x70>
    8806:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    880d:	00 00 00 
    8810:	40 80 ff 2a          	cmp    dil,0x2a
    8814:	75 31                	jne    8847 <try_format_str+0x117>
    8816:	e9 c4 00 00 00       	jmp    88df <try_format_str+0x1af>
    881b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    8820:	8b 55 04             	mov    edx,DWORD PTR [rbp+0x4]
    8823:	49 8b 7d 00          	mov    rdi,QWORD PTR [r13+0x0]
    8827:	8d 34 92             	lea    esi,[rdx+rdx*4]
    882a:	4c 8d 57 01          	lea    r10,[rdi+0x1]
    882e:	01 f6                	add    esi,esi
    8830:	89 75 04             	mov    DWORD PTR [rbp+0x4],esi
    8833:	0f be 0f             	movsx  ecx,BYTE PTR [rdi]
    8836:	44 8d 4c 0e d0       	lea    r9d,[rsi+rcx*1-0x30]
    883b:	44 89 4d 04          	mov    DWORD PTR [rbp+0x4],r9d
    883f:	4d 89 55 00          	mov    QWORD PTR [r13+0x0],r10
    8843:	0f be 7f 01          	movsx  edi,BYTE PTR [rdi+0x1]
    8847:	e8 54 eb ff ff       	call   73a0 <ft_isdigit>
    884c:	85 c0                	test   eax,eax
    884e:	75 d0                	jne    8820 <try_format_str+0xf0>
    8850:	4d 8b 45 00          	mov    r8,QWORD PTR [r13+0x0]
    8854:	41 80 38 2e          	cmp    BYTE PTR [r8],0x2e
    8858:	75 5a                	jne    88b4 <try_format_str+0x184>
    885a:	4d 8d 48 01          	lea    r9,[r8+0x1]
    885e:	4d 89 4d 00          	mov    QWORD PTR [r13+0x0],r9
    8862:	80 4d 00 20          	or     BYTE PTR [rbp+0x0],0x20
    8866:	41 0f be 78 01       	movsx  edi,BYTE PTR [r8+0x1]
    886b:	40 80 ff 2a          	cmp    dil,0x2a
    886f:	75 3a                	jne    88ab <try_format_str+0x17b>
    8871:	e9 a4 00 00 00       	jmp    891a <try_format_str+0x1ea>
    8876:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    887d:	00 00 00 
    8880:	44 8b 45 08          	mov    r8d,DWORD PTR [rbp+0x8]
    8884:	4d 8b 4d 00          	mov    r9,QWORD PTR [r13+0x0]
    8888:	43 8d 3c 80          	lea    edi,[r8+r8*4]
    888c:	4d 8d 59 01          	lea    r11,[r9+0x1]
    8890:	01 ff                	add    edi,edi
    8892:	89 7d 08             	mov    DWORD PTR [rbp+0x8],edi
    8895:	41 0f be 09          	movsx  ecx,BYTE PTR [r9]
    8899:	44 8d 54 0f d0       	lea    r10d,[rdi+rcx*1-0x30]
    889e:	44 89 55 08          	mov    DWORD PTR [rbp+0x8],r10d
    88a2:	4d 89 5d 00          	mov    QWORD PTR [r13+0x0],r11
    88a6:	41 0f be 79 01       	movsx  edi,BYTE PTR [r9+0x1]
    88ab:	e8 f0 ea ff ff       	call   73a0 <ft_isdigit>
    88b0:	85 c0                	test   eax,eax
    88b2:	75 cc                	jne    8880 <try_format_str+0x150>
    88b4:	48 89 ea             	mov    rdx,rbp
    88b7:	48 89 de             	mov    rsi,rbx
    88ba:	4c 89 ef             	mov    rdi,r13
    88bd:	e8 ce 06 00 00       	call   8f90 <check_conversion>
    88c2:	83 f8 ff             	cmp    eax,0xffffffff
    88c5:	0f 85 a4 fe ff ff    	jne    876f <try_format_str+0x3f>
    88cb:	41 bc ff ff ff ff    	mov    r12d,0xffffffff
    88d1:	48 83 c4 08          	add    rsp,0x8
    88d5:	44 89 e0             	mov    eax,r12d
    88d8:	5b                   	pop    rbx
    88d9:	5d                   	pop    rbp
    88da:	41 5c                	pop    r12
    88dc:	41 5d                	pop    r13
    88de:	c3                   	ret    
    88df:	44 8b 1b             	mov    r11d,DWORD PTR [rbx]
    88e2:	41 83 fb 2f          	cmp    r11d,0x2f
    88e6:	77 20                	ja     8908 <try_format_str+0x1d8>
    88e8:	44 89 da             	mov    edx,r11d
    88eb:	41 83 c3 08          	add    r11d,0x8
    88ef:	48 03 53 10          	add    rdx,QWORD PTR [rbx+0x10]
    88f3:	44 89 1b             	mov    DWORD PTR [rbx],r11d
    88f6:	8b 32                	mov    esi,DWORD PTR [rdx]
    88f8:	49 83 c0 01          	add    r8,0x1
    88fc:	89 75 04             	mov    DWORD PTR [rbp+0x4],esi
    88ff:	4d 89 45 00          	mov    QWORD PTR [r13+0x0],r8
    8903:	e9 4c ff ff ff       	jmp    8854 <try_format_str+0x124>
    8908:	48 8b 53 08          	mov    rdx,QWORD PTR [rbx+0x8]
    890c:	48 8d 42 08          	lea    rax,[rdx+0x8]
    8910:	48 89 43 08          	mov    QWORD PTR [rbx+0x8],rax
    8914:	4d 8b 45 00          	mov    r8,QWORD PTR [r13+0x0]
    8918:	eb dc                	jmp    88f6 <try_format_str+0x1c6>
    891a:	8b 03                	mov    eax,DWORD PTR [rbx]
    891c:	83 f8 2f             	cmp    eax,0x2f
    891f:	77 1f                	ja     8940 <try_format_str+0x210>
    8921:	89 c6                	mov    esi,eax
    8923:	83 c0 08             	add    eax,0x8
    8926:	48 03 73 10          	add    rsi,QWORD PTR [rbx+0x10]
    892a:	89 03                	mov    DWORD PTR [rbx],eax
    892c:	44 8b 06             	mov    r8d,DWORD PTR [rsi]
    892f:	49 83 c1 01          	add    r9,0x1
    8933:	44 89 45 08          	mov    DWORD PTR [rbp+0x8],r8d
    8937:	4d 89 4d 00          	mov    QWORD PTR [r13+0x0],r9
    893b:	e9 74 ff ff ff       	jmp    88b4 <try_format_str+0x184>
    8940:	48 8b 73 08          	mov    rsi,QWORD PTR [rbx+0x8]
    8944:	48 8d 56 08          	lea    rdx,[rsi+0x8]
    8948:	48 89 53 08          	mov    QWORD PTR [rbx+0x8],rdx
    894c:	4d 8b 4d 00          	mov    r9,QWORD PTR [r13+0x0]
    8950:	eb da                	jmp    892c <try_format_str+0x1fc>
    8952:	45 31 e4             	xor    r12d,r12d
    8955:	e9 77 ff ff ff       	jmp    88d1 <try_format_str+0x1a1>
    895a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000008960 <ft_printf>:
    8960:	f3 0f 1e fa          	endbr64 
    8964:	41 54                	push   r12
    8966:	48 81 ec f0 00 00 00 	sub    rsp,0xf0
    896d:	48 89 7c 24 08       	mov    QWORD PTR [rsp+0x8],rdi
    8972:	48 89 74 24 48       	mov    QWORD PTR [rsp+0x48],rsi
    8977:	48 89 54 24 50       	mov    QWORD PTR [rsp+0x50],rdx
    897c:	48 89 4c 24 58       	mov    QWORD PTR [rsp+0x58],rcx
    8981:	4c 89 44 24 60       	mov    QWORD PTR [rsp+0x60],r8
    8986:	4c 89 4c 24 68       	mov    QWORD PTR [rsp+0x68],r9
    898b:	84 c0                	test   al,al
    898d:	74 45                	je     89d4 <ft_printf+0x74>
    898f:	c5 f8 29 44 24 70    	vmovaps XMMWORD PTR [rsp+0x70],xmm0
    8995:	c5 f8 29 8c 24 80 00 	vmovaps XMMWORD PTR [rsp+0x80],xmm1
    899c:	00 00 
    899e:	c5 f8 29 94 24 90 00 	vmovaps XMMWORD PTR [rsp+0x90],xmm2
    89a5:	00 00 
    89a7:	c5 f8 29 9c 24 a0 00 	vmovaps XMMWORD PTR [rsp+0xa0],xmm3
    89ae:	00 00 
    89b0:	c5 f8 29 a4 24 b0 00 	vmovaps XMMWORD PTR [rsp+0xb0],xmm4
    89b7:	00 00 
    89b9:	c5 f8 29 ac 24 c0 00 	vmovaps XMMWORD PTR [rsp+0xc0],xmm5
    89c0:	00 00 
    89c2:	c5 f8 29 b4 24 d0 00 	vmovaps XMMWORD PTR [rsp+0xd0],xmm6
    89c9:	00 00 
    89cb:	c5 f8 29 bc 24 e0 00 	vmovaps XMMWORD PTR [rsp+0xe0],xmm7
    89d2:	00 00 
    89d4:	31 d2                	xor    edx,edx
    89d6:	48 8d 35 86 38 00 00 	lea    rsi,[rip+0x3886]        # c263 <CSWTCH.3+0x1a3>
    89dd:	bf 01 00 00 00       	mov    edi,0x1
    89e2:	e8 f9 9d ff ff       	call   27e0 <write@plt>
    89e7:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
    89eb:	74 63                	je     8a50 <ft_printf+0xf0>
    89ed:	48 83 7c 24 08 00    	cmp    QWORD PTR [rsp+0x8],0x0
    89f3:	74 5b                	je     8a50 <ft_printf+0xf0>
    89f5:	4c 8d 64 24 1c       	lea    r12,[rsp+0x1c]
    89fa:	ba 0c 00 00 00       	mov    edx,0xc
    89ff:	31 f6                	xor    esi,esi
    8a01:	4c 89 e7             	mov    rdi,r12
    8a04:	e8 87 d1 ff ff       	call   5b90 <ft_memset>
    8a09:	48 8d 54 24 40       	lea    rdx,[rsp+0x40]
    8a0e:	48 8d 74 24 28       	lea    rsi,[rsp+0x28]
    8a13:	c7 44 24 28 08 00 00 	mov    DWORD PTR [rsp+0x28],0x8
    8a1a:	00 
    8a1b:	48 89 54 24 38       	mov    QWORD PTR [rsp+0x38],rdx
    8a20:	48 8d 7c 24 08       	lea    rdi,[rsp+0x8]
    8a25:	4c 89 e2             	mov    rdx,r12
    8a28:	48 8d 84 24 00 01 00 	lea    rax,[rsp+0x100]
    8a2f:	00 
    8a30:	c7 44 24 2c 30 00 00 	mov    DWORD PTR [rsp+0x2c],0x30
    8a37:	00 
    8a38:	48 89 44 24 30       	mov    QWORD PTR [rsp+0x30],rax
    8a3d:	e8 ee fc ff ff       	call   8730 <try_format_str>
    8a42:	48 81 c4 f0 00 00 00 	add    rsp,0xf0
    8a49:	41 5c                	pop    r12
    8a4b:	c3                   	ret    
    8a4c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    8a50:	b8 ff ff ff ff       	mov    eax,0xffffffff
    8a55:	eb eb                	jmp    8a42 <ft_printf+0xe2>
    8a57:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    8a5e:	00 00 

0000000000008a60 <check_flags>:
    8a60:	f3 0f 1e fa          	endbr64 
    8a64:	48 8b 07             	mov    rax,QWORD PTR [rdi]
    8a67:	eb 2e                	jmp    8a97 <check_flags+0x37>
    8a69:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    8a70:	80 fa 2b             	cmp    dl,0x2b
    8a73:	74 33                	je     8aa8 <check_flags+0x48>
    8a75:	80 fa 20             	cmp    dl,0x20
    8a78:	74 36                	je     8ab0 <check_flags+0x50>
    8a7a:	80 fa 30             	cmp    dl,0x30
    8a7d:	74 39                	je     8ab8 <check_flags+0x58>
    8a7f:	80 fa 23             	cmp    dl,0x23
    8a82:	75 3c                	jne    8ac0 <check_flags+0x60>
    8a84:	80 0e 10             	or     BYTE PTR [rsi],0x10
    8a87:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    8a8e:	00 00 
    8a90:	48 83 c0 01          	add    rax,0x1
    8a94:	48 89 07             	mov    QWORD PTR [rdi],rax
    8a97:	0f b6 10             	movzx  edx,BYTE PTR [rax]
    8a9a:	80 fa 2d             	cmp    dl,0x2d
    8a9d:	75 d1                	jne    8a70 <check_flags+0x10>
    8a9f:	80 0e 02             	or     BYTE PTR [rsi],0x2
    8aa2:	eb ec                	jmp    8a90 <check_flags+0x30>
    8aa4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    8aa8:	80 0e 01             	or     BYTE PTR [rsi],0x1
    8aab:	eb e3                	jmp    8a90 <check_flags+0x30>
    8aad:	0f 1f 00             	nop    DWORD PTR [rax]
    8ab0:	80 0e 04             	or     BYTE PTR [rsi],0x4
    8ab3:	eb db                	jmp    8a90 <check_flags+0x30>
    8ab5:	0f 1f 00             	nop    DWORD PTR [rax]
    8ab8:	80 0e 08             	or     BYTE PTR [rsi],0x8
    8abb:	eb d3                	jmp    8a90 <check_flags+0x30>
    8abd:	0f 1f 00             	nop    DWORD PTR [rax]
    8ac0:	c3                   	ret    
    8ac1:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    8ac8:	00 00 00 00 
    8acc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000008ad0 <check_width>:
    8ad0:	f3 0f 1e fa          	endbr64 
    8ad4:	55                   	push   rbp
    8ad5:	48 89 fd             	mov    rbp,rdi
    8ad8:	53                   	push   rbx
    8ad9:	48 89 d3             	mov    rbx,rdx
    8adc:	48 83 ec 08          	sub    rsp,0x8
    8ae0:	48 8b 07             	mov    rax,QWORD PTR [rdi]
    8ae3:	0f be 38             	movsx  edi,BYTE PTR [rax]
    8ae6:	40 80 ff 2a          	cmp    dil,0x2a
    8aea:	75 29                	jne    8b15 <check_width+0x45>
    8aec:	eb 3a                	jmp    8b28 <check_width+0x58>
    8aee:	66 90                	xchg   ax,ax
    8af0:	8b 43 04             	mov    eax,DWORD PTR [rbx+0x4]
    8af3:	48 8b 55 00          	mov    rdx,QWORD PTR [rbp+0x0]
    8af7:	8d 34 80             	lea    esi,[rax+rax*4]
    8afa:	4c 8d 42 01          	lea    r8,[rdx+0x1]
    8afe:	01 f6                	add    esi,esi
    8b00:	89 73 04             	mov    DWORD PTR [rbx+0x4],esi
    8b03:	0f be 0a             	movsx  ecx,BYTE PTR [rdx]
    8b06:	8d 7c 0e d0          	lea    edi,[rsi+rcx*1-0x30]
    8b0a:	89 7b 04             	mov    DWORD PTR [rbx+0x4],edi
    8b0d:	4c 89 45 00          	mov    QWORD PTR [rbp+0x0],r8
    8b11:	0f be 7a 01          	movsx  edi,BYTE PTR [rdx+0x1]
    8b15:	e8 86 e8 ff ff       	call   73a0 <ft_isdigit>
    8b1a:	85 c0                	test   eax,eax
    8b1c:	75 d2                	jne    8af0 <check_width+0x20>
    8b1e:	48 83 c4 08          	add    rsp,0x8
    8b22:	5b                   	pop    rbx
    8b23:	5d                   	pop    rbp
    8b24:	c3                   	ret    
    8b25:	0f 1f 00             	nop    DWORD PTR [rax]
    8b28:	44 8b 0e             	mov    r9d,DWORD PTR [rsi]
    8b2b:	41 83 f9 2f          	cmp    r9d,0x2f
    8b2f:	77 27                	ja     8b58 <check_width+0x88>
    8b31:	45 89 ca             	mov    r10d,r9d
    8b34:	41 83 c1 08          	add    r9d,0x8
    8b38:	4c 03 56 10          	add    r10,QWORD PTR [rsi+0x10]
    8b3c:	44 89 0e             	mov    DWORD PTR [rsi],r9d
    8b3f:	41 8b 32             	mov    esi,DWORD PTR [r10]
    8b42:	48 83 c0 01          	add    rax,0x1
    8b46:	89 73 04             	mov    DWORD PTR [rbx+0x4],esi
    8b49:	48 89 45 00          	mov    QWORD PTR [rbp+0x0],rax
    8b4d:	48 83 c4 08          	add    rsp,0x8
    8b51:	5b                   	pop    rbx
    8b52:	5d                   	pop    rbp
    8b53:	c3                   	ret    
    8b54:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    8b58:	4c 8b 56 08          	mov    r10,QWORD PTR [rsi+0x8]
    8b5c:	4d 8d 5a 08          	lea    r11,[r10+0x8]
    8b60:	4c 89 5e 08          	mov    QWORD PTR [rsi+0x8],r11
    8b64:	48 8b 45 00          	mov    rax,QWORD PTR [rbp+0x0]
    8b68:	eb d5                	jmp    8b3f <check_width+0x6f>
    8b6a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000008b70 <check_precision>:
    8b70:	f3 0f 1e fa          	endbr64 
    8b74:	48 8b 07             	mov    rax,QWORD PTR [rdi]
    8b77:	80 38 2e             	cmp    BYTE PTR [rax],0x2e
    8b7a:	0f 85 90 00 00 00    	jne    8c10 <check_precision+0xa0>
    8b80:	55                   	push   rbp
    8b81:	48 89 fd             	mov    rbp,rdi
    8b84:	53                   	push   rbx
    8b85:	48 89 d3             	mov    rbx,rdx
    8b88:	48 8d 50 01          	lea    rdx,[rax+0x1]
    8b8c:	48 83 ec 08          	sub    rsp,0x8
    8b90:	48 89 17             	mov    QWORD PTR [rdi],rdx
    8b93:	80 0b 20             	or     BYTE PTR [rbx],0x20
    8b96:	0f be 78 01          	movsx  edi,BYTE PTR [rax+0x1]
    8b9a:	40 80 ff 2a          	cmp    dil,0x2a
    8b9e:	75 57                	jne    8bf7 <check_precision+0x87>
    8ba0:	44 8b 16             	mov    r10d,DWORD PTR [rsi]
    8ba3:	41 83 fa 2f          	cmp    r10d,0x2f
    8ba7:	77 6f                	ja     8c18 <check_precision+0xa8>
    8ba9:	45 89 d3             	mov    r11d,r10d
    8bac:	41 83 c2 08          	add    r10d,0x8
    8bb0:	4c 03 5e 10          	add    r11,QWORD PTR [rsi+0x10]
    8bb4:	44 89 16             	mov    DWORD PTR [rsi],r10d
    8bb7:	41 8b 33             	mov    esi,DWORD PTR [r11]
    8bba:	48 83 c2 01          	add    rdx,0x1
    8bbe:	89 73 08             	mov    DWORD PTR [rbx+0x8],esi
    8bc1:	48 89 55 00          	mov    QWORD PTR [rbp+0x0],rdx
    8bc5:	48 83 c4 08          	add    rsp,0x8
    8bc9:	5b                   	pop    rbx
    8bca:	5d                   	pop    rbp
    8bcb:	c3                   	ret    
    8bcc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    8bd0:	8b 53 08             	mov    edx,DWORD PTR [rbx+0x8]
    8bd3:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
    8bd7:	8d 34 92             	lea    esi,[rdx+rdx*4]
    8bda:	4c 8d 4f 01          	lea    r9,[rdi+0x1]
    8bde:	01 f6                	add    esi,esi
    8be0:	89 73 08             	mov    DWORD PTR [rbx+0x8],esi
    8be3:	0f be 0f             	movsx  ecx,BYTE PTR [rdi]
    8be6:	44 8d 44 0e d0       	lea    r8d,[rsi+rcx*1-0x30]
    8beb:	44 89 43 08          	mov    DWORD PTR [rbx+0x8],r8d
    8bef:	4c 89 4d 00          	mov    QWORD PTR [rbp+0x0],r9
    8bf3:	0f be 7f 01          	movsx  edi,BYTE PTR [rdi+0x1]
    8bf7:	e8 a4 e7 ff ff       	call   73a0 <ft_isdigit>
    8bfc:	85 c0                	test   eax,eax
    8bfe:	75 d0                	jne    8bd0 <check_precision+0x60>
    8c00:	48 83 c4 08          	add    rsp,0x8
    8c04:	5b                   	pop    rbx
    8c05:	5d                   	pop    rbp
    8c06:	c3                   	ret    
    8c07:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    8c0e:	00 00 
    8c10:	c3                   	ret    
    8c11:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    8c18:	4c 8b 5e 08          	mov    r11,QWORD PTR [rsi+0x8]
    8c1c:	49 8d 43 08          	lea    rax,[r11+0x8]
    8c20:	48 89 46 08          	mov    QWORD PTR [rsi+0x8],rax
    8c24:	48 8b 55 00          	mov    rdx,QWORD PTR [rbp+0x0]
    8c28:	eb 8d                	jmp    8bb7 <check_precision+0x47>
    8c2a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000008c30 <ft_realloc>:
    8c30:	f3 0f 1e fa          	endbr64 
    8c34:	41 55                	push   r13
    8c36:	49 89 f5             	mov    r13,rsi
    8c39:	41 54                	push   r12
    8c3b:	55                   	push   rbp
    8c3c:	48 89 fd             	mov    rbp,rdi
    8c3f:	48 89 d7             	mov    rdi,rdx
    8c42:	53                   	push   rbx
    8c43:	48 89 d3             	mov    rbx,rdx
    8c46:	48 83 ec 08          	sub    rsp,0x8
    8c4a:	e8 f1 98 ff ff       	call   2540 <malloc@plt>
    8c4f:	49 89 c4             	mov    r12,rax
    8c52:	48 85 c0             	test   rax,rax
    8c55:	74 3e                	je     8c95 <ft_realloc+0x65>
    8c57:	48 89 da             	mov    rdx,rbx
    8c5a:	31 f6                	xor    esi,esi
    8c5c:	48 89 c7             	mov    rdi,rax
    8c5f:	e8 2c cf ff ff       	call   5b90 <ft_memset>
    8c64:	89 de                	mov    esi,ebx
    8c66:	44 89 ef             	mov    edi,r13d
    8c69:	e8 c2 d6 ff ff       	call   6330 <get_min>
    8c6e:	4c 89 e7             	mov    rdi,r12
    8c71:	48 89 ee             	mov    rsi,rbp
    8c74:	48 63 d0             	movsxd rdx,eax
    8c77:	e8 44 e7 ff ff       	call   73c0 <ft_memcpy>
    8c7c:	48 89 ef             	mov    rdi,rbp
    8c7f:	49 89 c4             	mov    r12,rax
    8c82:	e8 39 99 ff ff       	call   25c0 <free@plt>
    8c87:	48 83 c4 08          	add    rsp,0x8
    8c8b:	4c 89 e0             	mov    rax,r12
    8c8e:	5b                   	pop    rbx
    8c8f:	5d                   	pop    rbp
    8c90:	41 5c                	pop    r12
    8c92:	41 5d                	pop    r13
    8c94:	c3                   	ret    
    8c95:	48 8d 35 cc 35 00 00 	lea    rsi,[rip+0x35cc]        # c268 <CSWTCH.3+0x1a8>
    8c9c:	31 ff                	xor    edi,edi
    8c9e:	e8 ad 0d 00 00       	call   9a50 <ft_assert>
    8ca3:	eb e2                	jmp    8c87 <ft_realloc+0x57>
    8ca5:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    8cac:	00 00 00 
    8caf:	90                   	nop

0000000000008cb0 <ft_bzero>:
    8cb0:	f3 0f 1e fa          	endbr64 
    8cb4:	48 89 f2             	mov    rdx,rsi
    8cb7:	48 85 f6             	test   rsi,rsi
    8cba:	74 0c                	je     8cc8 <ft_bzero+0x18>
    8cbc:	31 f6                	xor    esi,esi
    8cbe:	e9 8d 97 ff ff       	jmp    2450 <memset@plt>
    8cc3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    8cc8:	c3                   	ret    
    8cc9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000008cd0 <format_conversion_c>:
    8cd0:	f3 0f 1e fa          	endbr64 
    8cd4:	55                   	push   rbp
    8cd5:	40 0f be ef          	movsx  ebp,dil
    8cd9:	53                   	push   rbx
    8cda:	48 83 ec 08          	sub    rsp,0x8
    8cde:	8b 56 04             	mov    edx,DWORD PTR [rsi+0x4]
    8ce1:	85 d2                	test   edx,edx
    8ce3:	74 6b                	je     8d50 <format_conversion_c+0x80>
    8ce5:	48 89 f3             	mov    rbx,rsi
    8ce8:	f6 06 02             	test   BYTE PTR [rsi],0x2
    8ceb:	75 33                	jne    8d20 <format_conversion_c+0x50>
    8ced:	83 ea 01             	sub    edx,0x1
    8cf0:	be 01 00 00 00       	mov    esi,0x1
    8cf5:	bf 20 00 00 00       	mov    edi,0x20
    8cfa:	e8 31 0b 00 00       	call   9830 <write_repeated_char>
    8cff:	89 ef                	mov    edi,ebp
    8d01:	be 01 00 00 00       	mov    esi,0x1
    8d06:	89 c3                	mov    ebx,eax
    8d08:	e8 63 0d 00 00       	call   9a70 <ft_putchar_fd>
    8d0d:	48 83 c4 08          	add    rsp,0x8
    8d11:	01 d8                	add    eax,ebx
    8d13:	5b                   	pop    rbx
    8d14:	5d                   	pop    rbp
    8d15:	c3                   	ret    
    8d16:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    8d1d:	00 00 00 
    8d20:	89 ef                	mov    edi,ebp
    8d22:	be 01 00 00 00       	mov    esi,0x1
    8d27:	e8 44 0d 00 00       	call   9a70 <ft_putchar_fd>
    8d2c:	8b 53 04             	mov    edx,DWORD PTR [rbx+0x4]
    8d2f:	be 01 00 00 00       	mov    esi,0x1
    8d34:	bf 20 00 00 00       	mov    edi,0x20
    8d39:	89 c5                	mov    ebp,eax
    8d3b:	29 c2                	sub    edx,eax
    8d3d:	e8 ee 0a 00 00       	call   9830 <write_repeated_char>
    8d42:	48 83 c4 08          	add    rsp,0x8
    8d46:	01 e8                	add    eax,ebp
    8d48:	5b                   	pop    rbx
    8d49:	5d                   	pop    rbp
    8d4a:	c3                   	ret    
    8d4b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    8d50:	48 83 c4 08          	add    rsp,0x8
    8d54:	89 ef                	mov    edi,ebp
    8d56:	be 01 00 00 00       	mov    esi,0x1
    8d5b:	5b                   	pop    rbx
    8d5c:	5d                   	pop    rbp
    8d5d:	e9 0e 0d 00 00       	jmp    9a70 <ft_putchar_fd>
    8d62:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    8d69:	00 00 00 00 
    8d6d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000008d70 <convert_flag_s_width>:
    8d70:	f3 0f 1e fa          	endbr64 
    8d74:	41 55                	push   r13
    8d76:	41 89 d5             	mov    r13d,edx
    8d79:	41 54                	push   r12
    8d7b:	55                   	push   rbp
    8d7c:	48 89 f5             	mov    rbp,rsi
    8d7f:	53                   	push   rbx
    8d80:	48 89 fb             	mov    rbx,rdi
    8d83:	48 89 f7             	mov    rdi,rsi
    8d86:	48 83 ec 08          	sub    rsp,0x8
    8d8a:	e8 d1 cd ff ff       	call   5b60 <ft_strlen>
    8d8f:	8b 53 04             	mov    edx,DWORD PTR [rbx+0x4]
    8d92:	85 d2                	test   edx,edx
    8d94:	0f 84 86 00 00 00    	je     8e20 <convert_flag_s_width+0xb0>
    8d9a:	f6 03 02             	test   BYTE PTR [rbx],0x2
    8d9d:	75 49                	jne    8de8 <convert_flag_s_width+0x78>
    8d9f:	44 89 ef             	mov    edi,r13d
    8da2:	89 c6                	mov    esi,eax
    8da4:	e8 87 d5 ff ff       	call   6330 <get_min>
    8da9:	8b 53 04             	mov    edx,DWORD PTR [rbx+0x4]
    8dac:	be 01 00 00 00       	mov    esi,0x1
    8db1:	bf 20 00 00 00       	mov    edi,0x20
    8db6:	41 89 c4             	mov    r12d,eax
    8db9:	29 c2                	sub    edx,eax
    8dbb:	e8 70 0a 00 00       	call   9830 <write_repeated_char>
    8dc0:	44 89 ea             	mov    edx,r13d
    8dc3:	48 89 ef             	mov    rdi,rbp
    8dc6:	be 01 00 00 00       	mov    esi,0x1
    8dcb:	41 01 c4             	add    r12d,eax
    8dce:	e8 fd 09 00 00       	call   97d0 <print_strn_fd>
    8dd3:	48 83 c4 08          	add    rsp,0x8
    8dd7:	44 89 e0             	mov    eax,r12d
    8dda:	5b                   	pop    rbx
    8ddb:	5d                   	pop    rbp
    8ddc:	41 5c                	pop    r12
    8dde:	41 5d                	pop    r13
    8de0:	c3                   	ret    
    8de1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    8de8:	44 89 ea             	mov    edx,r13d
    8deb:	48 89 ef             	mov    rdi,rbp
    8dee:	be 01 00 00 00       	mov    esi,0x1
    8df3:	e8 d8 09 00 00       	call   97d0 <print_strn_fd>
    8df8:	8b 53 04             	mov    edx,DWORD PTR [rbx+0x4]
    8dfb:	be 01 00 00 00       	mov    esi,0x1
    8e00:	bf 20 00 00 00       	mov    edi,0x20
    8e05:	41 89 c4             	mov    r12d,eax
    8e08:	29 c2                	sub    edx,eax
    8e0a:	e8 21 0a 00 00       	call   9830 <write_repeated_char>
    8e0f:	48 83 c4 08          	add    rsp,0x8
    8e13:	41 01 c4             	add    r12d,eax
    8e16:	5b                   	pop    rbx
    8e17:	5d                   	pop    rbp
    8e18:	44 89 e0             	mov    eax,r12d
    8e1b:	41 5c                	pop    r12
    8e1d:	41 5d                	pop    r13
    8e1f:	c3                   	ret    
    8e20:	48 83 c4 08          	add    rsp,0x8
    8e24:	44 89 ea             	mov    edx,r13d
    8e27:	48 89 ef             	mov    rdi,rbp
    8e2a:	be 01 00 00 00       	mov    esi,0x1
    8e2f:	5b                   	pop    rbx
    8e30:	5d                   	pop    rbp
    8e31:	41 5c                	pop    r12
    8e33:	41 5d                	pop    r13
    8e35:	e9 96 09 00 00       	jmp    97d0 <print_strn_fd>
    8e3a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000008e40 <format_conversion_s>:
    8e40:	f3 0f 1e fa          	endbr64 
    8e44:	41 55                	push   r13
    8e46:	4c 8d 2d 34 34 00 00 	lea    r13,[rip+0x3434]        # c281 <CSWTCH.3+0x1c1>
    8e4d:	41 54                	push   r12
    8e4f:	49 89 f4             	mov    r12,rsi
    8e52:	55                   	push   rbp
    8e53:	53                   	push   rbx
    8e54:	48 83 ec 08          	sub    rsp,0x8
    8e58:	48 85 ff             	test   rdi,rdi
    8e5b:	49 0f 44 fd          	cmove  rdi,r13
    8e5f:	48 89 fd             	mov    rbp,rdi
    8e62:	f6 06 20             	test   BYTE PTR [rsi],0x20
    8e65:	74 14                	je     8e7b <format_conversion_s+0x3b>
    8e67:	48 8d 35 1a 34 00 00 	lea    rsi,[rip+0x341a]        # c288 <CSWTCH.3+0x1c8>
    8e6e:	e8 4d cd ff ff       	call   5bc0 <ft_strcmp>
    8e73:	85 c0                	test   eax,eax
    8e75:	0f 85 b5 00 00 00    	jne    8f30 <format_conversion_s+0xf0>
    8e7b:	48 89 ef             	mov    rdi,rbp
    8e7e:	e8 dd cc ff ff       	call   5b60 <ft_strlen>
    8e83:	48 89 ef             	mov    rdi,rbp
    8e86:	41 89 c5             	mov    r13d,eax
    8e89:	e8 d2 cc ff ff       	call   5b60 <ft_strlen>
    8e8e:	41 8b 54 24 04       	mov    edx,DWORD PTR [r12+0x4]
    8e93:	85 d2                	test   edx,edx
    8e95:	0f 84 d5 00 00 00    	je     8f70 <format_conversion_s+0x130>
    8e9b:	41 f6 04 24 02       	test   BYTE PTR [r12],0x2
    8ea0:	75 4e                	jne    8ef0 <format_conversion_s+0xb0>
    8ea2:	44 89 ef             	mov    edi,r13d
    8ea5:	89 c6                	mov    esi,eax
    8ea7:	e8 84 d4 ff ff       	call   6330 <get_min>
    8eac:	41 8b 54 24 04       	mov    edx,DWORD PTR [r12+0x4]
    8eb1:	be 01 00 00 00       	mov    esi,0x1
    8eb6:	bf 20 00 00 00       	mov    edi,0x20
    8ebb:	89 c3                	mov    ebx,eax
    8ebd:	29 c2                	sub    edx,eax
    8ebf:	e8 6c 09 00 00       	call   9830 <write_repeated_char>
    8ec4:	44 89 ea             	mov    edx,r13d
    8ec7:	48 89 ef             	mov    rdi,rbp
    8eca:	be 01 00 00 00       	mov    esi,0x1
    8ecf:	44 8d 24 03          	lea    r12d,[rbx+rax*1]
    8ed3:	e8 f8 08 00 00       	call   97d0 <print_strn_fd>
    8ed8:	48 83 c4 08          	add    rsp,0x8
    8edc:	44 89 e0             	mov    eax,r12d
    8edf:	5b                   	pop    rbx
    8ee0:	5d                   	pop    rbp
    8ee1:	41 5c                	pop    r12
    8ee3:	41 5d                	pop    r13
    8ee5:	c3                   	ret    
    8ee6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    8eed:	00 00 00 
    8ef0:	44 89 ea             	mov    edx,r13d
    8ef3:	48 89 ef             	mov    rdi,rbp
    8ef6:	be 01 00 00 00       	mov    esi,0x1
    8efb:	e8 d0 08 00 00       	call   97d0 <print_strn_fd>
    8f00:	41 8b 54 24 04       	mov    edx,DWORD PTR [r12+0x4]
    8f05:	be 01 00 00 00       	mov    esi,0x1
    8f0a:	bf 20 00 00 00       	mov    edi,0x20
    8f0f:	89 c5                	mov    ebp,eax
    8f11:	29 c2                	sub    edx,eax
    8f13:	e8 18 09 00 00       	call   9830 <write_repeated_char>
    8f18:	48 83 c4 08          	add    rsp,0x8
    8f1c:	44 8d 64 05 00       	lea    r12d,[rbp+rax*1+0x0]
    8f21:	5b                   	pop    rbx
    8f22:	5d                   	pop    rbp
    8f23:	44 89 e0             	mov    eax,r12d
    8f26:	41 5c                	pop    r12
    8f28:	41 5d                	pop    r13
    8f2a:	c3                   	ret    
    8f2b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    8f30:	4c 89 ee             	mov    rsi,r13
    8f33:	48 89 ef             	mov    rdi,rbp
    8f36:	e8 85 cc ff ff       	call   5bc0 <ft_strcmp>
    8f3b:	41 8b 54 24 08       	mov    edx,DWORD PTR [r12+0x8]
    8f40:	85 c0                	test   eax,eax
    8f42:	75 0e                	jne    8f52 <format_conversion_s+0x112>
    8f44:	83 fa 05             	cmp    edx,0x5
    8f47:	48 8d 05 15 33 00 00 	lea    rax,[rip+0x3315]        # c263 <CSWTCH.3+0x1a3>
    8f4e:	48 0f 46 e8          	cmovbe rbp,rax
    8f52:	48 83 c4 08          	add    rsp,0x8
    8f56:	48 89 ee             	mov    rsi,rbp
    8f59:	4c 89 e7             	mov    rdi,r12
    8f5c:	5b                   	pop    rbx
    8f5d:	5d                   	pop    rbp
    8f5e:	41 5c                	pop    r12
    8f60:	41 5d                	pop    r13
    8f62:	e9 09 fe ff ff       	jmp    8d70 <convert_flag_s_width>
    8f67:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    8f6e:	00 00 
    8f70:	48 83 c4 08          	add    rsp,0x8
    8f74:	44 89 ea             	mov    edx,r13d
    8f77:	48 89 ef             	mov    rdi,rbp
    8f7a:	be 01 00 00 00       	mov    esi,0x1
    8f7f:	5b                   	pop    rbx
    8f80:	5d                   	pop    rbp
    8f81:	41 5c                	pop    r12
    8f83:	41 5d                	pop    r13
    8f85:	e9 46 08 00 00       	jmp    97d0 <print_strn_fd>
    8f8a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000008f90 <check_conversion>:
    8f90:	f3 0f 1e fa          	endbr64 
    8f94:	41 54                	push   r12
    8f96:	48 89 f1             	mov    rcx,rsi
    8f99:	55                   	push   rbp
    8f9a:	48 89 d5             	mov    rbp,rdx
    8f9d:	53                   	push   rbx
    8f9e:	48 8b 07             	mov    rax,QWORD PTR [rdi]
    8fa1:	0f b6 10             	movzx  edx,BYTE PTR [rax]
    8fa4:	80 fa 63             	cmp    dl,0x63
    8fa7:	74 37                	je     8fe0 <check_conversion+0x50>
    8fa9:	80 fa 25             	cmp    dl,0x25
    8fac:	0f 84 a6 01 00 00    	je     9158 <check_conversion+0x1c8>
    8fb2:	83 ea 58             	sub    edx,0x58
    8fb5:	80 fa 20             	cmp    dl,0x20
    8fb8:	77 16                	ja     8fd0 <check_conversion+0x40>
    8fba:	48 8d 35 cf 32 00 00 	lea    rsi,[rip+0x32cf]        # c290 <CSWTCH.3+0x1d0>
    8fc1:	0f b6 da             	movzx  ebx,dl
    8fc4:	48 63 3c 9e          	movsxd rdi,DWORD PTR [rsi+rbx*4]
    8fc8:	48 01 f7             	add    rdi,rsi
    8fcb:	3e ff e7             	notrack jmp rdi
    8fce:	66 90                	xchg   ax,ax
    8fd0:	b8 ff ff ff ff       	mov    eax,0xffffffff
    8fd5:	5b                   	pop    rbx
    8fd6:	5d                   	pop    rbp
    8fd7:	41 5c                	pop    r12
    8fd9:	c3                   	ret    
    8fda:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    8fe0:	8b 36                	mov    esi,DWORD PTR [rsi]
    8fe2:	83 fe 2f             	cmp    esi,0x2f
    8fe5:	77 51                	ja     9038 <check_conversion+0xa8>
    8fe7:	89 f7                	mov    edi,esi
    8fe9:	83 c6 08             	add    esi,0x8
    8fec:	48 03 79 10          	add    rdi,QWORD PTR [rcx+0x10]
    8ff0:	89 31                	mov    DWORD PTR [rcx],esi
    8ff2:	8b 55 04             	mov    edx,DWORD PTR [rbp+0x4]
    8ff5:	44 0f be 27          	movsx  r12d,BYTE PTR [rdi]
    8ff9:	85 d2                	test   edx,edx
    8ffb:	0f 84 27 02 00 00    	je     9228 <check_conversion+0x298>
    9001:	f6 45 00 02          	test   BYTE PTR [rbp+0x0],0x2
    9005:	0f 84 65 01 00 00    	je     9170 <check_conversion+0x1e0>
    900b:	be 01 00 00 00       	mov    esi,0x1
    9010:	44 89 e7             	mov    edi,r12d
    9013:	e8 58 0a 00 00       	call   9a70 <ft_putchar_fd>
    9018:	8b 55 04             	mov    edx,DWORD PTR [rbp+0x4]
    901b:	be 01 00 00 00       	mov    esi,0x1
    9020:	bf 20 00 00 00       	mov    edi,0x20
    9025:	89 c3                	mov    ebx,eax
    9027:	29 c2                	sub    edx,eax
    9029:	e8 02 08 00 00       	call   9830 <write_repeated_char>
    902e:	01 d8                	add    eax,ebx
    9030:	eb a3                	jmp    8fd5 <check_conversion+0x45>
    9032:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    9038:	48 8b 79 08          	mov    rdi,QWORD PTR [rcx+0x8]
    903c:	4c 8d 47 08          	lea    r8,[rdi+0x8]
    9040:	4c 89 41 08          	mov    QWORD PTR [rcx+0x8],r8
    9044:	eb ac                	jmp    8ff2 <check_conversion+0x62>
    9046:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    904d:	00 00 00 
    9050:	44 8b 11             	mov    r10d,DWORD PTR [rcx]
    9053:	41 83 fa 2f          	cmp    r10d,0x2f
    9057:	0f 87 b3 01 00 00    	ja     9210 <check_conversion+0x280>
    905d:	45 89 d3             	mov    r11d,r10d
    9060:	41 83 c2 08          	add    r10d,0x8
    9064:	4c 03 59 10          	add    r11,QWORD PTR [rcx+0x10]
    9068:	44 89 11             	mov    DWORD PTR [rcx],r10d
    906b:	41 8b 3b             	mov    edi,DWORD PTR [r11]
    906e:	5b                   	pop    rbx
    906f:	48 89 ee             	mov    rsi,rbp
    9072:	5d                   	pop    rbp
    9073:	41 5c                	pop    r12
    9075:	e9 46 02 00 00       	jmp    92c0 <format_conversion_d_i>
    907a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    9080:	44 8b 01             	mov    r8d,DWORD PTR [rcx]
    9083:	41 83 f8 2f          	cmp    r8d,0x2f
    9087:	0f 87 6b 01 00 00    	ja     91f8 <check_conversion+0x268>
    908d:	45 89 c1             	mov    r9d,r8d
    9090:	41 83 c0 08          	add    r8d,0x8
    9094:	4c 03 49 10          	add    r9,QWORD PTR [rcx+0x10]
    9098:	44 89 01             	mov    DWORD PTR [rcx],r8d
    909b:	41 8b 39             	mov    edi,DWORD PTR [r9]
    909e:	5b                   	pop    rbx
    909f:	48 89 ee             	mov    rsi,rbp
    90a2:	5d                   	pop    rbp
    90a3:	41 5c                	pop    r12
    90a5:	e9 96 02 00 00       	jmp    9340 <format_conversion_x>
    90aa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    90b0:	8b 01                	mov    eax,DWORD PTR [rcx]
    90b2:	83 f8 2f             	cmp    eax,0x2f
    90b5:	0f 87 25 01 00 00    	ja     91e0 <check_conversion+0x250>
    90bb:	89 c3                	mov    ebx,eax
    90bd:	83 c0 08             	add    eax,0x8
    90c0:	48 03 59 10          	add    rbx,QWORD PTR [rcx+0x10]
    90c4:	89 01                	mov    DWORD PTR [rcx],eax
    90c6:	8b 3b                	mov    edi,DWORD PTR [rbx]
    90c8:	48 89 ee             	mov    rsi,rbp
    90cb:	5b                   	pop    rbx
    90cc:	5d                   	pop    rbp
    90cd:	41 5c                	pop    r12
    90cf:	e9 ac 02 00 00       	jmp    9380 <format_conversion_upper_x>
    90d4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    90d8:	8b 19                	mov    ebx,DWORD PTR [rcx]
    90da:	83 fb 2f             	cmp    ebx,0x2f
    90dd:	0f 87 e5 00 00 00    	ja     91c8 <check_conversion+0x238>
    90e3:	89 da                	mov    edx,ebx
    90e5:	83 c3 08             	add    ebx,0x8
    90e8:	48 03 51 10          	add    rdx,QWORD PTR [rcx+0x10]
    90ec:	89 19                	mov    DWORD PTR [rcx],ebx
    90ee:	48 8b 3a             	mov    rdi,QWORD PTR [rdx]
    90f1:	5b                   	pop    rbx
    90f2:	48 89 ee             	mov    rsi,rbp
    90f5:	5d                   	pop    rbp
    90f6:	41 5c                	pop    r12
    90f8:	e9 43 fd ff ff       	jmp    8e40 <format_conversion_s>
    90fd:	0f 1f 00             	nop    DWORD PTR [rax]
    9100:	44 8b 19             	mov    r11d,DWORD PTR [rcx]
    9103:	41 83 fb 2f          	cmp    r11d,0x2f
    9107:	0f 87 a3 00 00 00    	ja     91b0 <check_conversion+0x220>
    910d:	45 89 dc             	mov    r12d,r11d
    9110:	41 83 c3 08          	add    r11d,0x8
    9114:	4c 03 61 10          	add    r12,QWORD PTR [rcx+0x10]
    9118:	44 89 19             	mov    DWORD PTR [rcx],r11d
    911b:	41 8b 3c 24          	mov    edi,DWORD PTR [r12]
    911f:	5b                   	pop    rbx
    9120:	48 89 ee             	mov    rsi,rbp
    9123:	5d                   	pop    rbp
    9124:	41 5c                	pop    r12
    9126:	e9 d5 01 00 00       	jmp    9300 <format_conversion_u>
    912b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    9130:	8b 39                	mov    edi,DWORD PTR [rcx]
    9132:	83 ff 2f             	cmp    edi,0x2f
    9135:	77 69                	ja     91a0 <check_conversion+0x210>
    9137:	41 89 f8             	mov    r8d,edi
    913a:	83 c7 08             	add    edi,0x8
    913d:	4c 03 41 10          	add    r8,QWORD PTR [rcx+0x10]
    9141:	89 39                	mov    DWORD PTR [rcx],edi
    9143:	49 8b 38             	mov    rdi,QWORD PTR [r8]
    9146:	5b                   	pop    rbx
    9147:	48 89 ee             	mov    rsi,rbp
    914a:	5d                   	pop    rbp
    914b:	41 5c                	pop    r12
    914d:	e9 0e 01 00 00       	jmp    9260 <format_conversion_p>
    9152:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    9158:	5b                   	pop    rbx
    9159:	be 01 00 00 00       	mov    esi,0x1
    915e:	5d                   	pop    rbp
    915f:	bf 25 00 00 00       	mov    edi,0x25
    9164:	41 5c                	pop    r12
    9166:	e9 05 09 00 00       	jmp    9a70 <ft_putchar_fd>
    916b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    9170:	83 ea 01             	sub    edx,0x1
    9173:	be 01 00 00 00       	mov    esi,0x1
    9178:	bf 20 00 00 00       	mov    edi,0x20
    917d:	e8 ae 06 00 00       	call   9830 <write_repeated_char>
    9182:	be 01 00 00 00       	mov    esi,0x1
    9187:	44 89 e7             	mov    edi,r12d
    918a:	89 c5                	mov    ebp,eax
    918c:	e8 df 08 00 00       	call   9a70 <ft_putchar_fd>
    9191:	01 e8                	add    eax,ebp
    9193:	e9 3d fe ff ff       	jmp    8fd5 <check_conversion+0x45>
    9198:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    919f:	00 
    91a0:	4c 8b 41 08          	mov    r8,QWORD PTR [rcx+0x8]
    91a4:	4d 8d 48 08          	lea    r9,[r8+0x8]
    91a8:	4c 89 49 08          	mov    QWORD PTR [rcx+0x8],r9
    91ac:	eb 95                	jmp    9143 <check_conversion+0x1b3>
    91ae:	66 90                	xchg   ax,ax
    91b0:	4c 8b 61 08          	mov    r12,QWORD PTR [rcx+0x8]
    91b4:	49 8d 44 24 08       	lea    rax,[r12+0x8]
    91b9:	48 89 41 08          	mov    QWORD PTR [rcx+0x8],rax
    91bd:	e9 59 ff ff ff       	jmp    911b <check_conversion+0x18b>
    91c2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    91c8:	48 8b 51 08          	mov    rdx,QWORD PTR [rcx+0x8]
    91cc:	48 8d 72 08          	lea    rsi,[rdx+0x8]
    91d0:	48 89 71 08          	mov    QWORD PTR [rcx+0x8],rsi
    91d4:	e9 15 ff ff ff       	jmp    90ee <check_conversion+0x15e>
    91d9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    91e0:	48 8b 59 08          	mov    rbx,QWORD PTR [rcx+0x8]
    91e4:	48 8d 53 08          	lea    rdx,[rbx+0x8]
    91e8:	48 89 51 08          	mov    QWORD PTR [rcx+0x8],rdx
    91ec:	e9 d5 fe ff ff       	jmp    90c6 <check_conversion+0x136>
    91f1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    91f8:	4c 8b 49 08          	mov    r9,QWORD PTR [rcx+0x8]
    91fc:	4d 8d 51 08          	lea    r10,[r9+0x8]
    9200:	4c 89 51 08          	mov    QWORD PTR [rcx+0x8],r10
    9204:	e9 92 fe ff ff       	jmp    909b <check_conversion+0x10b>
    9209:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    9210:	4c 8b 59 08          	mov    r11,QWORD PTR [rcx+0x8]
    9214:	4d 8d 63 08          	lea    r12,[r11+0x8]
    9218:	4c 89 61 08          	mov    QWORD PTR [rcx+0x8],r12
    921c:	e9 4a fe ff ff       	jmp    906b <check_conversion+0xdb>
    9221:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    9228:	5b                   	pop    rbx
    9229:	44 89 e7             	mov    edi,r12d
    922c:	5d                   	pop    rbp
    922d:	be 01 00 00 00       	mov    esi,0x1
    9232:	41 5c                	pop    r12
    9234:	e9 37 08 00 00       	jmp    9a70 <ft_putchar_fd>
    9239:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000009240 <format_conversion_percent>:
    9240:	f3 0f 1e fa          	endbr64 
    9244:	be 01 00 00 00       	mov    esi,0x1
    9249:	bf 25 00 00 00       	mov    edi,0x25
    924e:	e9 1d 08 00 00       	jmp    9a70 <ft_putchar_fd>
    9253:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    925a:	00 00 00 
    925d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000009260 <format_conversion_p>:
    9260:	f3 0f 1e fa          	endbr64 
    9264:	41 54                	push   r12
    9266:	55                   	push   rbp
    9267:	48 89 f5             	mov    rbp,rsi
    926a:	48 83 ec 28          	sub    rsp,0x28
    926e:	48 85 ff             	test   rdi,rdi
    9271:	74 2d                	je     92a0 <format_conversion_p+0x40>
    9273:	49 89 e4             	mov    r12,rsp
    9276:	48 89 fe             	mov    rsi,rdi
    9279:	48 8d 15 94 30 00 00 	lea    rdx,[rip+0x3094]        # c314 <CSWTCH.3+0x254>
    9280:	4c 89 e7             	mov    rdi,r12
    9283:	e8 48 01 00 00       	call   93d0 <sprint_long_hexa>
    9288:	80 4d 00 10          	or     BYTE PTR [rbp+0x0],0x10
    928c:	4c 89 e6             	mov    rsi,r12
    928f:	48 89 ef             	mov    rdi,rbp
    9292:	e8 e9 0e 00 00       	call   a180 <convert_digit>
    9297:	48 83 c4 28          	add    rsp,0x28
    929b:	5d                   	pop    rbp
    929c:	41 5c                	pop    r12
    929e:	c3                   	ret    
    929f:	90                   	nop
    92a0:	48 83 c4 28          	add    rsp,0x28
    92a4:	48 8d 3d dd 2f 00 00 	lea    rdi,[rip+0x2fdd]        # c288 <CSWTCH.3+0x1c8>
    92ab:	5d                   	pop    rbp
    92ac:	41 5c                	pop    r12
    92ae:	e9 8d fb ff ff       	jmp    8e40 <format_conversion_s>
    92b3:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    92ba:	00 00 00 00 
    92be:	66 90                	xchg   ax,ax

00000000000092c0 <format_conversion_d_i>:
    92c0:	f3 0f 1e fa          	endbr64 
    92c4:	41 54                	push   r12
    92c6:	41 89 f8             	mov    r8d,edi
    92c9:	55                   	push   rbp
    92ca:	48 89 f5             	mov    rbp,rsi
    92cd:	48 83 ec 18          	sub    rsp,0x18
    92d1:	85 ff                	test   edi,edi
    92d3:	79 03                	jns    92d8 <format_conversion_d_i+0x18>
    92d5:	80 0e 80             	or     BYTE PTR [rsi],0x80
    92d8:	80 65 00 ef          	and    BYTE PTR [rbp+0x0],0xef
    92dc:	4c 8d 64 24 04       	lea    r12,[rsp+0x4]
    92e1:	44 89 c6             	mov    esi,r8d
    92e4:	4c 89 e7             	mov    rdi,r12
    92e7:	e8 94 0a 00 00       	call   9d80 <sprint_abs_toa>
    92ec:	4c 89 e6             	mov    rsi,r12
    92ef:	48 89 ef             	mov    rdi,rbp
    92f2:	e8 89 0e 00 00       	call   a180 <convert_digit>
    92f7:	48 83 c4 18          	add    rsp,0x18
    92fb:	5d                   	pop    rbp
    92fc:	41 5c                	pop    r12
    92fe:	c3                   	ret    
    92ff:	90                   	nop

0000000000009300 <format_conversion_u>:
    9300:	f3 0f 1e fa          	endbr64 
    9304:	41 54                	push   r12
    9306:	55                   	push   rbp
    9307:	48 89 f5             	mov    rbp,rsi
    930a:	48 83 ec 18          	sub    rsp,0x18
    930e:	80 26 ea             	and    BYTE PTR [rsi],0xea
    9311:	89 fe                	mov    esi,edi
    9313:	4c 8d 64 24 04       	lea    r12,[rsp+0x4]
    9318:	4c 89 e7             	mov    rdi,r12
    931b:	e8 10 09 00 00       	call   9c30 <sprint_uitoa>
    9320:	4c 89 e6             	mov    rsi,r12
    9323:	48 89 ef             	mov    rdi,rbp
    9326:	e8 55 0e 00 00       	call   a180 <convert_digit>
    932b:	48 83 c4 18          	add    rsp,0x18
    932f:	5d                   	pop    rbp
    9330:	41 5c                	pop    r12
    9332:	c3                   	ret    
    9333:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    933a:	00 00 00 00 
    933e:	66 90                	xchg   ax,ax

0000000000009340 <format_conversion_x>:
    9340:	f3 0f 1e fa          	endbr64 
    9344:	41 54                	push   r12
    9346:	55                   	push   rbp
    9347:	48 89 f5             	mov    rbp,rsi
    934a:	48 83 ec 28          	sub    rsp,0x28
    934e:	85 ff                	test   edi,edi
    9350:	75 03                	jne    9355 <format_conversion_x+0x15>
    9352:	80 26 ef             	and    BYTE PTR [rsi],0xef
    9355:	80 65 00 fa          	and    BYTE PTR [rbp+0x0],0xfa
    9359:	49 89 e4             	mov    r12,rsp
    935c:	48 8d 15 b1 2f 00 00 	lea    rdx,[rip+0x2fb1]        # c314 <CSWTCH.3+0x254>
    9363:	89 fe                	mov    esi,edi
    9365:	4c 89 e7             	mov    rdi,r12
    9368:	e8 63 00 00 00       	call   93d0 <sprint_long_hexa>
    936d:	4c 89 e6             	mov    rsi,r12
    9370:	48 89 ef             	mov    rdi,rbp
    9373:	e8 08 0e 00 00       	call   a180 <convert_digit>
    9378:	48 83 c4 28          	add    rsp,0x28
    937c:	5d                   	pop    rbp
    937d:	41 5c                	pop    r12
    937f:	c3                   	ret    

0000000000009380 <format_conversion_upper_x>:
    9380:	f3 0f 1e fa          	endbr64 
    9384:	41 54                	push   r12
    9386:	55                   	push   rbp
    9387:	48 89 f5             	mov    rbp,rsi
    938a:	48 83 ec 28          	sub    rsp,0x28
    938e:	85 ff                	test   edi,edi
    9390:	75 03                	jne    9395 <format_conversion_upper_x+0x15>
    9392:	80 26 ef             	and    BYTE PTR [rsi],0xef
    9395:	0f b6 45 00          	movzx  eax,BYTE PTR [rbp+0x0]
    9399:	49 89 e4             	mov    r12,rsp
    939c:	89 fe                	mov    esi,edi
    939e:	48 8d 15 80 2f 00 00 	lea    rdx,[rip+0x2f80]        # c325 <CSWTCH.3+0x265>
    93a5:	4c 89 e7             	mov    rdi,r12
    93a8:	83 e0 ba             	and    eax,0xffffffba
    93ab:	83 c8 40             	or     eax,0x40
    93ae:	88 45 00             	mov    BYTE PTR [rbp+0x0],al
    93b1:	e8 1a 00 00 00       	call   93d0 <sprint_long_hexa>
    93b6:	4c 89 e6             	mov    rsi,r12
    93b9:	48 89 ef             	mov    rdi,rbp
    93bc:	e8 bf 0d 00 00       	call   a180 <convert_digit>
    93c1:	48 83 c4 28          	add    rsp,0x28
    93c5:	5d                   	pop    rbp
    93c6:	41 5c                	pop    r12
    93c8:	c3                   	ret    
    93c9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000093d0 <sprint_long_hexa>:
    93d0:	f3 0f 1e fa          	endbr64 
    93d4:	41 54                	push   r12
    93d6:	49 89 d4             	mov    r12,rdx
    93d9:	ba 11 00 00 00       	mov    edx,0x11
    93de:	55                   	push   rbp
    93df:	48 89 fd             	mov    rbp,rdi
    93e2:	53                   	push   rbx
    93e3:	48 89 f3             	mov    rbx,rsi
    93e6:	31 f6                	xor    esi,esi
    93e8:	e8 a3 c7 ff ff       	call   5b90 <ft_memset>
    93ed:	48 89 d8             	mov    rax,rbx
    93f0:	48 89 d9             	mov    rcx,rbx
    93f3:	48 c1 e8 3c          	shr    rax,0x3c
    93f7:	41 0f b6 14 04       	movzx  edx,BYTE PTR [r12+rax*1]
    93fc:	80 fa 30             	cmp    dl,0x30
    93ff:	88 55 00             	mov    BYTE PTR [rbp+0x0],dl
    9402:	0f 84 66 01 00 00    	je     956e <sprint_long_hexa+0x19e>
    9408:	48 c1 e9 38          	shr    rcx,0x38
    940c:	bf 01 00 00 00       	mov    edi,0x1
    9411:	83 e1 0f             	and    ecx,0xf
    9414:	41 0f b6 34 0c       	movzx  esi,BYTE PTR [r12+rcx*1]
    9419:	40 88 75 01          	mov    BYTE PTR [rbp+0x1],sil
    941d:	49 89 d9             	mov    r9,rbx
    9420:	48 8d 4f 01          	lea    rcx,[rdi+0x1]
    9424:	49 c1 e9 34          	shr    r9,0x34
    9428:	41 83 e1 0f          	and    r9d,0xf
    942c:	47 0f b6 14 0c       	movzx  r10d,BYTE PTR [r12+r9*1]
    9431:	44 88 54 3d 01       	mov    BYTE PTR [rbp+rdi*1+0x1],r10b
    9436:	48 89 de             	mov    rsi,rbx
    9439:	4c 8d 49 01          	lea    r9,[rcx+0x1]
    943d:	48 c1 ee 30          	shr    rsi,0x30
    9441:	83 e6 0f             	and    esi,0xf
    9444:	41 0f b6 3c 34       	movzx  edi,BYTE PTR [r12+rsi*1]
    9449:	40 88 7c 0d 01       	mov    BYTE PTR [rbp+rcx*1+0x1],dil
    944e:	49 89 da             	mov    r10,rbx
    9451:	49 8d 71 01          	lea    rsi,[r9+0x1]
    9455:	49 c1 ea 2c          	shr    r10,0x2c
    9459:	41 83 e2 0f          	and    r10d,0xf
    945d:	47 0f b6 1c 14       	movzx  r11d,BYTE PTR [r12+r10*1]
    9462:	46 88 5c 0d 01       	mov    BYTE PTR [rbp+r9*1+0x1],r11b
    9467:	48 89 df             	mov    rdi,rbx
    946a:	4c 8d 56 01          	lea    r10,[rsi+0x1]
    946e:	48 c1 ef 28          	shr    rdi,0x28
    9472:	83 e7 0f             	and    edi,0xf
    9475:	45 0f b6 04 3c       	movzx  r8d,BYTE PTR [r12+rdi*1]
    947a:	44 88 44 35 01       	mov    BYTE PTR [rbp+rsi*1+0x1],r8b
    947f:	49 89 db             	mov    r11,rbx
    9482:	49 8d 7a 01          	lea    rdi,[r10+0x1]
    9486:	49 c1 eb 24          	shr    r11,0x24
    948a:	41 83 e3 0f          	and    r11d,0xf
    948e:	43 0f b6 04 1c       	movzx  eax,BYTE PTR [r12+r11*1]
    9493:	42 88 44 15 01       	mov    BYTE PTR [rbp+r10*1+0x1],al
    9498:	49 89 d8             	mov    r8,rbx
    949b:	4c 8d 5f 01          	lea    r11,[rdi+0x1]
    949f:	49 c1 e8 20          	shr    r8,0x20
    94a3:	41 83 e0 0f          	and    r8d,0xf
    94a7:	47 0f b6 0c 04       	movzx  r9d,BYTE PTR [r12+r8*1]
    94ac:	44 88 4c 3d 01       	mov    BYTE PTR [rbp+rdi*1+0x1],r9b
    94b1:	48 89 d8             	mov    rax,rbx
    94b4:	4d 8d 43 01          	lea    r8,[r11+0x1]
    94b8:	48 c1 e8 1c          	shr    rax,0x1c
    94bc:	83 e0 0f             	and    eax,0xf
    94bf:	41 0f b6 34 04       	movzx  esi,BYTE PTR [r12+rax*1]
    94c4:	42 88 74 1d 01       	mov    BYTE PTR [rbp+r11*1+0x1],sil
    94c9:	49 89 d9             	mov    r9,rbx
    94cc:	49 8d 70 01          	lea    rsi,[r8+0x1]
    94d0:	49 c1 e9 18          	shr    r9,0x18
    94d4:	41 83 e1 0f          	and    r9d,0xf
    94d8:	47 0f b6 14 0c       	movzx  r10d,BYTE PTR [r12+r9*1]
    94dd:	46 88 54 05 01       	mov    BYTE PTR [rbp+r8*1+0x1],r10b
    94e2:	48 89 d8             	mov    rax,rbx
    94e5:	4c 8d 4e 01          	lea    r9,[rsi+0x1]
    94e9:	48 c1 e8 14          	shr    rax,0x14
    94ed:	83 e0 0f             	and    eax,0xf
    94f0:	41 0f b6 3c 04       	movzx  edi,BYTE PTR [r12+rax*1]
    94f5:	40 88 7c 35 01       	mov    BYTE PTR [rbp+rsi*1+0x1],dil
    94fa:	49 89 da             	mov    r10,rbx
    94fd:	49 8d 79 01          	lea    rdi,[r9+0x1]
    9501:	49 c1 ea 10          	shr    r10,0x10
    9505:	41 83 e2 0f          	and    r10d,0xf
    9509:	47 0f b6 1c 14       	movzx  r11d,BYTE PTR [r12+r10*1]
    950e:	46 88 5c 0d 01       	mov    BYTE PTR [rbp+r9*1+0x1],r11b
    9513:	48 89 d8             	mov    rax,rbx
    9516:	4c 8d 57 01          	lea    r10,[rdi+0x1]
    951a:	48 c1 e8 0c          	shr    rax,0xc
    951e:	83 e0 0f             	and    eax,0xf
    9521:	45 0f b6 04 04       	movzx  r8d,BYTE PTR [r12+rax*1]
    9526:	44 88 44 3d 01       	mov    BYTE PTR [rbp+rdi*1+0x1],r8b
    952b:	49 89 db             	mov    r11,rbx
    952e:	4d 8d 42 01          	lea    r8,[r10+0x1]
    9532:	49 c1 eb 08          	shr    r11,0x8
    9536:	41 83 e3 0f          	and    r11d,0xf
    953a:	43 0f b6 34 1c       	movzx  esi,BYTE PTR [r12+r11*1]
    953f:	42 88 74 15 01       	mov    BYTE PTR [rbp+r10*1+0x1],sil
    9544:	48 89 d8             	mov    rax,rbx
    9547:	4d 8d 58 01          	lea    r11,[r8+0x1]
    954b:	48 c1 e8 04          	shr    rax,0x4
    954f:	83 e0 0f             	and    eax,0xf
    9552:	45 0f b6 0c 04       	movzx  r9d,BYTE PTR [r12+rax*1]
    9557:	46 88 4c 05 01       	mov    BYTE PTR [rbp+r8*1+0x1],r9b
    955c:	83 e3 0f             	and    ebx,0xf
    955f:	41 0f b6 1c 1c       	movzx  ebx,BYTE PTR [r12+rbx*1]
    9564:	42 88 5c 1d 01       	mov    BYTE PTR [rbp+r11*1+0x1],bl
    9569:	5b                   	pop    rbx
    956a:	5d                   	pop    rbp
    956b:	41 5c                	pop    r12
    956d:	c3                   	ret    
    956e:	48 c1 e9 38          	shr    rcx,0x38
    9572:	83 e1 0f             	and    ecx,0xf
    9575:	45 0f b6 04 0c       	movzx  r8d,BYTE PTR [r12+rcx*1]
    957a:	44 88 45 00          	mov    BYTE PTR [rbp+0x0],r8b
    957e:	41 80 f8 30          	cmp    r8b,0x30
    9582:	0f 85 76 01 00 00    	jne    96fe <sprint_long_hexa+0x32e>
    9588:	49 89 db             	mov    r11,rbx
    958b:	49 c1 eb 34          	shr    r11,0x34
    958f:	41 83 e3 0f          	and    r11d,0xf
    9593:	43 0f b6 04 1c       	movzx  eax,BYTE PTR [r12+r11*1]
    9598:	88 45 00             	mov    BYTE PTR [rbp+0x0],al
    959b:	3c 30                	cmp    al,0x30
    959d:	0f 85 be 01 00 00    	jne    9761 <sprint_long_hexa+0x391>
    95a3:	48 89 da             	mov    rdx,rbx
    95a6:	48 c1 ea 30          	shr    rdx,0x30
    95aa:	83 e2 0f             	and    edx,0xf
    95ad:	45 0f b6 04 14       	movzx  r8d,BYTE PTR [r12+rdx*1]
    95b2:	44 88 45 00          	mov    BYTE PTR [rbp+0x0],r8b
    95b6:	41 80 f8 30          	cmp    r8b,0x30
    95ba:	0f 85 99 01 00 00    	jne    9759 <sprint_long_hexa+0x389>
    95c0:	48 89 d8             	mov    rax,rbx
    95c3:	48 c1 e8 2c          	shr    rax,0x2c
    95c7:	83 e0 0f             	and    eax,0xf
    95ca:	41 0f b6 0c 04       	movzx  ecx,BYTE PTR [r12+rax*1]
    95cf:	88 4d 00             	mov    BYTE PTR [rbp+0x0],cl
    95d2:	80 f9 30             	cmp    cl,0x30
    95d5:	0f 85 77 01 00 00    	jne    9752 <sprint_long_hexa+0x382>
    95db:	48 89 da             	mov    rdx,rbx
    95de:	48 c1 ea 28          	shr    rdx,0x28
    95e2:	83 e2 0f             	and    edx,0xf
    95e5:	45 0f b6 0c 14       	movzx  r9d,BYTE PTR [r12+rdx*1]
    95ea:	44 88 4d 00          	mov    BYTE PTR [rbp+0x0],r9b
    95ee:	41 80 f9 30          	cmp    r9b,0x30
    95f2:	0f 85 52 01 00 00    	jne    974a <sprint_long_hexa+0x37a>
    95f8:	48 89 d9             	mov    rcx,rbx
    95fb:	48 c1 e9 24          	shr    rcx,0x24
    95ff:	83 e1 0f             	and    ecx,0xf
    9602:	41 0f b6 34 0c       	movzx  esi,BYTE PTR [r12+rcx*1]
    9607:	40 88 75 00          	mov    BYTE PTR [rbp+0x0],sil
    960b:	40 80 fe 30          	cmp    sil,0x30
    960f:	0f 85 2e 01 00 00    	jne    9743 <sprint_long_hexa+0x373>
    9615:	48 89 da             	mov    rdx,rbx
    9618:	48 c1 ea 20          	shr    rdx,0x20
    961c:	83 e2 0f             	and    edx,0xf
    961f:	45 0f b6 14 14       	movzx  r10d,BYTE PTR [r12+rdx*1]
    9624:	44 88 55 00          	mov    BYTE PTR [rbp+0x0],r10b
    9628:	41 80 fa 30          	cmp    r10b,0x30
    962c:	0f 85 09 01 00 00    	jne    973b <sprint_long_hexa+0x36b>
    9632:	48 89 d9             	mov    rcx,rbx
    9635:	48 c1 e9 1c          	shr    rcx,0x1c
    9639:	83 e1 0f             	and    ecx,0xf
    963c:	41 0f b6 3c 0c       	movzx  edi,BYTE PTR [r12+rcx*1]
    9641:	40 88 7d 00          	mov    BYTE PTR [rbp+0x0],dil
    9645:	40 80 ff 30          	cmp    dil,0x30
    9649:	0f 85 e4 00 00 00    	jne    9733 <sprint_long_hexa+0x363>
    964f:	48 89 da             	mov    rdx,rbx
    9652:	48 c1 ea 18          	shr    rdx,0x18
    9656:	83 e2 0f             	and    edx,0xf
    9659:	45 0f b6 1c 14       	movzx  r11d,BYTE PTR [r12+rdx*1]
    965e:	44 88 5d 00          	mov    BYTE PTR [rbp+0x0],r11b
    9662:	41 80 fb 30          	cmp    r11b,0x30
    9666:	0f 85 c0 00 00 00    	jne    972c <sprint_long_hexa+0x35c>
    966c:	48 89 d9             	mov    rcx,rbx
    966f:	48 c1 e9 14          	shr    rcx,0x14
    9673:	83 e1 0f             	and    ecx,0xf
    9676:	45 0f b6 04 0c       	movzx  r8d,BYTE PTR [r12+rcx*1]
    967b:	44 88 45 00          	mov    BYTE PTR [rbp+0x0],r8b
    967f:	41 80 f8 30          	cmp    r8b,0x30
    9683:	0f 85 9b 00 00 00    	jne    9724 <sprint_long_hexa+0x354>
    9689:	48 89 da             	mov    rdx,rbx
    968c:	48 c1 ea 10          	shr    rdx,0x10
    9690:	83 e2 0f             	and    edx,0xf
    9693:	41 0f b6 34 14       	movzx  esi,BYTE PTR [r12+rdx*1]
    9698:	40 88 75 00          	mov    BYTE PTR [rbp+0x0],sil
    969c:	40 80 fe 30          	cmp    sil,0x30
    96a0:	75 7b                	jne    971d <sprint_long_hexa+0x34d>
    96a2:	48 89 d9             	mov    rcx,rbx
    96a5:	48 c1 e9 0c          	shr    rcx,0xc
    96a9:	83 e1 0f             	and    ecx,0xf
    96ac:	45 0f b6 0c 0c       	movzx  r9d,BYTE PTR [r12+rcx*1]
    96b1:	44 88 4d 00          	mov    BYTE PTR [rbp+0x0],r9b
    96b5:	41 80 f9 30          	cmp    r9b,0x30
    96b9:	75 5a                	jne    9715 <sprint_long_hexa+0x345>
    96bb:	48 89 da             	mov    rdx,rbx
    96be:	48 c1 ea 08          	shr    rdx,0x8
    96c2:	83 e2 0f             	and    edx,0xf
    96c5:	41 0f b6 3c 14       	movzx  edi,BYTE PTR [r12+rdx*1]
    96ca:	40 88 7d 00          	mov    BYTE PTR [rbp+0x0],dil
    96ce:	40 80 ff 30          	cmp    dil,0x30
    96d2:	75 39                	jne    970d <sprint_long_hexa+0x33d>
    96d4:	48 89 d9             	mov    rcx,rbx
    96d7:	48 c1 e9 04          	shr    rcx,0x4
    96db:	83 e1 0f             	and    ecx,0xf
    96de:	45 0f b6 14 0c       	movzx  r10d,BYTE PTR [r12+rcx*1]
    96e3:	44 88 55 00          	mov    BYTE PTR [rbp+0x0],r10b
    96e7:	41 80 fa 30          	cmp    r10b,0x30
    96eb:	75 18                	jne    9705 <sprint_long_hexa+0x335>
    96ed:	83 e3 0f             	and    ebx,0xf
    96f0:	45 0f b6 24 1c       	movzx  r12d,BYTE PTR [r12+rbx*1]
    96f5:	5b                   	pop    rbx
    96f6:	44 88 65 00          	mov    BYTE PTR [rbp+0x0],r12b
    96fa:	5d                   	pop    rbp
    96fb:	41 5c                	pop    r12
    96fd:	c3                   	ret    
    96fe:	31 ff                	xor    edi,edi
    9700:	e9 18 fd ff ff       	jmp    941d <sprint_long_hexa+0x4d>
    9705:	45 31 db             	xor    r11d,r11d
    9708:	e9 4f fe ff ff       	jmp    955c <sprint_long_hexa+0x18c>
    970d:	45 31 c0             	xor    r8d,r8d
    9710:	e9 2f fe ff ff       	jmp    9544 <sprint_long_hexa+0x174>
    9715:	45 31 d2             	xor    r10d,r10d
    9718:	e9 0e fe ff ff       	jmp    952b <sprint_long_hexa+0x15b>
    971d:	31 ff                	xor    edi,edi
    971f:	e9 ef fd ff ff       	jmp    9513 <sprint_long_hexa+0x143>
    9724:	45 31 c9             	xor    r9d,r9d
    9727:	e9 ce fd ff ff       	jmp    94fa <sprint_long_hexa+0x12a>
    972c:	31 f6                	xor    esi,esi
    972e:	e9 af fd ff ff       	jmp    94e2 <sprint_long_hexa+0x112>
    9733:	45 31 c0             	xor    r8d,r8d
    9736:	e9 8e fd ff ff       	jmp    94c9 <sprint_long_hexa+0xf9>
    973b:	45 31 db             	xor    r11d,r11d
    973e:	e9 6e fd ff ff       	jmp    94b1 <sprint_long_hexa+0xe1>
    9743:	31 ff                	xor    edi,edi
    9745:	e9 4e fd ff ff       	jmp    9498 <sprint_long_hexa+0xc8>
    974a:	45 31 d2             	xor    r10d,r10d
    974d:	e9 2d fd ff ff       	jmp    947f <sprint_long_hexa+0xaf>
    9752:	31 f6                	xor    esi,esi
    9754:	e9 0e fd ff ff       	jmp    9467 <sprint_long_hexa+0x97>
    9759:	45 31 c9             	xor    r9d,r9d
    975c:	e9 ed fc ff ff       	jmp    944e <sprint_long_hexa+0x7e>
    9761:	31 c9                	xor    ecx,ecx
    9763:	e9 ce fc ff ff       	jmp    9436 <sprint_long_hexa+0x66>
    9768:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    976f:	00 

0000000000009770 <get_ascii_digit>:
    9770:	f3 0f 1e fa          	endbr64 
    9774:	0f b6 07             	movzx  eax,BYTE PTR [rdi]
    9777:	3c 2d                	cmp    al,0x2d
    9779:	74 3d                	je     97b8 <get_ascii_digit+0x48>
    977b:	41 b8 01 00 00 00    	mov    r8d,0x1
    9781:	3c 30                	cmp    al,0x30
    9783:	74 2a                	je     97af <get_ascii_digit+0x3f>
    9785:	45 31 c0             	xor    r8d,r8d
    9788:	84 c0                	test   al,al
    978a:	74 23                	je     97af <get_ascii_digit+0x3f>
    978c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    9790:	8d 50 d0             	lea    edx,[rax-0x30]
    9793:	80 fa 09             	cmp    dl,0x9
    9796:	76 0a                	jbe    97a2 <get_ascii_digit+0x32>
    9798:	83 e0 df             	and    eax,0xffffffdf
    979b:	83 e8 41             	sub    eax,0x41
    979e:	3c 19                	cmp    al,0x19
    97a0:	77 0d                	ja     97af <get_ascii_digit+0x3f>
    97a2:	49 83 c0 01          	add    r8,0x1
    97a6:	42 0f b6 04 07       	movzx  eax,BYTE PTR [rdi+r8*1]
    97ab:	84 c0                	test   al,al
    97ad:	75 e1                	jne    9790 <get_ascii_digit+0x20>
    97af:	4c 89 c0             	mov    rax,r8
    97b2:	c3                   	ret    
    97b3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    97b8:	0f b6 47 01          	movzx  eax,BYTE PTR [rdi+0x1]
    97bc:	48 83 c7 01          	add    rdi,0x1
    97c0:	eb c3                	jmp    9785 <get_ascii_digit+0x15>
    97c2:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    97c9:	00 00 00 
    97cc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000000097d0 <print_strn_fd>:
    97d0:	f3 0f 1e fa          	endbr64 
    97d4:	41 55                	push   r13
    97d6:	41 54                	push   r12
    97d8:	41 89 f4             	mov    r12d,esi
    97db:	55                   	push   rbp
    97dc:	48 89 fd             	mov    rbp,rdi
    97df:	53                   	push   rbx
    97e0:	89 d3                	mov    ebx,edx
    97e2:	48 83 ec 08          	sub    rsp,0x8
    97e6:	e8 75 c3 ff ff       	call   5b60 <ft_strlen>
    97eb:	39 d8                	cmp    eax,ebx
    97ed:	7f 21                	jg     9810 <print_strn_fd+0x40>
    97ef:	44 89 e6             	mov    esi,r12d
    97f2:	48 89 ef             	mov    rdi,rbp
    97f5:	41 89 c5             	mov    r13d,eax
    97f8:	e8 a3 ee ff ff       	call   86a0 <ft_putstr_fd>
    97fd:	48 83 c4 08          	add    rsp,0x8
    9801:	44 89 e8             	mov    eax,r13d
    9804:	5b                   	pop    rbx
    9805:	5d                   	pop    rbp
    9806:	41 5c                	pop    r12
    9808:	41 5d                	pop    r13
    980a:	c3                   	ret    
    980b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    9810:	48 63 d3             	movsxd rdx,ebx
    9813:	48 89 ee             	mov    rsi,rbp
    9816:	44 89 e7             	mov    edi,r12d
    9819:	e8 c2 8f ff ff       	call   27e0 <write@plt>
    981e:	48 83 c4 08          	add    rsp,0x8
    9822:	41 89 c5             	mov    r13d,eax
    9825:	5b                   	pop    rbx
    9826:	5d                   	pop    rbp
    9827:	44 89 e8             	mov    eax,r13d
    982a:	41 5c                	pop    r12
    982c:	41 5d                	pop    r13
    982e:	c3                   	ret    
    982f:	90                   	nop

0000000000009830 <write_repeated_char>:
    9830:	f3 0f 1e fa          	endbr64 
    9834:	41 57                	push   r15
    9836:	45 31 ff             	xor    r15d,r15d
    9839:	41 56                	push   r14
    983b:	41 55                	push   r13
    983d:	41 54                	push   r12
    983f:	55                   	push   rbp
    9840:	53                   	push   rbx
    9841:	48 81 ec 18 04 00 00 	sub    rsp,0x418
    9848:	85 d2                	test   edx,edx
    984a:	0f 8e b9 00 00 00    	jle    9909 <write_repeated_char+0xd9>
    9850:	4c 8d 6c 24 10       	lea    r13,[rsp+0x10]
    9855:	89 d5                	mov    ebp,edx
    9857:	41 89 f4             	mov    r12d,esi
    985a:	ba 00 04 00 00       	mov    edx,0x400
    985f:	40 0f be f7          	movsx  esi,dil
    9863:	4c 89 ef             	mov    rdi,r13
    9866:	31 db                	xor    ebx,ebx
    9868:	4c 63 f5             	movsxd r14,ebp
    986b:	e8 20 c3 ff ff       	call   5b90 <ft_memset>
    9870:	8d 45 ff             	lea    eax,[rbp-0x1]
    9873:	25 00 fc ff ff       	and    eax,0xfffffc00
    9878:	8d 88 00 04 00 00    	lea    ecx,[rax+0x400]
    987e:	c1 e8 0a             	shr    eax,0xa
    9881:	83 c0 01             	add    eax,0x1
    9884:	89 4c 24 0c          	mov    DWORD PTR [rsp+0xc],ecx
    9888:	83 e0 03             	and    eax,0x3
    988b:	0f 84 0f 01 00 00    	je     99a0 <write_repeated_char+0x170>
    9891:	83 f8 01             	cmp    eax,0x1
    9894:	74 4a                	je     98e0 <write_repeated_char+0xb0>
    9896:	83 f8 02             	cmp    eax,0x2
    9899:	74 24                	je     98bf <write_repeated_char+0x8f>
    989b:	bb 00 04 00 00       	mov    ebx,0x400
    98a0:	81 fd 00 04 00 00    	cmp    ebp,0x400
    98a6:	0f 8c 80 01 00 00    	jl     9a2c <write_repeated_char+0x1fc>
    98ac:	ba 00 04 00 00       	mov    edx,0x400
    98b1:	4c 89 ee             	mov    rsi,r13
    98b4:	44 89 e7             	mov    edi,r12d
    98b7:	e8 24 8f ff ff       	call   27e0 <write@plt>
    98bc:	41 89 c7             	mov    r15d,eax
    98bf:	81 c3 00 04 00 00    	add    ebx,0x400
    98c5:	39 dd                	cmp    ebp,ebx
    98c7:	0f 8c 3b 01 00 00    	jl     9a08 <write_repeated_char+0x1d8>
    98cd:	ba 00 04 00 00       	mov    edx,0x400
    98d2:	4c 89 ee             	mov    rsi,r13
    98d5:	44 89 e7             	mov    edi,r12d
    98d8:	e8 03 8f ff ff       	call   27e0 <write@plt>
    98dd:	41 01 c7             	add    r15d,eax
    98e0:	81 c3 00 04 00 00    	add    ebx,0x400
    98e6:	39 dd                	cmp    ebp,ebx
    98e8:	0f 8d 95 00 00 00    	jge    9983 <write_repeated_char+0x153>
    98ee:	4c 89 f2             	mov    rdx,r14
    98f1:	4c 89 ee             	mov    rsi,r13
    98f4:	44 89 e7             	mov    edi,r12d
    98f7:	e8 e4 8e ff ff       	call   27e0 <write@plt>
    98fc:	41 01 c7             	add    r15d,eax
    98ff:	3b 5c 24 0c          	cmp    ebx,DWORD PTR [rsp+0xc]
    9903:	0f 85 97 00 00 00    	jne    99a0 <write_repeated_char+0x170>
    9909:	48 81 c4 18 04 00 00 	add    rsp,0x418
    9910:	44 89 f8             	mov    eax,r15d
    9913:	5b                   	pop    rbx
    9914:	5d                   	pop    rbp
    9915:	41 5c                	pop    r12
    9917:	41 5d                	pop    r13
    9919:	41 5e                	pop    r14
    991b:	41 5f                	pop    r15
    991d:	c3                   	ret    
    991e:	66 90                	xchg   ax,ax
    9920:	ba 00 04 00 00       	mov    edx,0x400
    9925:	4c 89 ee             	mov    rsi,r13
    9928:	44 89 e7             	mov    edi,r12d
    992b:	e8 b0 8e ff ff       	call   27e0 <write@plt>
    9930:	8d 93 00 04 00 00    	lea    edx,[rbx+0x400]
    9936:	41 01 c7             	add    r15d,eax
    9939:	39 d5                	cmp    ebp,edx
    993b:	0f 8c 8c 00 00 00    	jl     99cd <write_repeated_char+0x19d>
    9941:	4c 89 ee             	mov    rsi,r13
    9944:	ba 00 04 00 00       	mov    edx,0x400
    9949:	44 89 e7             	mov    edi,r12d
    994c:	e8 8f 8e ff ff       	call   27e0 <write@plt>
    9951:	8d b3 00 08 00 00    	lea    esi,[rbx+0x800]
    9957:	41 01 c7             	add    r15d,eax
    995a:	39 f5                	cmp    ebp,esi
    995c:	0f 8c 8a 00 00 00    	jl     99ec <write_repeated_char+0x1bc>
    9962:	ba 00 04 00 00       	mov    edx,0x400
    9967:	4c 89 ee             	mov    rsi,r13
    996a:	44 89 e7             	mov    edi,r12d
    996d:	e8 6e 8e ff ff       	call   27e0 <write@plt>
    9972:	41 01 c7             	add    r15d,eax
    9975:	81 c3 00 0c 00 00    	add    ebx,0xc00
    997b:	39 dd                	cmp    ebp,ebx
    997d:	0f 8c 6b ff ff ff    	jl     98ee <write_repeated_char+0xbe>
    9983:	ba 00 04 00 00       	mov    edx,0x400
    9988:	4c 89 ee             	mov    rsi,r13
    998b:	44 89 e7             	mov    edi,r12d
    998e:	e8 4d 8e ff ff       	call   27e0 <write@plt>
    9993:	41 01 c7             	add    r15d,eax
    9996:	3b 5c 24 0c          	cmp    ebx,DWORD PTR [rsp+0xc]
    999a:	0f 84 69 ff ff ff    	je     9909 <write_repeated_char+0xd9>
    99a0:	81 c3 00 04 00 00    	add    ebx,0x400
    99a6:	39 dd                	cmp    ebp,ebx
    99a8:	0f 8d 72 ff ff ff    	jge    9920 <write_repeated_char+0xf0>
    99ae:	4c 89 f2             	mov    rdx,r14
    99b1:	4c 89 ee             	mov    rsi,r13
    99b4:	44 89 e7             	mov    edi,r12d
    99b7:	e8 24 8e ff ff       	call   27e0 <write@plt>
    99bc:	8d 93 00 04 00 00    	lea    edx,[rbx+0x400]
    99c2:	41 01 c7             	add    r15d,eax
    99c5:	39 d5                	cmp    ebp,edx
    99c7:	0f 8d 74 ff ff ff    	jge    9941 <write_repeated_char+0x111>
    99cd:	4c 89 ee             	mov    rsi,r13
    99d0:	4c 89 f2             	mov    rdx,r14
    99d3:	44 89 e7             	mov    edi,r12d
    99d6:	e8 05 8e ff ff       	call   27e0 <write@plt>
    99db:	8d b3 00 08 00 00    	lea    esi,[rbx+0x800]
    99e1:	41 01 c7             	add    r15d,eax
    99e4:	39 f5                	cmp    ebp,esi
    99e6:	0f 8d 76 ff ff ff    	jge    9962 <write_repeated_char+0x132>
    99ec:	4c 89 f2             	mov    rdx,r14
    99ef:	4c 89 ee             	mov    rsi,r13
    99f2:	44 89 e7             	mov    edi,r12d
    99f5:	e8 e6 8d ff ff       	call   27e0 <write@plt>
    99fa:	41 01 c7             	add    r15d,eax
    99fd:	e9 73 ff ff ff       	jmp    9975 <write_repeated_char+0x145>
    9a02:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    9a08:	4c 89 f2             	mov    rdx,r14
    9a0b:	4c 89 ee             	mov    rsi,r13
    9a0e:	44 89 e7             	mov    edi,r12d
    9a11:	81 c3 00 04 00 00    	add    ebx,0x400
    9a17:	e8 c4 8d ff ff       	call   27e0 <write@plt>
    9a1c:	41 01 c7             	add    r15d,eax
    9a1f:	39 dd                	cmp    ebp,ebx
    9a21:	0f 8d 5c ff ff ff    	jge    9983 <write_repeated_char+0x153>
    9a27:	e9 c2 fe ff ff       	jmp    98ee <write_repeated_char+0xbe>
    9a2c:	4c 89 f2             	mov    rdx,r14
    9a2f:	4c 89 ee             	mov    rsi,r13
    9a32:	44 89 e7             	mov    edi,r12d
    9a35:	e8 a6 8d ff ff       	call   27e0 <write@plt>
    9a3a:	41 89 c7             	mov    r15d,eax
    9a3d:	e9 7d fe ff ff       	jmp    98bf <write_repeated_char+0x8f>
    9a42:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    9a49:	00 00 00 
    9a4c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000009a50 <ft_assert>:
    9a50:	f3 0f 1e fa          	endbr64 
    9a54:	41 89 f8             	mov    r8d,edi
    9a57:	48 89 f7             	mov    rdi,rsi
    9a5a:	45 84 c0             	test   r8b,r8b
    9a5d:	74 01                	je     9a60 <ft_assert+0x10>
    9a5f:	c3                   	ret    
    9a60:	be 02 00 00 00       	mov    esi,0x2
    9a65:	e9 66 ec ff ff       	jmp    86d0 <ft_putendl_fd>
    9a6a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000009a70 <ft_putchar_fd>:
    9a70:	f3 0f 1e fa          	endbr64 
    9a74:	48 83 ec 18          	sub    rsp,0x18
    9a78:	41 89 f8             	mov    r8d,edi
    9a7b:	ba 01 00 00 00       	mov    edx,0x1
    9a80:	89 f7                	mov    edi,esi
    9a82:	48 8d 74 24 0c       	lea    rsi,[rsp+0xc]
    9a87:	44 88 44 24 0c       	mov    BYTE PTR [rsp+0xc],r8b
    9a8c:	e8 4f 8d ff ff       	call   27e0 <write@plt>
    9a91:	48 83 c4 18          	add    rsp,0x18
    9a95:	c3                   	ret    
    9a96:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    9a9d:	00 00 00 

0000000000009aa0 <sprint_itoa>:
    9aa0:	f3 0f 1e fa          	endbr64 
    9aa4:	55                   	push   rbp
    9aa5:	53                   	push   rbx
    9aa6:	48 89 fb             	mov    rbx,rdi
    9aa9:	48 83 ec 08          	sub    rsp,0x8
    9aad:	85 f6                	test   esi,esi
    9aaf:	0f 84 3b 01 00 00    	je     9bf0 <sprint_itoa+0x150>
    9ab5:	89 f5                	mov    ebp,esi
    9ab7:	0f 88 23 01 00 00    	js     9be0 <sprint_itoa+0x140>
    9abd:	48 63 fd             	movsxd rdi,ebp
    9ac0:	e8 8b eb ff ff       	call   8650 <get_digit>
    9ac5:	89 e9                	mov    ecx,ebp
    9ac7:	f7 d9                	neg    ecx
    9ac9:	48 8d 34 03          	lea    rsi,[rbx+rax*1]
    9acd:	0f 48 cd             	cmovs  ecx,ebp
    9ad0:	c6 06 00             	mov    BYTE PTR [rsi],0x0
    9ad3:	41 89 cb             	mov    r11d,ecx
    9ad6:	48 39 f3             	cmp    rbx,rsi
    9ad9:	0f 83 f9 00 00 00    	jae    9bd8 <sprint_itoa+0x138>
    9adf:	49 b8 cd cc cc cc cc 	movabs r8,0xcccccccccccccccd
    9ae6:	cc cc cc 
    9ae9:	48 89 f0             	mov    rax,rsi
    9aec:	48 29 d8             	sub    rax,rbx
    9aef:	83 e0 03             	and    eax,0x3
    9af2:	74 5d                	je     9b51 <sprint_itoa+0xb1>
    9af4:	48 83 f8 01          	cmp    rax,0x1
    9af8:	74 2c                	je     9b26 <sprint_itoa+0x86>
    9afa:	48 83 f8 02          	cmp    rax,0x2
    9afe:	0f 85 fc 00 00 00    	jne    9c00 <sprint_itoa+0x160>
    9b04:	4c 89 d8             	mov    rax,r11
    9b07:	48 83 ee 01          	sub    rsi,0x1
    9b0b:	49 f7 e0             	mul    r8
    9b0e:	48 c1 ea 03          	shr    rdx,0x3
    9b12:	4c 8d 0c 92          	lea    r9,[rdx+rdx*4]
    9b16:	4d 01 c9             	add    r9,r9
    9b19:	4d 29 cb             	sub    r11,r9
    9b1c:	41 83 c3 30          	add    r11d,0x30
    9b20:	44 88 1e             	mov    BYTE PTR [rsi],r11b
    9b23:	49 89 d3             	mov    r11,rdx
    9b26:	4c 89 d8             	mov    rax,r11
    9b29:	48 83 ee 01          	sub    rsi,0x1
    9b2d:	49 f7 e0             	mul    r8
    9b30:	48 c1 ea 03          	shr    rdx,0x3
    9b34:	4c 8d 14 92          	lea    r10,[rdx+rdx*4]
    9b38:	4d 01 d2             	add    r10,r10
    9b3b:	4d 29 d3             	sub    r11,r10
    9b3e:	41 83 c3 30          	add    r11d,0x30
    9b42:	44 88 1e             	mov    BYTE PTR [rsi],r11b
    9b45:	49 89 d3             	mov    r11,rdx
    9b48:	48 39 f3             	cmp    rbx,rsi
    9b4b:	0f 84 87 00 00 00    	je     9bd8 <sprint_itoa+0x138>
    9b51:	4c 89 d8             	mov    rax,r11
    9b54:	48 83 ee 04          	sub    rsi,0x4
    9b58:	49 f7 e0             	mul    r8
    9b5b:	48 c1 ea 03          	shr    rdx,0x3
    9b5f:	48 89 d0             	mov    rax,rdx
    9b62:	48 89 d5             	mov    rbp,rdx
    9b65:	48 8d 0c 92          	lea    rcx,[rdx+rdx*4]
    9b69:	49 f7 e0             	mul    r8
    9b6c:	48 01 c9             	add    rcx,rcx
    9b6f:	49 29 cb             	sub    r11,rcx
    9b72:	41 83 c3 30          	add    r11d,0x30
    9b76:	48 c1 ea 03          	shr    rdx,0x3
    9b7a:	44 88 5e 03          	mov    BYTE PTR [rsi+0x3],r11b
    9b7e:	48 89 d0             	mov    rax,rdx
    9b81:	49 89 d1             	mov    r9,rdx
    9b84:	48 8d 3c 92          	lea    rdi,[rdx+rdx*4]
    9b88:	49 f7 e0             	mul    r8
    9b8b:	48 01 ff             	add    rdi,rdi
    9b8e:	48 29 fd             	sub    rbp,rdi
    9b91:	83 c5 30             	add    ebp,0x30
    9b94:	48 c1 ea 03          	shr    rdx,0x3
    9b98:	40 88 6e 02          	mov    BYTE PTR [rsi+0x2],bpl
    9b9c:	48 89 d0             	mov    rax,rdx
    9b9f:	49 89 d2             	mov    r10,rdx
    9ba2:	4c 8d 1c 92          	lea    r11,[rdx+rdx*4]
    9ba6:	49 f7 e0             	mul    r8
    9ba9:	4d 01 db             	add    r11,r11
    9bac:	4d 29 d9             	sub    r9,r11
    9baf:	41 83 c1 30          	add    r9d,0x30
    9bb3:	49 89 d3             	mov    r11,rdx
    9bb6:	44 88 4e 01          	mov    BYTE PTR [rsi+0x1],r9b
    9bba:	49 c1 eb 03          	shr    r11,0x3
    9bbe:	4b 8d 2c 9b          	lea    rbp,[r11+r11*4]
    9bc2:	48 01 ed             	add    rbp,rbp
    9bc5:	49 29 ea             	sub    r10,rbp
    9bc8:	41 83 c2 30          	add    r10d,0x30
    9bcc:	44 88 16             	mov    BYTE PTR [rsi],r10b
    9bcf:	48 39 f3             	cmp    rbx,rsi
    9bd2:	0f 85 79 ff ff ff    	jne    9b51 <sprint_itoa+0xb1>
    9bd8:	48 83 c4 08          	add    rsp,0x8
    9bdc:	5b                   	pop    rbx
    9bdd:	5d                   	pop    rbp
    9bde:	c3                   	ret    
    9bdf:	90                   	nop
    9be0:	c6 07 2d             	mov    BYTE PTR [rdi],0x2d
    9be3:	48 83 c3 01          	add    rbx,0x1
    9be7:	e9 d1 fe ff ff       	jmp    9abd <sprint_itoa+0x1d>
    9bec:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    9bf0:	be 30 00 00 00       	mov    esi,0x30
    9bf5:	66 89 37             	mov    WORD PTR [rdi],si
    9bf8:	48 83 c4 08          	add    rsp,0x8
    9bfc:	5b                   	pop    rbx
    9bfd:	5d                   	pop    rbp
    9bfe:	c3                   	ret    
    9bff:	90                   	nop
    9c00:	4c 89 d8             	mov    rax,r11
    9c03:	48 83 ee 01          	sub    rsi,0x1
    9c07:	49 f7 e0             	mul    r8
    9c0a:	48 c1 ea 03          	shr    rdx,0x3
    9c0e:	48 8d 3c 92          	lea    rdi,[rdx+rdx*4]
    9c12:	48 01 ff             	add    rdi,rdi
    9c15:	49 29 fb             	sub    r11,rdi
    9c18:	41 83 c3 30          	add    r11d,0x30
    9c1c:	44 88 1e             	mov    BYTE PTR [rsi],r11b
    9c1f:	49 89 d3             	mov    r11,rdx
    9c22:	e9 dd fe ff ff       	jmp    9b04 <sprint_itoa+0x64>
    9c27:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    9c2e:	00 00 

0000000000009c30 <sprint_uitoa>:
    9c30:	f3 0f 1e fa          	endbr64 
    9c34:	41 54                	push   r12
    9c36:	49 89 fc             	mov    r12,rdi
    9c39:	55                   	push   rbp
    9c3a:	89 f5                	mov    ebp,esi
    9c3c:	53                   	push   rbx
    9c3d:	48 89 ef             	mov    rdi,rbp
    9c40:	e8 0b ea ff ff       	call   8650 <get_digit>
    9c45:	85 ed                	test   ebp,ebp
    9c47:	0f 84 23 01 00 00    	je     9d70 <sprint_uitoa+0x140>
    9c4d:	49 8d 14 04          	lea    rdx,[r12+rax*1]
    9c51:	c6 02 00             	mov    BYTE PTR [rdx],0x0
    9c54:	49 39 d4             	cmp    r12,rdx
    9c57:	0f 83 0b 01 00 00    	jae    9d68 <sprint_uitoa+0x138>
    9c5d:	4c 89 e0             	mov    rax,r12
    9c60:	48 89 eb             	mov    rbx,rbp
    9c63:	b9 cd cc cc cc       	mov    ecx,0xcccccccd
    9c68:	48 f7 d0             	not    rax
    9c6b:	48 01 d0             	add    rax,rdx
    9c6e:	83 e0 03             	and    eax,0x3
    9c71:	0f 84 cf 00 00 00    	je     9d46 <sprint_uitoa+0x116>
    9c77:	48 0f af e9          	imul   rbp,rcx
    9c7b:	48 83 ea 01          	sub    rdx,0x1
    9c7f:	48 c1 ed 23          	shr    rbp,0x23
    9c83:	8d 74 ad 00          	lea    esi,[rbp+rbp*4+0x0]
    9c87:	89 ed                	mov    ebp,ebp
    9c89:	01 f6                	add    esi,esi
    9c8b:	29 f3                	sub    ebx,esi
    9c8d:	83 c3 30             	add    ebx,0x30
    9c90:	88 1a                	mov    BYTE PTR [rdx],bl
    9c92:	48 89 eb             	mov    rbx,rbp
    9c95:	48 83 f8 01          	cmp    rax,0x1
    9c99:	0f 84 a7 00 00 00    	je     9d46 <sprint_uitoa+0x116>
    9c9f:	48 83 f8 02          	cmp    rax,0x2
    9ca3:	74 1e                	je     9cc3 <sprint_uitoa+0x93>
    9ca5:	48 0f af e9          	imul   rbp,rcx
    9ca9:	48 83 ea 01          	sub    rdx,0x1
    9cad:	48 c1 ed 23          	shr    rbp,0x23
    9cb1:	8d 7c ad 00          	lea    edi,[rbp+rbp*4+0x0]
    9cb5:	89 ed                	mov    ebp,ebp
    9cb7:	01 ff                	add    edi,edi
    9cb9:	29 fb                	sub    ebx,edi
    9cbb:	83 c3 30             	add    ebx,0x30
    9cbe:	88 1a                	mov    BYTE PTR [rdx],bl
    9cc0:	48 89 eb             	mov    rbx,rbp
    9cc3:	48 0f af e9          	imul   rbp,rcx
    9cc7:	48 83 ea 01          	sub    rdx,0x1
    9ccb:	48 c1 ed 23          	shr    rbp,0x23
    9ccf:	44 8d 44 ad 00       	lea    r8d,[rbp+rbp*4+0x0]
    9cd4:	89 ed                	mov    ebp,ebp
    9cd6:	45 01 c0             	add    r8d,r8d
    9cd9:	44 29 c3             	sub    ebx,r8d
    9cdc:	83 c3 30             	add    ebx,0x30
    9cdf:	88 1a                	mov    BYTE PTR [rdx],bl
    9ce1:	48 89 eb             	mov    rbx,rbp
    9ce4:	eb 60                	jmp    9d46 <sprint_uitoa+0x116>
    9ce6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    9ced:	00 00 00 
    9cf0:	41 89 eb             	mov    r11d,ebp
    9cf3:	48 83 ea 04          	sub    rdx,0x4
    9cf7:	4c 0f af d9          	imul   r11,rcx
    9cfb:	49 c1 eb 23          	shr    r11,0x23
    9cff:	45 89 d8             	mov    r8d,r11d
    9d02:	43 8d 04 9b          	lea    eax,[r11+r11*4]
    9d06:	4c 0f af c1          	imul   r8,rcx
    9d0a:	01 c0                	add    eax,eax
    9d0c:	29 c5                	sub    ebp,eax
    9d0e:	83 c5 30             	add    ebp,0x30
    9d11:	49 c1 e8 23          	shr    r8,0x23
    9d15:	40 88 6a 02          	mov    BYTE PTR [rdx+0x2],bpl
    9d19:	44 89 c3             	mov    ebx,r8d
    9d1c:	43 8d 34 80          	lea    esi,[r8+r8*4]
    9d20:	48 0f af d9          	imul   rbx,rcx
    9d24:	01 f6                	add    esi,esi
    9d26:	41 29 f3             	sub    r11d,esi
    9d29:	41 83 c3 30          	add    r11d,0x30
    9d2d:	48 c1 eb 23          	shr    rbx,0x23
    9d31:	44 88 5a 01          	mov    BYTE PTR [rdx+0x1],r11b
    9d35:	8d 3c 9b             	lea    edi,[rbx+rbx*4]
    9d38:	89 dd                	mov    ebp,ebx
    9d3a:	01 ff                	add    edi,edi
    9d3c:	41 29 f8             	sub    r8d,edi
    9d3f:	41 83 c0 30          	add    r8d,0x30
    9d43:	44 88 02             	mov    BYTE PTR [rdx],r8b
    9d46:	48 0f af e9          	imul   rbp,rcx
    9d4a:	4c 8d 4a ff          	lea    r9,[rdx-0x1]
    9d4e:	48 c1 ed 23          	shr    rbp,0x23
    9d52:	44 8d 54 ad 00       	lea    r10d,[rbp+rbp*4+0x0]
    9d57:	45 01 d2             	add    r10d,r10d
    9d5a:	44 29 d3             	sub    ebx,r10d
    9d5d:	83 c3 30             	add    ebx,0x30
    9d60:	88 5a ff             	mov    BYTE PTR [rdx-0x1],bl
    9d63:	4d 39 cc             	cmp    r12,r9
    9d66:	75 88                	jne    9cf0 <sprint_uitoa+0xc0>
    9d68:	5b                   	pop    rbx
    9d69:	5d                   	pop    rbp
    9d6a:	41 5c                	pop    r12
    9d6c:	c3                   	ret    
    9d6d:	0f 1f 00             	nop    DWORD PTR [rax]
    9d70:	ba 30 00 00 00       	mov    edx,0x30
    9d75:	5b                   	pop    rbx
    9d76:	5d                   	pop    rbp
    9d77:	66 41 89 14 24       	mov    WORD PTR [r12],dx
    9d7c:	41 5c                	pop    r12
    9d7e:	c3                   	ret    
    9d7f:	90                   	nop

0000000000009d80 <sprint_abs_toa>:
    9d80:	f3 0f 1e fa          	endbr64 
    9d84:	55                   	push   rbp
    9d85:	53                   	push   rbx
    9d86:	48 89 fb             	mov    rbx,rdi
    9d89:	48 63 fe             	movsxd rdi,esi
    9d8c:	48 89 fd             	mov    rbp,rdi
    9d8f:	48 83 ec 08          	sub    rsp,0x8
    9d93:	e8 b8 e8 ff ff       	call   8650 <get_digit>
    9d98:	85 ed                	test   ebp,ebp
    9d9a:	0f 84 20 01 00 00    	je     9ec0 <sprint_abs_toa+0x140>
    9da0:	89 e9                	mov    ecx,ebp
    9da2:	48 8d 34 03          	lea    rsi,[rbx+rax*1]
    9da6:	f7 d9                	neg    ecx
    9da8:	c6 06 00             	mov    BYTE PTR [rsi],0x0
    9dab:	0f 48 cd             	cmovs  ecx,ebp
    9dae:	41 89 cb             	mov    r11d,ecx
    9db1:	48 39 f3             	cmp    rbx,rsi
    9db4:	0f 83 f9 00 00 00    	jae    9eb3 <sprint_abs_toa+0x133>
    9dba:	49 b8 cd cc cc cc cc 	movabs r8,0xcccccccccccccccd
    9dc1:	cc cc cc 
    9dc4:	48 89 f0             	mov    rax,rsi
    9dc7:	48 29 d8             	sub    rax,rbx
    9dca:	83 e0 03             	and    eax,0x3
    9dcd:	74 5d                	je     9e2c <sprint_abs_toa+0xac>
    9dcf:	48 83 f8 01          	cmp    rax,0x1
    9dd3:	74 2c                	je     9e01 <sprint_abs_toa+0x81>
    9dd5:	48 83 f8 02          	cmp    rax,0x2
    9dd9:	0f 85 f1 00 00 00    	jne    9ed0 <sprint_abs_toa+0x150>
    9ddf:	4c 89 d8             	mov    rax,r11
    9de2:	48 83 ee 01          	sub    rsi,0x1
    9de6:	49 f7 e0             	mul    r8
    9de9:	48 c1 ea 03          	shr    rdx,0x3
    9ded:	4c 8d 0c 92          	lea    r9,[rdx+rdx*4]
    9df1:	4d 01 c9             	add    r9,r9
    9df4:	4d 29 cb             	sub    r11,r9
    9df7:	41 83 c3 30          	add    r11d,0x30
    9dfb:	44 88 1e             	mov    BYTE PTR [rsi],r11b
    9dfe:	49 89 d3             	mov    r11,rdx
    9e01:	4c 89 d8             	mov    rax,r11
    9e04:	48 83 ee 01          	sub    rsi,0x1
    9e08:	49 f7 e0             	mul    r8
    9e0b:	48 c1 ea 03          	shr    rdx,0x3
    9e0f:	4c 8d 14 92          	lea    r10,[rdx+rdx*4]
    9e13:	4d 01 d2             	add    r10,r10
    9e16:	4d 29 d3             	sub    r11,r10
    9e19:	41 83 c3 30          	add    r11d,0x30
    9e1d:	44 88 1e             	mov    BYTE PTR [rsi],r11b
    9e20:	49 89 d3             	mov    r11,rdx
    9e23:	48 39 f3             	cmp    rbx,rsi
    9e26:	0f 84 87 00 00 00    	je     9eb3 <sprint_abs_toa+0x133>
    9e2c:	4c 89 d8             	mov    rax,r11
    9e2f:	48 83 ee 04          	sub    rsi,0x4
    9e33:	49 f7 e0             	mul    r8
    9e36:	48 c1 ea 03          	shr    rdx,0x3
    9e3a:	48 89 d0             	mov    rax,rdx
    9e3d:	48 89 d5             	mov    rbp,rdx
    9e40:	48 8d 0c 92          	lea    rcx,[rdx+rdx*4]
    9e44:	49 f7 e0             	mul    r8
    9e47:	48 01 c9             	add    rcx,rcx
    9e4a:	49 29 cb             	sub    r11,rcx
    9e4d:	41 83 c3 30          	add    r11d,0x30
    9e51:	48 c1 ea 03          	shr    rdx,0x3
    9e55:	44 88 5e 03          	mov    BYTE PTR [rsi+0x3],r11b
    9e59:	48 89 d0             	mov    rax,rdx
    9e5c:	49 89 d1             	mov    r9,rdx
    9e5f:	48 8d 3c 92          	lea    rdi,[rdx+rdx*4]
    9e63:	49 f7 e0             	mul    r8
    9e66:	48 01 ff             	add    rdi,rdi
    9e69:	48 29 fd             	sub    rbp,rdi
    9e6c:	83 c5 30             	add    ebp,0x30
    9e6f:	48 c1 ea 03          	shr    rdx,0x3
    9e73:	40 88 6e 02          	mov    BYTE PTR [rsi+0x2],bpl
    9e77:	48 89 d0             	mov    rax,rdx
    9e7a:	49 89 d2             	mov    r10,rdx
    9e7d:	4c 8d 1c 92          	lea    r11,[rdx+rdx*4]
    9e81:	49 f7 e0             	mul    r8
    9e84:	4d 01 db             	add    r11,r11
    9e87:	4d 29 d9             	sub    r9,r11
    9e8a:	41 83 c1 30          	add    r9d,0x30
    9e8e:	49 89 d3             	mov    r11,rdx
    9e91:	44 88 4e 01          	mov    BYTE PTR [rsi+0x1],r9b
    9e95:	49 c1 eb 03          	shr    r11,0x3
    9e99:	4b 8d 2c 9b          	lea    rbp,[r11+r11*4]
    9e9d:	48 01 ed             	add    rbp,rbp
    9ea0:	49 29 ea             	sub    r10,rbp
    9ea3:	41 83 c2 30          	add    r10d,0x30
    9ea7:	44 88 16             	mov    BYTE PTR [rsi],r10b
    9eaa:	48 39 f3             	cmp    rbx,rsi
    9ead:	0f 85 79 ff ff ff    	jne    9e2c <sprint_abs_toa+0xac>
    9eb3:	48 83 c4 08          	add    rsp,0x8
    9eb7:	5b                   	pop    rbx
    9eb8:	5d                   	pop    rbp
    9eb9:	c3                   	ret    
    9eba:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    9ec0:	be 30 00 00 00       	mov    esi,0x30
    9ec5:	66 89 33             	mov    WORD PTR [rbx],si
    9ec8:	48 83 c4 08          	add    rsp,0x8
    9ecc:	5b                   	pop    rbx
    9ecd:	5d                   	pop    rbp
    9ece:	c3                   	ret    
    9ecf:	90                   	nop
    9ed0:	4c 89 d8             	mov    rax,r11
    9ed3:	48 83 ee 01          	sub    rsi,0x1
    9ed7:	49 f7 e0             	mul    r8
    9eda:	48 c1 ea 03          	shr    rdx,0x3
    9ede:	48 8d 3c 92          	lea    rdi,[rdx+rdx*4]
    9ee2:	48 01 ff             	add    rdi,rdi
    9ee5:	49 29 fb             	sub    r11,rdi
    9ee8:	41 83 c3 30          	add    r11d,0x30
    9eec:	44 88 1e             	mov    BYTE PTR [rsi],r11b
    9eef:	49 89 d3             	mov    r11,rdx
    9ef2:	e9 e8 fe ff ff       	jmp    9ddf <sprint_abs_toa+0x5f>
    9ef7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    9efe:	00 00 

0000000000009f00 <write_basic>:
    9f00:	f3 0f 1e fa          	endbr64 
    9f04:	41 55                	push   r13
    9f06:	41 54                	push   r12
    9f08:	55                   	push   rbp
    9f09:	48 89 f5             	mov    rbp,rsi
    9f0c:	53                   	push   rbx
    9f0d:	48 89 fb             	mov    rbx,rdi
    9f10:	48 83 ec 08          	sub    rsp,0x8
    9f14:	0f b6 07             	movzx  eax,BYTE PTR [rdi]
    9f17:	84 c0                	test   al,al
    9f19:	0f 88 a9 00 00 00    	js     9fc8 <write_basic+0xc8>
    9f1f:	a8 01                	test   al,0x1
    9f21:	0f 85 81 00 00 00    	jne    9fa8 <write_basic+0xa8>
    9f27:	45 31 e4             	xor    r12d,r12d
    9f2a:	a8 04                	test   al,0x4
    9f2c:	0f 85 ce 00 00 00    	jne    a000 <write_basic+0x100>
    9f32:	a8 10                	test   al,0x10
    9f34:	74 1c                	je     9f52 <write_basic+0x52>
    9f36:	be 01 00 00 00       	mov    esi,0x1
    9f3b:	a8 40                	test   al,0x40
    9f3d:	0f 85 a5 00 00 00    	jne    9fe8 <write_basic+0xe8>
    9f43:	48 8d 3d ec 23 00 00 	lea    rdi,[rip+0x23ec]        # c336 <CSWTCH.3+0x276>
    9f4a:	e8 51 e7 ff ff       	call   86a0 <ft_putstr_fd>
    9f4f:	41 01 c4             	add    r12d,eax
    9f52:	44 8b 6b 08          	mov    r13d,DWORD PTR [rbx+0x8]
    9f56:	48 89 ef             	mov    rdi,rbp
    9f59:	e8 12 f8 ff ff       	call   9770 <get_ascii_digit>
    9f5e:	be 01 00 00 00       	mov    esi,0x1
    9f63:	bf 30 00 00 00       	mov    edi,0x30
    9f68:	44 89 ea             	mov    edx,r13d
    9f6b:	29 c2                	sub    edx,eax
    9f6d:	e8 be f8 ff ff       	call   9830 <write_repeated_char>
    9f72:	41 01 c4             	add    r12d,eax
    9f75:	f6 03 20             	test   BYTE PTR [rbx],0x20
    9f78:	74 0d                	je     9f87 <write_basic+0x87>
    9f7a:	8b 53 08             	mov    edx,DWORD PTR [rbx+0x8]
    9f7d:	85 d2                	test   edx,edx
    9f7f:	75 06                	jne    9f87 <write_basic+0x87>
    9f81:	80 7d 00 30          	cmp    BYTE PTR [rbp+0x0],0x30
    9f85:	74 10                	je     9f97 <write_basic+0x97>
    9f87:	be 01 00 00 00       	mov    esi,0x1
    9f8c:	48 89 ef             	mov    rdi,rbp
    9f8f:	e8 0c e7 ff ff       	call   86a0 <ft_putstr_fd>
    9f94:	41 01 c4             	add    r12d,eax
    9f97:	48 83 c4 08          	add    rsp,0x8
    9f9b:	44 89 e0             	mov    eax,r12d
    9f9e:	5b                   	pop    rbx
    9f9f:	5d                   	pop    rbp
    9fa0:	41 5c                	pop    r12
    9fa2:	41 5d                	pop    r13
    9fa4:	c3                   	ret    
    9fa5:	0f 1f 00             	nop    DWORD PTR [rax]
    9fa8:	be 01 00 00 00       	mov    esi,0x1
    9fad:	bf 2b 00 00 00       	mov    edi,0x2b
    9fb2:	e8 b9 fa ff ff       	call   9a70 <ft_putchar_fd>
    9fb7:	41 89 c4             	mov    r12d,eax
    9fba:	0f b6 03             	movzx  eax,BYTE PTR [rbx]
    9fbd:	e9 70 ff ff ff       	jmp    9f32 <write_basic+0x32>
    9fc2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    9fc8:	be 01 00 00 00       	mov    esi,0x1
    9fcd:	bf 2d 00 00 00       	mov    edi,0x2d
    9fd2:	e8 99 fa ff ff       	call   9a70 <ft_putchar_fd>
    9fd7:	41 89 c4             	mov    r12d,eax
    9fda:	0f b6 03             	movzx  eax,BYTE PTR [rbx]
    9fdd:	e9 50 ff ff ff       	jmp    9f32 <write_basic+0x32>
    9fe2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    9fe8:	48 8d 3d 4a 23 00 00 	lea    rdi,[rip+0x234a]        # c339 <CSWTCH.3+0x279>
    9fef:	e8 ac e6 ff ff       	call   86a0 <ft_putstr_fd>
    9ff4:	41 01 c4             	add    r12d,eax
    9ff7:	e9 56 ff ff ff       	jmp    9f52 <write_basic+0x52>
    9ffc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    a000:	be 01 00 00 00       	mov    esi,0x1
    a005:	bf 20 00 00 00       	mov    edi,0x20
    a00a:	e8 61 fa ff ff       	call   9a70 <ft_putchar_fd>
    a00f:	41 89 c4             	mov    r12d,eax
    a012:	0f b6 03             	movzx  eax,BYTE PTR [rbx]
    a015:	e9 18 ff ff ff       	jmp    9f32 <write_basic+0x32>
    a01a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

000000000000a020 <write_special_flag>:
    a020:	f3 0f 1e fa          	endbr64 
    a024:	41 54                	push   r12
    a026:	53                   	push   rbx
    a027:	48 89 fb             	mov    rbx,rdi
    a02a:	48 83 ec 08          	sub    rsp,0x8
    a02e:	0f b6 17             	movzx  edx,BYTE PTR [rdi]
    a031:	84 d2                	test   dl,dl
    a033:	78 5b                	js     a090 <write_special_flag+0x70>
    a035:	f6 c2 01             	test   dl,0x1
    a038:	75 36                	jne    a070 <write_special_flag+0x50>
    a03a:	45 31 e4             	xor    r12d,r12d
    a03d:	f6 c2 04             	test   dl,0x4
    a040:	0f 85 8a 00 00 00    	jne    a0d0 <write_special_flag+0xb0>
    a046:	f6 c2 10             	test   dl,0x10
    a049:	74 19                	je     a064 <write_special_flag+0x44>
    a04b:	83 e2 40             	and    edx,0x40
    a04e:	be 01 00 00 00       	mov    esi,0x1
    a053:	75 5b                	jne    a0b0 <write_special_flag+0x90>
    a055:	48 8d 3d da 22 00 00 	lea    rdi,[rip+0x22da]        # c336 <CSWTCH.3+0x276>
    a05c:	e8 3f e6 ff ff       	call   86a0 <ft_putstr_fd>
    a061:	41 01 c4             	add    r12d,eax
    a064:	48 83 c4 08          	add    rsp,0x8
    a068:	44 89 e0             	mov    eax,r12d
    a06b:	5b                   	pop    rbx
    a06c:	41 5c                	pop    r12
    a06e:	c3                   	ret    
    a06f:	90                   	nop
    a070:	be 01 00 00 00       	mov    esi,0x1
    a075:	bf 2b 00 00 00       	mov    edi,0x2b
    a07a:	e8 f1 f9 ff ff       	call   9a70 <ft_putchar_fd>
    a07f:	0f b6 13             	movzx  edx,BYTE PTR [rbx]
    a082:	41 89 c4             	mov    r12d,eax
    a085:	eb bf                	jmp    a046 <write_special_flag+0x26>
    a087:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    a08e:	00 00 
    a090:	be 01 00 00 00       	mov    esi,0x1
    a095:	bf 2d 00 00 00       	mov    edi,0x2d
    a09a:	e8 d1 f9 ff ff       	call   9a70 <ft_putchar_fd>
    a09f:	0f b6 13             	movzx  edx,BYTE PTR [rbx]
    a0a2:	41 89 c4             	mov    r12d,eax
    a0a5:	eb 9f                	jmp    a046 <write_special_flag+0x26>
    a0a7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    a0ae:	00 00 
    a0b0:	48 8d 3d 82 22 00 00 	lea    rdi,[rip+0x2282]        # c339 <CSWTCH.3+0x279>
    a0b7:	e8 e4 e5 ff ff       	call   86a0 <ft_putstr_fd>
    a0bc:	48 83 c4 08          	add    rsp,0x8
    a0c0:	41 01 c4             	add    r12d,eax
    a0c3:	5b                   	pop    rbx
    a0c4:	44 89 e0             	mov    eax,r12d
    a0c7:	41 5c                	pop    r12
    a0c9:	c3                   	ret    
    a0ca:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    a0d0:	be 01 00 00 00       	mov    esi,0x1
    a0d5:	bf 20 00 00 00       	mov    edi,0x20
    a0da:	e8 91 f9 ff ff       	call   9a70 <ft_putchar_fd>
    a0df:	0f b6 13             	movzx  edx,BYTE PTR [rbx]
    a0e2:	41 89 c4             	mov    r12d,eax
    a0e5:	e9 5c ff ff ff       	jmp    a046 <write_special_flag+0x26>
    a0ea:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

000000000000a0f0 <convert_zero_flag>:
    a0f0:	f3 0f 1e fa          	endbr64 
    a0f4:	41 54                	push   r12
    a0f6:	55                   	push   rbp
    a0f7:	48 89 fd             	mov    rbp,rdi
    a0fa:	48 89 f7             	mov    rdi,rsi
    a0fd:	53                   	push   rbx
    a0fe:	e8 6d f6 ff ff       	call   9770 <get_ascii_digit>
    a103:	0f b6 55 00          	movzx  edx,BYTE PTR [rbp+0x0]
    a107:	49 89 c4             	mov    r12,rax
    a10a:	89 d0                	mov    eax,edx
    a10c:	c0 e8 04             	shr    al,0x4
    a10f:	83 e0 01             	and    eax,0x1
    a112:	f6 c2 08             	test   dl,0x8
    a115:	75 41                	jne    a158 <convert_zero_flag+0x68>
    a117:	81 e2 85 00 00 00    	and    edx,0x85
    a11d:	0f b6 f8             	movzx  edi,al
    a120:	8b 55 04             	mov    edx,DWORD PTR [rbp+0x4]
    a123:	0f 95 c1             	setne  cl
    a126:	0f b6 f1             	movzx  esi,cl
    a129:	44 8d 04 7e          	lea    r8d,[rsi+rdi*2]
    a12d:	be 01 00 00 00       	mov    esi,0x1
    a132:	bf 20 00 00 00       	mov    edi,0x20
    a137:	44 29 c2             	sub    edx,r8d
    a13a:	44 29 e2             	sub    edx,r12d
    a13d:	e8 ee f6 ff ff       	call   9830 <write_repeated_char>
    a142:	48 89 ef             	mov    rdi,rbp
    a145:	41 89 c4             	mov    r12d,eax
    a148:	e8 d3 fe ff ff       	call   a020 <write_special_flag>
    a14d:	5b                   	pop    rbx
    a14e:	5d                   	pop    rbp
    a14f:	44 01 e0             	add    eax,r12d
    a152:	41 5c                	pop    r12
    a154:	c3                   	ret    
    a155:	0f 1f 00             	nop    DWORD PTR [rax]
    a158:	48 89 ef             	mov    rdi,rbp
    a15b:	e8 c0 fe ff ff       	call   a020 <write_special_flag>
    a160:	8b 55 04             	mov    edx,DWORD PTR [rbp+0x4]
    a163:	be 01 00 00 00       	mov    esi,0x1
    a168:	bf 30 00 00 00       	mov    edi,0x30
    a16d:	89 c3                	mov    ebx,eax
    a16f:	44 29 e2             	sub    edx,r12d
    a172:	29 c2                	sub    edx,eax
    a174:	e8 b7 f6 ff ff       	call   9830 <write_repeated_char>
    a179:	01 d8                	add    eax,ebx
    a17b:	5b                   	pop    rbx
    a17c:	5d                   	pop    rbp
    a17d:	41 5c                	pop    r12
    a17f:	c3                   	ret    

000000000000a180 <convert_digit>:
    a180:	f3 0f 1e fa          	endbr64 
    a184:	41 56                	push   r14
    a186:	41 55                	push   r13
    a188:	41 54                	push   r12
    a18a:	49 89 f4             	mov    r12,rsi
    a18d:	55                   	push   rbp
    a18e:	48 89 fd             	mov    rbp,rdi
    a191:	53                   	push   rbx
    a192:	0f b6 07             	movzx  eax,BYTE PTR [rdi]
    a195:	89 c2                	mov    edx,eax
    a197:	c0 ea 04             	shr    dl,0x4
    a19a:	83 e2 01             	and    edx,0x1
    a19d:	a8 02                	test   al,0x2
    a19f:	0f 85 eb 00 00 00    	jne    a290 <convert_digit+0x110>
    a1a5:	a8 20                	test   al,0x20
    a1a7:	75 27                	jne    a1d0 <convert_digit+0x50>
    a1a9:	e8 42 ff ff ff       	call   a0f0 <convert_zero_flag>
    a1ae:	4c 89 e7             	mov    rdi,r12
    a1b1:	be 01 00 00 00       	mov    esi,0x1
    a1b6:	89 c3                	mov    ebx,eax
    a1b8:	e8 e3 e4 ff ff       	call   86a0 <ft_putstr_fd>
    a1bd:	01 d8                	add    eax,ebx
    a1bf:	5b                   	pop    rbx
    a1c0:	5d                   	pop    rbp
    a1c1:	41 5c                	pop    r12
    a1c3:	41 5d                	pop    r13
    a1c5:	41 5e                	pop    r14
    a1c7:	c3                   	ret    
    a1c8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    a1cf:	00 
    a1d0:	a8 85                	test   al,0x85
    a1d2:	0f b6 fa             	movzx  edi,dl
    a1d5:	0f 95 c1             	setne  cl
    a1d8:	0f b6 f1             	movzx  esi,cl
    a1db:	8d 1c 7e             	lea    ebx,[rsi+rdi*2]
    a1de:	4c 89 e7             	mov    rdi,r12
    a1e1:	e8 8a f5 ff ff       	call   9770 <get_ascii_digit>
    a1e6:	8b 7d 08             	mov    edi,DWORD PTR [rbp+0x8]
    a1e9:	8d 34 03             	lea    esi,[rbx+rax*1]
    a1ec:	e8 4f c1 ff ff       	call   6340 <get_max>
    a1f1:	4c 89 e7             	mov    rdi,r12
    a1f4:	44 8b 6d 08          	mov    r13d,DWORD PTR [rbp+0x8]
    a1f8:	41 89 c6             	mov    r14d,eax
    a1fb:	e8 70 f5 ff ff       	call   9770 <get_ascii_digit>
    a200:	4c 63 c3             	movsxd r8,ebx
    a203:	49 01 c0             	add    r8,rax
    a206:	4d 39 c5             	cmp    r13,r8
    a209:	0f 82 b1 00 00 00    	jb     a2c0 <convert_digit+0x140>
    a20f:	8b 55 04             	mov    edx,DWORD PTR [rbp+0x4]
    a212:	be 01 00 00 00       	mov    esi,0x1
    a217:	bf 20 00 00 00       	mov    edi,0x20
    a21c:	29 da                	sub    edx,ebx
    a21e:	44 29 f2             	sub    edx,r14d
    a221:	e8 0a f6 ff ff       	call   9830 <write_repeated_char>
    a226:	89 c3                	mov    ebx,eax
    a228:	48 89 ef             	mov    rdi,rbp
    a22b:	e8 f0 fd ff ff       	call   a020 <write_special_flag>
    a230:	44 8b 75 08          	mov    r14d,DWORD PTR [rbp+0x8]
    a234:	4c 89 e7             	mov    rdi,r12
    a237:	41 89 c5             	mov    r13d,eax
    a23a:	e8 31 f5 ff ff       	call   9770 <get_ascii_digit>
    a23f:	44 89 f2             	mov    edx,r14d
    a242:	be 01 00 00 00       	mov    esi,0x1
    a247:	bf 30 00 00 00       	mov    edi,0x30
    a24c:	29 c2                	sub    edx,eax
    a24e:	e8 dd f5 ff ff       	call   9830 <write_repeated_char>
    a253:	41 01 c5             	add    r13d,eax
    a256:	f6 45 00 20          	test   BYTE PTR [rbp+0x0],0x20
    a25a:	74 10                	je     a26c <convert_digit+0xec>
    a25c:	44 8b 4d 08          	mov    r9d,DWORD PTR [rbp+0x8]
    a260:	45 85 c9             	test   r9d,r9d
    a263:	75 07                	jne    a26c <convert_digit+0xec>
    a265:	41 80 3c 24 30       	cmp    BYTE PTR [r12],0x30
    a26a:	74 10                	je     a27c <convert_digit+0xfc>
    a26c:	be 01 00 00 00       	mov    esi,0x1
    a271:	4c 89 e7             	mov    rdi,r12
    a274:	e8 27 e4 ff ff       	call   86a0 <ft_putstr_fd>
    a279:	41 01 c5             	add    r13d,eax
    a27c:	42 8d 04 2b          	lea    eax,[rbx+r13*1]
    a280:	5b                   	pop    rbx
    a281:	5d                   	pop    rbp
    a282:	41 5c                	pop    r12
    a284:	41 5d                	pop    r13
    a286:	41 5e                	pop    r14
    a288:	c3                   	ret    
    a289:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    a290:	e8 6b fc ff ff       	call   9f00 <write_basic>
    a295:	8b 55 04             	mov    edx,DWORD PTR [rbp+0x4]
    a298:	be 01 00 00 00       	mov    esi,0x1
    a29d:	bf 20 00 00 00       	mov    edi,0x20
    a2a2:	41 89 c4             	mov    r12d,eax
    a2a5:	29 c2                	sub    edx,eax
    a2a7:	e8 84 f5 ff ff       	call   9830 <write_repeated_char>
    a2ac:	5b                   	pop    rbx
    a2ad:	5d                   	pop    rbp
    a2ae:	44 01 e0             	add    eax,r12d
    a2b1:	41 5c                	pop    r12
    a2b3:	41 5d                	pop    r13
    a2b5:	41 5e                	pop    r14
    a2b7:	c3                   	ret    
    a2b8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    a2bf:	00 
    a2c0:	03 5d 08             	add    ebx,DWORD PTR [rbp+0x8]
    a2c3:	44 8b 6d 04          	mov    r13d,DWORD PTR [rbp+0x4]
    a2c7:	44 89 f6             	mov    esi,r14d
    a2ca:	89 df                	mov    edi,ebx
    a2cc:	e8 6f c0 ff ff       	call   6340 <get_max>
    a2d1:	44 89 ea             	mov    edx,r13d
    a2d4:	be 01 00 00 00       	mov    esi,0x1
    a2d9:	bf 20 00 00 00       	mov    edi,0x20
    a2de:	29 c2                	sub    edx,eax
    a2e0:	e8 4b f5 ff ff       	call   9830 <write_repeated_char>
    a2e5:	89 c3                	mov    ebx,eax
    a2e7:	e9 3c ff ff ff       	jmp    a228 <convert_digit+0xa8>
    a2ec:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000a2f0 <get_count_by_flag>:
    a2f0:	f3 0f 1e fa          	endbr64 
    a2f4:	0f b6 07             	movzx  eax,BYTE PTR [rdi]
    a2f7:	31 d2                	xor    edx,edx
    a2f9:	a8 85                	test   al,0x85
    a2fb:	0f 95 c2             	setne  dl
    a2fe:	c0 e8 04             	shr    al,0x4
    a301:	83 e0 01             	and    eax,0x1
    a304:	8d 04 42             	lea    eax,[rdx+rax*2]
    a307:	c3                   	ret    
    a308:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    a30f:	00 

000000000000a310 <mlx_int_deal_shm>:
    a310:	f3 0f 1e fa          	endbr64 
    a314:	41 54                	push   r12
    a316:	55                   	push   rbp
    a317:	53                   	push   rbx
    a318:	48 89 fb             	mov    rbx,rdi
    a31b:	48 83 ec 40          	sub    rsp,0x40
    a31f:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
    a322:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    a329:	00 00 
    a32b:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
    a330:	31 c0                	xor    eax,eax
    a332:	48 8d 74 24 0c       	lea    rsi,[rsp+0xc]
    a337:	48 8d 4c 24 08       	lea    rcx,[rsp+0x8]
    a33c:	48 89 f2             	mov    rdx,rsi
    a33f:	e8 ec 82 ff ff       	call   2630 <XShmQueryVersion@plt>
    a344:	ba ff ff ff ff       	mov    edx,0xffffffff
    a349:	89 43 48             	mov    DWORD PTR [rbx+0x48],eax
    a34c:	85 c0                	test   eax,eax
    a34e:	74 0c                	je     a35c <mlx_int_deal_shm+0x4c>
    a350:	8b 44 24 08          	mov    eax,DWORD PTR [rsp+0x8]
    a354:	85 c0                	test   eax,eax
    a356:	0f 85 94 00 00 00    	jne    a3f0 <mlx_int_deal_shm+0xe0>
    a35c:	89 53 4c             	mov    DWORD PTR [rbx+0x4c],edx
    a35f:	4c 8d 64 24 10       	lea    r12,[rsp+0x10]
    a364:	be 20 00 00 00       	mov    esi,0x20
    a369:	4c 89 e7             	mov    rdi,r12
    a36c:	e8 ff 82 ff ff       	call   2670 <gethostname@plt>
    a371:	48 8d 3d c4 1f 00 00 	lea    rdi,[rip+0x1fc4]        # c33c <CSWTCH.3+0x27c>
    a378:	e8 33 83 ff ff       	call   26b0 <getenv@plt>
    a37d:	48 89 c5             	mov    rbp,rax
    a380:	48 85 c0             	test   rax,rax
    a383:	74 4b                	je     a3d0 <mlx_int_deal_shm+0xc0>
    a385:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    a388:	3c 3a                	cmp    al,0x3a
    a38a:	74 44                	je     a3d0 <mlx_int_deal_shm+0xc0>
    a38c:	84 c0                	test   al,al
    a38e:	74 40                	je     a3d0 <mlx_int_deal_shm+0xc0>
    a390:	4c 89 e7             	mov    rdi,r12
    a393:	e8 48 82 ff ff       	call   25e0 <strlen@plt>
    a398:	4c 89 e6             	mov    rsi,r12
    a39b:	48 89 ef             	mov    rdi,rbp
    a39e:	48 89 c2             	mov    rdx,rax
    a3a1:	e8 8a 81 ff ff       	call   2530 <strncmp@plt>
    a3a6:	85 c0                	test   eax,eax
    a3a8:	74 26                	je     a3d0 <mlx_int_deal_shm+0xc0>
    a3aa:	ba 09 00 00 00       	mov    edx,0x9
    a3af:	48 8d 35 8e 1f 00 00 	lea    rsi,[rip+0x1f8e]        # c344 <CSWTCH.3+0x284>
    a3b6:	48 89 ef             	mov    rdi,rbp
    a3b9:	e8 72 81 ff ff       	call   2530 <strncmp@plt>
    a3be:	85 c0                	test   eax,eax
    a3c0:	74 0e                	je     a3d0 <mlx_int_deal_shm+0xc0>
    a3c2:	48 8b 05 d7 1f 00 00 	mov    rax,QWORD PTR [rip+0x1fd7]        # c3a0 <CSWTCH.3+0x2e0>
    a3c9:	48 89 43 48          	mov    QWORD PTR [rbx+0x48],rax
    a3cd:	0f 1f 00             	nop    DWORD PTR [rax]
    a3d0:	48 8b 44 24 38       	mov    rax,QWORD PTR [rsp+0x38]
    a3d5:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    a3dc:	00 00 
    a3de:	75 1f                	jne    a3ff <mlx_int_deal_shm+0xef>
    a3e0:	48 83 c4 40          	add    rsp,0x40
    a3e4:	31 c0                	xor    eax,eax
    a3e6:	5b                   	pop    rbx
    a3e7:	5d                   	pop    rbp
    a3e8:	41 5c                	pop    r12
    a3ea:	c3                   	ret    
    a3eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    a3f0:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    a3f3:	e8 d8 83 ff ff       	call   27d0 <XShmPixmapFormat@plt>
    a3f8:	89 c2                	mov    edx,eax
    a3fa:	e9 5d ff ff ff       	jmp    a35c <mlx_int_deal_shm+0x4c>
    a3ff:	e8 dc 82 ff ff       	call   26e0 <__stack_chk_fail@plt>
    a404:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    a40b:	00 00 00 00 
    a40f:	90                   	nop

000000000000a410 <mlx_int_rgb_conversion>:
    a410:	f3 0f 1e fa          	endbr64 
    a414:	66 0f ef c0          	pxor   xmm0,xmm0
    a418:	48 c7 47 64 00 00 00 	mov    QWORD PTR [rdi+0x64],0x0
    a41f:	00 
    a420:	48 89 f9             	mov    rcx,rdi
    a423:	0f 11 47 54          	movups XMMWORD PTR [rdi+0x54],xmm0
    a427:	48 8b 7f 18          	mov    rdi,QWORD PTR [rdi+0x18]
    a42b:	48 8b 47 18          	mov    rax,QWORD PTR [rdi+0x18]
    a42f:	a8 01                	test   al,0x1
    a431:	75 1c                	jne    a44f <mlx_int_rgb_conversion+0x3f>
    a433:	ba 01 00 00 00       	mov    edx,0x1
    a438:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    a43f:	00 
    a440:	48 d1 e8             	shr    rax,1
    a443:	89 d6                	mov    esi,edx
    a445:	83 c2 01             	add    edx,0x1
    a448:	a8 01                	test   al,0x1
    a44a:	74 f4                	je     a440 <mlx_int_rgb_conversion+0x30>
    a44c:	89 71 54             	mov    DWORD PTR [rcx+0x54],esi
    a44f:	ba 01 00 00 00       	mov    edx,0x1
    a454:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    a458:	48 d1 e8             	shr    rax,1
    a45b:	89 d6                	mov    esi,edx
    a45d:	83 c2 01             	add    edx,0x1
    a460:	a8 01                	test   al,0x1
    a462:	75 f4                	jne    a458 <mlx_int_rgb_conversion+0x48>
    a464:	48 89 47 18          	mov    QWORD PTR [rdi+0x18],rax
    a468:	48 8b 47 20          	mov    rax,QWORD PTR [rdi+0x20]
    a46c:	89 71 58             	mov    DWORD PTR [rcx+0x58],esi
    a46f:	a8 01                	test   al,0x1
    a471:	75 1c                	jne    a48f <mlx_int_rgb_conversion+0x7f>
    a473:	ba 01 00 00 00       	mov    edx,0x1
    a478:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    a47f:	00 
    a480:	48 d1 e8             	shr    rax,1
    a483:	89 d6                	mov    esi,edx
    a485:	83 c2 01             	add    edx,0x1
    a488:	a8 01                	test   al,0x1
    a48a:	74 f4                	je     a480 <mlx_int_rgb_conversion+0x70>
    a48c:	89 71 5c             	mov    DWORD PTR [rcx+0x5c],esi
    a48f:	ba 01 00 00 00       	mov    edx,0x1
    a494:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    a498:	48 d1 e8             	shr    rax,1
    a49b:	89 d6                	mov    esi,edx
    a49d:	83 c2 01             	add    edx,0x1
    a4a0:	a8 01                	test   al,0x1
    a4a2:	75 f4                	jne    a498 <mlx_int_rgb_conversion+0x88>
    a4a4:	48 89 47 20          	mov    QWORD PTR [rdi+0x20],rax
    a4a8:	48 8b 47 28          	mov    rax,QWORD PTR [rdi+0x28]
    a4ac:	89 71 60             	mov    DWORD PTR [rcx+0x60],esi
    a4af:	a8 01                	test   al,0x1
    a4b1:	75 1c                	jne    a4cf <mlx_int_rgb_conversion+0xbf>
    a4b3:	ba 01 00 00 00       	mov    edx,0x1
    a4b8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    a4bf:	00 
    a4c0:	48 d1 e8             	shr    rax,1
    a4c3:	89 d6                	mov    esi,edx
    a4c5:	83 c2 01             	add    edx,0x1
    a4c8:	a8 01                	test   al,0x1
    a4ca:	74 f4                	je     a4c0 <mlx_int_rgb_conversion+0xb0>
    a4cc:	89 71 64             	mov    DWORD PTR [rcx+0x64],esi
    a4cf:	ba 01 00 00 00       	mov    edx,0x1
    a4d4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    a4d8:	48 d1 e8             	shr    rax,1
    a4db:	89 d6                	mov    esi,edx
    a4dd:	83 c2 01             	add    edx,0x1
    a4e0:	a8 01                	test   al,0x1
    a4e2:	75 f4                	jne    a4d8 <mlx_int_rgb_conversion+0xc8>
    a4e4:	48 89 47 28          	mov    QWORD PTR [rdi+0x28],rax
    a4e8:	31 c0                	xor    eax,eax
    a4ea:	89 71 68             	mov    DWORD PTR [rcx+0x68],esi
    a4ed:	c3                   	ret    
    a4ee:	66 90                	xchg   ax,ax

000000000000a4f0 <mlx_init>:
    a4f0:	f3 0f 1e fa          	endbr64 
    a4f4:	41 54                	push   r12
    a4f6:	bf 88 00 00 00       	mov    edi,0x88
    a4fb:	e8 40 80 ff ff       	call   2540 <malloc@plt>
    a500:	49 89 c4             	mov    r12,rax
    a503:	48 85 c0             	test   rax,rax
    a506:	0f 84 e5 00 00 00    	je     a5f1 <mlx_init+0x101>
    a50c:	48 8d 3d 50 1d 00 00 	lea    rdi,[rip+0x1d50]        # c263 <CSWTCH.3+0x1a3>
    a513:	e8 98 80 ff ff       	call   25b0 <XOpenDisplay@plt>
    a518:	49 89 04 24          	mov    QWORD PTR [r12],rax
    a51c:	48 89 c2             	mov    rdx,rax
    a51f:	48 85 c0             	test   rax,rax
    a522:	0f 84 f8 00 00 00    	je     a620 <mlx_init+0x130>
    a528:	48 63 80 e0 00 00 00 	movsxd rax,DWORD PTR [rax+0xe0]
    a52f:	4c 89 e7             	mov    rdi,r12
    a532:	48 89 c1             	mov    rcx,rax
    a535:	48 c1 e0 07          	shl    rax,0x7
    a539:	48 03 82 e8 00 00 00 	add    rax,QWORD PTR [rdx+0xe8]
    a540:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
    a544:	66 0f 6e c1          	movd   xmm0,ecx
    a548:	49 89 54 24 08       	mov    QWORD PTR [r12+0x8],rdx
    a54d:	48 8b 50 50          	mov    rdx,QWORD PTR [rax+0x50]
    a551:	8b 40 38             	mov    eax,DWORD PTR [rax+0x38]
    a554:	49 89 54 24 20       	mov    QWORD PTR [r12+0x20],rdx
    a559:	66 0f 6e c8          	movd   xmm1,eax
    a55d:	66 0f 62 c1          	punpckldq xmm0,xmm1
    a561:	66 41 0f d6 44 24 10 	movq   QWORD PTR [r12+0x10],xmm0
    a568:	e8 33 05 00 00       	call   aaa0 <mlx_int_get_visual>
    a56d:	83 f8 ff             	cmp    eax,0xffffffff
    a570:	0f 84 b7 00 00 00    	je     a62d <mlx_init+0x13d>
    a576:	49 c7 44 24 30 00 00 	mov    QWORD PTR [r12+0x30],0x0
    a57d:	00 00 
    a57f:	49 8b 3c 24          	mov    rdi,QWORD PTR [r12]
    a583:	31 d2                	xor    edx,edx
    a585:	48 8d 35 c2 1d 00 00 	lea    rsi,[rip+0x1dc2]        # c34e <CSWTCH.3+0x28e>
    a58c:	49 c7 44 24 38 00 00 	mov    QWORD PTR [r12+0x38],0x0
    a593:	00 00 
    a595:	49 c7 44 24 40 00 00 	mov    QWORD PTR [r12+0x40],0x0
    a59c:	00 00 
    a59e:	41 c7 44 24 50 01 00 	mov    DWORD PTR [r12+0x50],0x1
    a5a5:	00 00 
    a5a7:	e8 84 81 ff ff       	call   2730 <XInternAtom@plt>
    a5ac:	49 8b 3c 24          	mov    rdi,QWORD PTR [r12]
    a5b0:	31 d2                	xor    edx,edx
    a5b2:	48 8d 35 a6 1d 00 00 	lea    rsi,[rip+0x1da6]        # c35f <CSWTCH.3+0x29f>
    a5b9:	49 89 44 24 70       	mov    QWORD PTR [r12+0x70],rax
    a5be:	e8 6d 81 ff ff       	call   2730 <XInternAtom@plt>
    a5c3:	4c 89 e7             	mov    rdi,r12
    a5c6:	49 89 44 24 78       	mov    QWORD PTR [r12+0x78],rax
    a5cb:	31 c0                	xor    eax,eax
    a5cd:	e8 3e fd ff ff       	call   a310 <mlx_int_deal_shm>
    a5d2:	41 8b 44 24 28       	mov    eax,DWORD PTR [r12+0x28]
    a5d7:	85 c0                	test   eax,eax
    a5d9:	75 25                	jne    a600 <mlx_init+0x110>
    a5db:	4c 89 e7             	mov    rdi,r12
    a5de:	31 c0                	xor    eax,eax
    a5e0:	e8 2b fe ff ff       	call   a410 <mlx_int_rgb_conversion>
    a5e5:	41 c7 84 24 80 00 00 	mov    DWORD PTR [r12+0x80],0x0
    a5ec:	00 00 00 00 00 
    a5f1:	4c 89 e0             	mov    rax,r12
    a5f4:	41 5c                	pop    r12
    a5f6:	c3                   	ret    
    a5f7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    a5fe:	00 00 
    a600:	49 8b 54 24 18       	mov    rdx,QWORD PTR [r12+0x18]
    a605:	49 8b 74 24 08       	mov    rsi,QWORD PTR [r12+0x8]
    a60a:	31 c9                	xor    ecx,ecx
    a60c:	49 8b 3c 24          	mov    rdi,QWORD PTR [r12]
    a610:	e8 6b 7f ff ff       	call   2580 <XCreateColormap@plt>
    a615:	49 89 44 24 20       	mov    QWORD PTR [r12+0x20],rax
    a61a:	eb bf                	jmp    a5db <mlx_init+0xeb>
    a61c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    a620:	4c 89 e7             	mov    rdi,r12
    a623:	45 31 e4             	xor    r12d,r12d
    a626:	e8 95 7f ff ff       	call   25c0 <free@plt>
    a62b:	eb c4                	jmp    a5f1 <mlx_init+0x101>
    a62d:	48 8d 3d 3c 1d 00 00 	lea    rdi,[rip+0x1d3c]        # c370 <CSWTCH.3+0x2b0>
    a634:	e8 87 7e ff ff       	call   24c0 <puts@plt>
    a639:	bf 01 00 00 00       	mov    edi,0x1
    a63e:	e8 9d 7e ff ff       	call   24e0 <exit@plt>
    a643:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    a64a:	00 00 00 
    a64d:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000a650 <mlx_new_window>:
    a650:	f3 0f 1e fa          	endbr64 
    a654:	41 57                	push   r15
    a656:	49 89 cf             	mov    r15,rcx
    a659:	41 56                	push   r14
    a65b:	41 89 d6             	mov    r14d,edx
    a65e:	41 55                	push   r13
    a660:	41 89 f5             	mov    r13d,esi
    a663:	41 54                	push   r12
    a665:	55                   	push   rbp
    a666:	48 89 fd             	mov    rbp,rdi
    a669:	48 81 ec 00 01 00 00 	sub    rsp,0x100
    a670:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    a677:	00 00 
    a679:	48 89 84 24 f8 00 00 	mov    QWORD PTR [rsp+0xf8],rax
    a680:	00 
    a681:	31 c0                	xor    eax,eax
    a683:	48 8b 47 20          	mov    rax,QWORD PTR [rdi+0x20]
    a687:	bf a8 03 00 00       	mov    edi,0x3a8
    a68c:	48 c7 44 24 08 00 00 	mov    QWORD PTR [rsp+0x8],0x0
    a693:	00 00 
    a695:	48 c7 44 24 18 ff ff 	mov    QWORD PTR [rsp+0x18],0xffffffffffffffff
    a69c:	ff ff 
    a69e:	48 89 44 24 60       	mov    QWORD PTR [rsp+0x60],rax
    a6a3:	48 c7 44 24 48 ff ff 	mov    QWORD PTR [rsp+0x48],0xffffff
    a6aa:	ff 00 
    a6ac:	e8 8f 7e ff ff       	call   2540 <malloc@plt>
    a6b1:	49 89 c4             	mov    r12,rax
    a6b4:	48 85 c0             	test   rax,rax
    a6b7:	0f 84 d2 00 00 00    	je     a78f <mlx_new_window+0x13f>
    a6bd:	48 89 e0             	mov    rax,rsp
    a6c0:	48 8b 75 08          	mov    rsi,QWORD PTR [rbp+0x8]
    a6c4:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
    a6c8:	45 89 f1             	mov    r9d,r14d
    a6cb:	50                   	push   rax
    a6cc:	45 89 e8             	mov    r8d,r13d
    a6cf:	31 c9                	xor    ecx,ecx
    a6d1:	31 d2                	xor    edx,edx
    a6d3:	68 0a 28 00 00       	push   0x280a
    a6d8:	ff 75 18             	push   QWORD PTR [rbp+0x18]
    a6db:	6a 01                	push   0x1
    a6dd:	6a 00                	push   0x0
    a6df:	6a 00                	push   0x0
    a6e1:	e8 7a 7e ff ff       	call   2560 <XCreateWindow@plt>
    a6e6:	48 83 c4 30          	add    rsp,0x30
    a6ea:	44 89 f1             	mov    ecx,r14d
    a6ed:	44 89 ea             	mov    edx,r13d
    a6f0:	48 89 c6             	mov    rsi,rax
    a6f3:	49 89 04 24          	mov    QWORD PTR [r12],rax
    a6f7:	48 89 ef             	mov    rdi,rbp
    a6fa:	31 c0                	xor    eax,eax
    a6fc:	e8 7f 02 00 00       	call   a980 <mlx_int_anti_resize_win>
    a701:	49 8b 34 24          	mov    rsi,QWORD PTR [r12]
    a705:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
    a709:	4c 89 fa             	mov    rdx,r15
    a70c:	e8 8f 7d ff ff       	call   24a0 <XStoreName@plt>
    a711:	49 8b 34 24          	mov    rsi,QWORD PTR [r12]
    a715:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
    a719:	48 8d 55 70          	lea    rdx,[rbp+0x70]
    a71d:	b9 01 00 00 00       	mov    ecx,0x1
    a722:	e8 39 7f ff ff       	call   2660 <XSetWMProtocols@plt>
    a727:	49 8b 34 24          	mov    rsi,QWORD PTR [r12]
    a72b:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
    a72f:	66 0f 76 c0          	pcmpeqd xmm0,xmm0
    a733:	48 8d 4c 24 70       	lea    rcx,[rsp+0x70]
    a738:	ba 07 00 00 00       	mov    edx,0x7
    a73d:	0f 11 44 24 78       	movups XMMWORD PTR [rsp+0x78],xmm0
    a742:	c7 44 24 70 03 00 00 	mov    DWORD PTR [rsp+0x70],0x3
    a749:	00 
    a74a:	e8 51 7f ff ff       	call   26a0 <XCreateGC@plt>
    a74f:	49 8d 54 24 48       	lea    rdx,[r12+0x48]
    a754:	b9 6c 00 00 00       	mov    ecx,0x6c
    a759:	66 48 0f 6e c0       	movq   xmm0,rax
    a75e:	48 89 d7             	mov    rdi,rdx
    a761:	31 c0                	xor    eax,eax
    a763:	0f 16 45 30          	movhps xmm0,QWORD PTR [rbp+0x30]
    a767:	4c 89 65 30          	mov    QWORD PTR [rbp+0x30],r12
    a76b:	41 0f 11 44 24 08    	movups XMMWORD PTR [r12+0x8],xmm0
    a771:	f3 48 ab             	rep stos QWORD PTR es:[rdi],rax
    a774:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
    a778:	49 8b 34 24          	mov    rsi,QWORD PTR [r12]
    a77c:	e8 3f 80 ff ff       	call   27c0 <XMapRaised@plt>
    a781:	49 8b 34 24          	mov    rsi,QWORD PTR [r12]
    a785:	48 89 ef             	mov    rdi,rbp
    a788:	31 c0                	xor    eax,eax
    a78a:	e8 a1 02 00 00       	call   aa30 <mlx_int_wait_first_expose>
    a78f:	48 8b 84 24 f8 00 00 	mov    rax,QWORD PTR [rsp+0xf8]
    a796:	00 
    a797:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    a79e:	00 00 
    a7a0:	75 14                	jne    a7b6 <mlx_new_window+0x166>
    a7a2:	48 81 c4 00 01 00 00 	add    rsp,0x100
    a7a9:	4c 89 e0             	mov    rax,r12
    a7ac:	5d                   	pop    rbp
    a7ad:	41 5c                	pop    r12
    a7af:	41 5d                	pop    r13
    a7b1:	41 5e                	pop    r14
    a7b3:	41 5f                	pop    r15
    a7b5:	c3                   	ret    
    a7b6:	e8 25 7f ff ff       	call   26e0 <__stack_chk_fail@plt>
    a7bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a7c0 <mlx_loop_end>:
    a7c0:	f3 0f 1e fa          	endbr64 
    a7c4:	c7 87 80 00 00 00 01 	mov    DWORD PTR [rdi+0x80],0x1
    a7cb:	00 00 00 
    a7ce:	b8 01 00 00 00       	mov    eax,0x1
    a7d3:	c3                   	ret    
    a7d4:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    a7db:	00 00 00 00 
    a7df:	90                   	nop

000000000000a7e0 <mlx_loop>:
    a7e0:	f3 0f 1e fa          	endbr64 
    a7e4:	41 54                	push   r12
    a7e6:	55                   	push   rbp
    a7e7:	48 8d 2d 32 68 00 00 	lea    rbp,[rip+0x6832]        # 11020 <mlx_int_param_event>
    a7ee:	53                   	push   rbx
    a7ef:	48 89 fb             	mov    rbx,rdi
    a7f2:	48 81 ec e0 00 00 00 	sub    rsp,0xe0
    a7f9:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    a800:	00 00 
    a802:	48 89 84 24 d8 00 00 	mov    QWORD PTR [rsp+0xd8],rax
    a809:	00 
    a80a:	31 c0                	xor    eax,eax
    a80c:	e8 3f 0b 00 00       	call   b350 <mlx_int_set_win_event_mask>
    a811:	c7 43 50 00 00 00 00 	mov    DWORD PTR [rbx+0x50],0x0
    a818:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    a81f:	00 
    a820:	48 83 7b 30 00       	cmp    QWORD PTR [rbx+0x30],0x0
    a825:	0f 84 9d 00 00 00    	je     a8c8 <mlx_loop+0xe8>
    a82b:	8b 83 80 00 00 00    	mov    eax,DWORD PTR [rbx+0x80]
    a831:	85 c0                	test   eax,eax
    a833:	0f 85 8f 00 00 00    	jne    a8c8 <mlx_loop+0xe8>
    a839:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    a840:	48 83 7b 38 00       	cmp    QWORD PTR [rbx+0x38],0x0
    a845:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    a848:	74 09                	je     a853 <mlx_loop+0x73>
    a84a:	e8 d1 7f ff ff       	call   2820 <XPending@plt>
    a84f:	85 c0                	test   eax,eax
    a851:	74 4b                	je     a89e <mlx_loop+0xbe>
    a853:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    a856:	4c 8d 64 24 10       	lea    r12,[rsp+0x10]
    a85b:	4c 89 e6             	mov    rsi,r12
    a85e:	e8 dd 7d ff ff       	call   2640 <XNextEvent@plt>
    a863:	48 8b 53 30          	mov    rdx,QWORD PTR [rbx+0x30]
    a867:	48 85 d2             	test   rdx,rdx
    a86a:	74 28                	je     a894 <mlx_loop+0xb4>
    a86c:	48 8b 44 24 30       	mov    rax,QWORD PTR [rsp+0x30]
    a871:	eb 0e                	jmp    a881 <mlx_loop+0xa1>
    a873:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    a878:	48 8b 52 10          	mov    rdx,QWORD PTR [rdx+0x10]
    a87c:	48 85 d2             	test   rdx,rdx
    a87f:	74 13                	je     a894 <mlx_loop+0xb4>
    a881:	48 39 02             	cmp    QWORD PTR [rdx],rax
    a884:	75 f2                	jne    a878 <mlx_loop+0x98>
    a886:	8b 44 24 10          	mov    eax,DWORD PTR [rsp+0x10]
    a88a:	83 f8 21             	cmp    eax,0x21
    a88d:	74 61                	je     a8f0 <mlx_loop+0x110>
    a88f:	83 f8 23             	cmp    eax,0x23
    a892:	7e 67                	jle    a8fb <mlx_loop+0x11b>
    a894:	8b 93 80 00 00 00    	mov    edx,DWORD PTR [rbx+0x80]
    a89a:	85 d2                	test   edx,edx
    a89c:	74 a2                	je     a840 <mlx_loop+0x60>
    a89e:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    a8a1:	31 f6                	xor    esi,esi
    a8a3:	e8 28 7e ff ff       	call   26d0 <XSync@plt>
    a8a8:	48 8b 53 38          	mov    rdx,QWORD PTR [rbx+0x38]
    a8ac:	48 85 d2             	test   rdx,rdx
    a8af:	0f 84 6b ff ff ff    	je     a820 <mlx_loop+0x40>
    a8b5:	31 c0                	xor    eax,eax
    a8b7:	48 8b 7b 40          	mov    rdi,QWORD PTR [rbx+0x40]
    a8bb:	ff d2                	call   rdx
    a8bd:	48 83 7b 30 00       	cmp    QWORD PTR [rbx+0x30],0x0
    a8c2:	0f 85 63 ff ff ff    	jne    a82b <mlx_loop+0x4b>
    a8c8:	48 8b 84 24 d8 00 00 	mov    rax,QWORD PTR [rsp+0xd8]
    a8cf:	00 
    a8d0:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    a8d7:	00 00 
    a8d9:	75 75                	jne    a950 <mlx_loop+0x170>
    a8db:	48 81 c4 e0 00 00 00 	add    rsp,0xe0
    a8e2:	31 c0                	xor    eax,eax
    a8e4:	5b                   	pop    rbx
    a8e5:	5d                   	pop    rbp
    a8e6:	41 5c                	pop    r12
    a8e8:	c3                   	ret    
    a8e9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    a8f0:	48 8b 4b 78          	mov    rcx,QWORD PTR [rbx+0x78]
    a8f4:	48 39 4c 24 38       	cmp    QWORD PTR [rsp+0x38],rcx
    a8f9:	74 20                	je     a91b <mlx_loop+0x13b>
    a8fb:	48 63 c8             	movsxd rcx,eax
    a8fe:	48 8d 04 49          	lea    rax,[rcx+rcx*2]
    a902:	48 83 7c c2 50 00    	cmp    QWORD PTR [rdx+rax*8+0x50],0x0
    a908:	74 8a                	je     a894 <mlx_loop+0xb4>
    a90a:	4c 89 e6             	mov    rsi,r12
    a90d:	48 89 df             	mov    rdi,rbx
    a910:	31 c0                	xor    eax,eax
    a912:	ff 54 cd 00          	call   QWORD PTR [rbp+rcx*8+0x0]
    a916:	e9 79 ff ff ff       	jmp    a894 <mlx_loop+0xb4>
    a91b:	48 8b 73 70          	mov    rsi,QWORD PTR [rbx+0x70]
    a91f:	48 39 74 24 48       	cmp    QWORD PTR [rsp+0x48],rsi
    a924:	75 d5                	jne    a8fb <mlx_loop+0x11b>
    a926:	48 8b 8a e8 01 00 00 	mov    rcx,QWORD PTR [rdx+0x1e8]
    a92d:	48 85 c9             	test   rcx,rcx
    a930:	74 c9                	je     a8fb <mlx_loop+0x11b>
    a932:	48 89 54 24 08       	mov    QWORD PTR [rsp+0x8],rdx
    a937:	48 8b ba f0 01 00 00 	mov    rdi,QWORD PTR [rdx+0x1f0]
    a93e:	31 c0                	xor    eax,eax
    a940:	ff d1                	call   rcx
    a942:	8b 44 24 10          	mov    eax,DWORD PTR [rsp+0x10]
    a946:	48 8b 54 24 08       	mov    rdx,QWORD PTR [rsp+0x8]
    a94b:	e9 3f ff ff ff       	jmp    a88f <mlx_loop+0xaf>
    a950:	e8 8b 7d ff ff       	call   26e0 <__stack_chk_fail@plt>
    a955:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    a95c:	00 00 00 
    a95f:	90                   	nop

000000000000a960 <mlx_key_hook>:
    a960:	f3 0f 1e fa          	endbr64 
    a964:	48 89 b7 98 00 00 00 	mov    QWORD PTR [rdi+0x98],rsi
    a96b:	48 89 97 a0 00 00 00 	mov    QWORD PTR [rdi+0xa0],rdx
    a972:	c7 87 90 00 00 00 02 	mov    DWORD PTR [rdi+0x90],0x2
    a979:	00 00 00 
    a97c:	c3                   	ret    
    a97d:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000a980 <mlx_int_anti_resize_win>:
    a980:	f3 0f 1e fa          	endbr64 
    a984:	41 54                	push   r12
    a986:	66 0f 6e d1          	movd   xmm2,ecx
    a98a:	66 0f 6e c2          	movd   xmm0,edx
    a98e:	55                   	push   rbp
    a98f:	66 0f 62 c2          	punpckldq xmm0,xmm2
    a993:	48 89 f5             	mov    rbp,rsi
    a996:	53                   	push   rbx
    a997:	66 0f 6f c8          	movdqa xmm1,xmm0
    a99b:	48 89 fb             	mov    rbx,rdi
    a99e:	66 0f 6c c8          	punpcklqdq xmm1,xmm0
    a9a2:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    a9a9:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
    a9ac:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    a9b3:	00 00 
    a9b5:	48 89 84 24 88 00 00 	mov    QWORD PTR [rsp+0x88],rax
    a9bc:	00 
    a9bd:	31 c0                	xor    eax,eax
    a9bf:	4c 8d 64 24 30       	lea    r12,[rsp+0x30]
    a9c4:	48 8d 4c 24 28       	lea    rcx,[rsp+0x28]
    a9c9:	0f 29 0c 24          	movaps XMMWORD PTR [rsp],xmm1
    a9cd:	4c 89 e2             	mov    rdx,r12
    a9d0:	66 0f d6 44 24 18    	movq   QWORD PTR [rsp+0x18],xmm0
    a9d6:	e8 d5 7a ff ff       	call   24b0 <XGetWMNormalHints@plt>
    a9db:	66 0f 6f 0c 24       	movdqa xmm1,XMMWORD PTR [rsp]
    a9e0:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    a9e3:	4c 89 e2             	mov    rdx,r12
    a9e6:	f3 0f 7e 44 24 18    	movq   xmm0,QWORD PTR [rsp+0x18]
    a9ec:	48 89 ee             	mov    rsi,rbp
    a9ef:	48 c7 44 24 30 3c 00 	mov    QWORD PTR [rsp+0x30],0x3c
    a9f6:	00 00 
    a9f8:	0f 29 4c 24 40       	movaps XMMWORD PTR [rsp+0x40],xmm1
    a9fd:	66 0f d6 44 24 50    	movq   QWORD PTR [rsp+0x50],xmm0
    aa03:	e8 48 7b ff ff       	call   2550 <XSetWMNormalHints@plt>
    aa08:	48 8b 84 24 88 00 00 	mov    rax,QWORD PTR [rsp+0x88]
    aa0f:	00 
    aa10:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    aa17:	00 00 
    aa19:	75 0e                	jne    aa29 <mlx_int_anti_resize_win+0xa9>
    aa1b:	48 81 c4 90 00 00 00 	add    rsp,0x90
    aa22:	31 c0                	xor    eax,eax
    aa24:	5b                   	pop    rbx
    aa25:	5d                   	pop    rbp
    aa26:	41 5c                	pop    r12
    aa28:	c3                   	ret    
    aa29:	e8 b2 7c ff ff       	call   26e0 <__stack_chk_fail@plt>
    aa2e:	66 90                	xchg   ax,ax

000000000000aa30 <mlx_int_wait_first_expose>:
    aa30:	f3 0f 1e fa          	endbr64 
    aa34:	55                   	push   rbp
    aa35:	ba 00 80 00 00       	mov    edx,0x8000
    aa3a:	53                   	push   rbx
    aa3b:	48 89 fb             	mov    rbx,rdi
    aa3e:	48 81 ec d8 00 00 00 	sub    rsp,0xd8
    aa45:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
    aa48:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    aa4f:	00 00 
    aa51:	48 89 84 24 c8 00 00 	mov    QWORD PTR [rsp+0xc8],rax
    aa58:	00 
    aa59:	31 c0                	xor    eax,eax
    aa5b:	48 89 e5             	mov    rbp,rsp
    aa5e:	48 89 e9             	mov    rcx,rbp
    aa61:	e8 ea 7b ff ff       	call   2650 <XWindowEvent@plt>
    aa66:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    aa69:	48 89 ee             	mov    rsi,rbp
    aa6c:	e8 1f 7c ff ff       	call   2690 <XPutBackEvent@plt>
    aa71:	48 8b 84 24 c8 00 00 	mov    rax,QWORD PTR [rsp+0xc8]
    aa78:	00 
    aa79:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    aa80:	00 00 
    aa82:	75 0c                	jne    aa90 <mlx_int_wait_first_expose+0x60>
    aa84:	48 81 c4 d8 00 00 00 	add    rsp,0xd8
    aa8b:	31 c0                	xor    eax,eax
    aa8d:	5b                   	pop    rbx
    aa8e:	5d                   	pop    rbp
    aa8f:	c3                   	ret    
    aa90:	e8 4b 7c ff ff       	call   26e0 <__stack_chk_fail@plt>
    aa95:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    aa9c:	00 00 00 
    aa9f:	90                   	nop

000000000000aaa0 <mlx_int_get_visual>:
    aaa0:	f3 0f 1e fa          	endbr64 
    aaa4:	41 54                	push   r12
    aaa6:	45 31 e4             	xor    r12d,r12d
    aaa9:	53                   	push   rbx
    aaaa:	48 89 fb             	mov    rbx,rdi
    aaad:	48 83 ec 68          	sub    rsp,0x68
    aab1:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    aab8:	00 00 
    aaba:	48 89 44 24 58       	mov    QWORD PTR [rsp+0x58],rax
    aabf:	31 c0                	xor    eax,eax
    aac1:	c7 47 28 00 00 00 00 	mov    DWORD PTR [rdi+0x28],0x0
    aac8:	48 63 43 10          	movsxd rax,DWORD PTR [rbx+0x10]
    aacc:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
    aacf:	48 c1 e0 07          	shl    rax,0x7
    aad3:	48 03 87 e8 00 00 00 	add    rax,QWORD PTR [rdi+0xe8]
    aada:	48 8b 40 40          	mov    rax,QWORD PTR [rax+0x40]
    aade:	83 78 10 04          	cmp    DWORD PTR [rax+0x10],0x4
    aae2:	48 89 43 18          	mov    QWORD PTR [rbx+0x18],rax
    aae6:	74 36                	je     ab1e <mlx_int_get_visual+0x7e>
    aae8:	8b 43 14             	mov    eax,DWORD PTR [rbx+0x14]
    aaeb:	48 8d 4c 24 0c       	lea    rcx,[rsp+0xc]
    aaf0:	48 8d 54 24 10       	lea    rdx,[rsp+0x10]
    aaf5:	be 0c 00 00 00       	mov    esi,0xc
    aafa:	c7 44 24 28 04 00 00 	mov    DWORD PTR [rsp+0x28],0x4
    ab01:	00 
    ab02:	89 44 24 24          	mov    DWORD PTR [rsp+0x24],eax
    ab06:	e8 35 7c ff ff       	call   2740 <XGetVisualInfo@plt>
    ab0b:	48 85 c0             	test   rax,rax
    ab0e:	74 29                	je     ab39 <mlx_int_get_visual+0x99>
    ab10:	48 8b 00             	mov    rax,QWORD PTR [rax]
    ab13:	c7 43 28 01 00 00 00 	mov    DWORD PTR [rbx+0x28],0x1
    ab1a:	48 89 43 18          	mov    QWORD PTR [rbx+0x18],rax
    ab1e:	48 8b 44 24 58       	mov    rax,QWORD PTR [rsp+0x58]
    ab23:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    ab2a:	00 00 
    ab2c:	75 13                	jne    ab41 <mlx_int_get_visual+0xa1>
    ab2e:	48 83 c4 68          	add    rsp,0x68
    ab32:	44 89 e0             	mov    eax,r12d
    ab35:	5b                   	pop    rbx
    ab36:	41 5c                	pop    r12
    ab38:	c3                   	ret    
    ab39:	41 bc ff ff ff ff    	mov    r12d,0xffffffff
    ab3f:	eb dd                	jmp    ab1e <mlx_int_get_visual+0x7e>
    ab41:	e8 9a 7b ff ff       	call   26e0 <__stack_chk_fail@plt>
    ab46:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    ab4d:	00 00 00 

000000000000ab50 <shm_att_pb>:
    ab50:	f3 0f 1e fa          	endbr64 
    ab54:	8b 46 20             	mov    eax,DWORD PTR [rsi+0x20]
    ab57:	25 00 ff ff 00       	and    eax,0xffff00
    ab5c:	3d 00 92 01 00       	cmp    eax,0x19200
    ab61:	74 0d                	je     ab70 <shm_att_pb+0x20>
    ab63:	c7 05 0b 68 00 00 01 	mov    DWORD PTR [rip+0x680b],0x1        # 11378 <mlx_X_error>
    ab6a:	00 00 00 
    ab6d:	c3                   	ret    
    ab6e:	66 90                	xchg   ax,ax
    ab70:	48 83 ec 08          	sub    rsp,0x8
    ab74:	ba 38 00 00 00       	mov    edx,0x38
    ab79:	bf 02 00 00 00       	mov    edi,0x2
    ab7e:	48 8d 35 23 18 00 00 	lea    rsi,[rip+0x1823]        # c3a8 <CSWTCH.3+0x2e8>
    ab85:	e8 56 7c ff ff       	call   27e0 <write@plt>
    ab8a:	c7 05 e4 67 00 00 01 	mov    DWORD PTR [rip+0x67e4],0x1        # 11378 <mlx_X_error>
    ab91:	00 00 00 
    ab94:	48 83 c4 08          	add    rsp,0x8
    ab98:	c3                   	ret    
    ab99:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

000000000000aba0 <mlx_int_new_xshm_image>:
    aba0:	f3 0f 1e fa          	endbr64 
    aba4:	41 57                	push   r15
    aba6:	41 56                	push   r14
    aba8:	41 55                	push   r13
    abaa:	41 89 d5             	mov    r13d,edx
    abad:	41 54                	push   r12
    abaf:	41 89 f4             	mov    r12d,esi
    abb2:	be 01 00 00 00       	mov    esi,0x1
    abb7:	55                   	push   rbp
    abb8:	89 cd                	mov    ebp,ecx
    abba:	53                   	push   rbx
    abbb:	48 89 fb             	mov    rbx,rdi
    abbe:	bf 58 00 00 00       	mov    edi,0x58
    abc3:	48 83 ec 18          	sub    rsp,0x18
    abc7:	e8 44 7b ff ff       	call   2710 <calloc@plt>
    abcc:	49 89 c7             	mov    r15,rax
    abcf:	48 85 c0             	test   rax,rax
    abd2:	0f 84 3d 01 00 00    	je     ad15 <mlx_int_new_xshm_image+0x175>
    abd8:	41 55                	push   r13
    abda:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    abdd:	4c 8d 70 38          	lea    r14,[rax+0x38]
    abe1:	45 31 c0             	xor    r8d,r8d
    abe4:	41 54                	push   r12
    abe6:	8b 53 14             	mov    edx,DWORD PTR [rbx+0x14]
    abe9:	4d 89 f1             	mov    r9,r14
    abec:	89 e9                	mov    ecx,ebp
    abee:	48 8b 73 18          	mov    rsi,QWORD PTR [rbx+0x18]
    abf2:	e8 19 7a ff ff       	call   2610 <XShmCreateImage@plt>
    abf7:	49 89 07             	mov    QWORD PTR [r15],rax
    abfa:	5f                   	pop    rdi
    abfb:	41 58                	pop    r8
    abfd:	48 85 c0             	test   rax,rax
    ac00:	0f 84 53 01 00 00    	je     ad59 <mlx_int_new_xshm_image+0x1b9>
    ac06:	41 8d 74 24 20       	lea    esi,[r12+0x20]
    ac0b:	66 0f 6e 40 2c       	movd   xmm0,DWORD PTR [rax+0x2c]
    ac10:	66 0f 6e 50 30       	movd   xmm2,DWORD PTR [rax+0x30]
    ac15:	41 89 6f 2c          	mov    DWORD PTR [r15+0x2c],ebp
    ac19:	41 0f af f5          	imul   esi,r13d
    ac1d:	66 41 0f 6e dd       	movd   xmm3,r13d
    ac22:	66 41 0f 6e cc       	movd   xmm1,r12d
    ac27:	31 ff                	xor    edi,edi
    ac29:	66 0f 62 c2          	punpckldq xmm0,xmm2
    ac2d:	66 0f 62 cb          	punpckldq xmm1,xmm3
    ac31:	ba ff 03 00 00       	mov    edx,0x3ff
    ac36:	66 0f 6c c1          	punpcklqdq xmm0,xmm1
    ac3a:	c1 e6 02             	shl    esi,0x2
    ac3d:	41 0f 11 47 18       	movups XMMWORD PTR [r15+0x18],xmm0
    ac42:	48 63 f6             	movsxd rsi,esi
    ac45:	e8 d6 7a ff ff       	call   2720 <shmget@plt>
    ac4a:	41 89 47 40          	mov    DWORD PTR [r15+0x40],eax
    ac4e:	89 c7                	mov    edi,eax
    ac50:	83 f8 ff             	cmp    eax,0xffffffff
    ac53:	0f 84 f7 00 00 00    	je     ad50 <mlx_int_new_xshm_image+0x1b0>
    ac59:	49 8b 0f             	mov    rcx,QWORD PTR [r15]
    ac5c:	31 d2                	xor    edx,edx
    ac5e:	31 f6                	xor    esi,esi
    ac60:	48 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],rcx
    ac65:	e8 c6 7b ff ff       	call   2830 <shmat@plt>
    ac6a:	48 8b 4c 24 08       	mov    rcx,QWORD PTR [rsp+0x8]
    ac6f:	48 89 41 10          	mov    QWORD PTR [rcx+0x10],rax
    ac73:	49 89 47 48          	mov    QWORD PTR [r15+0x48],rax
    ac77:	49 89 47 30          	mov    QWORD PTR [r15+0x30],rax
    ac7b:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
    ac7f:	0f 84 be 00 00 00    	je     ad43 <mlx_int_new_xshm_image+0x1a3>
    ac85:	41 c7 47 50 00 00 00 	mov    DWORD PTR [r15+0x50],0x0
    ac8c:	00 
    ac8d:	48 8d 3d bc fe ff ff 	lea    rdi,[rip+0xfffffffffffffebc]        # ab50 <shm_att_pb>
    ac94:	c7 05 da 66 00 00 00 	mov    DWORD PTR [rip+0x66da],0x0        # 11378 <mlx_X_error>
    ac9b:	00 00 00 
    ac9e:	e8 cd 7a ff ff       	call   2770 <XSetErrorHandler@plt>
    aca3:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    aca6:	4c 89 f6             	mov    rsi,r14
    aca9:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    acae:	e8 4d 7a ff ff       	call   2700 <XShmAttach@plt>
    acb3:	85 c0                	test   eax,eax
    acb5:	74 79                	je     ad30 <mlx_int_new_xshm_image+0x190>
    acb7:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    acba:	31 f6                	xor    esi,esi
    acbc:	e8 0f 7a ff ff       	call   26d0 <XSync@plt>
    acc1:	8b 35 b1 66 00 00    	mov    esi,DWORD PTR [rip+0x66b1]        # 11378 <mlx_X_error>
    acc7:	85 f6                	test   esi,esi
    acc9:	75 65                	jne    ad30 <mlx_int_new_xshm_image+0x190>
    accb:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
    acd0:	e8 9b 7a ff ff       	call   2770 <XSetErrorHandler@plt>
    acd5:	41 8b 7f 40          	mov    edi,DWORD PTR [r15+0x40]
    acd9:	31 d2                	xor    edx,edx
    acdb:	31 f6                	xor    esi,esi
    acdd:	e8 be 7a ff ff       	call   27a0 <shmctl@plt>
    ace2:	39 6b 4c             	cmp    DWORD PTR [rbx+0x4c],ebp
    ace5:	0f 84 95 00 00 00    	je     ad80 <mlx_int_new_xshm_image+0x1e0>
    aceb:	48 8b 73 08          	mov    rsi,QWORD PTR [rbx+0x8]
    acef:	44 8b 43 14          	mov    r8d,DWORD PTR [rbx+0x14]
    acf3:	44 89 e2             	mov    edx,r12d
    acf6:	44 89 e9             	mov    ecx,r13d
    acf9:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    acfc:	e8 af 7a ff ff       	call   27b0 <XCreatePixmap@plt>
    ad01:	ba 02 00 00 00       	mov    edx,0x2
    ad06:	49 89 47 08          	mov    QWORD PTR [r15+0x8],rax
    ad0a:	8b 43 50             	mov    eax,DWORD PTR [rbx+0x50]
    ad0d:	41 89 57 28          	mov    DWORD PTR [r15+0x28],edx
    ad11:	85 c0                	test   eax,eax
    ad13:	75 5b                	jne    ad70 <mlx_int_new_xshm_image+0x1d0>
    ad15:	48 83 c4 18          	add    rsp,0x18
    ad19:	4c 89 f8             	mov    rax,r15
    ad1c:	5b                   	pop    rbx
    ad1d:	5d                   	pop    rbp
    ad1e:	41 5c                	pop    r12
    ad20:	41 5d                	pop    r13
    ad22:	41 5e                	pop    r14
    ad24:	41 5f                	pop    r15
    ad26:	c3                   	ret    
    ad27:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    ad2e:	00 00 
    ad30:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
    ad35:	e8 36 7a ff ff       	call   2770 <XSetErrorHandler@plt>
    ad3a:	49 8b 7f 30          	mov    rdi,QWORD PTR [r15+0x30]
    ad3e:	e8 3d 77 ff ff       	call   2480 <shmdt@plt>
    ad43:	41 8b 7f 40          	mov    edi,DWORD PTR [r15+0x40]
    ad47:	31 d2                	xor    edx,edx
    ad49:	31 f6                	xor    esi,esi
    ad4b:	e8 50 7a ff ff       	call   27a0 <shmctl@plt>
    ad50:	49 8b 07             	mov    rax,QWORD PTR [r15]
    ad53:	48 89 c7             	mov    rdi,rax
    ad56:	ff 50 60             	call   QWORD PTR [rax+0x60]
    ad59:	4c 89 ff             	mov    rdi,r15
    ad5c:	45 31 ff             	xor    r15d,r15d
    ad5f:	e8 5c 78 ff ff       	call   25c0 <free@plt>
    ad64:	eb af                	jmp    ad15 <mlx_int_new_xshm_image+0x175>
    ad66:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    ad6d:	00 00 00 
    ad70:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    ad73:	e8 48 79 ff ff       	call   26c0 <XFlush@plt>
    ad78:	eb 9b                	jmp    ad15 <mlx_int_new_xshm_image+0x175>
    ad7a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    ad80:	8b 43 14             	mov    eax,DWORD PTR [rbx+0x14]
    ad83:	48 83 ec 08          	sub    rsp,0x8
    ad87:	49 8b 57 48          	mov    rdx,QWORD PTR [r15+0x48]
    ad8b:	4c 89 f1             	mov    rcx,r14
    ad8e:	48 8b 73 08          	mov    rsi,QWORD PTR [rbx+0x8]
    ad92:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    ad95:	45 89 e9             	mov    r9d,r13d
    ad98:	45 89 e0             	mov    r8d,r12d
    ad9b:	50                   	push   rax
    ad9c:	e8 6f 77 ff ff       	call   2510 <XShmCreatePixmap@plt>
    ada1:	5a                   	pop    rdx
    ada2:	ba 03 00 00 00       	mov    edx,0x3
    ada7:	59                   	pop    rcx
    ada8:	e9 59 ff ff ff       	jmp    ad06 <mlx_int_new_xshm_image+0x166>
    adad:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000adb0 <mlx_int_new_image>:
    adb0:	f3 0f 1e fa          	endbr64 
    adb4:	41 56                	push   r14
    adb6:	41 89 d6             	mov    r14d,edx
    adb9:	41 55                	push   r13
    adbb:	41 89 f5             	mov    r13d,esi
    adbe:	41 54                	push   r12
    adc0:	55                   	push   rbp
    adc1:	89 cd                	mov    ebp,ecx
    adc3:	53                   	push   rbx
    adc4:	48 89 fb             	mov    rbx,rdi
    adc7:	bf 58 00 00 00       	mov    edi,0x58
    adcc:	e8 6f 77 ff ff       	call   2540 <malloc@plt>
    add1:	49 89 c4             	mov    r12,rax
    add4:	48 85 c0             	test   rax,rax
    add7:	0f 84 b5 00 00 00    	je     ae92 <mlx_int_new_image+0xe2>
    addd:	41 8d 7d 20          	lea    edi,[r13+0x20]
    ade1:	be 01 00 00 00       	mov    esi,0x1
    ade6:	41 0f af fe          	imul   edi,r14d
    adea:	c1 e7 02             	shl    edi,0x2
    aded:	48 63 ff             	movsxd rdi,edi
    adf0:	e8 1b 79 ff ff       	call   2710 <calloc@plt>
    adf5:	49 89 44 24 30       	mov    QWORD PTR [r12+0x30],rax
    adfa:	49 89 c1             	mov    r9,rax
    adfd:	48 85 c0             	test   rax,rax
    ae00:	0f 84 bc 00 00 00    	je     aec2 <mlx_int_new_image+0x112>
    ae06:	6a 00                	push   0x0
    ae08:	8b 53 14             	mov    edx,DWORD PTR [rbx+0x14]
    ae0b:	45 31 c0             	xor    r8d,r8d
    ae0e:	89 e9                	mov    ecx,ebp
    ae10:	48 8b 73 18          	mov    rsi,QWORD PTR [rbx+0x18]
    ae14:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    ae17:	6a 20                	push   0x20
    ae19:	41 56                	push   r14
    ae1b:	41 55                	push   r13
    ae1d:	e8 de 76 ff ff       	call   2500 <XCreateImage@plt>
    ae22:	48 83 c4 20          	add    rsp,0x20
    ae26:	49 89 04 24          	mov    QWORD PTR [r12],rax
    ae2a:	48 85 c0             	test   rax,rax
    ae2d:	0f 84 85 00 00 00    	je     aeb8 <mlx_int_new_image+0x108>
    ae33:	66 0f 6e 40 2c       	movd   xmm0,DWORD PTR [rax+0x2c]
    ae38:	66 0f 6e 58 30       	movd   xmm3,DWORD PTR [rax+0x30]
    ae3d:	44 89 f1             	mov    ecx,r14d
    ae40:	44 89 ea             	mov    edx,r13d
    ae43:	66 41 0f 6e d6       	movd   xmm2,r14d
    ae48:	66 41 0f 6e cd       	movd   xmm1,r13d
    ae4d:	48 8b 73 08          	mov    rsi,QWORD PTR [rbx+0x8]
    ae51:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    ae54:	66 0f 62 ca          	punpckldq xmm1,xmm2
    ae58:	66 0f 62 c3          	punpckldq xmm0,xmm3
    ae5c:	44 8b 43 14          	mov    r8d,DWORD PTR [rbx+0x14]
    ae60:	49 c7 44 24 10 00 00 	mov    QWORD PTR [r12+0x10],0x0
    ae67:	00 00 
    ae69:	66 0f 6c c1          	punpcklqdq xmm0,xmm1
    ae6d:	41 0f 11 44 24 18    	movups XMMWORD PTR [r12+0x18],xmm0
    ae73:	e8 38 79 ff ff       	call   27b0 <XCreatePixmap@plt>
    ae78:	41 89 6c 24 2c       	mov    DWORD PTR [r12+0x2c],ebp
    ae7d:	49 89 44 24 08       	mov    QWORD PTR [r12+0x8],rax
    ae82:	8b 43 50             	mov    eax,DWORD PTR [rbx+0x50]
    ae85:	41 c7 44 24 28 01 00 	mov    DWORD PTR [r12+0x28],0x1
    ae8c:	00 00 
    ae8e:	85 c0                	test   eax,eax
    ae90:	75 0e                	jne    aea0 <mlx_int_new_image+0xf0>
    ae92:	5b                   	pop    rbx
    ae93:	4c 89 e0             	mov    rax,r12
    ae96:	5d                   	pop    rbp
    ae97:	41 5c                	pop    r12
    ae99:	41 5d                	pop    r13
    ae9b:	41 5e                	pop    r14
    ae9d:	c3                   	ret    
    ae9e:	66 90                	xchg   ax,ax
    aea0:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    aea3:	e8 18 78 ff ff       	call   26c0 <XFlush@plt>
    aea8:	5b                   	pop    rbx
    aea9:	4c 89 e0             	mov    rax,r12
    aeac:	5d                   	pop    rbp
    aead:	41 5c                	pop    r12
    aeaf:	41 5d                	pop    r13
    aeb1:	41 5e                	pop    r14
    aeb3:	c3                   	ret    
    aeb4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    aeb8:	49 8b 7c 24 30       	mov    rdi,QWORD PTR [r12+0x30]
    aebd:	e8 fe 76 ff ff       	call   25c0 <free@plt>
    aec2:	4c 89 e7             	mov    rdi,r12
    aec5:	45 31 e4             	xor    r12d,r12d
    aec8:	e8 f3 76 ff ff       	call   25c0 <free@plt>
    aecd:	eb c3                	jmp    ae92 <mlx_int_new_image+0xe2>
    aecf:	90                   	nop

000000000000aed0 <mlx_new_image>:
    aed0:	f3 0f 1e fa          	endbr64 
    aed4:	41 55                	push   r13
    aed6:	41 89 d5             	mov    r13d,edx
    aed9:	41 54                	push   r12
    aedb:	41 89 f4             	mov    r12d,esi
    aede:	55                   	push   rbp
    aedf:	8b 47 48             	mov    eax,DWORD PTR [rdi+0x48]
    aee2:	48 89 fd             	mov    rbp,rdi
    aee5:	85 c0                	test   eax,eax
    aee7:	74 17                	je     af00 <mlx_new_image+0x30>
    aee9:	b9 02 00 00 00       	mov    ecx,0x2
    aeee:	e8 ad fc ff ff       	call   aba0 <mlx_int_new_xshm_image>
    aef3:	48 85 c0             	test   rax,rax
    aef6:	74 08                	je     af00 <mlx_new_image+0x30>
    aef8:	5d                   	pop    rbp
    aef9:	41 5c                	pop    r12
    aefb:	41 5d                	pop    r13
    aefd:	c3                   	ret    
    aefe:	66 90                	xchg   ax,ax
    af00:	44 89 ea             	mov    edx,r13d
    af03:	44 89 e6             	mov    esi,r12d
    af06:	48 89 ef             	mov    rdi,rbp
    af09:	b9 02 00 00 00       	mov    ecx,0x2
    af0e:	5d                   	pop    rbp
    af0f:	41 5c                	pop    r12
    af11:	41 5d                	pop    r13
    af13:	e9 98 fe ff ff       	jmp    adb0 <mlx_int_new_image>
    af18:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    af1f:	00 

000000000000af20 <mlx_new_image2>:
    af20:	f3 0f 1e fa          	endbr64 
    af24:	41 55                	push   r13
    af26:	41 89 d5             	mov    r13d,edx
    af29:	41 54                	push   r12
    af2b:	41 89 f4             	mov    r12d,esi
    af2e:	55                   	push   rbp
    af2f:	8b 47 48             	mov    eax,DWORD PTR [rdi+0x48]
    af32:	48 89 fd             	mov    rbp,rdi
    af35:	85 c0                	test   eax,eax
    af37:	74 17                	je     af50 <mlx_new_image2+0x30>
    af39:	b9 01 00 00 00       	mov    ecx,0x1
    af3e:	e8 5d fc ff ff       	call   aba0 <mlx_int_new_xshm_image>
    af43:	48 85 c0             	test   rax,rax
    af46:	74 08                	je     af50 <mlx_new_image2+0x30>
    af48:	5d                   	pop    rbp
    af49:	41 5c                	pop    r12
    af4b:	41 5d                	pop    r13
    af4d:	c3                   	ret    
    af4e:	66 90                	xchg   ax,ax
    af50:	44 89 ea             	mov    edx,r13d
    af53:	44 89 e6             	mov    esi,r12d
    af56:	48 89 ef             	mov    rdi,rbp
    af59:	b9 01 00 00 00       	mov    ecx,0x1
    af5e:	5d                   	pop    rbp
    af5f:	41 5c                	pop    r12
    af61:	41 5d                	pop    r13
    af63:	e9 48 fe ff ff       	jmp    adb0 <mlx_int_new_image>
    af68:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    af6f:	00 

000000000000af70 <mlx_get_data_addr>:
    af70:	f3 0f 1e fa          	endbr64 
    af74:	8b 47 1c             	mov    eax,DWORD PTR [rdi+0x1c]
    af77:	89 06                	mov    DWORD PTR [rsi],eax
    af79:	8b 47 18             	mov    eax,DWORD PTR [rdi+0x18]
    af7c:	89 02                	mov    DWORD PTR [rdx],eax
    af7e:	48 8b 07             	mov    rax,QWORD PTR [rdi]
    af81:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    af84:	89 01                	mov    DWORD PTR [rcx],eax
    af86:	48 8b 47 30          	mov    rax,QWORD PTR [rdi+0x30]
    af8a:	c3                   	ret    
    af8b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000af90 <mlx_put_image_to_window>:
    af90:	f3 0f 1e fa          	endbr64 
    af94:	41 57                	push   r15
    af96:	41 56                	push   r14
    af98:	45 89 c6             	mov    r14d,r8d
    af9b:	41 55                	push   r13
    af9d:	41 89 cd             	mov    r13d,ecx
    afa0:	41 54                	push   r12
    afa2:	49 89 f4             	mov    r12,rsi
    afa5:	55                   	push   rbp
    afa6:	48 89 fd             	mov    rbp,rdi
    afa9:	53                   	push   rbx
    afaa:	48 89 d3             	mov    rbx,rdx
    afad:	48 83 ec 18          	sub    rsp,0x18
    afb1:	4c 8b 7a 10          	mov    r15,QWORD PTR [rdx+0x10]
    afb5:	4c 8b 56 08          	mov    r10,QWORD PTR [rsi+0x8]
    afb9:	4d 85 ff             	test   r15,r15
    afbc:	74 14                	je     afd2 <mlx_put_image_to_window+0x42>
    afbe:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
    afc1:	44 89 c1             	mov    ecx,r8d
    afc4:	44 89 ea             	mov    edx,r13d
    afc7:	4c 89 fe             	mov    rsi,r15
    afca:	e8 21 78 ff ff       	call   27f0 <XSetClipOrigin@plt>
    afcf:	4d 89 fa             	mov    r10,r15
    afd2:	8b 43 28             	mov    eax,DWORD PTR [rbx+0x28]
    afd5:	83 f8 02             	cmp    eax,0x2
    afd8:	0f 84 a2 00 00 00    	je     b080 <mlx_put_image_to_window+0xf0>
    afde:	83 f8 01             	cmp    eax,0x1
    afe1:	74 5d                	je     b040 <mlx_put_image_to_window+0xb0>
    afe3:	8b 43 24             	mov    eax,DWORD PTR [rbx+0x24]
    afe6:	41 56                	push   r14
    afe8:	45 31 c9             	xor    r9d,r9d
    afeb:	45 31 c0             	xor    r8d,r8d
    afee:	48 8b 73 08          	mov    rsi,QWORD PTR [rbx+0x8]
    aff2:	49 8b 14 24          	mov    rdx,QWORD PTR [r12]
    aff6:	41 55                	push   r13
    aff8:	4c 89 d1             	mov    rcx,r10
    affb:	50                   	push   rax
    affc:	8b 43 20             	mov    eax,DWORD PTR [rbx+0x20]
    afff:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
    b003:	50                   	push   rax
    b004:	e8 c7 75 ff ff       	call   25d0 <XCopyArea@plt>
    b009:	8b 45 50             	mov    eax,DWORD PTR [rbp+0x50]
    b00c:	48 83 c4 20          	add    rsp,0x20
    b010:	85 c0                	test   eax,eax
    b012:	75 14                	jne    b028 <mlx_put_image_to_window+0x98>
    b014:	48 83 c4 18          	add    rsp,0x18
    b018:	5b                   	pop    rbx
    b019:	5d                   	pop    rbp
    b01a:	41 5c                	pop    r12
    b01c:	41 5d                	pop    r13
    b01e:	41 5e                	pop    r14
    b020:	41 5f                	pop    r15
    b022:	c3                   	ret    
    b023:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    b028:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
    b02c:	48 83 c4 18          	add    rsp,0x18
    b030:	5b                   	pop    rbx
    b031:	5d                   	pop    rbp
    b032:	41 5c                	pop    r12
    b034:	41 5d                	pop    r13
    b036:	41 5e                	pop    r14
    b038:	41 5f                	pop    r15
    b03a:	e9 81 76 ff ff       	jmp    26c0 <XFlush@plt>
    b03f:	90                   	nop
    b040:	8b 43 24             	mov    eax,DWORD PTR [rbx+0x24]
    b043:	4c 89 54 24 08       	mov    QWORD PTR [rsp+0x8],r10
    b048:	45 31 c9             	xor    r9d,r9d
    b04b:	45 31 c0             	xor    r8d,r8d
    b04e:	49 8b 54 24 08       	mov    rdx,QWORD PTR [r12+0x8]
    b053:	48 8b 73 08          	mov    rsi,QWORD PTR [rbx+0x8]
    b057:	48 8b 0b             	mov    rcx,QWORD PTR [rbx]
    b05a:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
    b05e:	50                   	push   rax
    b05f:	8b 43 20             	mov    eax,DWORD PTR [rbx+0x20]
    b062:	50                   	push   rax
    b063:	6a 00                	push   0x0
    b065:	6a 00                	push   0x0
    b067:	e8 84 76 ff ff       	call   26f0 <XPutImage@plt>
    b06c:	48 83 c4 20          	add    rsp,0x20
    b070:	4c 8b 54 24 08       	mov    r10,QWORD PTR [rsp+0x8]
    b075:	e9 69 ff ff ff       	jmp    afe3 <mlx_put_image_to_window+0x53>
    b07a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    b080:	8b 43 24             	mov    eax,DWORD PTR [rbx+0x24]
    b083:	4c 89 54 24 08       	mov    QWORD PTR [rsp+0x8],r10
    b088:	48 83 ec 08          	sub    rsp,0x8
    b08c:	45 31 c9             	xor    r9d,r9d
    b08f:	49 8b 54 24 08       	mov    rdx,QWORD PTR [r12+0x8]
    b094:	48 8b 73 08          	mov    rsi,QWORD PTR [rbx+0x8]
    b098:	6a 00                	push   0x0
    b09a:	45 31 c0             	xor    r8d,r8d
    b09d:	48 8b 0b             	mov    rcx,QWORD PTR [rbx]
    b0a0:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
    b0a4:	50                   	push   rax
    b0a5:	8b 43 20             	mov    eax,DWORD PTR [rbx+0x20]
    b0a8:	50                   	push   rax
    b0a9:	6a 00                	push   0x0
    b0ab:	6a 00                	push   0x0
    b0ad:	e8 ae 76 ff ff       	call   2760 <XShmPutImage@plt>
    b0b2:	48 83 c4 30          	add    rsp,0x30
    b0b6:	8b 43 28             	mov    eax,DWORD PTR [rbx+0x28]
    b0b9:	4c 8b 54 24 08       	mov    r10,QWORD PTR [rsp+0x8]
    b0be:	e9 1b ff ff ff       	jmp    afde <mlx_put_image_to_window+0x4e>
    b0c3:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    b0ca:	00 00 00 
    b0cd:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000b0d0 <mlx_clear_window>:
    b0d0:	f3 0f 1e fa          	endbr64 
    b0d4:	53                   	push   rbx
    b0d5:	48 89 fb             	mov    rbx,rdi
    b0d8:	48 8b 36             	mov    rsi,QWORD PTR [rsi]
    b0db:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
    b0de:	e8 7d 73 ff ff       	call   2460 <XClearWindow@plt>
    b0e3:	8b 43 50             	mov    eax,DWORD PTR [rbx+0x50]
    b0e6:	85 c0                	test   eax,eax
    b0e8:	75 06                	jne    b0f0 <mlx_clear_window+0x20>
    b0ea:	5b                   	pop    rbx
    b0eb:	c3                   	ret    
    b0ec:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    b0f0:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    b0f3:	5b                   	pop    rbx
    b0f4:	e9 c7 75 ff ff       	jmp    26c0 <XFlush@plt>
    b0f9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

000000000000b100 <mlx_destroy_window>:
    b100:	f3 0f 1e fa          	endbr64 
    b104:	55                   	push   rbp
    b105:	48 89 f5             	mov    rbp,rsi
    b108:	53                   	push   rbx
    b109:	48 89 fb             	mov    rbx,rdi
    b10c:	48 81 ec b8 03 00 00 	sub    rsp,0x3b8
    b113:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b11a:	00 00 
    b11c:	48 89 84 24 a8 03 00 	mov    QWORD PTR [rsp+0x3a8],rax
    b123:	00 
    b124:	48 8b 47 30          	mov    rax,QWORD PTR [rdi+0x30]
    b128:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
    b12d:	48 85 c0             	test   rax,rax
    b130:	74 34                	je     b166 <mlx_destroy_window+0x66>
    b132:	48 89 e1             	mov    rcx,rsp
    b135:	eb 18                	jmp    b14f <mlx_destroy_window+0x4f>
    b137:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    b13e:	00 00 
    b140:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
    b144:	48 85 d2             	test   rdx,rdx
    b147:	74 18                	je     b161 <mlx_destroy_window+0x61>
    b149:	48 89 c1             	mov    rcx,rax
    b14c:	48 89 d0             	mov    rax,rdx
    b14f:	48 39 c5             	cmp    rbp,rax
    b152:	75 ec                	jne    b140 <mlx_destroy_window+0x40>
    b154:	48 8b 55 10          	mov    rdx,QWORD PTR [rbp+0x10]
    b158:	48 89 51 10          	mov    QWORD PTR [rcx+0x10],rdx
    b15c:	48 85 d2             	test   rdx,rdx
    b15f:	75 eb                	jne    b14c <mlx_destroy_window+0x4c>
    b161:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
    b166:	48 8b 75 00          	mov    rsi,QWORD PTR [rbp+0x0]
    b16a:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    b16d:	48 89 43 30          	mov    QWORD PTR [rbx+0x30],rax
    b171:	e8 7a 74 ff ff       	call   25f0 <XDestroyWindow@plt>
    b176:	48 8b 75 08          	mov    rsi,QWORD PTR [rbp+0x8]
    b17a:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    b17d:	e8 9e 74 ff ff       	call   2620 <XFreeGC@plt>
    b182:	48 89 ef             	mov    rdi,rbp
    b185:	e8 36 74 ff ff       	call   25c0 <free@plt>
    b18a:	8b 43 50             	mov    eax,DWORD PTR [rbx+0x50]
    b18d:	85 c0                	test   eax,eax
    b18f:	75 1f                	jne    b1b0 <mlx_destroy_window+0xb0>
    b191:	48 8b 84 24 a8 03 00 	mov    rax,QWORD PTR [rsp+0x3a8]
    b198:	00 
    b199:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    b1a0:	00 00 
    b1a2:	75 30                	jne    b1d4 <mlx_destroy_window+0xd4>
    b1a4:	48 81 c4 b8 03 00 00 	add    rsp,0x3b8
    b1ab:	31 c0                	xor    eax,eax
    b1ad:	5b                   	pop    rbx
    b1ae:	5d                   	pop    rbp
    b1af:	c3                   	ret    
    b1b0:	48 8b 84 24 a8 03 00 	mov    rax,QWORD PTR [rsp+0x3a8]
    b1b7:	00 
    b1b8:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    b1bf:	00 00 
    b1c1:	75 11                	jne    b1d4 <mlx_destroy_window+0xd4>
    b1c3:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    b1c6:	48 81 c4 b8 03 00 00 	add    rsp,0x3b8
    b1cd:	5b                   	pop    rbx
    b1ce:	5d                   	pop    rbp
    b1cf:	e9 ec 74 ff ff       	jmp    26c0 <XFlush@plt>
    b1d4:	e8 07 75 ff ff       	call   26e0 <__stack_chk_fail@plt>
    b1d9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

000000000000b1e0 <mlx_int_param_undef>:
    b1e0:	f3 0f 1e fa          	endbr64 
    b1e4:	c3                   	ret    
    b1e5:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    b1ec:	00 00 00 00 

000000000000b1f0 <mlx_int_param_ButtonPress>:
    b1f0:	f3 0f 1e fa          	endbr64 
    b1f4:	44 8b 56 44          	mov    r10d,DWORD PTR [rsi+0x44]
    b1f8:	44 8b 4e 40          	mov    r9d,DWORD PTR [rsi+0x40]
    b1fc:	31 c0                	xor    eax,eax
    b1fe:	48 8b 8a b8 00 00 00 	mov    rcx,QWORD PTR [rdx+0xb8]
    b205:	8b 7e 54             	mov    edi,DWORD PTR [rsi+0x54]
    b208:	4c 8b 82 b0 00 00 00 	mov    r8,QWORD PTR [rdx+0xb0]
    b20f:	44 89 ce             	mov    esi,r9d
    b212:	44 89 d2             	mov    edx,r10d
    b215:	41 ff e0             	jmp    r8
    b218:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    b21f:	00 

000000000000b220 <mlx_int_param_ButtonRelease>:
    b220:	f3 0f 1e fa          	endbr64 
    b224:	44 8b 56 44          	mov    r10d,DWORD PTR [rsi+0x44]
    b228:	44 8b 4e 40          	mov    r9d,DWORD PTR [rsi+0x40]
    b22c:	31 c0                	xor    eax,eax
    b22e:	48 8b 8a d0 00 00 00 	mov    rcx,QWORD PTR [rdx+0xd0]
    b235:	8b 7e 54             	mov    edi,DWORD PTR [rsi+0x54]
    b238:	4c 8b 82 c8 00 00 00 	mov    r8,QWORD PTR [rdx+0xc8]
    b23f:	44 89 ce             	mov    esi,r9d
    b242:	44 89 d2             	mov    edx,r10d
    b245:	41 ff e0             	jmp    r8
    b248:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    b24f:	00 

000000000000b250 <mlx_int_param_MotionNotify>:
    b250:	f3 0f 1e fa          	endbr64 
    b254:	4c 8b 8a e8 00 00 00 	mov    r9,QWORD PTR [rdx+0xe8]
    b25b:	44 8b 46 44          	mov    r8d,DWORD PTR [rsi+0x44]
    b25f:	31 c0                	xor    eax,eax
    b261:	8b 7e 40             	mov    edi,DWORD PTR [rsi+0x40]
    b264:	48 8b 8a e0 00 00 00 	mov    rcx,QWORD PTR [rdx+0xe0]
    b26b:	44 89 c6             	mov    esi,r8d
    b26e:	4c 89 ca             	mov    rdx,r9
    b271:	ff e1                	jmp    rcx
    b273:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    b27a:	00 00 00 00 
    b27e:	66 90                	xchg   ax,ax

000000000000b280 <mlx_int_param_generic>:
    b280:	f3 0f 1e fa          	endbr64 
    b284:	48 63 06             	movsxd rax,DWORD PTR [rsi]
    b287:	48 8d 04 40          	lea    rax,[rax+rax*2]
    b28b:	48 8d 04 c2          	lea    rax,[rdx+rax*8]
    b28f:	48 8b 50 50          	mov    rdx,QWORD PTR [rax+0x50]
    b293:	48 8b 78 58          	mov    rdi,QWORD PTR [rax+0x58]
    b297:	31 c0                	xor    eax,eax
    b299:	ff e2                	jmp    rdx
    b29b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000b2a0 <mlx_int_param_KeyPress>:
    b2a0:	f3 0f 1e fa          	endbr64 
    b2a4:	55                   	push   rbp
    b2a5:	31 c9                	xor    ecx,ecx
    b2a7:	53                   	push   rbx
    b2a8:	48 83 ec 08          	sub    rsp,0x8
    b2ac:	0f b6 76 54          	movzx  esi,BYTE PTR [rsi+0x54]
    b2b0:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
    b2b3:	48 8b 9a 80 00 00 00 	mov    rbx,QWORD PTR [rdx+0x80]
    b2ba:	48 8b aa 88 00 00 00 	mov    rbp,QWORD PTR [rdx+0x88]
    b2c1:	31 d2                	xor    edx,edx
    b2c3:	e8 a8 72 ff ff       	call   2570 <XkbKeycodeToKeysym@plt>
    b2c8:	48 83 c4 08          	add    rsp,0x8
    b2cc:	48 89 c7             	mov    rdi,rax
    b2cf:	48 89 ee             	mov    rsi,rbp
    b2d2:	48 89 d9             	mov    rcx,rbx
    b2d5:	31 c0                	xor    eax,eax
    b2d7:	5b                   	pop    rbx
    b2d8:	5d                   	pop    rbp
    b2d9:	ff e1                	jmp    rcx
    b2db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000b2e0 <mlx_int_param_KeyRelease>:
    b2e0:	f3 0f 1e fa          	endbr64 
    b2e4:	55                   	push   rbp
    b2e5:	31 c9                	xor    ecx,ecx
    b2e7:	53                   	push   rbx
    b2e8:	48 83 ec 08          	sub    rsp,0x8
    b2ec:	0f b6 76 54          	movzx  esi,BYTE PTR [rsi+0x54]
    b2f0:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
    b2f3:	48 8b 9a 98 00 00 00 	mov    rbx,QWORD PTR [rdx+0x98]
    b2fa:	48 8b aa a0 00 00 00 	mov    rbp,QWORD PTR [rdx+0xa0]
    b301:	31 d2                	xor    edx,edx
    b303:	e8 68 72 ff ff       	call   2570 <XkbKeycodeToKeysym@plt>
    b308:	48 83 c4 08          	add    rsp,0x8
    b30c:	48 89 c7             	mov    rdi,rax
    b30f:	48 89 ee             	mov    rsi,rbp
    b312:	48 89 d9             	mov    rcx,rbx
    b315:	31 c0                	xor    eax,eax
    b317:	5b                   	pop    rbx
    b318:	5d                   	pop    rbp
    b319:	ff e1                	jmp    rcx
    b31b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000b320 <mlx_int_param_Expose>:
    b320:	f3 0f 1e fa          	endbr64 
    b324:	8b 46 38             	mov    eax,DWORD PTR [rsi+0x38]
    b327:	85 c0                	test   eax,eax
    b329:	75 15                	jne    b340 <mlx_int_param_Expose+0x20>
    b32b:	48 8b ba 78 01 00 00 	mov    rdi,QWORD PTR [rdx+0x178]
    b332:	31 c0                	xor    eax,eax
    b334:	48 8b 92 70 01 00 00 	mov    rdx,QWORD PTR [rdx+0x170]
    b33b:	ff e2                	jmp    rdx
    b33d:	0f 1f 00             	nop    DWORD PTR [rax]
    b340:	c3                   	ret    
    b341:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    b348:	00 00 00 
    b34b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000b350 <mlx_int_set_win_event_mask>:
    b350:	f3 0f 1e fa          	endbr64 
    b354:	41 54                	push   r12
    b356:	55                   	push   rbp
    b357:	53                   	push   rbx
    b358:	48 89 fb             	mov    rbx,rdi
    b35b:	48 83 c4 80          	add    rsp,0xffffffffffffff80
    b35f:	4c 8b 67 30          	mov    r12,QWORD PTR [rdi+0x30]
    b363:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b36a:	00 00 
    b36c:	48 89 44 24 78       	mov    QWORD PTR [rsp+0x78],rax
    b371:	31 c0                	xor    eax,eax
    b373:	48 89 e5             	mov    rbp,rsp
    b376:	4d 85 e4             	test   r12,r12
    b379:	74 47                	je     b3c2 <mlx_int_set_win_event_mask+0x72>
    b37b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    b380:	49 8d 84 24 90 03 00 	lea    rax,[r12+0x390]
    b387:	00 
    b388:	49 8d 74 24 30       	lea    rsi,[r12+0x30]
    b38d:	31 d2                	xor    edx,edx
    b38f:	90                   	nop
    b390:	48 63 08             	movsxd rcx,DWORD PTR [rax]
    b393:	48 83 e8 18          	sub    rax,0x18
    b397:	48 09 ca             	or     rdx,rcx
    b39a:	48 39 c6             	cmp    rsi,rax
    b39d:	75 f1                	jne    b390 <mlx_int_set_win_event_mask+0x40>
    b39f:	49 8b 34 24          	mov    rsi,QWORD PTR [r12]
    b3a3:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    b3a6:	48 89 54 24 48       	mov    QWORD PTR [rsp+0x48],rdx
    b3ab:	48 89 e9             	mov    rcx,rbp
    b3ae:	ba 00 08 00 00       	mov    edx,0x800
    b3b3:	e8 88 74 ff ff       	call   2840 <XChangeWindowAttributes@plt>
    b3b8:	4d 8b 64 24 10       	mov    r12,QWORD PTR [r12+0x10]
    b3bd:	4d 85 e4             	test   r12,r12
    b3c0:	75 be                	jne    b380 <mlx_int_set_win_event_mask+0x30>
    b3c2:	48 8b 44 24 78       	mov    rax,QWORD PTR [rsp+0x78]
    b3c7:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    b3ce:	00 00 
    b3d0:	75 0b                	jne    b3dd <mlx_int_set_win_event_mask+0x8d>
    b3d2:	48 83 ec 80          	sub    rsp,0xffffffffffffff80
    b3d6:	31 c0                	xor    eax,eax
    b3d8:	5b                   	pop    rbx
    b3d9:	5d                   	pop    rbp
    b3da:	41 5c                	pop    r12
    b3dc:	c3                   	ret    
    b3dd:	e8 fe 72 ff ff       	call   26e0 <__stack_chk_fail@plt>
    b3e2:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    b3e9:	00 00 00 
    b3ec:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000b3f0 <mlx_hook>:
    b3f0:	f3 0f 1e fa          	endbr64 
    b3f4:	48 63 f6             	movsxd rsi,esi
    b3f7:	48 8d 04 76          	lea    rax,[rsi+rsi*2]
    b3fb:	48 8d 04 c7          	lea    rax,[rdi+rax*8]
    b3ff:	48 89 48 50          	mov    QWORD PTR [rax+0x50],rcx
    b403:	4c 89 40 58          	mov    QWORD PTR [rax+0x58],r8
    b407:	89 50 48             	mov    DWORD PTR [rax+0x48],edx
    b40a:	c3                   	ret    
    b40b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000b410 <mlx_do_key_autorepeatoff>:
    b410:	f3 0f 1e fa          	endbr64 
    b414:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
    b417:	e9 b4 70 ff ff       	jmp    24d0 <XAutoRepeatOff@plt>
    b41c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000b420 <mlx_do_key_autorepeaton>:
    b420:	f3 0f 1e fa          	endbr64 
    b424:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
    b427:	e9 74 71 ff ff       	jmp    25a0 <XAutoRepeatOn@plt>
    b42c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000b430 <mlx_do_sync>:
    b430:	f3 0f 1e fa          	endbr64 
    b434:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
    b437:	31 f6                	xor    esi,esi
    b439:	e9 92 72 ff ff       	jmp    26d0 <XSync@plt>
    b43e:	66 90                	xchg   ax,ax

000000000000b440 <mlx_destroy_image>:
    b440:	f3 0f 1e fa          	endbr64 
    b444:	55                   	push   rbp
    b445:	48 89 f5             	mov    rbp,rsi
    b448:	53                   	push   rbx
    b449:	48 89 fb             	mov    rbx,rdi
    b44c:	48 83 ec 08          	sub    rsp,0x8
    b450:	8b 46 28             	mov    eax,DWORD PTR [rsi+0x28]
    b453:	83 e8 02             	sub    eax,0x2
    b456:	83 f8 01             	cmp    eax,0x1
    b459:	76 55                	jbe    b4b0 <mlx_destroy_image+0x70>
    b45b:	48 8b 45 00          	mov    rax,QWORD PTR [rbp+0x0]
    b45f:	48 89 c7             	mov    rdi,rax
    b462:	ff 50 60             	call   QWORD PTR [rax+0x60]
    b465:	48 8b 75 08          	mov    rsi,QWORD PTR [rbp+0x8]
    b469:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    b46c:	e8 0f 73 ff ff       	call   2780 <XFreePixmap@plt>
    b471:	48 8b 75 10          	mov    rsi,QWORD PTR [rbp+0x10]
    b475:	48 85 f6             	test   rsi,rsi
    b478:	74 08                	je     b482 <mlx_destroy_image+0x42>
    b47a:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    b47d:	e8 9e 71 ff ff       	call   2620 <XFreeGC@plt>
    b482:	48 89 ef             	mov    rdi,rbp
    b485:	e8 36 71 ff ff       	call   25c0 <free@plt>
    b48a:	8b 43 50             	mov    eax,DWORD PTR [rbx+0x50]
    b48d:	85 c0                	test   eax,eax
    b48f:	75 0f                	jne    b4a0 <mlx_destroy_image+0x60>
    b491:	48 83 c4 08          	add    rsp,0x8
    b495:	5b                   	pop    rbx
    b496:	5d                   	pop    rbp
    b497:	c3                   	ret    
    b498:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    b49f:	00 
    b4a0:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    b4a3:	48 83 c4 08          	add    rsp,0x8
    b4a7:	5b                   	pop    rbx
    b4a8:	5d                   	pop    rbp
    b4a9:	e9 12 72 ff ff       	jmp    26c0 <XFlush@plt>
    b4ae:	66 90                	xchg   ax,ax
    b4b0:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
    b4b3:	48 8d 76 38          	lea    rsi,[rsi+0x38]
    b4b7:	e8 44 73 ff ff       	call   2800 <XShmDetach@plt>
    b4bc:	48 8b 7d 48          	mov    rdi,QWORD PTR [rbp+0x48]
    b4c0:	e8 bb 6f ff ff       	call   2480 <shmdt@plt>
    b4c5:	eb 94                	jmp    b45b <mlx_destroy_image+0x1b>
    b4c7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    b4ce:	00 00 

000000000000b4d0 <mlx_get_screen_size>:
    b4d0:	f3 0f 1e fa          	endbr64 
    b4d4:	55                   	push   rbp
    b4d5:	48 89 f5             	mov    rbp,rsi
    b4d8:	53                   	push   rbx
    b4d9:	48 89 d3             	mov    rbx,rdx
    b4dc:	48 81 ec 98 00 00 00 	sub    rsp,0x98
    b4e3:	48 8b 77 08          	mov    rsi,QWORD PTR [rdi+0x8]
    b4e7:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
    b4ea:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b4f1:	00 00 
    b4f3:	48 89 84 24 88 00 00 	mov    QWORD PTR [rsp+0x88],rax
    b4fa:	00 
    b4fb:	31 c0                	xor    eax,eax
    b4fd:	48 89 e2             	mov    rdx,rsp
    b500:	e8 4b 72 ff ff       	call   2750 <XGetWindowAttributes@plt>
    b505:	8b 44 24 08          	mov    eax,DWORD PTR [rsp+0x8]
    b509:	89 45 00             	mov    DWORD PTR [rbp+0x0],eax
    b50c:	8b 44 24 0c          	mov    eax,DWORD PTR [rsp+0xc]
    b510:	89 03                	mov    DWORD PTR [rbx],eax
    b512:	48 8b 84 24 88 00 00 	mov    rax,QWORD PTR [rsp+0x88]
    b519:	00 
    b51a:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    b521:	00 00 
    b523:	75 0c                	jne    b531 <mlx_get_screen_size+0x61>
    b525:	48 81 c4 98 00 00 00 	add    rsp,0x98
    b52c:	31 c0                	xor    eax,eax
    b52e:	5b                   	pop    rbx
    b52f:	5d                   	pop    rbp
    b530:	c3                   	ret    
    b531:	e8 aa 71 ff ff       	call   26e0 <__stack_chk_fail@plt>
    b536:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    b53d:	00 00 00 

000000000000b540 <mlx_destroy_display>:
    b540:	f3 0f 1e fa          	endbr64 
    b544:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
    b547:	e9 b4 70 ff ff       	jmp    2600 <XCloseDisplay@plt>

Disassembly of section .fini:

000000000000b54c <_fini>:
    b54c:	f3 0f 1e fa          	endbr64 
    b550:	48 83 ec 08          	sub    rsp,0x8
    b554:	48 83 c4 08          	add    rsp,0x8
    b558:	c3                   	ret    
