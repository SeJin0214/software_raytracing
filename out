
miniRT:     file format elf64-x86-64


Disassembly of section .init:

0000000000002000 <_init>:
    2000:	f3 0f 1e fa          	endbr64 
    2004:	48 83 ec 08          	sub    rsp,0x8
    2008:	48 8b 05 89 4f 01 00 	mov    rax,QWORD PTR [rip+0x14f89]        # 16f98 <__gmon_start__@Base>
    200f:	48 85 c0             	test   rax,rax
    2012:	74 02                	je     2016 <_init+0x16>
    2014:	ff d0                	call   rax
    2016:	48 83 c4 08          	add    rsp,0x8
    201a:	c3                   	ret    

Disassembly of section .plt:

0000000000002020 <.plt>:
    2020:	ff 35 0a 4d 01 00    	push   QWORD PTR [rip+0x14d0a]        # 16d30 <_GLOBAL_OFFSET_TABLE_+0x8>
    2026:	f2 ff 25 0b 4d 01 00 	bnd jmp QWORD PTR [rip+0x14d0b]        # 16d38 <_GLOBAL_OFFSET_TABLE_+0x10>
    202d:	0f 1f 00             	nop    DWORD PTR [rax]
    2030:	f3 0f 1e fa          	endbr64 
    2034:	68 00 00 00 00       	push   0x0
    2039:	f2 e9 e1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    203f:	90                   	nop
    2040:	f3 0f 1e fa          	endbr64 
    2044:	68 01 00 00 00       	push   0x1
    2049:	f2 e9 d1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    204f:	90                   	nop
    2050:	f3 0f 1e fa          	endbr64 
    2054:	68 02 00 00 00       	push   0x2
    2059:	f2 e9 c1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    205f:	90                   	nop
    2060:	f3 0f 1e fa          	endbr64 
    2064:	68 03 00 00 00       	push   0x3
    2069:	f2 e9 b1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    206f:	90                   	nop
    2070:	f3 0f 1e fa          	endbr64 
    2074:	68 04 00 00 00       	push   0x4
    2079:	f2 e9 a1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    207f:	90                   	nop
    2080:	f3 0f 1e fa          	endbr64 
    2084:	68 05 00 00 00       	push   0x5
    2089:	f2 e9 91 ff ff ff    	bnd jmp 2020 <_init+0x20>
    208f:	90                   	nop
    2090:	f3 0f 1e fa          	endbr64 
    2094:	68 06 00 00 00       	push   0x6
    2099:	f2 e9 81 ff ff ff    	bnd jmp 2020 <_init+0x20>
    209f:	90                   	nop
    20a0:	f3 0f 1e fa          	endbr64 
    20a4:	68 07 00 00 00       	push   0x7
    20a9:	f2 e9 71 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20af:	90                   	nop
    20b0:	f3 0f 1e fa          	endbr64 
    20b4:	68 08 00 00 00       	push   0x8
    20b9:	f2 e9 61 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20bf:	90                   	nop
    20c0:	f3 0f 1e fa          	endbr64 
    20c4:	68 09 00 00 00       	push   0x9
    20c9:	f2 e9 51 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20cf:	90                   	nop
    20d0:	f3 0f 1e fa          	endbr64 
    20d4:	68 0a 00 00 00       	push   0xa
    20d9:	f2 e9 41 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20df:	90                   	nop
    20e0:	f3 0f 1e fa          	endbr64 
    20e4:	68 0b 00 00 00       	push   0xb
    20e9:	f2 e9 31 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20ef:	90                   	nop
    20f0:	f3 0f 1e fa          	endbr64 
    20f4:	68 0c 00 00 00       	push   0xc
    20f9:	f2 e9 21 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20ff:	90                   	nop
    2100:	f3 0f 1e fa          	endbr64 
    2104:	68 0d 00 00 00       	push   0xd
    2109:	f2 e9 11 ff ff ff    	bnd jmp 2020 <_init+0x20>
    210f:	90                   	nop
    2110:	f3 0f 1e fa          	endbr64 
    2114:	68 0e 00 00 00       	push   0xe
    2119:	f2 e9 01 ff ff ff    	bnd jmp 2020 <_init+0x20>
    211f:	90                   	nop
    2120:	f3 0f 1e fa          	endbr64 
    2124:	68 0f 00 00 00       	push   0xf
    2129:	f2 e9 f1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    212f:	90                   	nop
    2130:	f3 0f 1e fa          	endbr64 
    2134:	68 10 00 00 00       	push   0x10
    2139:	f2 e9 e1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    213f:	90                   	nop
    2140:	f3 0f 1e fa          	endbr64 
    2144:	68 11 00 00 00       	push   0x11
    2149:	f2 e9 d1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    214f:	90                   	nop
    2150:	f3 0f 1e fa          	endbr64 
    2154:	68 12 00 00 00       	push   0x12
    2159:	f2 e9 c1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    215f:	90                   	nop
    2160:	f3 0f 1e fa          	endbr64 
    2164:	68 13 00 00 00       	push   0x13
    2169:	f2 e9 b1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    216f:	90                   	nop
    2170:	f3 0f 1e fa          	endbr64 
    2174:	68 14 00 00 00       	push   0x14
    2179:	f2 e9 a1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    217f:	90                   	nop
    2180:	f3 0f 1e fa          	endbr64 
    2184:	68 15 00 00 00       	push   0x15
    2189:	f2 e9 91 fe ff ff    	bnd jmp 2020 <_init+0x20>
    218f:	90                   	nop
    2190:	f3 0f 1e fa          	endbr64 
    2194:	68 16 00 00 00       	push   0x16
    2199:	f2 e9 81 fe ff ff    	bnd jmp 2020 <_init+0x20>
    219f:	90                   	nop
    21a0:	f3 0f 1e fa          	endbr64 
    21a4:	68 17 00 00 00       	push   0x17
    21a9:	f2 e9 71 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21af:	90                   	nop
    21b0:	f3 0f 1e fa          	endbr64 
    21b4:	68 18 00 00 00       	push   0x18
    21b9:	f2 e9 61 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21bf:	90                   	nop
    21c0:	f3 0f 1e fa          	endbr64 
    21c4:	68 19 00 00 00       	push   0x19
    21c9:	f2 e9 51 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21cf:	90                   	nop
    21d0:	f3 0f 1e fa          	endbr64 
    21d4:	68 1a 00 00 00       	push   0x1a
    21d9:	f2 e9 41 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21df:	90                   	nop
    21e0:	f3 0f 1e fa          	endbr64 
    21e4:	68 1b 00 00 00       	push   0x1b
    21e9:	f2 e9 31 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21ef:	90                   	nop
    21f0:	f3 0f 1e fa          	endbr64 
    21f4:	68 1c 00 00 00       	push   0x1c
    21f9:	f2 e9 21 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21ff:	90                   	nop
    2200:	f3 0f 1e fa          	endbr64 
    2204:	68 1d 00 00 00       	push   0x1d
    2209:	f2 e9 11 fe ff ff    	bnd jmp 2020 <_init+0x20>
    220f:	90                   	nop
    2210:	f3 0f 1e fa          	endbr64 
    2214:	68 1e 00 00 00       	push   0x1e
    2219:	f2 e9 01 fe ff ff    	bnd jmp 2020 <_init+0x20>
    221f:	90                   	nop
    2220:	f3 0f 1e fa          	endbr64 
    2224:	68 1f 00 00 00       	push   0x1f
    2229:	f2 e9 f1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    222f:	90                   	nop
    2230:	f3 0f 1e fa          	endbr64 
    2234:	68 20 00 00 00       	push   0x20
    2239:	f2 e9 e1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    223f:	90                   	nop
    2240:	f3 0f 1e fa          	endbr64 
    2244:	68 21 00 00 00       	push   0x21
    2249:	f2 e9 d1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    224f:	90                   	nop
    2250:	f3 0f 1e fa          	endbr64 
    2254:	68 22 00 00 00       	push   0x22
    2259:	f2 e9 c1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    225f:	90                   	nop
    2260:	f3 0f 1e fa          	endbr64 
    2264:	68 23 00 00 00       	push   0x23
    2269:	f2 e9 b1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    226f:	90                   	nop
    2270:	f3 0f 1e fa          	endbr64 
    2274:	68 24 00 00 00       	push   0x24
    2279:	f2 e9 a1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    227f:	90                   	nop
    2280:	f3 0f 1e fa          	endbr64 
    2284:	68 25 00 00 00       	push   0x25
    2289:	f2 e9 91 fd ff ff    	bnd jmp 2020 <_init+0x20>
    228f:	90                   	nop
    2290:	f3 0f 1e fa          	endbr64 
    2294:	68 26 00 00 00       	push   0x26
    2299:	f2 e9 81 fd ff ff    	bnd jmp 2020 <_init+0x20>
    229f:	90                   	nop
    22a0:	f3 0f 1e fa          	endbr64 
    22a4:	68 27 00 00 00       	push   0x27
    22a9:	f2 e9 71 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22af:	90                   	nop
    22b0:	f3 0f 1e fa          	endbr64 
    22b4:	68 28 00 00 00       	push   0x28
    22b9:	f2 e9 61 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22bf:	90                   	nop
    22c0:	f3 0f 1e fa          	endbr64 
    22c4:	68 29 00 00 00       	push   0x29
    22c9:	f2 e9 51 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22cf:	90                   	nop
    22d0:	f3 0f 1e fa          	endbr64 
    22d4:	68 2a 00 00 00       	push   0x2a
    22d9:	f2 e9 41 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22df:	90                   	nop
    22e0:	f3 0f 1e fa          	endbr64 
    22e4:	68 2b 00 00 00       	push   0x2b
    22e9:	f2 e9 31 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22ef:	90                   	nop
    22f0:	f3 0f 1e fa          	endbr64 
    22f4:	68 2c 00 00 00       	push   0x2c
    22f9:	f2 e9 21 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22ff:	90                   	nop
    2300:	f3 0f 1e fa          	endbr64 
    2304:	68 2d 00 00 00       	push   0x2d
    2309:	f2 e9 11 fd ff ff    	bnd jmp 2020 <_init+0x20>
    230f:	90                   	nop
    2310:	f3 0f 1e fa          	endbr64 
    2314:	68 2e 00 00 00       	push   0x2e
    2319:	f2 e9 01 fd ff ff    	bnd jmp 2020 <_init+0x20>
    231f:	90                   	nop
    2320:	f3 0f 1e fa          	endbr64 
    2324:	68 2f 00 00 00       	push   0x2f
    2329:	f2 e9 f1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    232f:	90                   	nop
    2330:	f3 0f 1e fa          	endbr64 
    2334:	68 30 00 00 00       	push   0x30
    2339:	f2 e9 e1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    233f:	90                   	nop
    2340:	f3 0f 1e fa          	endbr64 
    2344:	68 31 00 00 00       	push   0x31
    2349:	f2 e9 d1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    234f:	90                   	nop
    2350:	f3 0f 1e fa          	endbr64 
    2354:	68 32 00 00 00       	push   0x32
    2359:	f2 e9 c1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    235f:	90                   	nop
    2360:	f3 0f 1e fa          	endbr64 
    2364:	68 33 00 00 00       	push   0x33
    2369:	f2 e9 b1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    236f:	90                   	nop
    2370:	f3 0f 1e fa          	endbr64 
    2374:	68 34 00 00 00       	push   0x34
    2379:	f2 e9 a1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    237f:	90                   	nop
    2380:	f3 0f 1e fa          	endbr64 
    2384:	68 35 00 00 00       	push   0x35
    2389:	f2 e9 91 fc ff ff    	bnd jmp 2020 <_init+0x20>
    238f:	90                   	nop
    2390:	f3 0f 1e fa          	endbr64 
    2394:	68 36 00 00 00       	push   0x36
    2399:	f2 e9 81 fc ff ff    	bnd jmp 2020 <_init+0x20>
    239f:	90                   	nop
    23a0:	f3 0f 1e fa          	endbr64 
    23a4:	68 37 00 00 00       	push   0x37
    23a9:	f2 e9 71 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23af:	90                   	nop
    23b0:	f3 0f 1e fa          	endbr64 
    23b4:	68 38 00 00 00       	push   0x38
    23b9:	f2 e9 61 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23bf:	90                   	nop
    23c0:	f3 0f 1e fa          	endbr64 
    23c4:	68 39 00 00 00       	push   0x39
    23c9:	f2 e9 51 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23cf:	90                   	nop
    23d0:	f3 0f 1e fa          	endbr64 
    23d4:	68 3a 00 00 00       	push   0x3a
    23d9:	f2 e9 41 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23df:	90                   	nop
    23e0:	f3 0f 1e fa          	endbr64 
    23e4:	68 3b 00 00 00       	push   0x3b
    23e9:	f2 e9 31 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23ef:	90                   	nop
    23f0:	f3 0f 1e fa          	endbr64 
    23f4:	68 3c 00 00 00       	push   0x3c
    23f9:	f2 e9 21 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23ff:	90                   	nop
    2400:	f3 0f 1e fa          	endbr64 
    2404:	68 3d 00 00 00       	push   0x3d
    2409:	f2 e9 11 fc ff ff    	bnd jmp 2020 <_init+0x20>
    240f:	90                   	nop
    2410:	f3 0f 1e fa          	endbr64 
    2414:	68 3e 00 00 00       	push   0x3e
    2419:	f2 e9 01 fc ff ff    	bnd jmp 2020 <_init+0x20>
    241f:	90                   	nop
    2420:	f3 0f 1e fa          	endbr64 
    2424:	68 3f 00 00 00       	push   0x3f
    2429:	f2 e9 f1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    242f:	90                   	nop
    2430:	f3 0f 1e fa          	endbr64 
    2434:	68 40 00 00 00       	push   0x40
    2439:	f2 e9 e1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    243f:	90                   	nop
    2440:	f3 0f 1e fa          	endbr64 
    2444:	68 41 00 00 00       	push   0x41
    2449:	f2 e9 d1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    244f:	90                   	nop
    2450:	f3 0f 1e fa          	endbr64 
    2454:	68 42 00 00 00       	push   0x42
    2459:	f2 e9 c1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    245f:	90                   	nop
    2460:	f3 0f 1e fa          	endbr64 
    2464:	68 43 00 00 00       	push   0x43
    2469:	f2 e9 b1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    246f:	90                   	nop
    2470:	f3 0f 1e fa          	endbr64 
    2474:	68 44 00 00 00       	push   0x44
    2479:	f2 e9 a1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    247f:	90                   	nop
    2480:	f3 0f 1e fa          	endbr64 
    2484:	68 45 00 00 00       	push   0x45
    2489:	f2 e9 91 fb ff ff    	bnd jmp 2020 <_init+0x20>
    248f:	90                   	nop
    2490:	f3 0f 1e fa          	endbr64 
    2494:	68 46 00 00 00       	push   0x46
    2499:	f2 e9 81 fb ff ff    	bnd jmp 2020 <_init+0x20>
    249f:	90                   	nop
    24a0:	f3 0f 1e fa          	endbr64 
    24a4:	68 47 00 00 00       	push   0x47
    24a9:	f2 e9 71 fb ff ff    	bnd jmp 2020 <_init+0x20>
    24af:	90                   	nop
    24b0:	f3 0f 1e fa          	endbr64 
    24b4:	68 48 00 00 00       	push   0x48
    24b9:	f2 e9 61 fb ff ff    	bnd jmp 2020 <_init+0x20>
    24bf:	90                   	nop
    24c0:	f3 0f 1e fa          	endbr64 
    24c4:	68 49 00 00 00       	push   0x49
    24c9:	f2 e9 51 fb ff ff    	bnd jmp 2020 <_init+0x20>
    24cf:	90                   	nop
    24d0:	f3 0f 1e fa          	endbr64 
    24d4:	68 4a 00 00 00       	push   0x4a
    24d9:	f2 e9 41 fb ff ff    	bnd jmp 2020 <_init+0x20>
    24df:	90                   	nop

Disassembly of section .plt.got:

00000000000024e0 <__cxa_finalize@plt>:
    24e0:	f3 0f 1e fa          	endbr64 
    24e4:	f2 ff 25 e5 4a 01 00 	bnd jmp QWORD PTR [rip+0x14ae5]        # 16fd0 <__cxa_finalize@GLIBC_2.2.5>
    24eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

00000000000024f0 <pthread_join@plt>:
    24f0:	f3 0f 1e fa          	endbr64 
    24f4:	f2 ff 25 45 48 01 00 	bnd jmp QWORD PTR [rip+0x14845]        # 16d40 <pthread_join@GLIBC_2.34>
    24fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002500 <powf@plt>:
    2500:	f3 0f 1e fa          	endbr64 
    2504:	f2 ff 25 3d 48 01 00 	bnd jmp QWORD PTR [rip+0x1483d]        # 16d48 <powf@GLIBC_2.27>
    250b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002510 <memset@plt>:
    2510:	f3 0f 1e fa          	endbr64 
    2514:	f2 ff 25 35 48 01 00 	bnd jmp QWORD PTR [rip+0x14835]        # 16d50 <memset@GLIBC_2.2.5>
    251b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002520 <XClearWindow@plt>:
    2520:	f3 0f 1e fa          	endbr64 
    2524:	f2 ff 25 2d 48 01 00 	bnd jmp QWORD PTR [rip+0x1482d]        # 16d58 <XClearWindow@Base>
    252b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002530 <close@plt>:
    2530:	f3 0f 1e fa          	endbr64 
    2534:	f2 ff 25 25 48 01 00 	bnd jmp QWORD PTR [rip+0x14825]        # 16d60 <close@GLIBC_2.2.5>
    253b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002540 <shmdt@plt>:
    2540:	f3 0f 1e fa          	endbr64 
    2544:	f2 ff 25 1d 48 01 00 	bnd jmp QWORD PTR [rip+0x1481d]        # 16d68 <shmdt@GLIBC_2.2.5>
    254b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002550 <tanf@plt>:
    2550:	f3 0f 1e fa          	endbr64 
    2554:	f2 ff 25 15 48 01 00 	bnd jmp QWORD PTR [rip+0x14815]        # 16d70 <tanf@GLIBC_2.2.5>
    255b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002560 <XStoreName@plt>:
    2560:	f3 0f 1e fa          	endbr64 
    2564:	f2 ff 25 0d 48 01 00 	bnd jmp QWORD PTR [rip+0x1480d]        # 16d78 <XStoreName@Base>
    256b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002570 <XGetWMNormalHints@plt>:
    2570:	f3 0f 1e fa          	endbr64 
    2574:	f2 ff 25 05 48 01 00 	bnd jmp QWORD PTR [rip+0x14805]        # 16d80 <XGetWMNormalHints@Base>
    257b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002580 <puts@plt>:
    2580:	f3 0f 1e fa          	endbr64 
    2584:	f2 ff 25 fd 47 01 00 	bnd jmp QWORD PTR [rip+0x147fd]        # 16d88 <puts@GLIBC_2.2.5>
    258b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002590 <XAutoRepeatOff@plt>:
    2590:	f3 0f 1e fa          	endbr64 
    2594:	f2 ff 25 f5 47 01 00 	bnd jmp QWORD PTR [rip+0x147f5]        # 16d90 <XAutoRepeatOff@Base>
    259b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025a0 <exit@plt>:
    25a0:	f3 0f 1e fa          	endbr64 
    25a4:	f2 ff 25 ed 47 01 00 	bnd jmp QWORD PTR [rip+0x147ed]        # 16d98 <exit@GLIBC_2.2.5>
    25ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025b0 <__printf_chk@plt>:
    25b0:	f3 0f 1e fa          	endbr64 
    25b4:	f2 ff 25 e5 47 01 00 	bnd jmp QWORD PTR [rip+0x147e5]        # 16da0 <__printf_chk@GLIBC_2.3.4>
    25bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025c0 <XCreateImage@plt>:
    25c0:	f3 0f 1e fa          	endbr64 
    25c4:	f2 ff 25 dd 47 01 00 	bnd jmp QWORD PTR [rip+0x147dd]        # 16da8 <XCreateImage@Base>
    25cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025d0 <XShmCreatePixmap@plt>:
    25d0:	f3 0f 1e fa          	endbr64 
    25d4:	f2 ff 25 d5 47 01 00 	bnd jmp QWORD PTR [rip+0x147d5]        # 16db0 <XShmCreatePixmap@Base>
    25db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025e0 <gettimeofday@plt>:
    25e0:	f3 0f 1e fa          	endbr64 
    25e4:	f2 ff 25 cd 47 01 00 	bnd jmp QWORD PTR [rip+0x147cd]        # 16db8 <gettimeofday@GLIBC_2.2.5>
    25eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025f0 <read@plt>:
    25f0:	f3 0f 1e fa          	endbr64 
    25f4:	f2 ff 25 c5 47 01 00 	bnd jmp QWORD PTR [rip+0x147c5]        # 16dc0 <read@GLIBC_2.2.5>
    25fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002600 <strncmp@plt>:
    2600:	f3 0f 1e fa          	endbr64 
    2604:	f2 ff 25 bd 47 01 00 	bnd jmp QWORD PTR [rip+0x147bd]        # 16dc8 <strncmp@GLIBC_2.2.5>
    260b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002610 <malloc@plt>:
    2610:	f3 0f 1e fa          	endbr64 
    2614:	f2 ff 25 b5 47 01 00 	bnd jmp QWORD PTR [rip+0x147b5]        # 16dd0 <malloc@GLIBC_2.2.5>
    261b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002620 <XSetWMNormalHints@plt>:
    2620:	f3 0f 1e fa          	endbr64 
    2624:	f2 ff 25 ad 47 01 00 	bnd jmp QWORD PTR [rip+0x147ad]        # 16dd8 <XSetWMNormalHints@Base>
    262b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002630 <XCreateWindow@plt>:
    2630:	f3 0f 1e fa          	endbr64 
    2634:	f2 ff 25 a5 47 01 00 	bnd jmp QWORD PTR [rip+0x147a5]        # 16de0 <XCreateWindow@Base>
    263b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002640 <XkbKeycodeToKeysym@plt>:
    2640:	f3 0f 1e fa          	endbr64 
    2644:	f2 ff 25 9d 47 01 00 	bnd jmp QWORD PTR [rip+0x1479d]        # 16de8 <XkbKeycodeToKeysym@Base>
    264b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002650 <XCreateColormap@plt>:
    2650:	f3 0f 1e fa          	endbr64 
    2654:	f2 ff 25 95 47 01 00 	bnd jmp QWORD PTR [rip+0x14795]        # 16df0 <XCreateColormap@Base>
    265b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002660 <pthread_mutex_init@plt>:
    2660:	f3 0f 1e fa          	endbr64 
    2664:	f2 ff 25 8d 47 01 00 	bnd jmp QWORD PTR [rip+0x1478d]        # 16df8 <pthread_mutex_init@GLIBC_2.2.5>
    266b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002670 <fmaxf@plt>:
    2670:	f3 0f 1e fa          	endbr64 
    2674:	f2 ff 25 85 47 01 00 	bnd jmp QWORD PTR [rip+0x14785]        # 16e00 <fmaxf@GLIBC_2.2.5>
    267b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002680 <XAutoRepeatOn@plt>:
    2680:	f3 0f 1e fa          	endbr64 
    2684:	f2 ff 25 7d 47 01 00 	bnd jmp QWORD PTR [rip+0x1477d]        # 16e08 <XAutoRepeatOn@Base>
    268b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002690 <acosf@plt>:
    2690:	f3 0f 1e fa          	endbr64 
    2694:	f2 ff 25 75 47 01 00 	bnd jmp QWORD PTR [rip+0x14775]        # 16e10 <acosf@GLIBC_2.2.5>
    269b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026a0 <XOpenDisplay@plt>:
    26a0:	f3 0f 1e fa          	endbr64 
    26a4:	f2 ff 25 6d 47 01 00 	bnd jmp QWORD PTR [rip+0x1476d]        # 16e18 <XOpenDisplay@Base>
    26ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026b0 <atan2f@plt>:
    26b0:	f3 0f 1e fa          	endbr64 
    26b4:	f2 ff 25 65 47 01 00 	bnd jmp QWORD PTR [rip+0x14765]        # 16e20 <atan2f@GLIBC_2.2.5>
    26bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026c0 <pthread_create@plt>:
    26c0:	f3 0f 1e fa          	endbr64 
    26c4:	f2 ff 25 5d 47 01 00 	bnd jmp QWORD PTR [rip+0x1475d]        # 16e28 <pthread_create@GLIBC_2.34>
    26cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026d0 <free@plt>:
    26d0:	f3 0f 1e fa          	endbr64 
    26d4:	f2 ff 25 55 47 01 00 	bnd jmp QWORD PTR [rip+0x14755]        # 16e30 <free@GLIBC_2.2.5>
    26db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026e0 <XCopyArea@plt>:
    26e0:	f3 0f 1e fa          	endbr64 
    26e4:	f2 ff 25 4d 47 01 00 	bnd jmp QWORD PTR [rip+0x1474d]        # 16e38 <XCopyArea@Base>
    26eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026f0 <strlen@plt>:
    26f0:	f3 0f 1e fa          	endbr64 
    26f4:	f2 ff 25 45 47 01 00 	bnd jmp QWORD PTR [rip+0x14745]        # 16e40 <strlen@GLIBC_2.2.5>
    26fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002700 <XDestroyWindow@plt>:
    2700:	f3 0f 1e fa          	endbr64 
    2704:	f2 ff 25 3d 47 01 00 	bnd jmp QWORD PTR [rip+0x1473d]        # 16e48 <XDestroyWindow@Base>
    270b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002710 <XCloseDisplay@plt>:
    2710:	f3 0f 1e fa          	endbr64 
    2714:	f2 ff 25 35 47 01 00 	bnd jmp QWORD PTR [rip+0x14735]        # 16e50 <XCloseDisplay@Base>
    271b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002720 <XShmCreateImage@plt>:
    2720:	f3 0f 1e fa          	endbr64 
    2724:	f2 ff 25 2d 47 01 00 	bnd jmp QWORD PTR [rip+0x1472d]        # 16e58 <XShmCreateImage@Base>
    272b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002730 <XFreeGC@plt>:
    2730:	f3 0f 1e fa          	endbr64 
    2734:	f2 ff 25 25 47 01 00 	bnd jmp QWORD PTR [rip+0x14725]        # 16e60 <XFreeGC@Base>
    273b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002740 <XShmQueryVersion@plt>:
    2740:	f3 0f 1e fa          	endbr64 
    2744:	f2 ff 25 1d 47 01 00 	bnd jmp QWORD PTR [rip+0x1471d]        # 16e68 <XShmQueryVersion@Base>
    274b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002750 <XNextEvent@plt>:
    2750:	f3 0f 1e fa          	endbr64 
    2754:	f2 ff 25 15 47 01 00 	bnd jmp QWORD PTR [rip+0x14715]        # 16e70 <XNextEvent@Base>
    275b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002760 <XWindowEvent@plt>:
    2760:	f3 0f 1e fa          	endbr64 
    2764:	f2 ff 25 0d 47 01 00 	bnd jmp QWORD PTR [rip+0x1470d]        # 16e78 <XWindowEvent@Base>
    276b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002770 <XSetWMProtocols@plt>:
    2770:	f3 0f 1e fa          	endbr64 
    2774:	f2 ff 25 05 47 01 00 	bnd jmp QWORD PTR [rip+0x14705]        # 16e80 <XSetWMProtocols@Base>
    277b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002780 <gethostname@plt>:
    2780:	f3 0f 1e fa          	endbr64 
    2784:	f2 ff 25 fd 46 01 00 	bnd jmp QWORD PTR [rip+0x146fd]        # 16e88 <gethostname@GLIBC_2.2.5>
    278b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002790 <XPutBackEvent@plt>:
    2790:	f3 0f 1e fa          	endbr64 
    2794:	f2 ff 25 f5 46 01 00 	bnd jmp QWORD PTR [rip+0x146f5]        # 16e90 <XPutBackEvent@Base>
    279b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027a0 <XCreateGC@plt>:
    27a0:	f3 0f 1e fa          	endbr64 
    27a4:	f2 ff 25 ed 46 01 00 	bnd jmp QWORD PTR [rip+0x146ed]        # 16e98 <XCreateGC@Base>
    27ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027b0 <getenv@plt>:
    27b0:	f3 0f 1e fa          	endbr64 
    27b4:	f2 ff 25 e5 46 01 00 	bnd jmp QWORD PTR [rip+0x146e5]        # 16ea0 <getenv@GLIBC_2.2.5>
    27bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027c0 <XFlush@plt>:
    27c0:	f3 0f 1e fa          	endbr64 
    27c4:	f2 ff 25 dd 46 01 00 	bnd jmp QWORD PTR [rip+0x146dd]        # 16ea8 <XFlush@Base>
    27cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027d0 <XSync@plt>:
    27d0:	f3 0f 1e fa          	endbr64 
    27d4:	f2 ff 25 d5 46 01 00 	bnd jmp QWORD PTR [rip+0x146d5]        # 16eb0 <XSync@Base>
    27db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027e0 <sincos@plt>:
    27e0:	f3 0f 1e fa          	endbr64 
    27e4:	f2 ff 25 cd 46 01 00 	bnd jmp QWORD PTR [rip+0x146cd]        # 16eb8 <sincos@GLIBC_2.2.5>
    27eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027f0 <__stack_chk_fail@plt>:
    27f0:	f3 0f 1e fa          	endbr64 
    27f4:	f2 ff 25 c5 46 01 00 	bnd jmp QWORD PTR [rip+0x146c5]        # 16ec0 <__stack_chk_fail@GLIBC_2.4>
    27fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002800 <XPutImage@plt>:
    2800:	f3 0f 1e fa          	endbr64 
    2804:	f2 ff 25 bd 46 01 00 	bnd jmp QWORD PTR [rip+0x146bd]        # 16ec8 <XPutImage@Base>
    280b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002810 <XShmAttach@plt>:
    2810:	f3 0f 1e fa          	endbr64 
    2814:	f2 ff 25 b5 46 01 00 	bnd jmp QWORD PTR [rip+0x146b5]        # 16ed0 <XShmAttach@Base>
    281b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002820 <calloc@plt>:
    2820:	f3 0f 1e fa          	endbr64 
    2824:	f2 ff 25 ad 46 01 00 	bnd jmp QWORD PTR [rip+0x146ad]        # 16ed8 <calloc@GLIBC_2.2.5>
    282b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002830 <shmget@plt>:
    2830:	f3 0f 1e fa          	endbr64 
    2834:	f2 ff 25 a5 46 01 00 	bnd jmp QWORD PTR [rip+0x146a5]        # 16ee0 <shmget@GLIBC_2.2.5>
    283b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002840 <XInternAtom@plt>:
    2840:	f3 0f 1e fa          	endbr64 
    2844:	f2 ff 25 9d 46 01 00 	bnd jmp QWORD PTR [rip+0x1469d]        # 16ee8 <XInternAtom@Base>
    284b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002850 <XGetVisualInfo@plt>:
    2850:	f3 0f 1e fa          	endbr64 
    2854:	f2 ff 25 95 46 01 00 	bnd jmp QWORD PTR [rip+0x14695]        # 16ef0 <XGetVisualInfo@Base>
    285b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002860 <XGetWindowAttributes@plt>:
    2860:	f3 0f 1e fa          	endbr64 
    2864:	f2 ff 25 8d 46 01 00 	bnd jmp QWORD PTR [rip+0x1468d]        # 16ef8 <XGetWindowAttributes@Base>
    286b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002870 <XShmPutImage@plt>:
    2870:	f3 0f 1e fa          	endbr64 
    2874:	f2 ff 25 85 46 01 00 	bnd jmp QWORD PTR [rip+0x14685]        # 16f00 <XShmPutImage@Base>
    287b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002880 <XSetErrorHandler@plt>:
    2880:	f3 0f 1e fa          	endbr64 
    2884:	f2 ff 25 7d 46 01 00 	bnd jmp QWORD PTR [rip+0x1467d]        # 16f08 <XSetErrorHandler@Base>
    288b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002890 <XFreePixmap@plt>:
    2890:	f3 0f 1e fa          	endbr64 
    2894:	f2 ff 25 75 46 01 00 	bnd jmp QWORD PTR [rip+0x14675]        # 16f10 <XFreePixmap@Base>
    289b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028a0 <pthread_mutex_lock@plt>:
    28a0:	f3 0f 1e fa          	endbr64 
    28a4:	f2 ff 25 6d 46 01 00 	bnd jmp QWORD PTR [rip+0x1466d]        # 16f18 <pthread_mutex_lock@GLIBC_2.2.5>
    28ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028b0 <perror@plt>:
    28b0:	f3 0f 1e fa          	endbr64 
    28b4:	f2 ff 25 65 46 01 00 	bnd jmp QWORD PTR [rip+0x14665]        # 16f20 <perror@GLIBC_2.2.5>
    28bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028c0 <shmctl@plt>:
    28c0:	f3 0f 1e fa          	endbr64 
    28c4:	f2 ff 25 5d 46 01 00 	bnd jmp QWORD PTR [rip+0x1465d]        # 16f28 <shmctl@GLIBC_2.2.5>
    28cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028d0 <XCreatePixmap@plt>:
    28d0:	f3 0f 1e fa          	endbr64 
    28d4:	f2 ff 25 55 46 01 00 	bnd jmp QWORD PTR [rip+0x14655]        # 16f30 <XCreatePixmap@Base>
    28db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028e0 <XMapRaised@plt>:
    28e0:	f3 0f 1e fa          	endbr64 
    28e4:	f2 ff 25 4d 46 01 00 	bnd jmp QWORD PTR [rip+0x1464d]        # 16f38 <XMapRaised@Base>
    28eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028f0 <pthread_mutex_destroy@plt>:
    28f0:	f3 0f 1e fa          	endbr64 
    28f4:	f2 ff 25 45 46 01 00 	bnd jmp QWORD PTR [rip+0x14645]        # 16f40 <pthread_mutex_destroy@GLIBC_2.2.5>
    28fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002900 <XShmPixmapFormat@plt>:
    2900:	f3 0f 1e fa          	endbr64 
    2904:	f2 ff 25 3d 46 01 00 	bnd jmp QWORD PTR [rip+0x1463d]        # 16f48 <XShmPixmapFormat@Base>
    290b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002910 <write@plt>:
    2910:	f3 0f 1e fa          	endbr64 
    2914:	f2 ff 25 35 46 01 00 	bnd jmp QWORD PTR [rip+0x14635]        # 16f50 <write@GLIBC_2.2.5>
    291b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002920 <XSetClipOrigin@plt>:
    2920:	f3 0f 1e fa          	endbr64 
    2924:	f2 ff 25 2d 46 01 00 	bnd jmp QWORD PTR [rip+0x1462d]        # 16f58 <XSetClipOrigin@Base>
    292b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002930 <pthread_mutex_unlock@plt>:
    2930:	f3 0f 1e fa          	endbr64 
    2934:	f2 ff 25 25 46 01 00 	bnd jmp QWORD PTR [rip+0x14625]        # 16f60 <pthread_mutex_unlock@GLIBC_2.2.5>
    293b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002940 <XShmDetach@plt>:
    2940:	f3 0f 1e fa          	endbr64 
    2944:	f2 ff 25 1d 46 01 00 	bnd jmp QWORD PTR [rip+0x1461d]        # 16f68 <XShmDetach@Base>
    294b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002950 <open@plt>:
    2950:	f3 0f 1e fa          	endbr64 
    2954:	f2 ff 25 15 46 01 00 	bnd jmp QWORD PTR [rip+0x14615]        # 16f70 <open@GLIBC_2.2.5>
    295b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002960 <XPending@plt>:
    2960:	f3 0f 1e fa          	endbr64 
    2964:	f2 ff 25 0d 46 01 00 	bnd jmp QWORD PTR [rip+0x1460d]        # 16f78 <XPending@Base>
    296b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002970 <shmat@plt>:
    2970:	f3 0f 1e fa          	endbr64 
    2974:	f2 ff 25 05 46 01 00 	bnd jmp QWORD PTR [rip+0x14605]        # 16f80 <shmat@GLIBC_2.2.5>
    297b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002980 <XChangeWindowAttributes@plt>:
    2980:	f3 0f 1e fa          	endbr64 
    2984:	f2 ff 25 fd 45 01 00 	bnd jmp QWORD PTR [rip+0x145fd]        # 16f88 <XChangeWindowAttributes@Base>
    298b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002990 <sqrtf@plt>:
    2990:	f3 0f 1e fa          	endbr64 
    2994:	f2 ff 25 f5 45 01 00 	bnd jmp QWORD PTR [rip+0x145f5]        # 16f90 <sqrtf@GLIBC_2.2.5>
    299b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000000029a0 <render.cold>:
    29a0:	4c 8b bd d8 fe ff ff 	mov    r15,QWORD PTR [rbp-0x128]
    29a7:	4d 8b 57 08          	mov    r10,QWORD PTR [r15+0x8]
    29ab:	49 8b 52 30          	mov    rdx,QWORD PTR [r10+0x30]
    29af:	48 85 d2             	test   rdx,rdx
    29b2:	78 62                	js     2a16 <render.cold+0x76>
    29b4:	c4 41 10 57 ed       	vxorps xmm13,xmm13,xmm13
    29b9:	c4 e1 92 2a ca       	vcvtsi2ss xmm1,xmm13,rdx
    29be:	48 8b 8d d8 fe ff ff 	mov    rcx,QWORD PTR [rbp-0x128]
    29c5:	48 8b 19             	mov    rbx,QWORD PTR [rcx]
    29c8:	c5 fa 10 5b 48       	vmovss xmm3,DWORD PTR [rbx+0x48]
    29cd:	c5 e0 57 25 2b f7 00 	vxorps xmm4,xmm3,XMMWORD PTR [rip+0xf72b]        # 12100 <_IO_stdin_used+0x100>
    29d4:	00 
    29d5:	4d 85 f6             	test   r14,r14
    29d8:	78 59                	js     2a33 <render.cold+0x93>
    29da:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    29de:	c4 c1 fa 2a ee       	vcvtsi2ss xmm5,xmm0,r14
    29e3:	c5 d2 5e f1          	vdivss xmm6,xmm5,xmm1
    29e7:	c5 7a 10 05 b9 f7 00 	vmovss xmm8,DWORD PTR [rip+0xf7b9]        # 121a8 <_IO_stdin_used+0x1a8>
    29ee:	00 
    29ef:	49 83 c6 01          	add    r14,0x1
    29f3:	c5 5a 59 d6          	vmulss xmm10,xmm4,xmm6
    29f7:	c5 3a 5c ce          	vsubss xmm9,xmm8,xmm6
    29fb:	c4 62 29 99 cb       	vfmadd132ss xmm9,xmm10,xmm3
    2a00:	4c 39 f6             	cmp    rsi,r14
    2a03:	77 d0                	ja     29d5 <render.cold+0x35>
    2a05:	48 8b b5 d8 fe ff ff 	mov    rsi,QWORD PTR [rbp-0x128]
    2a0c:	c5 7a 11 4e 30       	vmovss DWORD PTR [rsi+0x30],xmm9
    2a11:	e9 d5 5f 00 00       	jmp    89eb <render+0x3fb>
    2a16:	48 89 d0             	mov    rax,rdx
    2a19:	83 e2 01             	and    edx,0x1
    2a1c:	c4 41 08 57 f6       	vxorps xmm14,xmm14,xmm14
    2a21:	48 d1 e8             	shr    rax,1
    2a24:	48 09 c2             	or     rdx,rax
    2a27:	c4 61 8a 2a fa       	vcvtsi2ss xmm15,xmm14,rdx
    2a2c:	c4 c1 02 58 cf       	vaddss xmm1,xmm15,xmm15
    2a31:	eb 8b                	jmp    29be <render.cold+0x1e>
    2a33:	4c 89 f7             	mov    rdi,r14
    2a36:	4d 89 f0             	mov    r8,r14
    2a39:	c5 e8 57 d2          	vxorps xmm2,xmm2,xmm2
    2a3d:	48 d1 ef             	shr    rdi,1
    2a40:	41 83 e0 01          	and    r8d,0x1
    2a44:	4c 09 c7             	or     rdi,r8
    2a47:	c4 e1 ea 2a ff       	vcvtsi2ss xmm7,xmm2,rdi
    2a4c:	c5 c2 58 ef          	vaddss xmm5,xmm7,xmm7
    2a50:	eb 91                	jmp    29e3 <render.cold+0x43>
    2a52:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    2a59:	00 00 00 
    2a5c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000002a60 <main>:
    2a60:	f3 0f 1e fa          	endbr64 
    2a64:	41 56                	push   r14
    2a66:	31 c0                	xor    eax,eax
    2a68:	b9 28 00 00 00       	mov    ecx,0x28
    2a6d:	49 89 f6             	mov    r14,rsi
    2a70:	41 55                	push   r13
    2a72:	41 89 fd             	mov    r13d,edi
    2a75:	41 54                	push   r12
    2a77:	55                   	push   rbp
    2a78:	48 81 ec a8 01 00 00 	sub    rsp,0x1a8
    2a7f:	48 8d 6c 24 60       	lea    rbp,[rsp+0x60]
    2a84:	4c 8d 64 24 20       	lea    r12,[rsp+0x20]
    2a89:	48 89 ef             	mov    rdi,rbp
    2a8c:	c4 e1 f9 6e cd       	vmovq  xmm1,rbp
    2a91:	f3 48 ab             	rep stos QWORD PTR es:[rdi],rax
    2a94:	c4 c3 f1 22 c4 01    	vpinsrq xmm0,xmm1,r12,0x1
    2a9a:	4c 89 e7             	mov    rdi,r12
    2a9d:	c5 f9 7f 04 24       	vmovdqa XMMWORD PTR [rsp],xmm0
    2aa2:	e8 59 29 00 00       	call   5400 <init_canvas>
    2aa7:	4c 89 e1             	mov    rcx,r12
    2aaa:	48 89 ea             	mov    rdx,rbp
    2aad:	4c 89 f6             	mov    rsi,r14
    2ab0:	44 89 ef             	mov    edi,r13d
    2ab3:	e8 58 2d 00 00       	call   5810 <try_parse>
    2ab8:	84 c0                	test   al,al
    2aba:	74 74                	je     2b30 <main+0xd0>
    2abc:	c5 f9 6f 14 24       	vmovdqa xmm2,XMMWORD PTR [rsp]
    2ac1:	4c 89 e6             	mov    rsi,r12
    2ac4:	48 89 ef             	mov    rdi,rbp
    2ac7:	c5 f9 7f 54 24 10    	vmovdqa XMMWORD PTR [rsp+0x10],xmm2
    2acd:	e8 6e 01 00 00       	call   2c40 <render_multi_thread>
    2ad2:	4c 8b 44 24 20       	mov    r8,QWORD PTR [rsp+0x20]
    2ad7:	48 8d 0d 22 da 00 00 	lea    rcx,[rip+0xda22]        # 10500 <mlx_loop_end>
    2ade:	31 d2                	xor    edx,edx
    2ae0:	48 8b 7c 24 28       	mov    rdi,QWORD PTR [rsp+0x28]
    2ae5:	be 11 00 00 00       	mov    esi,0x11
    2aea:	e8 41 e6 00 00       	call   11130 <mlx_hook>
    2aef:	48 8b 7c 24 28       	mov    rdi,QWORD PTR [rsp+0x28]
    2af4:	48 8d 54 24 10       	lea    rdx,[rsp+0x10]
    2af9:	48 8d 35 d0 03 00 00 	lea    rsi,[rip+0x3d0]        # 2ed0 <input_key>
    2b00:	e8 9b db 00 00       	call   106a0 <mlx_key_hook>
    2b05:	48 8b 7c 24 20       	mov    rdi,QWORD PTR [rsp+0x20]
    2b0a:	e8 11 da 00 00       	call   10520 <mlx_loop>
    2b0f:	4c 89 e7             	mov    rdi,r12
    2b12:	e8 e9 29 00 00       	call   5500 <free_canvas>
    2b17:	48 89 ef             	mov    rdi,rbp
    2b1a:	e8 11 78 00 00       	call   a330 <destroy_world>
    2b1f:	31 c0                	xor    eax,eax
    2b21:	48 81 c4 a8 01 00 00 	add    rsp,0x1a8
    2b28:	5d                   	pop    rbp
    2b29:	41 5c                	pop    r12
    2b2b:	41 5d                	pop    r13
    2b2d:	41 5e                	pop    r14
    2b2f:	c3                   	ret    
    2b30:	48 8d 3d cd f4 00 00 	lea    rdi,[rip+0xf4cd]        # 12004 <_IO_stdin_used+0x4>
    2b37:	e8 44 fa ff ff       	call   2580 <puts@plt>
    2b3c:	4c 89 e7             	mov    rdi,r12
    2b3f:	e8 bc 29 00 00       	call   5500 <free_canvas>
    2b44:	b8 01 00 00 00       	mov    eax,0x1
    2b49:	eb d6                	jmp    2b21 <main+0xc1>
    2b4b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002b50 <_start>:
    2b50:	f3 0f 1e fa          	endbr64 
    2b54:	31 ed                	xor    ebp,ebp
    2b56:	49 89 d1             	mov    r9,rdx
    2b59:	5e                   	pop    rsi
    2b5a:	48 89 e2             	mov    rdx,rsp
    2b5d:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    2b61:	50                   	push   rax
    2b62:	54                   	push   rsp
    2b63:	45 31 c0             	xor    r8d,r8d
    2b66:	31 c9                	xor    ecx,ecx
    2b68:	48 8d 3d f1 fe ff ff 	lea    rdi,[rip+0xfffffffffffffef1]        # 2a60 <main>
    2b6f:	ff 15 7b 44 01 00    	call   QWORD PTR [rip+0x1447b]        # 16ff0 <__libc_start_main@GLIBC_2.34>
    2b75:	f4                   	hlt    
    2b76:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    2b7d:	00 00 00 

0000000000002b80 <deregister_tm_clones>:
    2b80:	48 8d 3d b9 45 01 00 	lea    rdi,[rip+0x145b9]        # 17140 <__TMC_END__>
    2b87:	48 8d 05 b2 45 01 00 	lea    rax,[rip+0x145b2]        # 17140 <__TMC_END__>
    2b8e:	48 39 f8             	cmp    rax,rdi
    2b91:	74 15                	je     2ba8 <deregister_tm_clones+0x28>
    2b93:	48 8b 05 1e 44 01 00 	mov    rax,QWORD PTR [rip+0x1441e]        # 16fb8 <_ITM_deregisterTMCloneTable@Base>
    2b9a:	48 85 c0             	test   rax,rax
    2b9d:	74 09                	je     2ba8 <deregister_tm_clones+0x28>
    2b9f:	ff e0                	jmp    rax
    2ba1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    2ba8:	c3                   	ret    
    2ba9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000002bb0 <register_tm_clones>:
    2bb0:	48 8d 3d 89 45 01 00 	lea    rdi,[rip+0x14589]        # 17140 <__TMC_END__>
    2bb7:	48 8d 35 82 45 01 00 	lea    rsi,[rip+0x14582]        # 17140 <__TMC_END__>
    2bbe:	48 29 fe             	sub    rsi,rdi
    2bc1:	48 89 f0             	mov    rax,rsi
    2bc4:	48 c1 ee 3f          	shr    rsi,0x3f
    2bc8:	48 c1 f8 03          	sar    rax,0x3
    2bcc:	48 01 c6             	add    rsi,rax
    2bcf:	48 d1 fe             	sar    rsi,1
    2bd2:	74 14                	je     2be8 <register_tm_clones+0x38>
    2bd4:	48 8b 05 e5 43 01 00 	mov    rax,QWORD PTR [rip+0x143e5]        # 16fc0 <_ITM_registerTMCloneTable@Base>
    2bdb:	48 85 c0             	test   rax,rax
    2bde:	74 08                	je     2be8 <register_tm_clones+0x38>
    2be0:	ff e0                	jmp    rax
    2be2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    2be8:	c3                   	ret    
    2be9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000002bf0 <__do_global_dtors_aux>:
    2bf0:	f3 0f 1e fa          	endbr64 
    2bf4:	80 3d 45 45 01 00 00 	cmp    BYTE PTR [rip+0x14545],0x0        # 17140 <__TMC_END__>
    2bfb:	75 2b                	jne    2c28 <__do_global_dtors_aux+0x38>
    2bfd:	55                   	push   rbp
    2bfe:	48 83 3d ca 43 01 00 	cmp    QWORD PTR [rip+0x143ca],0x0        # 16fd0 <__cxa_finalize@GLIBC_2.2.5>
    2c05:	00 
    2c06:	48 89 e5             	mov    rbp,rsp
    2c09:	74 0c                	je     2c17 <__do_global_dtors_aux+0x27>
    2c0b:	48 8b 3d f6 43 01 00 	mov    rdi,QWORD PTR [rip+0x143f6]        # 17008 <__dso_handle>
    2c12:	e8 c9 f8 ff ff       	call   24e0 <__cxa_finalize@plt>
    2c17:	e8 64 ff ff ff       	call   2b80 <deregister_tm_clones>
    2c1c:	c6 05 1d 45 01 00 01 	mov    BYTE PTR [rip+0x1451d],0x1        # 17140 <__TMC_END__>
    2c23:	5d                   	pop    rbp
    2c24:	c3                   	ret    
    2c25:	0f 1f 00             	nop    DWORD PTR [rax]
    2c28:	c3                   	ret    
    2c29:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000002c30 <frame_dummy>:
    2c30:	f3 0f 1e fa          	endbr64 
    2c34:	e9 77 ff ff ff       	jmp    2bb0 <register_tm_clones>
    2c39:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000002c40 <render_multi_thread>:
    2c40:	f3 0f 1e fa          	endbr64 
    2c44:	55                   	push   rbp
    2c45:	c4 e1 f9 6e ff       	vmovq  xmm7,rdi
    2c4a:	c5 e8 57 d2          	vxorps xmm2,xmm2,xmm2
    2c4e:	c4 e3 c1 22 c6 01    	vpinsrq xmm0,xmm7,rsi,0x1
    2c54:	48 89 e5             	mov    rbp,rsp
    2c57:	41 57                	push   r15
    2c59:	45 31 ff             	xor    r15d,r15d
    2c5c:	41 56                	push   r14
    2c5e:	41 55                	push   r13
    2c60:	41 54                	push   r12
    2c62:	49 bc 00 00 00 00 00 	movabs r12,0x8000000000000000
    2c69:	00 00 80 
    2c6c:	53                   	push   rbx
    2c6d:	48 89 f3             	mov    rbx,rsi
    2c70:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    2c74:	48 81 ec a0 06 00 00 	sub    rsp,0x6a0
    2c7b:	4c 8d ac 24 a0 00 00 	lea    r13,[rsp+0xa0]
    2c82:	00 
    2c83:	48 8d 44 24 20       	lea    rax,[rsp+0x20]
    2c88:	c5 f9 7f 44 24 10    	vmovdqa XMMWORD PTR [rsp+0x10],xmm0
    2c8e:	4c 89 2c 24          	mov    QWORD PTR [rsp],r13
    2c92:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    2c97:	e9 c7 00 00 00       	jmp    2d63 <render_multi_thread+0x123>
    2c9c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    2ca0:	c4 41 fa 2c d3       	vcvttss2si r10,xmm11
    2ca5:	c4 41 f9 6e ea       	vmovq  xmm13,r10
    2caa:	48 83 c7 01          	add    rdi,0x1
    2cae:	c4 61 ea 2a f7       	vcvtsi2ss xmm14,xmm2,rdi
    2cb3:	c5 0a 59 fe          	vmulss xmm15,xmm14,xmm6
    2cb7:	c5 78 2f 3d 79 f3 00 	vcomiss xmm15,DWORD PTR [rip+0xf379]        # 12038 <_IO_stdin_used+0x38>
    2cbe:	00 
    2cbf:	0f 83 53 01 00 00    	jae    2e18 <render_multi_thread+0x1d8>
    2cc5:	c4 41 fa 2c f7       	vcvttss2si r14,xmm15
    2cca:	c4 c1 ea 2a c1       	vcvtsi2ss xmm0,xmm2,r9
    2ccf:	c4 c1 7a 59 e9       	vmulss xmm5,xmm0,xmm9
    2cd4:	c5 f8 2f 2d 5c f3 00 	vcomiss xmm5,DWORD PTR [rip+0xf35c]        # 12038 <_IO_stdin_used+0x38>
    2cdb:	00 
    2cdc:	0f 83 1e 01 00 00    	jae    2e00 <render_multi_thread+0x1c0>
    2ce2:	c4 e1 fa 2c cd       	vcvttss2si rcx,xmm5
    2ce7:	49 83 c1 01          	add    r9,0x1
    2ceb:	c4 c1 ea 2a d1       	vcvtsi2ss xmm2,xmm2,r9
    2cf0:	c4 c1 6a 59 d9       	vmulss xmm3,xmm2,xmm9
    2cf5:	c5 f8 2f 1d 3b f3 00 	vcomiss xmm3,DWORD PTR [rip+0xf33b]        # 12038 <_IO_stdin_used+0x38>
    2cfc:	00 
    2cfd:	0f 83 e5 00 00 00    	jae    2de8 <render_multi_thread+0x1a8>
    2d03:	c4 e1 fa 2c c3       	vcvttss2si rax,xmm3
    2d08:	c4 e1 f9 6e e1       	vmovq  xmm4,rcx
    2d0d:	c4 43 91 22 ce 01    	vpinsrq xmm9,xmm13,r14,0x1
    2d13:	49 8d 7d 38          	lea    rdi,[r13+0x38]
    2d17:	31 f6                	xor    esi,esi
    2d19:	c4 63 d9 22 c0 01    	vpinsrq xmm8,xmm4,rax,0x1
    2d1f:	c4 43 35 38 d0 01    	vinserti128 ymm10,ymm9,xmm8,0x1
    2d25:	c4 41 7e 7f 55 10    	vmovdqu YMMWORD PTR [r13+0x10],ymm10
    2d2b:	c5 f8 77             	vzeroupper 
    2d2e:	e8 2d f9 ff ff       	call   2660 <pthread_mutex_init@plt>
    2d33:	4c 8b 74 24 08       	mov    r14,QWORD PTR [rsp+0x8]
    2d38:	4c 89 e9             	mov    rcx,r13
    2d3b:	31 f6                	xor    esi,esi
    2d3d:	48 8d 15 ac 58 00 00 	lea    rdx,[rip+0x58ac]        # 85f0 <render>
    2d44:	49 83 c5 60          	add    r13,0x60
    2d48:	4b 8d 3c fe          	lea    rdi,[r14+r15*8]
    2d4c:	49 83 c7 01          	add    r15,0x1
    2d50:	e8 6b f9 ff ff       	call   26c0 <pthread_create@plt>
    2d55:	49 83 ff 10          	cmp    r15,0x10
    2d59:	c5 e8 57 d2          	vxorps xmm2,xmm2,xmm2
    2d5d:	0f 84 0d 01 00 00    	je     2e70 <render_multi_thread+0x230>
    2d63:	c5 f9 6f 6c 24 10    	vmovdqa xmm5,XMMWORD PTR [rsp+0x10]
    2d69:	48 8b 4b 28          	mov    rcx,QWORD PTR [rbx+0x28]
    2d6d:	c4 c1 79 7f 6d 00    	vmovdqa XMMWORD PTR [r13+0x0],xmm5
    2d73:	48 85 c9             	test   rcx,rcx
    2d76:	0f 88 d4 00 00 00    	js     2e50 <render_multi_thread+0x210>
    2d7c:	c4 e1 ea 2a d9       	vcvtsi2ss xmm3,xmm2,rcx
    2d81:	4c 8b 43 30          	mov    r8,QWORD PTR [rbx+0x30]
    2d85:	c5 e2 59 35 a7 f2 00 	vmulss xmm6,xmm3,DWORD PTR [rip+0xf2a7]        # 12034 <_IO_stdin_used+0x34>
    2d8c:	00 
    2d8d:	4c 89 ff             	mov    rdi,r15
    2d90:	83 e7 03             	and    edi,0x3
    2d93:	4d 85 c0             	test   r8,r8
    2d96:	0f 88 94 00 00 00    	js     2e30 <render_multi_thread+0x1f0>
    2d9c:	c4 41 ea 2a c0       	vcvtsi2ss xmm8,xmm2,r8
    2da1:	c4 61 ea 2a d7       	vcvtsi2ss xmm10,xmm2,rdi
    2da6:	c5 3a 59 0d 86 f2 00 	vmulss xmm9,xmm8,DWORD PTR [rip+0xf286]        # 12034 <_IO_stdin_used+0x34>
    2dad:	00 
    2dae:	4d 89 f9             	mov    r9,r15
    2db1:	49 c1 e9 02          	shr    r9,0x2
    2db5:	c5 2a 59 de          	vmulss xmm11,xmm10,xmm6
    2db9:	c5 78 2f 1d 77 f2 00 	vcomiss xmm11,DWORD PTR [rip+0xf277]        # 12038 <_IO_stdin_used+0x38>
    2dc0:	00 
    2dc1:	0f 82 d9 fe ff ff    	jb     2ca0 <render_multi_thread+0x60>
    2dc7:	c5 22 5c 25 69 f2 00 	vsubss xmm12,xmm11,DWORD PTR [rip+0xf269]        # 12038 <_IO_stdin_used+0x38>
    2dce:	00 
    2dcf:	c4 41 fa 2c dc       	vcvttss2si r11,xmm12
    2dd4:	4d 31 e3             	xor    r11,r12
    2dd7:	c4 41 f9 6e eb       	vmovq  xmm13,r11
    2ddc:	e9 c9 fe ff ff       	jmp    2caa <render_multi_thread+0x6a>
    2de1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    2de8:	c5 e2 5c 35 48 f2 00 	vsubss xmm6,xmm3,DWORD PTR [rip+0xf248]        # 12038 <_IO_stdin_used+0x38>
    2def:	00 
    2df0:	c4 e1 fa 2c c6       	vcvttss2si rax,xmm6
    2df5:	4c 31 e0             	xor    rax,r12
    2df8:	e9 0b ff ff ff       	jmp    2d08 <render_multi_thread+0xc8>
    2dfd:	0f 1f 00             	nop    DWORD PTR [rax]
    2e00:	c5 d2 5c 0d 30 f2 00 	vsubss xmm1,xmm5,DWORD PTR [rip+0xf230]        # 12038 <_IO_stdin_used+0x38>
    2e07:	00 
    2e08:	c4 e1 fa 2c c9       	vcvttss2si rcx,xmm1
    2e0d:	4c 31 e1             	xor    rcx,r12
    2e10:	e9 d2 fe ff ff       	jmp    2ce7 <render_multi_thread+0xa7>
    2e15:	0f 1f 00             	nop    DWORD PTR [rax]
    2e18:	c5 82 5c 3d 18 f2 00 	vsubss xmm7,xmm15,DWORD PTR [rip+0xf218]        # 12038 <_IO_stdin_used+0x38>
    2e1f:	00 
    2e20:	c4 61 fa 2c f7       	vcvttss2si r14,xmm7
    2e25:	4d 31 e6             	xor    r14,r12
    2e28:	e9 9d fe ff ff       	jmp    2cca <render_multi_thread+0x8a>
    2e2d:	0f 1f 00             	nop    DWORD PTR [rax]
    2e30:	4c 89 c6             	mov    rsi,r8
    2e33:	41 83 e0 01          	and    r8d,0x1
    2e37:	48 d1 ee             	shr    rsi,1
    2e3a:	49 09 f0             	or     r8,rsi
    2e3d:	c4 c1 ea 2a e0       	vcvtsi2ss xmm4,xmm2,r8
    2e42:	c5 5a 58 c4          	vaddss xmm8,xmm4,xmm4
    2e46:	e9 56 ff ff ff       	jmp    2da1 <render_multi_thread+0x161>
    2e4b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    2e50:	48 89 ca             	mov    rdx,rcx
    2e53:	83 e1 01             	and    ecx,0x1
    2e56:	48 d1 ea             	shr    rdx,1
    2e59:	48 09 d1             	or     rcx,rdx
    2e5c:	c4 e1 ea 2a c9       	vcvtsi2ss xmm1,xmm2,rcx
    2e61:	c5 f2 58 d9          	vaddss xmm3,xmm1,xmm1
    2e65:	e9 17 ff ff ff       	jmp    2d81 <render_multi_thread+0x141>
    2e6a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    2e70:	4c 8b 3c 24          	mov    r15,QWORD PTR [rsp]
    2e74:	4c 8d ac 24 d8 00 00 	lea    r13,[rsp+0xd8]
    2e7b:	00 
    2e7c:	49 81 c7 38 06 00 00 	add    r15,0x638
    2e83:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    2e88:	49 8b 3e             	mov    rdi,QWORD PTR [r14]
    2e8b:	31 f6                	xor    esi,esi
    2e8d:	49 83 c6 08          	add    r14,0x8
    2e91:	e8 5a f6 ff ff       	call   24f0 <pthread_join@plt>
    2e96:	4c 89 ef             	mov    rdi,r13
    2e99:	49 83 c5 60          	add    r13,0x60
    2e9d:	e8 4e fa ff ff       	call   28f0 <pthread_mutex_destroy@plt>
    2ea2:	4d 39 fd             	cmp    r13,r15
    2ea5:	75 e1                	jne    2e88 <render_multi_thread+0x248>
    2ea7:	48 8b 53 10          	mov    rdx,QWORD PTR [rbx+0x10]
    2eab:	48 8b 73 08          	mov    rsi,QWORD PTR [rbx+0x8]
    2eaf:	45 31 c0             	xor    r8d,r8d
    2eb2:	31 c9                	xor    ecx,ecx
    2eb4:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    2eb7:	e8 14 de 00 00       	call   10cd0 <mlx_put_image_to_window>
    2ebc:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    2ec0:	5b                   	pop    rbx
    2ec1:	41 5c                	pop    r12
    2ec3:	41 5d                	pop    r13
    2ec5:	41 5e                	pop    r14
    2ec7:	41 5f                	pop    r15
    2ec9:	5d                   	pop    rbp
    2eca:	c3                   	ret    
    2ecb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002ed0 <input_key>:
    2ed0:	f3 0f 1e fa          	endbr64 
    2ed4:	55                   	push   rbp
    2ed5:	89 fd                	mov    ebp,edi
    2ed7:	53                   	push   rbx
    2ed8:	48 89 f3             	mov    rbx,rsi
    2edb:	31 f6                	xor    esi,esi
    2edd:	48 83 ec 28          	sub    rsp,0x28
    2ee1:	48 89 e7             	mov    rdi,rsp
    2ee4:	e8 f7 f6 ff ff       	call   25e0 <gettimeofday@plt>
    2ee9:	81 fd 1b ff 00 00    	cmp    ebp,0xff1b
    2eef:	0f 84 83 00 00 00    	je     2f78 <input_key+0xa8>
    2ef5:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    2ef8:	89 ee                	mov    esi,ebp
    2efa:	e8 c1 86 00 00       	call   b5c0 <try_move_shape>
    2eff:	84 c0                	test   al,al
    2f01:	75 0e                	jne    2f11 <input_key+0x41>
    2f03:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    2f06:	89 ee                	mov    esi,ebp
    2f08:	e8 63 87 00 00       	call   b670 <try_rotate_shape>
    2f0d:	84 c0                	test   al,al
    2f0f:	74 7f                	je     2f90 <input_key+0xc0>
    2f11:	48 8b 73 08          	mov    rsi,QWORD PTR [rbx+0x8]
    2f15:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    2f18:	e8 23 fd ff ff       	call   2c40 <render_multi_thread>
    2f1d:	48 8d 7c 24 10       	lea    rdi,[rsp+0x10]
    2f22:	31 f6                	xor    esi,esi
    2f24:	e8 b7 f6 ff ff       	call   25e0 <gettimeofday@plt>
    2f29:	48 8b 4c 24 10       	mov    rcx,QWORD PTR [rsp+0x10]
    2f2e:	c5 f0 57 c9          	vxorps xmm1,xmm1,xmm1
    2f32:	48 2b 0c 24          	sub    rcx,QWORD PTR [rsp]
    2f36:	c4 e1 f3 2a d9       	vcvtsi2sd xmm3,xmm1,rcx
    2f3b:	48 8b 54 24 18       	mov    rdx,QWORD PTR [rsp+0x18]
    2f40:	48 2b 54 24 08       	sub    rdx,QWORD PTR [rsp+0x8]
    2f45:	48 8d 35 c4 f0 00 00 	lea    rsi,[rip+0xf0c4]        # 12010 <_IO_stdin_used+0x10>
    2f4c:	c4 e1 f3 2a c2       	vcvtsi2sd xmm0,xmm1,rdx
    2f51:	bf 01 00 00 00       	mov    edi,0x1
    2f56:	b8 01 00 00 00       	mov    eax,0x1
    2f5b:	c5 fb 5e 15 dd f0 00 	vdivsd xmm2,xmm0,QWORD PTR [rip+0xf0dd]        # 12040 <_IO_stdin_used+0x40>
    2f62:	00 
    2f63:	c5 eb 58 c3          	vaddsd xmm0,xmm2,xmm3
    2f67:	e8 44 f6 ff ff       	call   25b0 <__printf_chk@plt>
    2f6c:	48 83 c4 28          	add    rsp,0x28
    2f70:	31 c0                	xor    eax,eax
    2f72:	5b                   	pop    rbx
    2f73:	5d                   	pop    rbp
    2f74:	c3                   	ret    
    2f75:	0f 1f 00             	nop    DWORD PTR [rax]
    2f78:	48 8b 43 08          	mov    rax,QWORD PTR [rbx+0x8]
    2f7c:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    2f7f:	e8 7c d5 00 00       	call   10500 <mlx_loop_end>
    2f84:	e9 6c ff ff ff       	jmp    2ef5 <input_key+0x25>
    2f89:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    2f90:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    2f93:	89 ee                	mov    esi,ebp
    2f95:	e8 86 87 00 00       	call   b720 <try_update_shape_scale>
    2f9a:	84 c0                	test   al,al
    2f9c:	0f 85 6f ff ff ff    	jne    2f11 <input_key+0x41>
    2fa2:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    2fa5:	89 ee                	mov    esi,ebp
    2fa7:	e8 14 88 00 00       	call   b7c0 <try_change_shape>
    2fac:	84 c0                	test   al,al
    2fae:	0f 85 5d ff ff ff    	jne    2f11 <input_key+0x41>
    2fb4:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    2fb7:	89 ee                	mov    esi,ebp
    2fb9:	e8 f2 88 00 00       	call   b8b0 <try_move_camera>
    2fbe:	84 c0                	test   al,al
    2fc0:	0f 85 4b ff ff ff    	jne    2f11 <input_key+0x41>
    2fc6:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    2fc9:	89 ee                	mov    esi,ebp
    2fcb:	e8 80 89 00 00       	call   b950 <try_rotate_camera>
    2fd0:	84 c0                	test   al,al
    2fd2:	0f 85 39 ff ff ff    	jne    2f11 <input_key+0x41>
    2fd8:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    2fdb:	89 ee                	mov    esi,ebp
    2fdd:	e8 fe 89 00 00       	call   b9e0 <try_move_light>
    2fe2:	84 c0                	test   al,al
    2fe4:	0f 85 27 ff ff ff    	jne    2f11 <input_key+0x41>
    2fea:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    2fed:	89 ee                	mov    esi,ebp
    2fef:	e8 9c 8a 00 00       	call   ba90 <try_change_light>
    2ff4:	84 c0                	test   al,al
    2ff6:	0f 85 15 ff ff ff    	jne    2f11 <input_key+0x41>
    2ffc:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    2fff:	89 ee                	mov    esi,ebp
    3001:	e8 6a 88 00 00       	call   b870 <try_change_texture>
    3006:	84 c0                	test   al,al
    3008:	0f 85 03 ff ff ff    	jne    2f11 <input_key+0x41>
    300e:	e9 0a ff ff ff       	jmp    2f1d <input_key+0x4d>
    3013:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    301a:	00 00 00 
    301d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000003020 <init_camera>:
    3020:	f3 0f 1e fa          	endbr64 
    3024:	4c 8d 54 24 08       	lea    r10,[rsp+0x8]
    3029:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    302d:	c5 e8 57 d2          	vxorps xmm2,xmm2,xmm2
    3031:	41 ff 72 f8          	push   QWORD PTR [r10-0x8]
    3035:	55                   	push   rbp
    3036:	48 89 e5             	mov    rbp,rsp
    3039:	41 54                	push   r12
    303b:	49 89 f4             	mov    r12,rsi
    303e:	41 52                	push   r10
    3040:	53                   	push   rbx
    3041:	48 89 fb             	mov    rbx,rdi
    3044:	48 83 ec 78          	sub    rsp,0x78
    3048:	c5 fa 10 67 34       	vmovss xmm4,DWORD PTR [rdi+0x34]
    304d:	c5 fa 10 4f 30       	vmovss xmm1,DWORD PTR [rdi+0x30]
    3052:	c5 fa 10 5f 38       	vmovss xmm3,DWORD PTR [rdi+0x38]
    3057:	c5 da 59 c4          	vmulss xmm0,xmm4,xmm4
    305b:	c4 e2 71 b9 c1       	vfmadd231ss xmm0,xmm1,xmm1
    3060:	c4 e2 61 b9 c3       	vfmadd231ss xmm0,xmm3,xmm3
    3065:	c5 f8 2e d0          	vucomiss xmm2,xmm0
    3069:	0f 87 e0 00 00 00    	ja     314f <init_camera+0x12f>
    306f:	c5 fa 51 c0          	vsqrtss xmm0,xmm0,xmm0
    3073:	c5 f2 5e e8          	vdivss xmm5,xmm1,xmm0
    3077:	48 8d 7d 90          	lea    rdi,[rbp-0x70]
    307b:	c5 da 5e f0          	vdivss xmm6,xmm4,xmm0
    307f:	c5 e2 5e c0          	vdivss xmm0,xmm3,xmm0
    3083:	c5 d0 14 fe          	vunpcklps xmm7,xmm5,xmm6
    3087:	c5 f8 13 7b 30       	vmovlps QWORD PTR [rbx+0x30],xmm7
    308c:	c5 fa 11 43 38       	vmovss DWORD PTR [rbx+0x38],xmm0
    3091:	c5 fa 7e 4b 38       	vmovq  xmm1,QWORD PTR [rbx+0x38]
    3096:	c5 f9 6f c7          	vmovdqa xmm0,xmm7
    309a:	e8 a1 67 00 00       	call   9840 <get_local_basis>
    309f:	49 8b 44 24 30       	mov    rax,QWORD PTR [r12+0x30]
    30a4:	c5 79 6f 4d 90       	vmovdqa xmm9,XMMWORD PTR [rbp-0x70]
    30a9:	c4 41 08 57 f6       	vxorps xmm14,xmm14,xmm14
    30ae:	c5 79 6f 55 a0       	vmovdqa xmm10,XMMWORD PTR [rbp-0x60]
    30b3:	c5 79 6f 5d b0       	vmovdqa xmm11,XMMWORD PTR [rbp-0x50]
    30b8:	48 85 c0             	test   rax,rax
    30bb:	c5 7a 10 25 b1 ef 00 	vmovss xmm12,DWORD PTR [rip+0xefb1]        # 12074 <_IO_stdin_used+0x74>
    30c2:	00 
    30c3:	c5 79 7f 4b 10       	vmovdqa XMMWORD PTR [rbx+0x10],xmm9
    30c8:	c5 1a 59 6b 40       	vmulss xmm13,xmm12,DWORD PTR [rbx+0x40]
    30cd:	c5 79 7f 53 20       	vmovdqa XMMWORD PTR [rbx+0x20],xmm10
    30d2:	c5 79 7f 5b 30       	vmovdqa XMMWORD PTR [rbx+0x30],xmm11
    30d7:	78 3f                	js     3118 <init_camera+0xf8>
    30d9:	49 8b 4c 24 28       	mov    rcx,QWORD PTR [r12+0x28]
    30de:	c4 e1 8a 2a d8       	vcvtsi2ss xmm3,xmm14,rax
    30e3:	48 85 c9             	test   rcx,rcx
    30e6:	78 50                	js     3138 <init_camera+0x118>
    30e8:	c4 e1 8a 2a e1       	vcvtsi2ss xmm4,xmm14,rcx
    30ed:	c5 e2 5e cc          	vdivss xmm1,xmm3,xmm4
    30f1:	c6 43 50 01          	mov    BYTE PTR [rbx+0x50],0x1
    30f5:	c4 c1 72 59 ed       	vmulss xmm5,xmm1,xmm13
    30fa:	c5 90 14 f5          	vunpcklps xmm6,xmm13,xmm5
    30fe:	c5 f8 13 73 44       	vmovlps QWORD PTR [rbx+0x44],xmm6
    3103:	48 83 c4 78          	add    rsp,0x78
    3107:	5b                   	pop    rbx
    3108:	5f                   	pop    rdi
    3109:	41 5c                	pop    r12
    310b:	5d                   	pop    rbp
    310c:	48 8d 67 f8          	lea    rsp,[rdi-0x8]
    3110:	c3                   	ret    
    3111:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    3118:	48 89 c2             	mov    rdx,rax
    311b:	83 e0 01             	and    eax,0x1
    311e:	49 8b 4c 24 28       	mov    rcx,QWORD PTR [r12+0x28]
    3123:	48 d1 ea             	shr    rdx,1
    3126:	48 09 d0             	or     rax,rdx
    3129:	c4 61 8a 2a f8       	vcvtsi2ss xmm15,xmm14,rax
    312e:	c4 c1 02 58 df       	vaddss xmm3,xmm15,xmm15
    3133:	48 85 c9             	test   rcx,rcx
    3136:	79 b0                	jns    30e8 <init_camera+0xc8>
    3138:	48 89 ce             	mov    rsi,rcx
    313b:	83 e1 01             	and    ecx,0x1
    313e:	48 d1 ee             	shr    rsi,1
    3141:	48 09 f1             	or     rcx,rsi
    3144:	c4 e1 8a 2a d1       	vcvtsi2ss xmm2,xmm14,rcx
    3149:	c5 ea 58 e2          	vaddss xmm4,xmm2,xmm2
    314d:	eb 9e                	jmp    30ed <init_camera+0xcd>
    314f:	c5 fa 11 5d 84       	vmovss DWORD PTR [rbp-0x7c],xmm3
    3154:	c5 fa 11 65 88       	vmovss DWORD PTR [rbp-0x78],xmm4
    3159:	c5 fa 11 4d 8c       	vmovss DWORD PTR [rbp-0x74],xmm1
    315e:	e8 2d f8 ff ff       	call   2990 <sqrtf@plt>
    3163:	c5 fa 10 5d 84       	vmovss xmm3,DWORD PTR [rbp-0x7c]
    3168:	c5 fa 10 65 88       	vmovss xmm4,DWORD PTR [rbp-0x78]
    316d:	c5 fa 10 4d 8c       	vmovss xmm1,DWORD PTR [rbp-0x74]
    3172:	e9 fc fe ff ff       	jmp    3073 <init_camera+0x53>
    3177:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    317e:	00 00 

0000000000003180 <move_camera>:
    3180:	f3 0f 1e fa          	endbr64 
    3184:	83 ee 1a             	sub    esi,0x1a
    3187:	83 fe 05             	cmp    esi,0x5
    318a:	77 21                	ja     31ad <move_camera+0x2d>
    318c:	48 8d 15 b5 ee 00 00 	lea    rdx,[rip+0xeeb5]        # 12048 <_IO_stdin_used+0x48>
    3193:	48 63 04 b2          	movsxd rax,DWORD PTR [rdx+rsi*4]
    3197:	48 01 d0             	add    rax,rdx
    319a:	3e ff e0             	notrack jmp rax
    319d:	0f 1f 00             	nop    DWORD PTR [rax]
    31a0:	c5 78 28 17          	vmovaps xmm10,XMMWORD PTR [rdi]
    31a4:	c5 28 5c 5f 30       	vsubps xmm11,xmm10,XMMWORD PTR [rdi+0x30]
    31a9:	c5 78 29 1f          	vmovaps XMMWORD PTR [rdi],xmm11
    31ad:	c3                   	ret    
    31ae:	66 90                	xchg   ax,ax
    31b0:	c5 f8 28 2f          	vmovaps xmm5,XMMWORD PTR [rdi]
    31b4:	c5 d0 58 47 30       	vaddps xmm0,xmm5,XMMWORD PTR [rdi+0x30]
    31b9:	c5 f8 29 07          	vmovaps XMMWORD PTR [rdi],xmm0
    31bd:	c3                   	ret    
    31be:	66 90                	xchg   ax,ax
    31c0:	c5 78 28 07          	vmovaps xmm8,XMMWORD PTR [rdi]
    31c4:	c5 38 58 4f 20       	vaddps xmm9,xmm8,XMMWORD PTR [rdi+0x20]
    31c9:	c5 78 29 0f          	vmovaps XMMWORD PTR [rdi],xmm9
    31cd:	c3                   	ret    
    31ce:	66 90                	xchg   ax,ax
    31d0:	c5 f8 28 37          	vmovaps xmm6,XMMWORD PTR [rdi]
    31d4:	c5 c8 5c 7f 20       	vsubps xmm7,xmm6,XMMWORD PTR [rdi+0x20]
    31d9:	c5 f8 29 3f          	vmovaps XMMWORD PTR [rdi],xmm7
    31dd:	c3                   	ret    
    31de:	66 90                	xchg   ax,ax
    31e0:	c5 f8 28 1f          	vmovaps xmm3,XMMWORD PTR [rdi]
    31e4:	c5 e0 5c 57 10       	vsubps xmm2,xmm3,XMMWORD PTR [rdi+0x10]
    31e9:	c5 f8 29 17          	vmovaps XMMWORD PTR [rdi],xmm2
    31ed:	c3                   	ret    
    31ee:	66 90                	xchg   ax,ax
    31f0:	c5 f8 28 27          	vmovaps xmm4,XMMWORD PTR [rdi]
    31f4:	c5 d8 58 4f 10       	vaddps xmm1,xmm4,XMMWORD PTR [rdi+0x10]
    31f9:	c5 f8 29 0f          	vmovaps XMMWORD PTR [rdi],xmm1
    31fd:	c3                   	ret    
    31fe:	66 90                	xchg   ax,ax

0000000000003200 <rotate_camera>:
    3200:	f3 0f 1e fa          	endbr64 
    3204:	4c 8d 54 24 08       	lea    r10,[rsp+0x8]
    3209:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    320d:	41 ff 72 f8          	push   QWORD PTR [r10-0x8]
    3211:	55                   	push   rbp
    3212:	48 89 e5             	mov    rbp,rsp
    3215:	41 56                	push   r14
    3217:	41 89 f6             	mov    r14d,esi
    321a:	41 55                	push   r13
    321c:	41 54                	push   r12
    321e:	41 52                	push   r10
    3220:	53                   	push   rbx
    3221:	48 89 fb             	mov    rbx,rdi
    3224:	48 83 ec 68          	sub    rsp,0x68
    3228:	ff 77 38             	push   QWORD PTR [rdi+0x38]
    322b:	ff 77 30             	push   QWORD PTR [rdi+0x30]
    322e:	ff 77 28             	push   QWORD PTR [rdi+0x28]
    3231:	ff 77 20             	push   QWORD PTR [rdi+0x20]
    3234:	ff 77 18             	push   QWORD PTR [rdi+0x18]
    3237:	ff 77 10             	push   QWORD PTR [rdi+0x10]
    323a:	e8 01 7e 00 00       	call   b040 <convert_quaternion>
    323f:	48 83 c4 30          	add    rsp,0x30
    3243:	41 83 fe 20          	cmp    r14d,0x20
    3247:	c5 e8 57 d2          	vxorps xmm2,xmm2,xmm2
    324b:	c4 e1 f9 7e ca       	vmovq  rdx,xmm1
    3250:	74 1e                	je     3270 <rotate_camera+0x70>
    3252:	41 83 ee 21          	sub    r14d,0x21
    3256:	41 83 fe 04          	cmp    r14d,0x4
    325a:	77 69                	ja     32c5 <rotate_camera+0xc5>
    325c:	48 8d 0d fd ed 00 00 	lea    rcx,[rip+0xedfd]        # 12060 <_IO_stdin_used+0x60>
    3263:	4a 63 04 b1          	movsxd rax,DWORD PTR [rcx+r14*4]
    3267:	48 01 c8             	add    rax,rcx
    326a:	3e ff e0             	notrack jmp rax
    326d:	0f 1f 00             	nop    DWORD PTR [rax]
    3270:	c5 7b 10 2d 00 ee 00 	vmovsd xmm13,QWORD PTR [rip+0xee00]        # 12078 <_IO_stdin_used+0x78>
    3277:	00 
    3278:	c5 6a 5a 53 10       	vcvtss2sd xmm10,xmm2,DWORD PTR [rbx+0x10]
    327d:	c5 6a 5a 5b 14       	vcvtss2sd xmm11,xmm2,DWORD PTR [rbx+0x14]
    3282:	c5 ea 5a 53 18       	vcvtss2sd xmm2,xmm2,DWORD PTR [rbx+0x18]
    3287:	c4 41 2b 59 f5       	vmulsd xmm14,xmm10,xmm13
    328c:	c4 c1 23 59 cd       	vmulsd xmm1,xmm11,xmm13
    3291:	c4 41 6b 59 e5       	vmulsd xmm12,xmm2,xmm13
    3296:	c4 41 0b 5a ee       	vcvtsd2ss xmm13,xmm14,xmm14
    329b:	c4 41 79 7e ed       	vmovd  r13d,xmm13
    32a0:	c5 73 5a f1          	vcvtsd2ss xmm14,xmm1,xmm1
    32a4:	49 c1 e5 20          	shl    r13,0x20
    32a8:	c4 41 79 7e f4       	vmovd  r12d,xmm14
    32ad:	49 81 cd a0 c1 7f 3f 	or     r13,0x3f7fc1a0
    32b4:	c4 41 1b 5a fc       	vcvtsd2ss xmm15,xmm12,xmm12
    32b9:	c4 41 79 7e f8       	vmovd  r8d,xmm15
    32be:	49 c1 e0 20          	shl    r8,0x20
    32c2:	4d 09 c4             	or     r12,r8
    32c5:	c4 c1 f9 6e d5       	vmovq  xmm2,r13
    32ca:	c4 c1 f9 6e dc       	vmovq  xmm3,r12
    32cf:	c4 e1 f9 6e ca       	vmovq  xmm1,rdx
    32d4:	e8 d7 7b 00 00       	call   aeb0 <hamilton_product>
    32d9:	48 8d 7d 90          	lea    rdi,[rbp-0x70]
    32dd:	e8 7e 7c 00 00       	call   af60 <convert_matrix>
    32e2:	c5 f9 6f 45 90       	vmovdqa xmm0,XMMWORD PTR [rbp-0x70]
    32e7:	c5 e8 57 d2          	vxorps xmm2,xmm2,xmm2
    32eb:	c5 f9 6f 65 a0       	vmovdqa xmm4,XMMWORD PTR [rbp-0x60]
    32f0:	c5 f9 6f 5d b0       	vmovdqa xmm3,XMMWORD PTR [rbp-0x50]
    32f5:	c5 f9 7f 43 10       	vmovdqa XMMWORD PTR [rbx+0x10],xmm0
    32fa:	c5 fa 10 7b 14       	vmovss xmm7,DWORD PTR [rbx+0x14]
    32ff:	c5 fa 10 4b 10       	vmovss xmm1,DWORD PTR [rbx+0x10]
    3304:	c5 7a 10 4b 18       	vmovss xmm9,DWORD PTR [rbx+0x18]
    3309:	c5 f9 7f 63 20       	vmovdqa XMMWORD PTR [rbx+0x20],xmm4
    330e:	c5 c2 59 c7          	vmulss xmm0,xmm7,xmm7
    3312:	c5 f9 7f 5b 30       	vmovdqa XMMWORD PTR [rbx+0x30],xmm3
    3317:	c4 e2 71 b9 c1       	vfmadd231ss xmm0,xmm1,xmm1
    331c:	c4 c2 31 b9 c1       	vfmadd231ss xmm0,xmm9,xmm9
    3321:	c5 f8 2e d0          	vucomiss xmm2,xmm0
    3325:	0f 87 0b 02 00 00    	ja     3536 <rotate_camera+0x336>
    332b:	c5 fa 51 c0          	vsqrtss xmm0,xmm0,xmm0
    332f:	c5 7a 10 63 24       	vmovss xmm12,DWORD PTR [rbx+0x24]
    3334:	c5 f2 5e e8          	vdivss xmm5,xmm1,xmm0
    3338:	c5 7a 10 6b 20       	vmovss xmm13,DWORD PTR [rbx+0x20]
    333d:	c5 7a 10 5b 28       	vmovss xmm11,DWORD PTR [rbx+0x28]
    3342:	c5 c2 5e f0          	vdivss xmm6,xmm7,xmm0
    3346:	c5 32 5e d0          	vdivss xmm10,xmm9,xmm0
    334a:	c4 c1 1a 59 c4       	vmulss xmm0,xmm12,xmm12
    334f:	c5 50 14 c6          	vunpcklps xmm8,xmm5,xmm6
    3353:	c5 78 13 43 10       	vmovlps QWORD PTR [rbx+0x10],xmm8
    3358:	c4 c2 11 b9 c5       	vfmadd231ss xmm0,xmm13,xmm13
    335d:	c4 c2 21 b9 c3       	vfmadd231ss xmm0,xmm11,xmm11
    3362:	c5 f8 2e d0          	vucomiss xmm2,xmm0
    3366:	c5 7a 11 53 18       	vmovss DWORD PTR [rbx+0x18],xmm10
    336b:	0f 87 19 02 00 00    	ja     358a <rotate_camera+0x38a>
    3371:	c5 fa 51 c0          	vsqrtss xmm0,xmm0,xmm0
    3375:	c5 12 5e f0          	vdivss xmm14,xmm13,xmm0
    3379:	c5 7a 10 4b 34       	vmovss xmm9,DWORD PTR [rbx+0x34]
    337e:	c5 fa 10 7b 30       	vmovss xmm7,DWORD PTR [rbx+0x30]
    3383:	c5 fa 10 5b 38       	vmovss xmm3,DWORD PTR [rbx+0x38]
    3388:	c5 1a 5e f8          	vdivss xmm15,xmm12,xmm0
    338c:	c5 a2 5e c0          	vdivss xmm0,xmm11,xmm0
    3390:	c4 c1 08 14 e7       	vunpcklps xmm4,xmm14,xmm15
    3395:	c5 f8 13 63 20       	vmovlps QWORD PTR [rbx+0x20],xmm4
    339a:	c5 fa 11 43 28       	vmovss DWORD PTR [rbx+0x28],xmm0
    339f:	c4 c1 32 59 c1       	vmulss xmm0,xmm9,xmm9
    33a4:	c4 e2 41 b9 c7       	vfmadd231ss xmm0,xmm7,xmm7
    33a9:	c4 e2 61 b9 c3       	vfmadd231ss xmm0,xmm3,xmm3
    33ae:	c5 f8 2e d0          	vucomiss xmm2,xmm0
    33b2:	0f 87 aa 01 00 00    	ja     3562 <rotate_camera+0x362>
    33b8:	c5 fa 51 c0          	vsqrtss xmm0,xmm0,xmm0
    33bc:	c5 c2 5e c8          	vdivss xmm1,xmm7,xmm0
    33c0:	c5 b2 5e e8          	vdivss xmm5,xmm9,xmm0
    33c4:	c5 62 5e c0          	vdivss xmm8,xmm3,xmm0
    33c8:	c5 f0 14 f5          	vunpcklps xmm6,xmm1,xmm5
    33cc:	c5 f8 13 73 30       	vmovlps QWORD PTR [rbx+0x30],xmm6
    33d1:	c5 7a 11 43 38       	vmovss DWORD PTR [rbx+0x38],xmm8
    33d6:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    33da:	5b                   	pop    rbx
    33db:	41 59                	pop    r9
    33dd:	41 5c                	pop    r12
    33df:	41 5d                	pop    r13
    33e1:	41 5e                	pop    r14
    33e3:	5d                   	pop    rbp
    33e4:	49 8d 61 f8          	lea    rsp,[r9-0x8]
    33e8:	c3                   	ret    
    33e9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    33f0:	c5 ea 5a 4b 30       	vcvtss2sd xmm1,xmm2,DWORD PTR [rbx+0x30]
    33f5:	c5 ea 5a 7b 38       	vcvtss2sd xmm7,xmm2,DWORD PTR [rbx+0x38]
    33fa:	c5 ea 5a 6b 34       	vcvtss2sd xmm5,xmm2,DWORD PTR [rbx+0x34]
    33ff:	c5 fb 10 25 71 ec 00 	vmovsd xmm4,QWORD PTR [rip+0xec71]        # 12078 <_IO_stdin_used+0x78>
    3406:	00 
    3407:	c5 f3 59 dc          	vmulsd xmm3,xmm1,xmm4
    340b:	c5 43 59 c4          	vmulsd xmm8,xmm7,xmm4
    340f:	c5 d3 59 f4          	vmulsd xmm6,xmm5,xmm4
    3413:	c5 63 5a cb          	vcvtsd2ss xmm9,xmm3,xmm3
    3417:	c4 41 79 7e cd       	vmovd  r13d,xmm9
    341c:	c4 41 3b 5a d8       	vcvtsd2ss xmm11,xmm8,xmm8
    3421:	c5 79 7e de          	vmovd  esi,xmm11
    3425:	49 c1 e5 20          	shl    r13,0x20
    3429:	48 c1 e6 20          	shl    rsi,0x20
    342d:	c5 4b 5a d6          	vcvtsd2ss xmm10,xmm6,xmm6
    3431:	c4 41 79 7e d4       	vmovd  r12d,xmm10
    3436:	49 81 cd a0 c1 7f 3f 	or     r13,0x3f7fc1a0
    343d:	49 09 f4             	or     r12,rsi
    3440:	e9 80 fe ff ff       	jmp    32c5 <rotate_camera+0xc5>
    3445:	0f 1f 00             	nop    DWORD PTR [rax]
    3448:	c5 fb 10 25 30 ec 00 	vmovsd xmm4,QWORD PTR [rip+0xec30]        # 12080 <_IO_stdin_used+0x80>
    344f:	00 
    3450:	c5 6a 5a 7b 30       	vcvtss2sd xmm15,xmm2,DWORD PTR [rbx+0x30]
    3455:	c5 ea 5a 4b 34       	vcvtss2sd xmm1,xmm2,DWORD PTR [rbx+0x34]
    345a:	c5 ea 5a 53 38       	vcvtss2sd xmm2,xmm2,DWORD PTR [rbx+0x38]
    345f:	c5 83 59 dc          	vmulsd xmm3,xmm15,xmm4
    3463:	c5 73 59 cc          	vmulsd xmm9,xmm1,xmm4
    3467:	c5 eb 59 fc          	vmulsd xmm7,xmm2,xmm4
    346b:	c5 e3 5a eb          	vcvtsd2ss xmm5,xmm3,xmm3
    346f:	c4 c1 79 7e ed       	vmovd  r13d,xmm5
    3474:	c5 43 5a c7          	vcvtsd2ss xmm8,xmm7,xmm7
    3478:	c5 79 7e c7          	vmovd  edi,xmm8
    347c:	49 c1 e5 20          	shl    r13,0x20
    3480:	c4 c1 33 5a f1       	vcvtsd2ss xmm6,xmm9,xmm9
    3485:	48 c1 e7 20          	shl    rdi,0x20
    3489:	c4 c1 79 7e f4       	vmovd  r12d,xmm6
    348e:	49 81 cd a0 c1 7f 3f 	or     r13,0x3f7fc1a0
    3495:	49 09 fc             	or     r12,rdi
    3498:	e9 28 fe ff ff       	jmp    32c5 <rotate_camera+0xc5>
    349d:	0f 1f 00             	nop    DWORD PTR [rax]
    34a0:	c5 6a 5a 4b 10       	vcvtss2sd xmm9,xmm2,DWORD PTR [rbx+0x10]
    34a5:	c5 6a 5a 63 14       	vcvtss2sd xmm12,xmm2,DWORD PTR [rbx+0x14]
    34aa:	c5 6a 5a 6b 18       	vcvtss2sd xmm13,xmm2,DWORD PTR [rbx+0x18]
    34af:	c5 7b 10 15 c9 eb 00 	vmovsd xmm10,QWORD PTR [rip+0xebc9]        # 12080 <_IO_stdin_used+0x80>
    34b6:	00 
    34b7:	c4 41 33 59 da       	vmulsd xmm11,xmm9,xmm10
    34bc:	c4 c1 13 59 fa       	vmulsd xmm7,xmm13,xmm10
    34c1:	c4 41 1b 59 ca       	vmulsd xmm9,xmm12,xmm10
    34c6:	c4 41 23 5a f3       	vcvtsd2ss xmm14,xmm11,xmm11
    34cb:	c4 41 79 7e f5       	vmovd  r13d,xmm14
    34d0:	eb a2                	jmp    3474 <rotate_camera+0x274>
    34d2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    34d8:	c5 ea 5a 5b 20       	vcvtss2sd xmm3,xmm2,DWORD PTR [rbx+0x20]
    34dd:	c5 ea 5a 73 24       	vcvtss2sd xmm6,xmm2,DWORD PTR [rbx+0x24]
    34e2:	c5 ea 5a 7b 28       	vcvtss2sd xmm7,xmm2,DWORD PTR [rbx+0x28]
    34e7:	c5 fb 10 25 89 eb 00 	vmovsd xmm4,QWORD PTR [rip+0xeb89]        # 12078 <_IO_stdin_used+0x78>
    34ee:	00 
    34ef:	c5 e3 59 ec          	vmulsd xmm5,xmm3,xmm4
    34f3:	c5 4b 59 cc          	vmulsd xmm9,xmm6,xmm4
    34f7:	c5 c3 59 fc          	vmulsd xmm7,xmm7,xmm4
    34fb:	c5 53 5a c5          	vcvtsd2ss xmm8,xmm5,xmm5
    34ff:	c4 41 79 7e c5       	vmovd  r13d,xmm8
    3504:	e9 6b ff ff ff       	jmp    3474 <rotate_camera+0x274>
    3509:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    3510:	c5 7b 10 2d 68 eb 00 	vmovsd xmm13,QWORD PTR [rip+0xeb68]        # 12080 <_IO_stdin_used+0x80>
    3517:	00 
    3518:	c5 6a 5a 63 20       	vcvtss2sd xmm12,xmm2,DWORD PTR [rbx+0x20]
    351d:	c5 6a 5a 7b 24       	vcvtss2sd xmm15,xmm2,DWORD PTR [rbx+0x24]
    3522:	c5 ea 5a 53 28       	vcvtss2sd xmm2,xmm2,DWORD PTR [rbx+0x28]
    3527:	c4 41 1b 59 f5       	vmulsd xmm14,xmm12,xmm13
    352c:	c4 c1 03 59 cd       	vmulsd xmm1,xmm15,xmm13
    3531:	e9 5b fd ff ff       	jmp    3291 <rotate_camera+0x91>
    3536:	c5 7a 11 4d 84       	vmovss DWORD PTR [rbp-0x7c],xmm9
    353b:	c5 fa 11 7d 88       	vmovss DWORD PTR [rbp-0x78],xmm7
    3540:	c5 fa 11 4d 8c       	vmovss DWORD PTR [rbp-0x74],xmm1
    3545:	e8 46 f4 ff ff       	call   2990 <sqrtf@plt>
    354a:	c5 7a 10 4d 84       	vmovss xmm9,DWORD PTR [rbp-0x7c]
    354f:	c5 fa 10 7d 88       	vmovss xmm7,DWORD PTR [rbp-0x78]
    3554:	c5 e8 57 d2          	vxorps xmm2,xmm2,xmm2
    3558:	c5 fa 10 4d 8c       	vmovss xmm1,DWORD PTR [rbp-0x74]
    355d:	e9 cd fd ff ff       	jmp    332f <rotate_camera+0x12f>
    3562:	c5 fa 11 5d 84       	vmovss DWORD PTR [rbp-0x7c],xmm3
    3567:	c5 7a 11 4d 88       	vmovss DWORD PTR [rbp-0x78],xmm9
    356c:	c5 fa 11 7d 8c       	vmovss DWORD PTR [rbp-0x74],xmm7
    3571:	e8 1a f4 ff ff       	call   2990 <sqrtf@plt>
    3576:	c5 fa 10 5d 84       	vmovss xmm3,DWORD PTR [rbp-0x7c]
    357b:	c5 7a 10 4d 88       	vmovss xmm9,DWORD PTR [rbp-0x78]
    3580:	c5 fa 10 7d 8c       	vmovss xmm7,DWORD PTR [rbp-0x74]
    3585:	e9 32 fe ff ff       	jmp    33bc <rotate_camera+0x1bc>
    358a:	c5 7a 11 5d 84       	vmovss DWORD PTR [rbp-0x7c],xmm11
    358f:	c5 7a 11 65 88       	vmovss DWORD PTR [rbp-0x78],xmm12
    3594:	c5 7a 11 6d 8c       	vmovss DWORD PTR [rbp-0x74],xmm13
    3599:	e8 f2 f3 ff ff       	call   2990 <sqrtf@plt>
    359e:	c5 7a 10 5d 84       	vmovss xmm11,DWORD PTR [rbp-0x7c]
    35a3:	c5 7a 10 65 88       	vmovss xmm12,DWORD PTR [rbp-0x78]
    35a8:	c5 e8 57 d2          	vxorps xmm2,xmm2,xmm2
    35ac:	c5 7a 10 6d 8c       	vmovss xmm13,DWORD PTR [rbp-0x74]
    35b1:	e9 bf fd ff ff       	jmp    3375 <rotate_camera+0x175>
    35b6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    35bd:	00 00 00 

00000000000035c0 <is_hit_up_cap>:
    35c0:	f3 0f 1e fa          	endbr64 
    35c4:	48 83 ec 48          	sub    rsp,0x48
    35c8:	c5 7a 10 4f 44       	vmovss xmm9,DWORD PTR [rdi+0x44]
    35cd:	c5 7a 10 57 40       	vmovss xmm10,DWORD PTR [rdi+0x40]
    35d2:	c5 e0 57 db          	vxorps xmm3,xmm3,xmm3
    35d6:	c5 7a 10 74 24 64    	vmovss xmm14,DWORD PTR [rsp+0x64]
    35dc:	c5 f9 d6 4c 24 38    	vmovq  QWORD PTR [rsp+0x38],xmm1
    35e2:	c5 7a 10 47 48       	vmovss xmm8,DWORD PTR [rdi+0x48]
    35e7:	c5 7a 10 7c 24 60    	vmovss xmm15,DWORD PTR [rsp+0x60]
    35ed:	c5 7a 10 6c 24 68    	vmovss xmm13,DWORD PTR [rsp+0x68]
    35f3:	c5 f9 d6 44 24 30    	vmovq  QWORD PTR [rsp+0x30],xmm0
    35f9:	c4 c1 32 59 ce       	vmulss xmm1,xmm9,xmm14
    35fe:	c5 fa 10 44 24 5c    	vmovss xmm0,DWORD PTR [rsp+0x5c]
    3604:	c5 fa 10 6c 24 30    	vmovss xmm5,DWORD PTR [rsp+0x30]
    360a:	c5 fa 10 74 24 34    	vmovss xmm6,DWORD PTR [rsp+0x34]
    3610:	c5 fa 10 54 24 38    	vmovss xmm2,DWORD PTR [rsp+0x38]
    3616:	c5 fa 10 64 24 50    	vmovss xmm4,DWORD PTR [rsp+0x50]
    361c:	c5 7a 10 64 24 54    	vmovss xmm12,DWORD PTR [rsp+0x54]
    3622:	c5 fa 11 04 24       	vmovss DWORD PTR [rsp],xmm0
    3627:	c5 fa 10 7c 24 58    	vmovss xmm7,DWORD PTR [rsp+0x58]
    362d:	c4 c2 29 b9 cf       	vfmadd231ss xmm1,xmm10,xmm15
    3632:	c4 c2 39 b9 cd       	vfmadd231ss xmm1,xmm8,xmm13
    3637:	c5 f8 2e cb          	vucomiss xmm1,xmm3
    363b:	7a 06                	jp     3643 <is_hit_up_cap+0x83>
    363d:	0f 84 dd 00 00 00    	je     3720 <is_hit_up_cap+0x160>
    3643:	c5 52 5c dc          	vsubss xmm11,xmm5,xmm4
    3647:	c4 c1 4a 5c dc       	vsubss xmm3,xmm6,xmm12
    364c:	c5 ea 5c c7          	vsubss xmm0,xmm2,xmm7
    3650:	c4 41 22 59 d2       	vmulss xmm10,xmm11,xmm10
    3655:	c4 c2 29 99 d9       	vfmadd132ss xmm3,xmm10,xmm9
    365a:	c4 41 30 57 c9       	vxorps xmm9,xmm9,xmm9
    365f:	c4 c2 79 b9 d8       	vfmadd231ss xmm3,xmm0,xmm8
    3664:	c5 e2 5e d9          	vdivss xmm3,xmm3,xmm1
    3668:	c5 78 2f cb          	vcomiss xmm9,xmm3
    366c:	0f 87 ae 00 00 00    	ja     3720 <is_hit_up_cap+0x160>
    3672:	c5 f8 2f 5e 30       	vcomiss xmm3,DWORD PTR [rsi+0x30]
    3677:	0f 83 a3 00 00 00    	jae    3720 <is_hit_up_cap+0x160>
    367d:	c4 42 61 b9 e6       	vfmadd231ss xmm12,xmm3,xmm14
    3682:	c4 c2 61 b9 e7       	vfmadd231ss xmm4,xmm3,xmm15
    3687:	c5 fa 10 4c 24 6c    	vmovss xmm1,DWORD PTR [rsp+0x6c]
    368d:	c4 c2 61 b9 fd       	vfmadd231ss xmm7,xmm3,xmm13
    3692:	c5 9a 5c f6          	vsubss xmm6,xmm12,xmm6
    3696:	c5 da 5c ed          	vsubss xmm5,xmm4,xmm5
    369a:	c5 c2 5c d2          	vsubss xmm2,xmm7,xmm2
    369e:	c5 4a 59 c6          	vmulss xmm8,xmm6,xmm6
    36a2:	c4 e2 39 99 ed       	vfmadd132ss xmm5,xmm8,xmm5
    36a7:	c4 e2 51 99 d2       	vfmadd132ss xmm2,xmm5,xmm2
    36ac:	c5 78 2e ca          	vucomiss xmm9,xmm2
    36b0:	77 75                	ja     3727 <is_hit_up_cap+0x167>
    36b2:	c5 ea 51 d2          	vsqrtss xmm2,xmm2,xmm2
    36b6:	c5 78 28 fa          	vmovaps xmm15,xmm2
    36ba:	c5 7a 10 35 b2 e9 00 	vmovss xmm14,DWORD PTR [rip+0xe9b2]        # 12074 <_IO_stdin_used+0x74>
    36c1:	00 
    36c2:	c5 0a 59 af 90 00 00 	vmulss xmm13,xmm14,DWORD PTR [rdi+0x90]
    36c9:	00 
    36ca:	c4 41 6a 59 df       	vmulss xmm11,xmm2,xmm15
    36cf:	c4 41 12 59 d5       	vmulss xmm10,xmm13,xmm13
    36d4:	c4 41 78 2f da       	vcomiss xmm11,xmm10
    36d9:	77 45                	ja     3720 <is_hit_up_cap+0x160>
    36db:	c5 fa 11 5e 30       	vmovss DWORD PTR [rsi+0x30],xmm3
    36e0:	c4 e2 71 a9 1c 24    	vfmadd213ss xmm3,xmm1,DWORD PTR [rsp]
    36e6:	c5 79 6f 47 40       	vmovdqa xmm8,XMMWORD PTR [rdi+0x40]
    36eb:	c4 c1 58 14 ec       	vunpcklps xmm5,xmm4,xmm12
    36f0:	c5 f9 6f 47 10       	vmovdqa xmm0,XMMWORD PTR [rdi+0x10]
    36f5:	b8 01 00 00 00       	mov    eax,0x1
    36fa:	48 89 7e 38          	mov    QWORD PTR [rsi+0x38],rdi
    36fe:	c5 79 7f 46 10       	vmovdqa XMMWORD PTR [rsi+0x10],xmm8
    3703:	c5 f9 7f 46 20       	vmovdqa XMMWORD PTR [rsi+0x20],xmm0
    3708:	c5 40 14 cb          	vunpcklps xmm9,xmm7,xmm3
    370c:	c4 c1 50 16 f1       	vmovlhps xmm6,xmm5,xmm9
    3711:	c5 f8 29 36          	vmovaps XMMWORD PTR [rsi],xmm6
    3715:	48 83 c4 48          	add    rsp,0x48
    3719:	c3                   	ret    
    371a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    3720:	31 c0                	xor    eax,eax
    3722:	48 83 c4 48          	add    rsp,0x48
    3726:	c3                   	ret    
    3727:	c5 f8 28 c2          	vmovaps xmm0,xmm2
    372b:	48 89 74 24 28       	mov    QWORD PTR [rsp+0x28],rsi
    3730:	48 89 7c 24 20       	mov    QWORD PTR [rsp+0x20],rdi
    3735:	c5 fa 11 4c 24 1c    	vmovss DWORD PTR [rsp+0x1c],xmm1
    373b:	c5 fa 11 7c 24 18    	vmovss DWORD PTR [rsp+0x18],xmm7
    3741:	c5 7a 11 64 24 14    	vmovss DWORD PTR [rsp+0x14],xmm12
    3747:	c5 fa 11 64 24 10    	vmovss DWORD PTR [rsp+0x10],xmm4
    374d:	c5 fa 11 5c 24 0c    	vmovss DWORD PTR [rsp+0xc],xmm3
    3753:	c5 fa 11 54 24 08    	vmovss DWORD PTR [rsp+0x8],xmm2
    3759:	e8 32 f2 ff ff       	call   2990 <sqrtf@plt>
    375e:	c5 fa 11 44 24 04    	vmovss DWORD PTR [rsp+0x4],xmm0
    3764:	c5 fa 10 44 24 08    	vmovss xmm0,DWORD PTR [rsp+0x8]
    376a:	e8 21 f2 ff ff       	call   2990 <sqrtf@plt>
    376f:	48 8b 74 24 28       	mov    rsi,QWORD PTR [rsp+0x28]
    3774:	48 8b 7c 24 20       	mov    rdi,QWORD PTR [rsp+0x20]
    3779:	c5 fa 10 4c 24 1c    	vmovss xmm1,DWORD PTR [rsp+0x1c]
    377f:	c5 fa 10 7c 24 18    	vmovss xmm7,DWORD PTR [rsp+0x18]
    3785:	c5 f8 28 d0          	vmovaps xmm2,xmm0
    3789:	c5 7a 10 64 24 14    	vmovss xmm12,DWORD PTR [rsp+0x14]
    378f:	c5 fa 10 64 24 10    	vmovss xmm4,DWORD PTR [rsp+0x10]
    3795:	c5 fa 10 5c 24 0c    	vmovss xmm3,DWORD PTR [rsp+0xc]
    379b:	c5 7a 10 7c 24 04    	vmovss xmm15,DWORD PTR [rsp+0x4]
    37a1:	e9 14 ff ff ff       	jmp    36ba <is_hit_up_cap+0xfa>
    37a6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    37ad:	00 00 00 

00000000000037b0 <is_hit_down_cap>:
    37b0:	f3 0f 1e fa          	endbr64 
    37b4:	41 54                	push   r12
    37b6:	c5 d0 57 ed          	vxorps xmm5,xmm5,xmm5
    37ba:	55                   	push   rbp
    37bb:	48 89 f5             	mov    rbp,rsi
    37be:	53                   	push   rbx
    37bf:	48 89 fb             	mov    rbx,rdi
    37c2:	48 81 ec 60 01 00 00 	sub    rsp,0x160
    37c9:	c5 7a 10 57 44       	vmovss xmm10,DWORD PTR [rdi+0x44]
    37ce:	c5 fa 10 5f 40       	vmovss xmm3,DWORD PTR [rdi+0x40]
    37d3:	c5 7a 10 8c 24 94 01 	vmovss xmm9,DWORD PTR [rsp+0x194]
    37da:	00 00 
    37dc:	c5 f9 d6 44 24 10    	vmovq  QWORD PTR [rsp+0x10],xmm0
    37e2:	c5 7a 10 47 48       	vmovss xmm8,DWORD PTR [rdi+0x48]
    37e7:	c5 fa 10 94 24 90 01 	vmovss xmm2,DWORD PTR [rsp+0x190]
    37ee:	00 00 
    37f0:	c5 f9 d6 4c 24 18    	vmovq  QWORD PTR [rsp+0x18],xmm1
    37f6:	c5 fa 10 a4 24 98 01 	vmovss xmm4,DWORD PTR [rsp+0x198]
    37fd:	00 00 
    37ff:	c4 c1 2a 59 c1       	vmulss xmm0,xmm10,xmm9
    3804:	c4 e2 61 b9 c2       	vfmadd231ss xmm0,xmm3,xmm2
    3809:	c4 e2 39 b9 c4       	vfmadd231ss xmm0,xmm8,xmm4
    380e:	c5 f8 2e c5          	vucomiss xmm0,xmm5
    3812:	7a 0b                	jp     381f <is_hit_down_cap+0x6f>
    3814:	b8 00 00 00 00       	mov    eax,0x0
    3819:	0f 84 a6 00 00 00    	je     38c5 <is_hit_down_cap+0x115>
    381f:	c5 fa 10 74 24 10    	vmovss xmm6,DWORD PTR [rsp+0x10]
    3825:	c5 fa 10 7c 24 14    	vmovss xmm7,DWORD PTR [rsp+0x14]
    382b:	31 c0                	xor    eax,eax
    382d:	c5 7a 10 bc 24 80 01 	vmovss xmm15,DWORD PTR [rsp+0x180]
    3834:	00 00 
    3836:	c5 fa 10 6c 24 18    	vmovss xmm5,DWORD PTR [rsp+0x18]
    383c:	c5 7a 10 b4 24 84 01 	vmovss xmm14,DWORD PTR [rsp+0x184]
    3843:	00 00 
    3845:	c5 7a 10 ac 24 88 01 	vmovss xmm13,DWORD PTR [rsp+0x188]
    384c:	00 00 
    384e:	c4 41 4a 5c e7       	vsubss xmm12,xmm6,xmm15
    3853:	c4 41 42 5c de       	vsubss xmm11,xmm7,xmm14
    3858:	c4 c1 52 5c cd       	vsubss xmm1,xmm5,xmm13
    385d:	c5 1a 59 e3          	vmulss xmm12,xmm12,xmm3
    3861:	c4 42 19 99 da       	vfmadd132ss xmm11,xmm12,xmm10
    3866:	c4 c2 21 99 c8       	vfmadd132ss xmm1,xmm11,xmm8
    386b:	c5 f2 5e c8          	vdivss xmm1,xmm1,xmm0
    386f:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    3873:	c5 f8 2f c1          	vcomiss xmm0,xmm1
    3877:	77 4c                	ja     38c5 <is_hit_down_cap+0x115>
    3879:	c5 f8 2f 4d 30       	vcomiss xmm1,DWORD PTR [rbp+0x30]
    387e:	73 45                	jae    38c5 <is_hit_down_cap+0x115>
    3880:	c4 62 09 99 c9       	vfmadd132ss xmm9,xmm14,xmm1
    3885:	c4 e2 01 99 d1       	vfmadd132ss xmm2,xmm15,xmm1
    388a:	c5 7a 10 35 e2 e7 00 	vmovss xmm14,DWORD PTR [rip+0xe7e2]        # 12074 <_IO_stdin_used+0x74>
    3891:	00 
    3892:	c4 e2 11 99 e1       	vfmadd132ss xmm4,xmm13,xmm1
    3897:	c5 0a 59 ab 90 00 00 	vmulss xmm13,xmm14,DWORD PTR [rbx+0x90]
    389e:	00 
    389f:	c5 b2 5c ff          	vsubss xmm7,xmm9,xmm7
    38a3:	c5 ea 5c f6          	vsubss xmm6,xmm2,xmm6
    38a7:	c5 da 5c ed          	vsubss xmm5,xmm4,xmm5
    38ab:	c4 41 12 59 dd       	vmulss xmm11,xmm13,xmm13
    38b0:	c5 42 59 ff          	vmulss xmm15,xmm7,xmm7
    38b4:	c4 e2 01 99 f6       	vfmadd132ss xmm6,xmm15,xmm6
    38b9:	c4 e2 49 99 ed       	vfmadd132ss xmm5,xmm6,xmm5
    38be:	c4 c1 78 2f eb       	vcomiss xmm5,xmm11
    38c3:	76 13                	jbe    38d8 <is_hit_down_cap+0x128>
    38c5:	48 81 c4 60 01 00 00 	add    rsp,0x160
    38cc:	5b                   	pop    rbx
    38cd:	5d                   	pop    rbp
    38ce:	41 5c                	pop    r12
    38d0:	c3                   	ret    
    38d1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    38d8:	c5 fa 11 4d 30       	vmovss DWORD PTR [rbp+0x30],xmm1
    38dd:	c5 f9 6f 43 50       	vmovdqa xmm0,XMMWORD PTR [rbx+0x50]
    38e2:	c4 c1 68 14 d1       	vunpcklps xmm2,xmm2,xmm9
    38e7:	c5 7a 10 a4 24 8c 01 	vmovss xmm12,DWORD PTR [rsp+0x18c]
    38ee:	00 00 
    38f0:	c4 63 39 21 43 4c 10 	vinsertps xmm8,xmm8,DWORD PTR [rbx+0x4c],0x10
    38f7:	c5 79 6f 0b          	vmovdqa xmm9,XMMWORD PTR [rbx]
    38fb:	c4 c1 60 14 da       	vunpcklps xmm3,xmm3,xmm10
    3900:	c5 79 6f 7b 10       	vmovdqa xmm15,XMMWORD PTR [rbx+0x10]
    3905:	c5 79 6f 73 20       	vmovdqa xmm14,XMMWORD PTR [rbx+0x20]
    390a:	c5 f9 7e c0          	vmovd  eax,xmm0
    390e:	c5 f9 7f 84 24 20 01 	vmovdqa XMMWORD PTR [rsp+0x120],xmm0
    3915:	00 00 
    3917:	c5 f9 6f 7b 30       	vmovdqa xmm7,XMMWORD PTR [rbx+0x30]
    391c:	c5 f9 6f 73 40       	vmovdqa xmm6,XMMWORD PTR [rbx+0x40]
    3921:	c4 41 60 16 d0       	vmovlhps xmm10,xmm3,xmm8
    3926:	c5 79 7f 8c 24 d0 00 	vmovdqa XMMWORD PTR [rsp+0xd0],xmm9
    392d:	00 00 
    392f:	c4 e2 19 99 8c 24 9c 	vfmadd132ss xmm1,xmm12,DWORD PTR [rsp+0x19c]
    3936:	01 00 00 
    3939:	c5 f9 6f 6b 60       	vmovdqa xmm5,XMMWORD PTR [rbx+0x60]
    393e:	c5 79 7f bc 24 e0 00 	vmovdqa XMMWORD PTR [rsp+0xe0],xmm15
    3945:	00 00 
    3947:	c5 79 6f 6b 70       	vmovdqa xmm13,XMMWORD PTR [rbx+0x70]
    394c:	c5 28 57 25 9c e7 00 	vxorps xmm12,xmm10,XMMWORD PTR [rip+0xe79c]        # 120f0 <_IO_stdin_used+0xf0>
    3953:	00 
    3954:	c5 79 7f b4 24 f0 00 	vmovdqa XMMWORD PTR [rsp+0xf0],xmm14
    395b:	00 00 
    395d:	c5 f9 7f bc 24 00 01 	vmovdqa XMMWORD PTR [rsp+0x100],xmm7
    3964:	00 00 
    3966:	c5 f9 7f b4 24 10 01 	vmovdqa XMMWORD PTR [rsp+0x110],xmm6
    396d:	00 00 
    396f:	c5 f9 7f ac 24 30 01 	vmovdqa XMMWORD PTR [rsp+0x130],xmm5
    3976:	00 00 
    3978:	c5 79 7f ac 24 40 01 	vmovdqa XMMWORD PTR [rsp+0x140],xmm13
    397f:	00 00 
    3981:	c5 d8 14 e1          	vunpcklps xmm4,xmm4,xmm1
    3985:	c5 f9 6f 8b 80 00 00 	vmovdqa xmm1,XMMWORD PTR [rbx+0x80]
    398c:	00 
    398d:	c5 68 16 dc          	vmovlhps xmm11,xmm2,xmm4
    3991:	c5 78 29 5d 00       	vmovaps XMMWORD PTR [rbp+0x0],xmm11
    3996:	c5 f9 7f 8c 24 50 01 	vmovdqa XMMWORD PTR [rsp+0x150],xmm1
    399d:	00 00 
    399f:	c5 79 7f 5c 24 40    	vmovdqa XMMWORD PTR [rsp+0x40],xmm11
    39a5:	83 f8 01             	cmp    eax,0x1
    39a8:	76 55                	jbe    39ff <is_hit_down_cap+0x24f>
    39aa:	c5 78 29 24 24       	vmovaps XMMWORD PTR [rsp],xmm12
    39af:	83 f8 02             	cmp    eax,0x2
    39b2:	0f 84 48 01 00 00    	je     3b00 <is_hit_down_cap+0x350>
    39b8:	48 8d 35 c9 e6 00 00 	lea    rsi,[rip+0xe6c9]        # 12088 <_IO_stdin_used+0x88>
    39bf:	31 ff                	xor    edi,edi
    39c1:	e8 8a 8e 00 00       	call   c850 <ft_assert>
    39c6:	c5 79 6f 0b          	vmovdqa xmm9,XMMWORD PTR [rbx]
    39ca:	c5 79 6f 7b 10       	vmovdqa xmm15,XMMWORD PTR [rbx+0x10]
    39cf:	c5 79 6f 73 20       	vmovdqa xmm14,XMMWORD PTR [rbx+0x20]
    39d4:	c5 f9 6f 7b 30       	vmovdqa xmm7,XMMWORD PTR [rbx+0x30]
    39d9:	c5 f9 6f 73 40       	vmovdqa xmm6,XMMWORD PTR [rbx+0x40]
    39de:	c5 f9 6f 43 50       	vmovdqa xmm0,XMMWORD PTR [rbx+0x50]
    39e3:	c5 f9 6f 6b 60       	vmovdqa xmm5,XMMWORD PTR [rbx+0x60]
    39e8:	c5 79 6f 6b 70       	vmovdqa xmm13,XMMWORD PTR [rbx+0x70]
    39ed:	c5 f9 6f 8b 80 00 00 	vmovdqa xmm1,XMMWORD PTR [rbx+0x80]
    39f4:	00 
    39f5:	c5 79 6f 5d 00       	vmovdqa xmm11,XMMWORD PTR [rbp+0x0]
    39fa:	c5 78 28 24 24       	vmovaps xmm12,XMMWORD PTR [rsp]
    39ff:	8b 53 50             	mov    edx,DWORD PTR [rbx+0x50]
    3a02:	c5 fa 7e 63 10       	vmovq  xmm4,QWORD PTR [rbx+0x10]
    3a07:	c5 78 29 65 10       	vmovaps XMMWORD PTR [rbp+0x10],xmm12
    3a0c:	44 8b 63 18          	mov    r12d,DWORD PTR [rbx+0x18]
    3a10:	c5 79 7f 4c 24 40    	vmovdqa XMMWORD PTR [rsp+0x40],xmm9
    3a16:	c5 79 7f 7c 24 50    	vmovdqa XMMWORD PTR [rsp+0x50],xmm15
    3a1c:	c5 79 7f 74 24 60    	vmovdqa XMMWORD PTR [rsp+0x60],xmm14
    3a22:	c5 f9 7f 7c 24 70    	vmovdqa XMMWORD PTR [rsp+0x70],xmm7
    3a28:	c5 f9 7f b4 24 80 00 	vmovdqa XMMWORD PTR [rsp+0x80],xmm6
    3a2f:	00 00 
    3a31:	c5 f9 7f 84 24 90 00 	vmovdqa XMMWORD PTR [rsp+0x90],xmm0
    3a38:	00 00 
    3a3a:	c5 f9 7f ac 24 a0 00 	vmovdqa XMMWORD PTR [rsp+0xa0],xmm5
    3a41:	00 00 
    3a43:	c5 79 7f ac 24 b0 00 	vmovdqa XMMWORD PTR [rsp+0xb0],xmm13
    3a4a:	00 00 
    3a4c:	c5 f9 7f 8c 24 c0 00 	vmovdqa XMMWORD PTR [rsp+0xc0],xmm1
    3a53:	00 00 
    3a55:	c5 79 7f 5c 24 20    	vmovdqa XMMWORD PTR [rsp+0x20],xmm11
    3a5b:	85 d2                	test   edx,edx
    3a5d:	0f 84 7d 00 00 00    	je     3ae0 <is_hit_down_cap+0x330>
    3a63:	83 fa 01             	cmp    edx,0x1
    3a66:	0f 84 84 01 00 00    	je     3bf0 <is_hit_down_cap+0x440>
    3a6c:	83 fa 02             	cmp    edx,0x2
    3a6f:	0f 84 ab 00 00 00    	je     3b20 <is_hit_down_cap+0x370>
    3a75:	48 8d 35 34 e6 00 00 	lea    rsi,[rip+0xe634]        # 120b0 <_IO_stdin_used+0xb0>
    3a7c:	31 ff                	xor    edi,edi
    3a7e:	c5 f9 d6 24 24       	vmovq  QWORD PTR [rsp],xmm4
    3a83:	e8 c8 8d 00 00       	call   c850 <ft_assert>
    3a88:	c5 fa 7e 24 24       	vmovq  xmm4,QWORD PTR [rsp]
    3a8d:	44 89 64 24 58       	mov    DWORD PTR [rsp+0x58],r12d
    3a92:	c5 f9 d6 64 24 50    	vmovq  QWORD PTR [rsp+0x50],xmm4
    3a98:	c5 f9 6f 54 24 50    	vmovdqa xmm2,XMMWORD PTR [rsp+0x50]
    3a9e:	c5 f9 7f 94 24 d0 00 	vmovdqa XMMWORD PTR [rsp+0xd0],xmm2
    3aa5:	00 00 
    3aa7:	44 89 a4 24 d8 00 00 	mov    DWORD PTR [rsp+0xd8],r12d
    3aae:	00 
    3aaf:	b8 01 00 00 00       	mov    eax,0x1
    3ab4:	c5 f9 d6 a4 24 d0 00 	vmovq  QWORD PTR [rsp+0xd0],xmm4
    3abb:	00 00 
    3abd:	c5 f9 6f ac 24 d0 00 	vmovdqa xmm5,XMMWORD PTR [rsp+0xd0]
    3ac4:	00 00 
    3ac6:	48 89 5d 38          	mov    QWORD PTR [rbp+0x38],rbx
    3aca:	c5 f9 7f 6d 20       	vmovdqa XMMWORD PTR [rbp+0x20],xmm5
    3acf:	48 81 c4 60 01 00 00 	add    rsp,0x160
    3ad6:	5b                   	pop    rbx
    3ad7:	5d                   	pop    rbp
    3ad8:	41 5c                	pop    r12
    3ada:	c3                   	ret    
    3adb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    3ae0:	44 89 64 24 58       	mov    DWORD PTR [rsp+0x58],r12d
    3ae5:	c5 f9 d6 64 24 50    	vmovq  QWORD PTR [rsp+0x50],xmm4
    3aeb:	c5 f9 6f 74 24 50    	vmovdqa xmm6,XMMWORD PTR [rsp+0x50]
    3af1:	c5 f9 7f b4 24 d0 00 	vmovdqa XMMWORD PTR [rsp+0xd0],xmm6
    3af8:	00 00 
    3afa:	eb ab                	jmp    3aa7 <is_hit_down_cap+0x2f7>
    3afc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    3b00:	c5 fa 7e 44 24 40    	vmovq  xmm0,QWORD PTR [rsp+0x40]
    3b06:	c5 fa 7e 4c 24 48    	vmovq  xmm1,QWORD PTR [rsp+0x48]
    3b0c:	48 8d bc 24 d0 00 00 	lea    rdi,[rsp+0xd0]
    3b13:	00 
    3b14:	ff 94 24 38 01 00 00 	call   QWORD PTR [rsp+0x138]
    3b1b:	e9 a6 fe ff ff       	jmp    39c6 <is_hit_down_cap+0x216>
    3b20:	44 89 64 24 58       	mov    DWORD PTR [rsp+0x58],r12d
    3b25:	c5 79 7f d8          	vmovdqa xmm0,xmm11
    3b29:	48 8d bc 24 d0 00 00 	lea    rdi,[rsp+0xd0]
    3b30:	00 
    3b31:	c7 84 24 90 00 00 00 	mov    DWORD PTR [rsp+0x90],0x2
    3b38:	02 00 00 00 
    3b3c:	c5 f9 6f 9c 24 90 00 	vmovdqa xmm3,XMMWORD PTR [rsp+0x90]
    3b43:	00 00 
    3b45:	c5 f9 d6 64 24 50    	vmovq  QWORD PTR [rsp+0x50],xmm4
    3b4b:	c5 79 6f 44 24 50    	vmovdqa xmm8,XMMWORD PTR [rsp+0x50]
    3b51:	c5 f9 7f 8c 24 50 01 	vmovdqa XMMWORD PTR [rsp+0x150],xmm1
    3b58:	00 00 
    3b5a:	c5 79 7f 5c 24 30    	vmovdqa XMMWORD PTR [rsp+0x30],xmm11
    3b60:	c5 fa 7e 4c 24 38    	vmovq  xmm1,QWORD PTR [rsp+0x38]
    3b66:	c5 79 7f 8c 24 d0 00 	vmovdqa XMMWORD PTR [rsp+0xd0],xmm9
    3b6d:	00 00 
    3b6f:	c5 79 7f 84 24 e0 00 	vmovdqa XMMWORD PTR [rsp+0xe0],xmm8
    3b76:	00 00 
    3b78:	c5 79 7f b4 24 f0 00 	vmovdqa XMMWORD PTR [rsp+0xf0],xmm14
    3b7f:	00 00 
    3b81:	c5 f9 7f bc 24 00 01 	vmovdqa XMMWORD PTR [rsp+0x100],xmm7
    3b88:	00 00 
    3b8a:	c5 f9 7f b4 24 10 01 	vmovdqa XMMWORD PTR [rsp+0x110],xmm6
    3b91:	00 00 
    3b93:	c5 f9 7f 9c 24 20 01 	vmovdqa XMMWORD PTR [rsp+0x120],xmm3
    3b9a:	00 00 
    3b9c:	c5 f9 7f ac 24 30 01 	vmovdqa XMMWORD PTR [rsp+0x130],xmm5
    3ba3:	00 00 
    3ba5:	c5 79 7f ac 24 40 01 	vmovdqa XMMWORD PTR [rsp+0x140],xmm13
    3bac:	00 00 
    3bae:	ff 94 24 38 01 00 00 	call   QWORD PTR [rsp+0x138]
    3bb5:	48 89 c1             	mov    rcx,rax
    3bb8:	48 c1 f9 20          	sar    rcx,0x20
    3bbc:	3d 9f 00 00 00       	cmp    eax,0x9f
    3bc1:	7e 0c                	jle    3bcf <is_hit_down_cap+0x41f>
    3bc3:	81 f9 9f 00 00 00    	cmp    ecx,0x9f
    3bc9:	0f 86 07 01 00 00    	jbe    3cd6 <is_hit_down_cap+0x526>
    3bcf:	48 8d 3d c7 e4 00 00 	lea    rdi,[rip+0xe4c7]        # 1209d <_IO_stdin_used+0x9d>
    3bd6:	45 31 e4             	xor    r12d,r12d
    3bd9:	e8 a2 e9 ff ff       	call   2580 <puts@plt>
    3bde:	c5 d9 ef e4          	vpxor  xmm4,xmm4,xmm4
    3be2:	e9 c0 fe ff ff       	jmp    3aa7 <is_hit_down_cap+0x2f7>
    3be7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    3bee:	00 00 
    3bf0:	44 89 64 24 58       	mov    DWORD PTR [rsp+0x58],r12d
    3bf5:	48 8d bc 24 d0 00 00 	lea    rdi,[rsp+0xd0]
    3bfc:	00 
    3bfd:	c7 84 24 90 00 00 00 	mov    DWORD PTR [rsp+0x90],0x1
    3c04:	01 00 00 00 
    3c08:	c5 f9 d6 64 24 50    	vmovq  QWORD PTR [rsp+0x50],xmm4
    3c0e:	c5 f9 6f 44 24 50    	vmovdqa xmm0,XMMWORD PTR [rsp+0x50]
    3c14:	c5 79 7f b4 24 f0 00 	vmovdqa XMMWORD PTR [rsp+0xf0],xmm14
    3c1b:	00 00 
    3c1d:	c5 79 6f b4 24 90 00 	vmovdqa xmm14,XMMWORD PTR [rsp+0x90]
    3c24:	00 00 
    3c26:	c5 f9 7f 84 24 e0 00 	vmovdqa XMMWORD PTR [rsp+0xe0],xmm0
    3c2d:	00 00 
    3c2f:	c5 79 7f d8          	vmovdqa xmm0,xmm11
    3c33:	c5 f9 7f 8c 24 50 01 	vmovdqa XMMWORD PTR [rsp+0x150],xmm1
    3c3a:	00 00 
    3c3c:	c5 79 7f 5c 24 30    	vmovdqa XMMWORD PTR [rsp+0x30],xmm11
    3c42:	c5 fa 7e 4c 24 38    	vmovq  xmm1,QWORD PTR [rsp+0x38]
    3c48:	c5 79 7f 8c 24 d0 00 	vmovdqa XMMWORD PTR [rsp+0xd0],xmm9
    3c4f:	00 00 
    3c51:	c5 f9 7f bc 24 00 01 	vmovdqa XMMWORD PTR [rsp+0x100],xmm7
    3c58:	00 00 
    3c5a:	c5 f9 7f b4 24 10 01 	vmovdqa XMMWORD PTR [rsp+0x110],xmm6
    3c61:	00 00 
    3c63:	c5 79 7f b4 24 20 01 	vmovdqa XMMWORD PTR [rsp+0x120],xmm14
    3c6a:	00 00 
    3c6c:	c5 f9 7f ac 24 30 01 	vmovdqa XMMWORD PTR [rsp+0x130],xmm5
    3c73:	00 00 
    3c75:	c5 79 7f ac 24 40 01 	vmovdqa XMMWORD PTR [rsp+0x140],xmm13
    3c7c:	00 00 
    3c7e:	ff 94 24 38 01 00 00 	call   QWORD PTR [rsp+0x138]
    3c85:	49 89 c3             	mov    r11,rax
    3c88:	49 c1 fb 20          	sar    r11,0x20
    3c8c:	45 85 db             	test   r11d,r11d
    3c8f:	41 8d 53 0f          	lea    edx,[r11+0xf]
    3c93:	41 0f 49 d3          	cmovns edx,r11d
    3c97:	83 e2 10             	and    edx,0x10
    3c9a:	74 21                	je     3cbd <is_hit_down_cap+0x50d>
    3c9c:	85 c0                	test   eax,eax
    3c9e:	8d 48 0f             	lea    ecx,[rax+0xf]
    3ca1:	0f 49 c8             	cmovns ecx,eax
    3ca4:	c1 e1 1b             	shl    ecx,0x1b
    3ca7:	c1 f9 1f             	sar    ecx,0x1f
    3caa:	44 0f b6 e1          	movzx  r12d,cl
    3cae:	c4 c1 79 6e fc       	vmovd  xmm7,r12d
    3cb3:	c5 f9 70 e7 e0       	vpshufd xmm4,xmm7,0xe0
    3cb8:	e9 ea fd ff ff       	jmp    3aa7 <is_hit_down_cap+0x2f7>
    3cbd:	85 c0                	test   eax,eax
    3cbf:	8d 70 0f             	lea    esi,[rax+0xf]
    3cc2:	0f 48 c6             	cmovs  eax,esi
    3cc5:	c1 f8 04             	sar    eax,0x4
    3cc8:	83 e0 01             	and    eax,0x1
    3ccb:	83 f8 01             	cmp    eax,0x1
    3cce:	19 c0                	sbb    eax,eax
    3cd0:	44 0f b6 e0          	movzx  r12d,al
    3cd4:	eb d8                	jmp    3cae <is_hit_down_cap+0x4fe>
    3cd6:	48 8b bc 24 28 01 00 	mov    rdi,QWORD PTR [rsp+0x128]
    3cdd:	00 
    3cde:	8d 34 89             	lea    esi,[rcx+rcx*4]
    3ce1:	c5 7a 7e 3d 37 e4 00 	vmovq  xmm15,QWORD PTR [rip+0xe437]        # 12120 <_IO_stdin_used+0x120>
    3ce8:	00 
    3ce9:	c1 e6 05             	shl    esi,0x5
    3cec:	4c 8b 47 30          	mov    r8,QWORD PTR [rdi+0x30]
    3cf0:	01 f0                	add    eax,esi
    3cf2:	48 98                	cdqe   
    3cf4:	45 8b 24 80          	mov    r12d,DWORD PTR [r8+rax*4]
    3cf8:	45 89 e1             	mov    r9d,r12d
    3cfb:	45 89 e2             	mov    r10d,r12d
    3cfe:	45 0f b6 e4          	movzx  r12d,r12b
    3d02:	41 c1 f9 10          	sar    r9d,0x10
    3d06:	41 c1 fa 08          	sar    r10d,0x8
    3d0a:	c4 41 79 6e d1       	vmovd  xmm10,r9d
    3d0f:	c4 43 29 22 ca 01    	vpinsrd xmm9,xmm10,r10d,0x1
    3d15:	c4 c1 31 db e7       	vpand  xmm4,xmm9,xmm15
    3d1a:	e9 88 fd ff ff       	jmp    3aa7 <is_hit_down_cap+0x2f7>
    3d1f:	90                   	nop

0000000000003d20 <is_hit_cylinder_end_cap>:
    3d20:	f3 0f 1e fa          	endbr64 
    3d24:	41 56                	push   r14
    3d26:	41 54                	push   r12
    3d28:	55                   	push   rbp
    3d29:	48 89 f5             	mov    rbp,rsi
    3d2c:	53                   	push   rbx
    3d2d:	48 89 fb             	mov    rbx,rdi
    3d30:	48 81 ec c8 01 00 00 	sub    rsp,0x1c8
    3d37:	c5 f9 6f 47 40       	vmovdqa xmm0,XMMWORD PTR [rdi+0x40]
    3d3c:	c5 f9 6f 0f          	vmovdqa xmm1,XMMWORD PTR [rdi]
    3d40:	c5 fa 10 3d 2c e3 00 	vmovss xmm7,DWORD PTR [rip+0xe32c]        # 12074 <_IO_stdin_used+0x74>
    3d47:	00 
    3d48:	c5 c2 59 b7 94 00 00 	vmulss xmm6,xmm7,DWORD PTR [rdi+0x94]
    3d4f:	00 
    3d50:	c5 7a 10 9c 24 fc 01 	vmovss xmm11,DWORD PTR [rsp+0x1fc]
    3d57:	00 00 
    3d59:	c5 f9 7f 44 24 70    	vmovdqa XMMWORD PTR [rsp+0x70],xmm0
    3d5f:	c5 7a 10 a4 24 04 02 	vmovss xmm12,DWORD PTR [rsp+0x204]
    3d66:	00 00 
    3d68:	c5 f9 7f 84 24 40 01 	vmovdqa XMMWORD PTR [rsp+0x140],xmm0
    3d6f:	00 00 
    3d71:	c5 ca 59 ac 24 40 01 	vmulss xmm5,xmm6,DWORD PTR [rsp+0x140]
    3d78:	00 00 
    3d7a:	c5 7a 10 ac 24 08 02 	vmovss xmm13,DWORD PTR [rsp+0x208]
    3d81:	00 00 
    3d83:	c5 4a 59 84 24 44 01 	vmulss xmm8,xmm6,DWORD PTR [rsp+0x144]
    3d8a:	00 00 
    3d8c:	c5 7a 11 5c 24 2c    	vmovss DWORD PTR [rsp+0x2c],xmm11
    3d92:	c5 7a 10 bc 24 00 02 	vmovss xmm15,DWORD PTR [rsp+0x200]
    3d99:	00 00 
    3d9b:	c5 4a 59 8c 24 48 01 	vmulss xmm9,xmm6,DWORD PTR [rsp+0x148]
    3da2:	00 00 
    3da4:	c5 7a 11 64 24 24    	vmovss DWORD PTR [rsp+0x24],xmm12
    3daa:	c5 7a 10 94 24 f4 01 	vmovss xmm10,DWORD PTR [rsp+0x1f4]
    3db1:	00 00 
    3db3:	c5 f9 7f 8c 24 30 01 	vmovdqa XMMWORD PTR [rsp+0x130],xmm1
    3dba:	00 00 
    3dbc:	c5 fa 10 94 24 30 01 	vmovss xmm2,DWORD PTR [rsp+0x130]
    3dc3:	00 00 
    3dc5:	c5 fa 10 9c 24 34 01 	vmovss xmm3,DWORD PTR [rsp+0x134]
    3dcc:	00 00 
    3dce:	c5 f9 7f 8c 24 90 00 	vmovdqa XMMWORD PTR [rsp+0x90],xmm1
    3dd5:	00 00 
    3dd7:	c5 fa 10 a4 24 38 01 	vmovss xmm4,DWORD PTR [rsp+0x138]
    3dde:	00 00 
    3de0:	c5 f9 7f 84 24 a0 00 	vmovdqa XMMWORD PTR [rsp+0xa0],xmm0
    3de7:	00 00 
    3de9:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    3ded:	c5 fa 11 2c 24       	vmovss DWORD PTR [rsp],xmm5
    3df2:	c5 fa 10 ac 24 f0 01 	vmovss xmm5,DWORD PTR [rsp+0x1f0]
    3df9:	00 00 
    3dfb:	c5 7a 11 44 24 1c    	vmovss DWORD PTR [rsp+0x1c],xmm8
    3e01:	c5 7a 10 84 24 f8 01 	vmovss xmm8,DWORD PTR [rsp+0x1f8]
    3e08:	00 00 
    3e0a:	c5 7a 11 4c 24 20    	vmovss DWORD PTR [rsp+0x20],xmm9
    3e10:	c5 7a 11 6c 24 28    	vmovss DWORD PTR [rsp+0x28],xmm13
    3e16:	c5 7a 10 5f 44       	vmovss xmm11,DWORD PTR [rdi+0x44]
    3e1b:	c5 fa 10 7f 40       	vmovss xmm7,DWORD PTR [rdi+0x40]
    3e20:	c5 7a 10 b4 24 0c 02 	vmovss xmm14,DWORD PTR [rsp+0x20c]
    3e27:	00 00 
    3e29:	c5 7a 10 4f 48       	vmovss xmm9,DWORD PTR [rdi+0x48]
    3e2e:	c4 c1 22 59 cc       	vmulss xmm1,xmm11,xmm12
    3e33:	c5 7a 11 74 24 30    	vmovss DWORD PTR [rsp+0x30],xmm14
    3e39:	c4 c2 41 b9 cf       	vfmadd231ss xmm1,xmm7,xmm15
    3e3e:	c4 c2 31 b9 cd       	vfmadd231ss xmm1,xmm9,xmm13
    3e43:	c5 f8 2e c8          	vucomiss xmm1,xmm0
    3e47:	7a 0b                	jp     3e54 <is_hit_cylinder_end_cap+0x134>
    3e49:	b8 00 00 00 00       	mov    eax,0x0
    3e4e:	0f 84 c8 01 00 00    	je     401c <is_hit_cylinder_end_cap+0x2fc>
    3e54:	c5 ea 58 34 24       	vaddss xmm6,xmm2,DWORD PTR [rsp]
    3e59:	c5 5a 58 6c 24 20    	vaddss xmm13,xmm4,DWORD PTR [rsp+0x20]
    3e5f:	c5 62 58 64 24 1c    	vaddss xmm12,xmm3,DWORD PTR [rsp+0x1c]
    3e65:	c5 4a 5c f5          	vsubss xmm14,xmm6,xmm5
    3e69:	c4 c1 12 5c c0       	vsubss xmm0,xmm13,xmm8
    3e6e:	c5 7a 11 6c 24 34    	vmovss DWORD PTR [rsp+0x34],xmm13
    3e74:	c4 41 1a 5c ea       	vsubss xmm13,xmm12,xmm10
    3e79:	c5 0a 59 f7          	vmulss xmm14,xmm14,xmm7
    3e7d:	c4 42 09 99 eb       	vfmadd132ss xmm13,xmm14,xmm11
    3e82:	c4 42 79 b9 e9       	vfmadd231ss xmm13,xmm0,xmm9
    3e87:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    3e8b:	c5 12 5e e9          	vdivss xmm13,xmm13,xmm1
    3e8f:	c4 c1 78 2f c5       	vcomiss xmm0,xmm13
    3e94:	0f 87 f6 00 00 00    	ja     3f90 <is_hit_cylinder_end_cap+0x270>
    3e9a:	c5 78 2f 6d 30       	vcomiss xmm13,DWORD PTR [rbp+0x30]
    3e9f:	0f 83 eb 00 00 00    	jae    3f90 <is_hit_cylinder_end_cap+0x270>
    3ea5:	c4 41 78 28 f5       	vmovaps xmm14,xmm13
    3eaa:	c5 fa 10 44 24 24    	vmovss xmm0,DWORD PTR [rsp+0x24]
    3eb0:	c4 42 51 99 f7       	vfmadd132ss xmm14,xmm5,xmm15
    3eb5:	c4 c2 29 99 c5       	vfmadd132ss xmm0,xmm10,xmm13
    3eba:	c5 79 7e f0          	vmovd  eax,xmm14
    3ebe:	c5 7a 10 74 24 28    	vmovss xmm14,DWORD PTR [rsp+0x28]
    3ec4:	c4 41 7a 5c e4       	vsubss xmm12,xmm0,xmm12
    3ec9:	c4 c1 79 7e c4       	vmovd  r12d,xmm0
    3ece:	c4 42 39 99 f5       	vfmadd132ss xmm14,xmm8,xmm13
    3ed3:	c4 41 1a 59 e4       	vmulss xmm12,xmm12,xmm12
    3ed8:	c4 41 79 7e f6       	vmovd  r14d,xmm14
    3edd:	c5 7a 11 74 24 38    	vmovss DWORD PTR [rsp+0x38],xmm14
    3ee3:	c5 79 6e f0          	vmovd  xmm14,eax
    3ee7:	c5 8a 5c f6          	vsubss xmm6,xmm14,xmm6
    3eeb:	c4 c1 79 6e c6       	vmovd  xmm0,r14d
    3ef0:	c5 7a 5c 74 24 34    	vsubss xmm14,xmm0,DWORD PTR [rsp+0x34]
    3ef6:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    3efa:	c4 e2 19 99 f6       	vfmadd132ss xmm6,xmm12,xmm6
    3eff:	c4 c2 09 b9 f6       	vfmadd231ss xmm6,xmm14,xmm14
    3f04:	c5 f8 2e c6          	vucomiss xmm0,xmm6
    3f08:	0f 87 91 05 00 00    	ja     449f <is_hit_cylinder_end_cap+0x77f>
    3f0e:	c5 ca 51 f6          	vsqrtss xmm6,xmm6,xmm6
    3f12:	c5 78 28 f6          	vmovaps xmm14,xmm6
    3f16:	c5 7a 10 25 56 e1 00 	vmovss xmm12,DWORD PTR [rip+0xe156]        # 12074 <_IO_stdin_used+0x74>
    3f1d:	00 
    3f1e:	c5 9a 59 83 90 00 00 	vmulss xmm0,xmm12,DWORD PTR [rbx+0x90]
    3f25:	00 
    3f26:	c4 c1 4a 59 f6       	vmulss xmm6,xmm6,xmm14
    3f2b:	c5 7a 59 f0          	vmulss xmm14,xmm0,xmm0
    3f2f:	c4 c1 78 2f f6       	vcomiss xmm6,xmm14
    3f34:	77 5a                	ja     3f90 <is_hit_cylinder_end_cap+0x270>
    3f36:	c5 7a 10 64 24 2c    	vmovss xmm12,DWORD PTR [rsp+0x2c]
    3f3c:	c5 f9 6e f0          	vmovd  xmm6,eax
    3f40:	c4 c1 79 6e c6       	vmovd  xmm0,r14d
    3f45:	c4 41 79 6e f4       	vmovd  xmm14,r12d
    3f4a:	c5 7a 11 6d 30       	vmovss DWORD PTR [rbp+0x30],xmm13
    3f4f:	c4 62 19 99 6c 24 30 	vfmadd132ss xmm13,xmm12,DWORD PTR [rsp+0x30]
    3f56:	c4 41 48 14 e6       	vunpcklps xmm12,xmm6,xmm14
    3f5b:	c5 f9 6f 73 10       	vmovdqa xmm6,XMMWORD PTR [rbx+0x10]
    3f60:	b8 01 00 00 00       	mov    eax,0x1
    3f65:	c4 41 78 14 ed       	vunpcklps xmm13,xmm0,xmm13
    3f6a:	c4 c1 18 16 c5       	vmovlhps xmm0,xmm12,xmm13
    3f6f:	c5 79 6f 6b 40       	vmovdqa xmm13,XMMWORD PTR [rbx+0x40]
    3f74:	48 89 5d 38          	mov    QWORD PTR [rbp+0x38],rbx
    3f78:	c5 f8 29 45 00       	vmovaps XMMWORD PTR [rbp+0x0],xmm0
    3f7d:	c5 79 7f 6d 10       	vmovdqa XMMWORD PTR [rbp+0x10],xmm13
    3f82:	c5 f9 7f 75 20       	vmovdqa XMMWORD PTR [rbp+0x20],xmm6
    3f87:	eb 09                	jmp    3f92 <is_hit_cylinder_end_cap+0x272>
    3f89:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    3f90:	31 c0                	xor    eax,eax
    3f92:	c5 ea 5c 14 24       	vsubss xmm2,xmm2,DWORD PTR [rsp]
    3f97:	c5 e2 5c 5c 24 1c    	vsubss xmm3,xmm3,DWORD PTR [rsp+0x1c]
    3f9d:	c5 da 5c 64 24 20    	vsubss xmm4,xmm4,DWORD PTR [rsp+0x20]
    3fa3:	c5 6a 5c e5          	vsubss xmm12,xmm2,xmm5
    3fa7:	c4 c1 62 5c c2       	vsubss xmm0,xmm3,xmm10
    3fac:	c4 41 5a 5c f0       	vsubss xmm14,xmm4,xmm8
    3fb1:	c5 1a 59 ef          	vmulss xmm13,xmm12,xmm7
    3fb5:	c4 c2 11 99 c3       	vfmadd132ss xmm0,xmm13,xmm11
    3fba:	c4 42 79 99 f1       	vfmadd132ss xmm14,xmm0,xmm9
    3fbf:	c5 8a 5e f1          	vdivss xmm6,xmm14,xmm1
    3fc3:	c5 f0 57 c9          	vxorps xmm1,xmm1,xmm1
    3fc7:	c5 f8 2f ce          	vcomiss xmm1,xmm6
    3fcb:	77 4f                	ja     401c <is_hit_cylinder_end_cap+0x2fc>
    3fcd:	c5 f8 2f 75 30       	vcomiss xmm6,DWORD PTR [rbp+0x30]
    3fd2:	73 48                	jae    401c <is_hit_cylinder_end_cap+0x2fc>
    3fd4:	c4 c2 49 b9 ef       	vfmadd231ss xmm5,xmm6,xmm15
    3fd9:	c4 62 49 b9 54 24 24 	vfmadd231ss xmm10,xmm6,DWORD PTR [rsp+0x24]
    3fe0:	c5 7a 10 35 8c e0 00 	vmovss xmm14,DWORD PTR [rip+0xe08c]        # 12074 <_IO_stdin_used+0x74>
    3fe7:	00 
    3fe8:	c5 8a 59 83 90 00 00 	vmulss xmm0,xmm14,DWORD PTR [rbx+0x90]
    3fef:	00 
    3ff0:	c4 62 49 b9 44 24 28 	vfmadd231ss xmm8,xmm6,DWORD PTR [rsp+0x28]
    3ff7:	c5 52 5c fa          	vsubss xmm15,xmm5,xmm2
    3ffb:	c5 aa 5c d3          	vsubss xmm2,xmm10,xmm3
    3fff:	c5 ba 5c e4          	vsubss xmm4,xmm8,xmm4
    4003:	c5 7a 59 e0          	vmulss xmm12,xmm0,xmm0
    4007:	c5 ea 59 da          	vmulss xmm3,xmm2,xmm2
    400b:	c4 42 61 99 ff       	vfmadd132ss xmm15,xmm3,xmm15
    4010:	c4 e2 01 99 e4       	vfmadd132ss xmm4,xmm15,xmm4
    4015:	c4 c1 78 2f e4       	vcomiss xmm4,xmm12
    401a:	76 14                	jbe    4030 <is_hit_cylinder_end_cap+0x310>
    401c:	48 81 c4 c8 01 00 00 	add    rsp,0x1c8
    4023:	5b                   	pop    rbx
    4024:	5d                   	pop    rbp
    4025:	41 5c                	pop    r12
    4027:	41 5e                	pop    r14
    4029:	c3                   	ret    
    402a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    4030:	c5 7a 10 6c 24 2c    	vmovss xmm13,DWORD PTR [rsp+0x2c]
    4036:	c5 fa 11 75 30       	vmovss DWORD PTR [rbp+0x30],xmm6
    403b:	c5 f9 6f 43 50       	vmovdqa xmm0,XMMWORD PTR [rbx+0x50]
    4040:	c4 41 50 14 d2       	vunpcklps xmm10,xmm5,xmm10
    4045:	c4 e2 11 99 74 24 30 	vfmadd132ss xmm6,xmm13,DWORD PTR [rsp+0x30]
    404c:	c4 63 31 21 4b 4c 10 	vinsertps xmm9,xmm9,DWORD PTR [rbx+0x4c],0x10
    4053:	c4 41 40 14 db       	vunpcklps xmm11,xmm7,xmm11
    4058:	c5 79 6f 3b          	vmovdqa xmm15,XMMWORD PTR [rbx]
    405c:	c5 79 6f 73 10       	vmovdqa xmm14,XMMWORD PTR [rbx+0x10]
    4061:	c5 f9 7e c2          	vmovd  edx,xmm0
    4065:	c5 f9 7f 84 24 80 01 	vmovdqa XMMWORD PTR [rsp+0x180],xmm0
    406c:	00 00 
    406e:	c5 79 6f 63 20       	vmovdqa xmm12,XMMWORD PTR [rbx+0x20]
    4073:	c5 f9 6f 63 40       	vmovdqa xmm4,XMMWORD PTR [rbx+0x40]
    4078:	c4 c1 20 16 f9       	vmovlhps xmm7,xmm11,xmm9
    407d:	c5 f9 6f 5b 60       	vmovdqa xmm3,XMMWORD PTR [rbx+0x60]
    4082:	c5 f9 6f 53 70       	vmovdqa xmm2,XMMWORD PTR [rbx+0x70]
    4087:	c5 79 7f bc 24 30 01 	vmovdqa XMMWORD PTR [rsp+0x130],xmm15
    408e:	00 00 
    4090:	c5 f9 6f 8b 80 00 00 	vmovdqa xmm1,XMMWORD PTR [rbx+0x80]
    4097:	00 
    4098:	c5 40 57 2d 50 e0 00 	vxorps xmm13,xmm7,XMMWORD PTR [rip+0xe050]        # 120f0 <_IO_stdin_used+0xf0>
    409f:	00 
    40a0:	c5 79 7f b4 24 40 01 	vmovdqa XMMWORD PTR [rsp+0x140],xmm14
    40a7:	00 00 
    40a9:	c5 79 7f a4 24 50 01 	vmovdqa XMMWORD PTR [rsp+0x150],xmm12
    40b0:	00 00 
    40b2:	c5 38 14 c6          	vunpcklps xmm8,xmm8,xmm6
    40b6:	c5 f9 6f 73 30       	vmovdqa xmm6,XMMWORD PTR [rbx+0x30]
    40bb:	c5 f9 7f a4 24 70 01 	vmovdqa XMMWORD PTR [rsp+0x170],xmm4
    40c2:	00 00 
    40c4:	c4 c1 28 16 e8       	vmovlhps xmm5,xmm10,xmm8
    40c9:	c5 f8 29 6d 00       	vmovaps XMMWORD PTR [rbp+0x0],xmm5
    40ce:	c5 f9 7f b4 24 60 01 	vmovdqa XMMWORD PTR [rsp+0x160],xmm6
    40d5:	00 00 
    40d7:	c5 f9 7f 9c 24 90 01 	vmovdqa XMMWORD PTR [rsp+0x190],xmm3
    40de:	00 00 
    40e0:	c5 f9 7f 94 24 a0 01 	vmovdqa XMMWORD PTR [rsp+0x1a0],xmm2
    40e7:	00 00 
    40e9:	c5 f9 7f 8c 24 b0 01 	vmovdqa XMMWORD PTR [rsp+0x1b0],xmm1
    40f0:	00 00 
    40f2:	c5 f9 7f ac 24 a0 00 	vmovdqa XMMWORD PTR [rsp+0xa0],xmm5
    40f9:	00 00 
    40fb:	83 fa 01             	cmp    edx,0x1
    40fe:	76 55                	jbe    4155 <is_hit_cylinder_end_cap+0x435>
    4100:	c5 78 29 2c 24       	vmovaps XMMWORD PTR [rsp],xmm13
    4105:	83 fa 02             	cmp    edx,0x2
    4108:	0f 84 42 01 00 00    	je     4250 <is_hit_cylinder_end_cap+0x530>
    410e:	48 8d 35 73 df 00 00 	lea    rsi,[rip+0xdf73]        # 12088 <_IO_stdin_used+0x88>
    4115:	31 ff                	xor    edi,edi
    4117:	e8 34 87 00 00       	call   c850 <ft_assert>
    411c:	c5 79 6f 3b          	vmovdqa xmm15,XMMWORD PTR [rbx]
    4120:	c5 79 6f 73 10       	vmovdqa xmm14,XMMWORD PTR [rbx+0x10]
    4125:	c5 79 6f 63 20       	vmovdqa xmm12,XMMWORD PTR [rbx+0x20]
    412a:	c5 f9 6f 73 30       	vmovdqa xmm6,XMMWORD PTR [rbx+0x30]
    412f:	c5 f9 6f 63 40       	vmovdqa xmm4,XMMWORD PTR [rbx+0x40]
    4134:	c5 f9 6f 43 50       	vmovdqa xmm0,XMMWORD PTR [rbx+0x50]
    4139:	c5 f9 6f 5b 60       	vmovdqa xmm3,XMMWORD PTR [rbx+0x60]
    413e:	c5 f9 6f 53 70       	vmovdqa xmm2,XMMWORD PTR [rbx+0x70]
    4143:	c5 f9 6f 8b 80 00 00 	vmovdqa xmm1,XMMWORD PTR [rbx+0x80]
    414a:	00 
    414b:	c5 f9 6f 6d 00       	vmovdqa xmm5,XMMWORD PTR [rbp+0x0]
    4150:	c5 78 28 2c 24       	vmovaps xmm13,XMMWORD PTR [rsp]
    4155:	8b 4b 50             	mov    ecx,DWORD PTR [rbx+0x50]
    4158:	c5 7a 7e 43 10       	vmovq  xmm8,QWORD PTR [rbx+0x10]
    415d:	c5 78 29 6d 10       	vmovaps XMMWORD PTR [rbp+0x10],xmm13
    4162:	c5 79 7f bc 24 a0 00 	vmovdqa XMMWORD PTR [rsp+0xa0],xmm15
    4169:	00 00 
    416b:	44 8b 63 18          	mov    r12d,DWORD PTR [rbx+0x18]
    416f:	c5 79 7f b4 24 b0 00 	vmovdqa XMMWORD PTR [rsp+0xb0],xmm14
    4176:	00 00 
    4178:	c5 79 7f a4 24 c0 00 	vmovdqa XMMWORD PTR [rsp+0xc0],xmm12
    417f:	00 00 
    4181:	c5 f9 7f b4 24 d0 00 	vmovdqa XMMWORD PTR [rsp+0xd0],xmm6
    4188:	00 00 
    418a:	c5 f9 7f a4 24 e0 00 	vmovdqa XMMWORD PTR [rsp+0xe0],xmm4
    4191:	00 00 
    4193:	c5 f9 7f 84 24 f0 00 	vmovdqa XMMWORD PTR [rsp+0xf0],xmm0
    419a:	00 00 
    419c:	c5 f9 7f 9c 24 00 01 	vmovdqa XMMWORD PTR [rsp+0x100],xmm3
    41a3:	00 00 
    41a5:	c5 f9 7f 94 24 10 01 	vmovdqa XMMWORD PTR [rsp+0x110],xmm2
    41ac:	00 00 
    41ae:	c5 f9 7f 8c 24 20 01 	vmovdqa XMMWORD PTR [rsp+0x120],xmm1
    41b5:	00 00 
    41b7:	c5 f9 7f ac 24 80 00 	vmovdqa XMMWORD PTR [rsp+0x80],xmm5
    41be:	00 00 
    41c0:	85 c9                	test   ecx,ecx
    41c2:	74 2a                	je     41ee <is_hit_cylinder_end_cap+0x4ce>
    41c4:	83 f9 01             	cmp    ecx,0x1
    41c7:	0f 84 93 01 00 00    	je     4360 <is_hit_cylinder_end_cap+0x640>
    41cd:	83 f9 02             	cmp    ecx,0x2
    41d0:	0f 84 aa 00 00 00    	je     4280 <is_hit_cylinder_end_cap+0x560>
    41d6:	48 8d 35 d3 de 00 00 	lea    rsi,[rip+0xded3]        # 120b0 <_IO_stdin_used+0xb0>
    41dd:	31 ff                	xor    edi,edi
    41df:	c5 79 d6 04 24       	vmovq  QWORD PTR [rsp],xmm8
    41e4:	e8 67 86 00 00       	call   c850 <ft_assert>
    41e9:	c5 7a 7e 04 24       	vmovq  xmm8,QWORD PTR [rsp]
    41ee:	44 89 a4 24 b8 00 00 	mov    DWORD PTR [rsp+0xb8],r12d
    41f5:	00 
    41f6:	c5 79 d6 84 24 b0 00 	vmovq  QWORD PTR [rsp+0xb0],xmm8
    41fd:	00 00 
    41ff:	c5 f9 6f a4 24 b0 00 	vmovdqa xmm4,XMMWORD PTR [rsp+0xb0]
    4206:	00 00 
    4208:	c5 f9 7f a4 24 30 01 	vmovdqa XMMWORD PTR [rsp+0x130],xmm4
    420f:	00 00 
    4211:	44 89 a4 24 38 01 00 	mov    DWORD PTR [rsp+0x138],r12d
    4218:	00 
    4219:	b8 01 00 00 00       	mov    eax,0x1
    421e:	c5 79 d6 84 24 30 01 	vmovq  QWORD PTR [rsp+0x130],xmm8
    4225:	00 00 
    4227:	c5 f9 6f 84 24 30 01 	vmovdqa xmm0,XMMWORD PTR [rsp+0x130]
    422e:	00 00 
    4230:	48 89 5d 38          	mov    QWORD PTR [rbp+0x38],rbx
    4234:	c5 f9 7f 45 20       	vmovdqa XMMWORD PTR [rbp+0x20],xmm0
    4239:	48 81 c4 c8 01 00 00 	add    rsp,0x1c8
    4240:	5b                   	pop    rbx
    4241:	5d                   	pop    rbp
    4242:	41 5c                	pop    r12
    4244:	41 5e                	pop    r14
    4246:	c3                   	ret    
    4247:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    424e:	00 00 
    4250:	c5 fa 7e 84 24 a0 00 	vmovq  xmm0,QWORD PTR [rsp+0xa0]
    4257:	00 00 
    4259:	48 8d bc 24 30 01 00 	lea    rdi,[rsp+0x130]
    4260:	00 
    4261:	c5 fa 7e 8c 24 a8 00 	vmovq  xmm1,QWORD PTR [rsp+0xa8]
    4268:	00 00 
    426a:	ff 94 24 98 01 00 00 	call   QWORD PTR [rsp+0x198]
    4271:	e9 a6 fe ff ff       	jmp    411c <is_hit_cylinder_end_cap+0x3fc>
    4276:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    427d:	00 00 00 
    4280:	44 89 a4 24 b8 00 00 	mov    DWORD PTR [rsp+0xb8],r12d
    4287:	00 
    4288:	c5 f9 6f c5          	vmovdqa xmm0,xmm5
    428c:	48 8d bc 24 30 01 00 	lea    rdi,[rsp+0x130]
    4293:	00 
    4294:	c7 84 24 f0 00 00 00 	mov    DWORD PTR [rsp+0xf0],0x2
    429b:	02 00 00 00 
    429f:	c5 79 6f 8c 24 f0 00 	vmovdqa xmm9,XMMWORD PTR [rsp+0xf0]
    42a6:	00 00 
    42a8:	c5 79 d6 84 24 b0 00 	vmovq  QWORD PTR [rsp+0xb0],xmm8
    42af:	00 00 
    42b1:	c5 79 6f 94 24 b0 00 	vmovdqa xmm10,XMMWORD PTR [rsp+0xb0]
    42b8:	00 00 
    42ba:	c5 f9 7f 8c 24 b0 01 	vmovdqa XMMWORD PTR [rsp+0x1b0],xmm1
    42c1:	00 00 
    42c3:	c5 f9 7f ac 24 90 00 	vmovdqa XMMWORD PTR [rsp+0x90],xmm5
    42ca:	00 00 
    42cc:	c5 fa 7e 8c 24 98 00 	vmovq  xmm1,QWORD PTR [rsp+0x98]
    42d3:	00 00 
    42d5:	c5 79 7f bc 24 30 01 	vmovdqa XMMWORD PTR [rsp+0x130],xmm15
    42dc:	00 00 
    42de:	c5 79 7f 94 24 40 01 	vmovdqa XMMWORD PTR [rsp+0x140],xmm10
    42e5:	00 00 
    42e7:	c5 79 7f a4 24 50 01 	vmovdqa XMMWORD PTR [rsp+0x150],xmm12
    42ee:	00 00 
    42f0:	c5 f9 7f b4 24 60 01 	vmovdqa XMMWORD PTR [rsp+0x160],xmm6
    42f7:	00 00 
    42f9:	c5 f9 7f a4 24 70 01 	vmovdqa XMMWORD PTR [rsp+0x170],xmm4
    4300:	00 00 
    4302:	c5 79 7f 8c 24 80 01 	vmovdqa XMMWORD PTR [rsp+0x180],xmm9
    4309:	00 00 
    430b:	c5 f9 7f 9c 24 90 01 	vmovdqa XMMWORD PTR [rsp+0x190],xmm3
    4312:	00 00 
    4314:	c5 f9 7f 94 24 a0 01 	vmovdqa XMMWORD PTR [rsp+0x1a0],xmm2
    431b:	00 00 
    431d:	ff 94 24 98 01 00 00 	call   QWORD PTR [rsp+0x198]
    4324:	48 89 c6             	mov    rsi,rax
    4327:	48 c1 fe 20          	sar    rsi,0x20
    432b:	3d 9f 00 00 00       	cmp    eax,0x9f
    4330:	7e 0c                	jle    433e <is_hit_cylinder_end_cap+0x61e>
    4332:	81 fe 9f 00 00 00    	cmp    esi,0x9f
    4338:	0f 86 18 01 00 00    	jbe    4456 <is_hit_cylinder_end_cap+0x736>
    433e:	48 8d 3d 58 dd 00 00 	lea    rdi,[rip+0xdd58]        # 1209d <_IO_stdin_used+0x9d>
    4345:	45 31 e4             	xor    r12d,r12d
    4348:	e8 33 e2 ff ff       	call   2580 <puts@plt>
    434d:	c4 41 39 ef c0       	vpxor  xmm8,xmm8,xmm8
    4352:	e9 ba fe ff ff       	jmp    4211 <is_hit_cylinder_end_cap+0x4f1>
    4357:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    435e:	00 00 
    4360:	44 89 a4 24 b8 00 00 	mov    DWORD PTR [rsp+0xb8],r12d
    4367:	00 
    4368:	c5 f9 6f c5          	vmovdqa xmm0,xmm5
    436c:	48 8d bc 24 30 01 00 	lea    rdi,[rsp+0x130]
    4373:	00 
    4374:	c7 84 24 f0 00 00 00 	mov    DWORD PTR [rsp+0xf0],0x1
    437b:	01 00 00 00 
    437f:	c5 79 d6 84 24 b0 00 	vmovq  QWORD PTR [rsp+0xb0],xmm8
    4386:	00 00 
    4388:	c5 79 6f b4 24 b0 00 	vmovdqa xmm14,XMMWORD PTR [rsp+0xb0]
    438f:	00 00 
    4391:	c5 79 7f a4 24 50 01 	vmovdqa XMMWORD PTR [rsp+0x150],xmm12
    4398:	00 00 
    439a:	c5 79 6f a4 24 f0 00 	vmovdqa xmm12,XMMWORD PTR [rsp+0xf0]
    43a1:	00 00 
    43a3:	c5 f9 7f 8c 24 b0 01 	vmovdqa XMMWORD PTR [rsp+0x1b0],xmm1
    43aa:	00 00 
    43ac:	c5 f9 7f ac 24 90 00 	vmovdqa XMMWORD PTR [rsp+0x90],xmm5
    43b3:	00 00 
    43b5:	c5 fa 7e 8c 24 98 00 	vmovq  xmm1,QWORD PTR [rsp+0x98]
    43bc:	00 00 
    43be:	c5 79 7f bc 24 30 01 	vmovdqa XMMWORD PTR [rsp+0x130],xmm15
    43c5:	00 00 
    43c7:	c5 79 7f b4 24 40 01 	vmovdqa XMMWORD PTR [rsp+0x140],xmm14
    43ce:	00 00 
    43d0:	c5 f9 7f b4 24 60 01 	vmovdqa XMMWORD PTR [rsp+0x160],xmm6
    43d7:	00 00 
    43d9:	c5 f9 7f a4 24 70 01 	vmovdqa XMMWORD PTR [rsp+0x170],xmm4
    43e0:	00 00 
    43e2:	c5 79 7f a4 24 80 01 	vmovdqa XMMWORD PTR [rsp+0x180],xmm12
    43e9:	00 00 
    43eb:	c5 f9 7f 9c 24 90 01 	vmovdqa XMMWORD PTR [rsp+0x190],xmm3
    43f2:	00 00 
    43f4:	c5 f9 7f 94 24 a0 01 	vmovdqa XMMWORD PTR [rsp+0x1a0],xmm2
    43fb:	00 00 
    43fd:	ff 94 24 98 01 00 00 	call   QWORD PTR [rsp+0x198]
    4404:	49 89 c4             	mov    r12,rax
    4407:	49 c1 fc 20          	sar    r12,0x20
    440b:	45 85 e4             	test   r12d,r12d
    440e:	41 8d 54 24 0f       	lea    edx,[r12+0xf]
    4413:	41 0f 49 d4          	cmovns edx,r12d
    4417:	83 e2 10             	and    edx,0x10
    441a:	74 21                	je     443d <is_hit_cylinder_end_cap+0x71d>
    441c:	85 c0                	test   eax,eax
    441e:	8d 48 0f             	lea    ecx,[rax+0xf]
    4421:	0f 49 c8             	cmovns ecx,eax
    4424:	c1 e1 1b             	shl    ecx,0x1b
    4427:	c1 f9 1f             	sar    ecx,0x1f
    442a:	44 0f b6 e1          	movzx  r12d,cl
    442e:	c4 c1 79 6e f4       	vmovd  xmm6,r12d
    4433:	c5 79 70 c6 e0       	vpshufd xmm8,xmm6,0xe0
    4438:	e9 d4 fd ff ff       	jmp    4211 <is_hit_cylinder_end_cap+0x4f1>
    443d:	85 c0                	test   eax,eax
    443f:	8d 70 0f             	lea    esi,[rax+0xf]
    4442:	0f 48 c6             	cmovs  eax,esi
    4445:	c1 f8 04             	sar    eax,0x4
    4448:	83 e0 01             	and    eax,0x1
    444b:	83 f8 01             	cmp    eax,0x1
    444e:	19 c0                	sbb    eax,eax
    4450:	44 0f b6 e0          	movzx  r12d,al
    4454:	eb d8                	jmp    442e <is_hit_cylinder_end_cap+0x70e>
    4456:	4c 8b 84 24 88 01 00 	mov    r8,QWORD PTR [rsp+0x188]
    445d:	00 
    445e:	8d 3c b6             	lea    edi,[rsi+rsi*4]
    4461:	c5 7a 7e 3d b7 dc 00 	vmovq  xmm15,QWORD PTR [rip+0xdcb7]        # 12120 <_IO_stdin_used+0x120>
    4468:	00 
    4469:	c1 e7 05             	shl    edi,0x5
    446c:	4d 8b 48 30          	mov    r9,QWORD PTR [r8+0x30]
    4470:	01 f8                	add    eax,edi
    4472:	48 98                	cdqe   
    4474:	45 8b 14 81          	mov    r10d,DWORD PTR [r9+rax*4]
    4478:	45 89 d3             	mov    r11d,r10d
    447b:	45 89 d6             	mov    r14d,r10d
    447e:	45 0f b6 e2          	movzx  r12d,r10b
    4482:	41 c1 fb 10          	sar    r11d,0x10
    4486:	41 c1 fe 08          	sar    r14d,0x8
    448a:	c4 41 79 6e db       	vmovd  xmm11,r11d
    448f:	c4 c3 21 22 fe 01    	vpinsrd xmm7,xmm11,r14d,0x1
    4495:	c4 41 41 db c7       	vpand  xmm8,xmm7,xmm15
    449a:	e9 72 fd ff ff       	jmp    4211 <is_hit_cylinder_end_cap+0x4f1>
    449f:	c5 f8 28 c6          	vmovaps xmm0,xmm6
    44a3:	89 44 24 50          	mov    DWORD PTR [rsp+0x50],eax
    44a7:	c5 7a 11 7c 24 6c    	vmovss DWORD PTR [rsp+0x6c],xmm15
    44ad:	c5 7a 11 44 24 68    	vmovss DWORD PTR [rsp+0x68],xmm8
    44b3:	c5 7a 11 54 24 64    	vmovss DWORD PTR [rsp+0x64],xmm10
    44b9:	c5 fa 11 6c 24 60    	vmovss DWORD PTR [rsp+0x60],xmm5
    44bf:	c5 fa 11 64 24 5c    	vmovss DWORD PTR [rsp+0x5c],xmm4
    44c5:	c5 fa 11 5c 24 58    	vmovss DWORD PTR [rsp+0x58],xmm3
    44cb:	c5 fa 11 54 24 54    	vmovss DWORD PTR [rsp+0x54],xmm2
    44d1:	c5 7a 11 6c 24 4c    	vmovss DWORD PTR [rsp+0x4c],xmm13
    44d7:	c5 fa 11 4c 24 48    	vmovss DWORD PTR [rsp+0x48],xmm1
    44dd:	c5 7a 11 4c 24 44    	vmovss DWORD PTR [rsp+0x44],xmm9
    44e3:	c5 7a 11 5c 24 40    	vmovss DWORD PTR [rsp+0x40],xmm11
    44e9:	c5 fa 11 7c 24 3c    	vmovss DWORD PTR [rsp+0x3c],xmm7
    44ef:	c5 fa 11 74 24 38    	vmovss DWORD PTR [rsp+0x38],xmm6
    44f5:	e8 96 e4 ff ff       	call   2990 <sqrtf@plt>
    44fa:	c5 fa 11 44 24 34    	vmovss DWORD PTR [rsp+0x34],xmm0
    4500:	c5 fa 10 44 24 38    	vmovss xmm0,DWORD PTR [rsp+0x38]
    4506:	e8 85 e4 ff ff       	call   2990 <sqrtf@plt>
    450b:	c5 7a 10 7c 24 6c    	vmovss xmm15,DWORD PTR [rsp+0x6c]
    4511:	8b 44 24 50          	mov    eax,DWORD PTR [rsp+0x50]
    4515:	c5 7a 10 44 24 68    	vmovss xmm8,DWORD PTR [rsp+0x68]
    451b:	c5 7a 10 54 24 64    	vmovss xmm10,DWORD PTR [rsp+0x64]
    4521:	c5 f8 28 f0          	vmovaps xmm6,xmm0
    4525:	c5 fa 10 6c 24 60    	vmovss xmm5,DWORD PTR [rsp+0x60]
    452b:	c5 fa 10 64 24 5c    	vmovss xmm4,DWORD PTR [rsp+0x5c]
    4531:	c5 fa 10 5c 24 58    	vmovss xmm3,DWORD PTR [rsp+0x58]
    4537:	c5 fa 10 54 24 54    	vmovss xmm2,DWORD PTR [rsp+0x54]
    453d:	c5 7a 10 6c 24 4c    	vmovss xmm13,DWORD PTR [rsp+0x4c]
    4543:	c5 fa 10 4c 24 48    	vmovss xmm1,DWORD PTR [rsp+0x48]
    4549:	c5 7a 10 4c 24 44    	vmovss xmm9,DWORD PTR [rsp+0x44]
    454f:	c5 7a 10 5c 24 40    	vmovss xmm11,DWORD PTR [rsp+0x40]
    4555:	c5 fa 10 7c 24 3c    	vmovss xmm7,DWORD PTR [rsp+0x3c]
    455b:	c5 7a 10 74 24 34    	vmovss xmm14,DWORD PTR [rsp+0x34]
    4561:	e9 b0 f9 ff ff       	jmp    3f16 <is_hit_cylinder_end_cap+0x1f6>
    4566:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    456d:	00 00 00 

0000000000004570 <is_hit_cylinder>:
    4570:	f3 0f 1e fa          	endbr64 
    4574:	41 54                	push   r12
    4576:	55                   	push   rbp
    4577:	48 89 f5             	mov    rbp,rsi
    457a:	53                   	push   rbx
    457b:	48 89 fb             	mov    rbx,rdi
    457e:	48 81 ec 80 01 00 00 	sub    rsp,0x180
    4585:	c5 7a 10 57 44       	vmovss xmm10,DWORD PTR [rdi+0x44]
    458a:	c5 7a 10 5f 40       	vmovss xmm11,DWORD PTR [rdi+0x40]
    458f:	c5 fa 10 a4 24 a4 01 	vmovss xmm4,DWORD PTR [rsp+0x1a4]
    4596:	00 00 
    4598:	c5 da 5c 57 04       	vsubss xmm2,xmm4,DWORD PTR [rdi+0x4]
    459d:	c5 7a 10 84 24 b4 01 	vmovss xmm8,DWORD PTR [rsp+0x1b4]
    45a4:	00 00 
    45a6:	c5 fa 10 77 48       	vmovss xmm6,DWORD PTR [rdi+0x48]
    45ab:	c4 41 78 28 f2       	vmovaps xmm14,xmm10
    45b0:	c4 41 78 28 eb       	vmovaps xmm13,xmm11
    45b5:	c5 fa 10 9c 24 a0 01 	vmovss xmm3,DWORD PTR [rsp+0x1a0]
    45bc:	00 00 
    45be:	c5 e2 5c 07          	vsubss xmm0,xmm3,DWORD PTR [rdi]
    45c2:	c5 fa 11 64 24 30    	vmovss DWORD PTR [rsp+0x30],xmm4
    45c8:	c4 c1 3a 59 ca       	vmulss xmm1,xmm8,xmm10
    45cd:	c5 7a 11 44 24 24    	vmovss DWORD PTR [rsp+0x24],xmm8
    45d3:	c5 fa 10 bc 24 b0 01 	vmovss xmm7,DWORD PTR [rsp+0x1b0]
    45da:	00 00 
    45dc:	c5 fa 10 ac 24 a8 01 	vmovss xmm5,DWORD PTR [rsp+0x1a8]
    45e3:	00 00 
    45e5:	c5 2a 59 fa          	vmulss xmm15,xmm10,xmm2
    45e9:	c5 52 5c 67 08       	vsubss xmm12,xmm5,DWORD PTR [rdi+0x8]
    45ee:	c5 7a 10 8c 24 b8 01 	vmovss xmm9,DWORD PTR [rsp+0x1b8]
    45f5:	00 00 
    45f7:	c5 fa 11 5c 24 34    	vmovss DWORD PTR [rsp+0x34],xmm3
    45fd:	c5 fa 11 6c 24 2c    	vmovss DWORD PTR [rsp+0x2c],xmm5
    4603:	c5 7a 11 4c 24 20    	vmovss DWORD PTR [rsp+0x20],xmm9
    4609:	c5 fa 11 7c 24 28    	vmovss DWORD PTR [rsp+0x28],xmm7
    460f:	c4 c2 41 b9 cb       	vfmadd231ss xmm1,xmm7,xmm11
    4614:	c4 62 21 b9 f8       	vfmadd231ss xmm15,xmm11,xmm0
    4619:	c4 e2 31 b9 ce       	vfmadd231ss xmm1,xmm9,xmm6
    461e:	c4 42 49 b9 fc       	vfmadd231ss xmm15,xmm6,xmm12
    4623:	c4 62 39 9d f1       	vfnmadd132ss xmm14,xmm8,xmm1
    4628:	c4 62 41 9d e9       	vfnmadd132ss xmm13,xmm7,xmm1
    462d:	c5 7a 10 05 3f da 00 	vmovss xmm8,DWORD PTR [rip+0xda3f]        # 12074 <_IO_stdin_used+0x74>
    4634:	00 
    4635:	c4 c2 29 bd d7       	vfnmadd231ss xmm2,xmm10,xmm15
    463a:	c4 c2 21 bd c7       	vfnmadd231ss xmm0,xmm11,xmm15
    463f:	c4 e2 31 9d ce       	vfnmadd132ss xmm1,xmm9,xmm6
    4644:	c4 62 19 9d fe       	vfnmadd132ss xmm15,xmm12,xmm6
    4649:	c5 3a 59 8f 90 00 00 	vmulss xmm9,xmm8,DWORD PTR [rdi+0x90]
    4650:	00 
    4651:	c4 c1 0a 59 de       	vmulss xmm3,xmm14,xmm14
    4656:	c5 8a 59 e2          	vmulss xmm4,xmm14,xmm2
    465a:	c5 ea 59 ea          	vmulss xmm5,xmm2,xmm2
    465e:	c4 c2 11 b9 dd       	vfmadd231ss xmm3,xmm13,xmm13
    4663:	c4 62 59 99 e8       	vfmadd132ss xmm13,xmm4,xmm0
    4668:	c4 e2 51 99 c0       	vfmadd132ss xmm0,xmm5,xmm0
    466d:	c4 e2 71 b9 d9       	vfmadd231ss xmm3,xmm1,xmm1
    4672:	c5 62 59 1d 66 da 00 	vmulss xmm11,xmm3,DWORD PTR [rip+0xda66]        # 120e0 <_IO_stdin_used+0xe0>
    4679:	00 
    467a:	c4 c2 11 99 cf       	vfmadd132ss xmm1,xmm13,xmm15
    467f:	c4 42 79 99 ff       	vfmadd132ss xmm15,xmm0,xmm15
    4684:	c5 fa 11 5c 24 1c    	vmovss DWORD PTR [rsp+0x1c],xmm3
    468a:	c5 f2 58 f9          	vaddss xmm7,xmm1,xmm1
    468e:	c4 42 01 9d c9       	vfnmadd132ss xmm9,xmm15,xmm9
    4693:	c5 fa 11 7c 24 10    	vmovss DWORD PTR [rsp+0x10],xmm7
    4699:	c4 41 22 59 d1       	vmulss xmm10,xmm11,xmm9
    469e:	c4 62 41 bb d7       	vfmsub231ss xmm10,xmm7,xmm7
    46a3:	c5 7a 11 54 24 08    	vmovss DWORD PTR [rsp+0x8],xmm10
    46a9:	ff b4 24 b8 01 00 00 	push   QWORD PTR [rsp+0x1b8]
    46b0:	ff b4 24 b8 01 00 00 	push   QWORD PTR [rsp+0x1b8]
    46b7:	ff b4 24 b8 01 00 00 	push   QWORD PTR [rsp+0x1b8]
    46be:	ff b4 24 b8 01 00 00 	push   QWORD PTR [rsp+0x1b8]
    46c5:	e8 56 f6 ff ff       	call   3d20 <is_hit_cylinder_end_cap>
    46ca:	c5 7a 10 74 24 30    	vmovss xmm14,DWORD PTR [rsp+0x30]
    46d0:	c4 41 00 57 ff       	vxorps xmm15,xmm15,xmm15
    46d5:	c5 7a 10 5c 24 28    	vmovss xmm11,DWORD PTR [rsp+0x28]
    46db:	48 83 c4 20          	add    rsp,0x20
    46df:	c5 88 57 15 19 da 00 	vxorps xmm2,xmm14,XMMWORD PTR [rip+0xda19]        # 12100 <_IO_stdin_used+0x100>
    46e6:	00 
    46e7:	c5 7a 10 64 24 1c    	vmovss xmm12,DWORD PTR [rsp+0x1c]
    46ed:	c4 41 78 2e fb       	vucomiss xmm15,xmm11
    46f2:	c5 7a 10 4c 24 20    	vmovss xmm9,DWORD PTR [rsp+0x20]
    46f8:	c5 7a 10 44 24 24    	vmovss xmm8,DWORD PTR [rsp+0x24]
    46fe:	c5 fa 10 7c 24 28    	vmovss xmm7,DWORD PTR [rsp+0x28]
    4704:	c5 fa 10 6c 24 2c    	vmovss xmm5,DWORD PTR [rsp+0x2c]
    470a:	c5 fa 10 64 24 30    	vmovss xmm4,DWORD PTR [rsp+0x30]
    4710:	c5 fa 10 5c 24 34    	vmovss xmm3,DWORD PTR [rsp+0x34]
    4716:	0f 87 65 05 00 00    	ja     4c81 <is_hit_cylinder+0x711>
    471c:	c4 c1 22 51 c3       	vsqrtss xmm0,xmm11,xmm11
    4721:	c4 41 1a 58 ec       	vaddss xmm13,xmm12,xmm12
    4726:	c5 6a 5c d0          	vsubss xmm10,xmm2,xmm0
    472a:	c4 c1 2a 5e d5       	vdivss xmm2,xmm10,xmm13
    472f:	c5 78 2f fa          	vcomiss xmm15,xmm2
    4733:	73 07                	jae    473c <is_hit_cylinder+0x1cc>
    4735:	c5 f8 2f 55 30       	vcomiss xmm2,DWORD PTR [rbp+0x30]
    473a:	72 1f                	jb     475b <is_hit_cylinder+0x1eb>
    473c:	c4 41 7a 5c e6       	vsubss xmm12,xmm0,xmm14
    4741:	c4 c1 1a 5e d5       	vdivss xmm2,xmm12,xmm13
    4746:	c5 78 2f fa          	vcomiss xmm15,xmm2
    474a:	0f 83 c4 02 00 00    	jae    4a14 <is_hit_cylinder+0x4a4>
    4750:	c5 f8 2f 55 30       	vcomiss xmm2,DWORD PTR [rbp+0x30]
    4755:	0f 83 b9 02 00 00    	jae    4a14 <is_hit_cylinder+0x4a4>
    475b:	c4 41 78 2f fb       	vcomiss xmm15,xmm11
    4760:	0f 83 ae 02 00 00    	jae    4a14 <is_hit_cylinder+0x4a4>
    4766:	c4 e2 69 b9 df       	vfmadd231ss xmm3,xmm2,xmm7
    476b:	c5 7a 10 33          	vmovss xmm14,DWORD PTR [rbx]
    476f:	c4 c2 69 b9 e0       	vfmadd231ss xmm4,xmm2,xmm8
    4774:	c5 fa 10 73 40       	vmovss xmm6,DWORD PTR [rbx+0x40]
    4779:	c5 7a 10 6b 04       	vmovss xmm13,DWORD PTR [rbx+0x4]
    477e:	c4 c2 69 b9 e9       	vfmadd231ss xmm5,xmm2,xmm9
    4783:	c5 fa 10 4b 44       	vmovss xmm1,DWORD PTR [rbx+0x44]
    4788:	c5 7a 10 5b 08       	vmovss xmm11,DWORD PTR [rbx+0x8]
    478d:	c5 7a 10 53 48       	vmovss xmm10,DWORD PTR [rbx+0x48]
    4792:	c4 41 62 5c c6       	vsubss xmm8,xmm3,xmm14
    4797:	c4 41 5a 5c cd       	vsubss xmm9,xmm4,xmm13
    479c:	c4 c1 52 5c c3       	vsubss xmm0,xmm5,xmm11
    47a1:	c5 ba 59 fe          	vmulss xmm7,xmm8,xmm6
    47a5:	c4 62 41 99 c9       	vfmadd132ss xmm9,xmm7,xmm1
    47aa:	c4 c2 31 99 c2       	vfmadd132ss xmm0,xmm9,xmm10
    47af:	c5 7a 10 0d bd d8 00 	vmovss xmm9,DWORD PTR [rip+0xd8bd]        # 12074 <_IO_stdin_used+0x74>
    47b6:	00 
    47b7:	c5 32 59 83 94 00 00 	vmulss xmm8,xmm9,DWORD PTR [rbx+0x94]
    47be:	00 
    47bf:	c5 78 54 25 49 d9 00 	vandps xmm12,xmm0,XMMWORD PTR [rip+0xd949]        # 12110 <_IO_stdin_used+0x110>
    47c6:	00 
    47c7:	c4 41 78 2f e0       	vcomiss xmm12,xmm8
    47cc:	0f 87 42 02 00 00    	ja     4a14 <is_hit_cylinder+0x4a4>
    47d2:	c4 e2 11 99 c8       	vfmadd132ss xmm1,xmm13,xmm0
    47d7:	c5 fa 11 55 30       	vmovss DWORD PTR [rbp+0x30],xmm2
    47dc:	c5 fa 10 bc 24 ac 01 	vmovss xmm7,DWORD PTR [rsp+0x1ac]
    47e3:	00 00 
    47e5:	c4 e2 41 99 94 24 bc 	vfmadd132ss xmm2,xmm7,DWORD PTR [rsp+0x1bc]
    47ec:	01 00 00 
    47ef:	c4 e2 09 99 f0       	vfmadd132ss xmm6,xmm14,xmm0
    47f4:	c4 c2 21 99 c2       	vfmadd132ss xmm0,xmm11,xmm10
    47f9:	c5 50 14 e2          	vunpcklps xmm12,xmm5,xmm2
    47fd:	c5 e0 14 d4          	vunpcklps xmm2,xmm3,xmm4
    4801:	c5 da 5c e1          	vsubss xmm4,xmm4,xmm1
    4805:	c5 d2 5c e8          	vsubss xmm5,xmm5,xmm0
    4809:	c5 e2 5c de          	vsubss xmm3,xmm3,xmm6
    480d:	c4 41 68 16 cc       	vmovlhps xmm9,xmm2,xmm12
    4812:	c5 78 29 4d 00       	vmovaps XMMWORD PTR [rbp+0x0],xmm9
    4817:	c5 da 59 c4          	vmulss xmm0,xmm4,xmm4
    481b:	c4 e2 61 b9 c3       	vfmadd231ss xmm0,xmm3,xmm3
    4820:	c4 e2 51 b9 c5       	vfmadd231ss xmm0,xmm5,xmm5
    4825:	c5 78 2e f8          	vucomiss xmm15,xmm0
    4829:	0f 87 92 05 00 00    	ja     4dc1 <is_hit_cylinder+0x851>
    482f:	c5 fa 51 c0          	vsqrtss xmm0,xmm0,xmm0
    4833:	c5 62 5e f8          	vdivss xmm15,xmm3,xmm0
    4837:	c5 79 6f 2b          	vmovdqa xmm13,XMMWORD PTR [rbx]
    483b:	c5 79 6f 5b 10       	vmovdqa xmm11,XMMWORD PTR [rbx+0x10]
    4840:	c5 79 6f 53 20       	vmovdqa xmm10,XMMWORD PTR [rbx+0x20]
    4845:	c5 79 6f 43 30       	vmovdqa xmm8,XMMWORD PTR [rbx+0x30]
    484a:	c5 f9 6f 7b 40       	vmovdqa xmm7,XMMWORD PTR [rbx+0x40]
    484f:	c5 f9 6f 73 60       	vmovdqa xmm6,XMMWORD PTR [rbx+0x60]
    4854:	c5 79 7f ac 24 f0 00 	vmovdqa XMMWORD PTR [rsp+0xf0],xmm13
    485b:	00 00 
    485d:	c5 79 6f 63 70       	vmovdqa xmm12,XMMWORD PTR [rbx+0x70]
    4862:	c5 f9 6f 4d 00       	vmovdqa xmm1,XMMWORD PTR [rbp+0x0]
    4867:	c5 79 7f 9c 24 00 01 	vmovdqa XMMWORD PTR [rsp+0x100],xmm11
    486e:	00 00 
    4870:	c5 f9 6f 93 80 00 00 	vmovdqa xmm2,XMMWORD PTR [rbx+0x80]
    4877:	00 
    4878:	c5 79 7f 94 24 10 01 	vmovdqa XMMWORD PTR [rsp+0x110],xmm10
    487f:	00 00 
    4881:	c5 79 7f 84 24 20 01 	vmovdqa XMMWORD PTR [rsp+0x120],xmm8
    4888:	00 00 
    488a:	c5 f9 7f bc 24 30 01 	vmovdqa XMMWORD PTR [rsp+0x130],xmm7
    4891:	00 00 
    4893:	c5 f9 7f b4 24 50 01 	vmovdqa XMMWORD PTR [rsp+0x150],xmm6
    489a:	00 00 
    489c:	c5 79 7f a4 24 60 01 	vmovdqa XMMWORD PTR [rsp+0x160],xmm12
    48a3:	00 00 
    48a5:	c5 f9 7f 94 24 70 01 	vmovdqa XMMWORD PTR [rsp+0x170],xmm2
    48ac:	00 00 
    48ae:	c5 f9 7f 4c 24 60    	vmovdqa XMMWORD PTR [rsp+0x60],xmm1
    48b4:	c5 5a 5e f0          	vdivss xmm14,xmm4,xmm0
    48b8:	c5 d2 5e e8          	vdivss xmm5,xmm5,xmm0
    48bc:	c5 f9 6f 43 50       	vmovdqa xmm0,XMMWORD PTR [rbx+0x50]
    48c1:	c5 f9 7f 84 24 40 01 	vmovdqa XMMWORD PTR [rsp+0x140],xmm0
    48c8:	00 00 
    48ca:	c5 f9 7e c0          	vmovd  eax,xmm0
    48ce:	c4 41 00 14 ce       	vunpcklps xmm9,xmm15,xmm14
    48d3:	83 f8 01             	cmp    eax,0x1
    48d6:	76 63                	jbe    493b <is_hit_cylinder+0x3cb>
    48d8:	c5 78 13 4c 24 10    	vmovlps QWORD PTR [rsp+0x10],xmm9
    48de:	c5 fa 11 6c 24 08    	vmovss DWORD PTR [rsp+0x8],xmm5
    48e4:	83 f8 02             	cmp    eax,0x2
    48e7:	0f 84 33 01 00 00    	je     4a20 <is_hit_cylinder+0x4b0>
    48ed:	48 8d 35 94 d7 00 00 	lea    rsi,[rip+0xd794]        # 12088 <_IO_stdin_used+0x88>
    48f4:	31 ff                	xor    edi,edi
    48f6:	e8 55 7f 00 00       	call   c850 <ft_assert>
    48fb:	c5 79 6f 2b          	vmovdqa xmm13,XMMWORD PTR [rbx]
    48ff:	c5 79 6f 5b 10       	vmovdqa xmm11,XMMWORD PTR [rbx+0x10]
    4904:	c5 79 6f 53 20       	vmovdqa xmm10,XMMWORD PTR [rbx+0x20]
    4909:	c5 79 6f 43 30       	vmovdqa xmm8,XMMWORD PTR [rbx+0x30]
    490e:	c5 f9 6f 7b 40       	vmovdqa xmm7,XMMWORD PTR [rbx+0x40]
    4913:	c5 f9 6f 43 50       	vmovdqa xmm0,XMMWORD PTR [rbx+0x50]
    4918:	c5 f9 6f 73 60       	vmovdqa xmm6,XMMWORD PTR [rbx+0x60]
    491d:	c5 79 6f 63 70       	vmovdqa xmm12,XMMWORD PTR [rbx+0x70]
    4922:	c5 f9 6f 93 80 00 00 	vmovdqa xmm2,XMMWORD PTR [rbx+0x80]
    4929:	00 
    492a:	c5 f9 6f 4d 00       	vmovdqa xmm1,XMMWORD PTR [rbp+0x0]
    492f:	c5 7a 7e 4c 24 10    	vmovq  xmm9,QWORD PTR [rsp+0x10]
    4935:	c5 fa 10 6c 24 08    	vmovss xmm5,DWORD PTR [rsp+0x8]
    493b:	8b 53 50             	mov    edx,DWORD PTR [rbx+0x50]
    493e:	c5 fa 7e 5b 10       	vmovq  xmm3,QWORD PTR [rbx+0x10]
    4943:	c5 78 13 4d 10       	vmovlps QWORD PTR [rbp+0x10],xmm9
    4948:	44 8b 63 18          	mov    r12d,DWORD PTR [rbx+0x18]
    494c:	c5 fa 11 6d 18       	vmovss DWORD PTR [rbp+0x18],xmm5
    4951:	c5 79 7f 6c 24 60    	vmovdqa XMMWORD PTR [rsp+0x60],xmm13
    4957:	c5 79 7f 5c 24 70    	vmovdqa XMMWORD PTR [rsp+0x70],xmm11
    495d:	c5 79 7f 94 24 80 00 	vmovdqa XMMWORD PTR [rsp+0x80],xmm10
    4964:	00 00 
    4966:	c5 79 7f 84 24 90 00 	vmovdqa XMMWORD PTR [rsp+0x90],xmm8
    496d:	00 00 
    496f:	c5 f9 7f bc 24 a0 00 	vmovdqa XMMWORD PTR [rsp+0xa0],xmm7
    4976:	00 00 
    4978:	c5 f9 7f 84 24 b0 00 	vmovdqa XMMWORD PTR [rsp+0xb0],xmm0
    497f:	00 00 
    4981:	c5 f9 7f b4 24 c0 00 	vmovdqa XMMWORD PTR [rsp+0xc0],xmm6
    4988:	00 00 
    498a:	c5 79 7f a4 24 d0 00 	vmovdqa XMMWORD PTR [rsp+0xd0],xmm12
    4991:	00 00 
    4993:	c5 f9 7f 94 24 e0 00 	vmovdqa XMMWORD PTR [rsp+0xe0],xmm2
    499a:	00 00 
    499c:	c5 f9 7f 4c 24 40    	vmovdqa XMMWORD PTR [rsp+0x40],xmm1
    49a2:	85 d2                	test   edx,edx
    49a4:	74 2c                	je     49d2 <is_hit_cylinder+0x462>
    49a6:	83 fa 01             	cmp    edx,0x1
    49a9:	0f 84 a1 01 00 00    	je     4b50 <is_hit_cylinder+0x5e0>
    49af:	83 fa 02             	cmp    edx,0x2
    49b2:	0f 84 c8 00 00 00    	je     4a80 <is_hit_cylinder+0x510>
    49b8:	48 8d 35 f1 d6 00 00 	lea    rsi,[rip+0xd6f1]        # 120b0 <_IO_stdin_used+0xb0>
    49bf:	31 ff                	xor    edi,edi
    49c1:	c5 f9 d6 5c 24 08    	vmovq  QWORD PTR [rsp+0x8],xmm3
    49c7:	e8 84 7e 00 00       	call   c850 <ft_assert>
    49cc:	c5 fa 7e 5c 24 08    	vmovq  xmm3,QWORD PTR [rsp+0x8]
    49d2:	44 89 64 24 78       	mov    DWORD PTR [rsp+0x78],r12d
    49d7:	c5 f9 d6 5c 24 70    	vmovq  QWORD PTR [rsp+0x70],xmm3
    49dd:	c5 f9 6f 7c 24 70    	vmovdqa xmm7,XMMWORD PTR [rsp+0x70]
    49e3:	c5 f9 7f bc 24 f0 00 	vmovdqa XMMWORD PTR [rsp+0xf0],xmm7
    49ea:	00 00 
    49ec:	44 89 a4 24 f8 00 00 	mov    DWORD PTR [rsp+0xf8],r12d
    49f3:	00 
    49f4:	b8 01 00 00 00       	mov    eax,0x1
    49f9:	c5 f9 d6 9c 24 f0 00 	vmovq  QWORD PTR [rsp+0xf0],xmm3
    4a00:	00 00 
    4a02:	c5 f9 6f b4 24 f0 00 	vmovdqa xmm6,XMMWORD PTR [rsp+0xf0]
    4a09:	00 00 
    4a0b:	48 89 5d 38          	mov    QWORD PTR [rbp+0x38],rbx
    4a0f:	c5 f9 7f 75 20       	vmovdqa XMMWORD PTR [rbp+0x20],xmm6
    4a14:	48 81 c4 80 01 00 00 	add    rsp,0x180
    4a1b:	5b                   	pop    rbx
    4a1c:	5d                   	pop    rbp
    4a1d:	41 5c                	pop    r12
    4a1f:	c3                   	ret    
    4a20:	c5 fa 7e 44 24 60    	vmovq  xmm0,QWORD PTR [rsp+0x60]
    4a26:	c5 fa 7e 4c 24 68    	vmovq  xmm1,QWORD PTR [rsp+0x68]
    4a2c:	48 8d bc 24 f0 00 00 	lea    rdi,[rsp+0xf0]
    4a33:	00 
    4a34:	ff 94 24 58 01 00 00 	call   QWORD PTR [rsp+0x158]
    4a3b:	c5 79 6f 2b          	vmovdqa xmm13,XMMWORD PTR [rbx]
    4a3f:	c5 79 6f 5b 10       	vmovdqa xmm11,XMMWORD PTR [rbx+0x10]
    4a44:	c5 79 6f 53 20       	vmovdqa xmm10,XMMWORD PTR [rbx+0x20]
    4a49:	c5 79 6f 43 30       	vmovdqa xmm8,XMMWORD PTR [rbx+0x30]
    4a4e:	c5 f9 6f 7b 40       	vmovdqa xmm7,XMMWORD PTR [rbx+0x40]
    4a53:	c5 f9 6f 43 50       	vmovdqa xmm0,XMMWORD PTR [rbx+0x50]
    4a58:	c5 f9 6f 73 60       	vmovdqa xmm6,XMMWORD PTR [rbx+0x60]
    4a5d:	c5 79 6f 63 70       	vmovdqa xmm12,XMMWORD PTR [rbx+0x70]
    4a62:	c5 f9 6f 93 80 00 00 	vmovdqa xmm2,XMMWORD PTR [rbx+0x80]
    4a69:	00 
    4a6a:	c5 f9 6f 4d 00       	vmovdqa xmm1,XMMWORD PTR [rbp+0x0]
    4a6f:	c5 fa 10 6c 24 08    	vmovss xmm5,DWORD PTR [rsp+0x8]
    4a75:	c5 7a 7e 4c 24 10    	vmovq  xmm9,QWORD PTR [rsp+0x10]
    4a7b:	e9 bb fe ff ff       	jmp    493b <is_hit_cylinder+0x3cb>
    4a80:	44 89 64 24 78       	mov    DWORD PTR [rsp+0x78],r12d
    4a85:	c5 f9 6f c1          	vmovdqa xmm0,xmm1
    4a89:	48 8d bc 24 f0 00 00 	lea    rdi,[rsp+0xf0]
    4a90:	00 
    4a91:	c7 84 24 b0 00 00 00 	mov    DWORD PTR [rsp+0xb0],0x2
    4a98:	02 00 00 00 
    4a9c:	c5 79 6f bc 24 b0 00 	vmovdqa xmm15,XMMWORD PTR [rsp+0xb0]
    4aa3:	00 00 
    4aa5:	c5 f9 d6 5c 24 70    	vmovq  QWORD PTR [rsp+0x70],xmm3
    4aab:	c5 f9 6f 64 24 70    	vmovdqa xmm4,XMMWORD PTR [rsp+0x70]
    4ab1:	c5 f9 7f 4c 24 50    	vmovdqa XMMWORD PTR [rsp+0x50],xmm1
    4ab7:	c5 fa 7e 4c 24 58    	vmovq  xmm1,QWORD PTR [rsp+0x58]
    4abd:	c5 79 7f ac 24 f0 00 	vmovdqa XMMWORD PTR [rsp+0xf0],xmm13
    4ac4:	00 00 
    4ac6:	c5 f9 7f a4 24 00 01 	vmovdqa XMMWORD PTR [rsp+0x100],xmm4
    4acd:	00 00 
    4acf:	c5 79 7f 94 24 10 01 	vmovdqa XMMWORD PTR [rsp+0x110],xmm10
    4ad6:	00 00 
    4ad8:	c5 79 7f 84 24 20 01 	vmovdqa XMMWORD PTR [rsp+0x120],xmm8
    4adf:	00 00 
    4ae1:	c5 f9 7f bc 24 30 01 	vmovdqa XMMWORD PTR [rsp+0x130],xmm7
    4ae8:	00 00 
    4aea:	c5 79 7f bc 24 40 01 	vmovdqa XMMWORD PTR [rsp+0x140],xmm15
    4af1:	00 00 
    4af3:	c5 f9 7f b4 24 50 01 	vmovdqa XMMWORD PTR [rsp+0x150],xmm6
    4afa:	00 00 
    4afc:	c5 79 7f a4 24 60 01 	vmovdqa XMMWORD PTR [rsp+0x160],xmm12
    4b03:	00 00 
    4b05:	c5 f9 7f 94 24 70 01 	vmovdqa XMMWORD PTR [rsp+0x170],xmm2
    4b0c:	00 00 
    4b0e:	ff 94 24 58 01 00 00 	call   QWORD PTR [rsp+0x158]
    4b15:	48 89 c1             	mov    rcx,rax
    4b18:	48 c1 f9 20          	sar    rcx,0x20
    4b1c:	3d 9f 00 00 00       	cmp    eax,0x9f
    4b21:	7e 0c                	jle    4b2f <is_hit_cylinder+0x5bf>
    4b23:	81 f9 9f 00 00 00    	cmp    ecx,0x9f
    4b29:	0f 86 09 01 00 00    	jbe    4c38 <is_hit_cylinder+0x6c8>
    4b2f:	48 8d 3d 67 d5 00 00 	lea    rdi,[rip+0xd567]        # 1209d <_IO_stdin_used+0x9d>
    4b36:	45 31 e4             	xor    r12d,r12d
    4b39:	e8 42 da ff ff       	call   2580 <puts@plt>
    4b3e:	c5 e1 ef db          	vpxor  xmm3,xmm3,xmm3
    4b42:	e9 a5 fe ff ff       	jmp    49ec <is_hit_cylinder+0x47c>
    4b47:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    4b4e:	00 00 
    4b50:	44 89 64 24 78       	mov    DWORD PTR [rsp+0x78],r12d
    4b55:	48 8d bc 24 f0 00 00 	lea    rdi,[rsp+0xf0]
    4b5c:	00 
    4b5d:	c7 84 24 b0 00 00 00 	mov    DWORD PTR [rsp+0xb0],0x1
    4b64:	01 00 00 00 
    4b68:	c5 f9 d6 5c 24 70    	vmovq  QWORD PTR [rsp+0x70],xmm3
    4b6e:	c5 f9 6f 44 24 70    	vmovdqa xmm0,XMMWORD PTR [rsp+0x70]
    4b74:	c5 79 7f 94 24 10 01 	vmovdqa XMMWORD PTR [rsp+0x110],xmm10
    4b7b:	00 00 
    4b7d:	c5 79 6f 94 24 b0 00 	vmovdqa xmm10,XMMWORD PTR [rsp+0xb0]
    4b84:	00 00 
    4b86:	c5 f9 7f 84 24 00 01 	vmovdqa XMMWORD PTR [rsp+0x100],xmm0
    4b8d:	00 00 
    4b8f:	c5 f9 6f c1          	vmovdqa xmm0,xmm1
    4b93:	c5 f9 7f 4c 24 50    	vmovdqa XMMWORD PTR [rsp+0x50],xmm1
    4b99:	c5 fa 7e 4c 24 58    	vmovq  xmm1,QWORD PTR [rsp+0x58]
    4b9f:	c5 79 7f ac 24 f0 00 	vmovdqa XMMWORD PTR [rsp+0xf0],xmm13
    4ba6:	00 00 
    4ba8:	c5 79 7f 84 24 20 01 	vmovdqa XMMWORD PTR [rsp+0x120],xmm8
    4baf:	00 00 
    4bb1:	c5 f9 7f bc 24 30 01 	vmovdqa XMMWORD PTR [rsp+0x130],xmm7
    4bb8:	00 00 
    4bba:	c5 79 7f 94 24 40 01 	vmovdqa XMMWORD PTR [rsp+0x140],xmm10
    4bc1:	00 00 
    4bc3:	c5 f9 7f b4 24 50 01 	vmovdqa XMMWORD PTR [rsp+0x150],xmm6
    4bca:	00 00 
    4bcc:	c5 79 7f a4 24 60 01 	vmovdqa XMMWORD PTR [rsp+0x160],xmm12
    4bd3:	00 00 
    4bd5:	c5 f9 7f 94 24 70 01 	vmovdqa XMMWORD PTR [rsp+0x170],xmm2
    4bdc:	00 00 
    4bde:	ff 94 24 58 01 00 00 	call   QWORD PTR [rsp+0x158]
    4be5:	49 89 c4             	mov    r12,rax
    4be8:	49 c1 fc 20          	sar    r12,0x20
    4bec:	45 85 e4             	test   r12d,r12d
    4bef:	41 8d 54 24 0f       	lea    edx,[r12+0xf]
    4bf4:	41 0f 49 d4          	cmovns edx,r12d
    4bf8:	83 e2 10             	and    edx,0x10
    4bfb:	74 22                	je     4c1f <is_hit_cylinder+0x6af>
    4bfd:	85 c0                	test   eax,eax
    4bff:	8d 48 0f             	lea    ecx,[rax+0xf]
    4c02:	0f 49 c8             	cmovns ecx,eax
    4c05:	c1 e1 1b             	shl    ecx,0x1b
    4c08:	c1 f9 1f             	sar    ecx,0x1f
    4c0b:	44 0f b6 e1          	movzx  r12d,cl
    4c0f:	c4 41 79 6e c4       	vmovd  xmm8,r12d
    4c14:	c4 c1 79 70 d8 e0    	vpshufd xmm3,xmm8,0xe0
    4c1a:	e9 cd fd ff ff       	jmp    49ec <is_hit_cylinder+0x47c>
    4c1f:	85 c0                	test   eax,eax
    4c21:	8d 70 0f             	lea    esi,[rax+0xf]
    4c24:	0f 48 c6             	cmovs  eax,esi
    4c27:	c1 f8 04             	sar    eax,0x4
    4c2a:	83 e0 01             	and    eax,0x1
    4c2d:	83 f8 01             	cmp    eax,0x1
    4c30:	19 c0                	sbb    eax,eax
    4c32:	44 0f b6 e0          	movzx  r12d,al
    4c36:	eb d7                	jmp    4c0f <is_hit_cylinder+0x69f>
    4c38:	48 8b bc 24 48 01 00 	mov    rdi,QWORD PTR [rsp+0x148]
    4c3f:	00 
    4c40:	8d 34 89             	lea    esi,[rcx+rcx*4]
    4c43:	c5 7a 7e 1d d5 d4 00 	vmovq  xmm11,QWORD PTR [rip+0xd4d5]        # 12120 <_IO_stdin_used+0x120>
    4c4a:	00 
    4c4b:	c1 e6 05             	shl    esi,0x5
    4c4e:	4c 8b 47 30          	mov    r8,QWORD PTR [rdi+0x30]
    4c52:	01 f0                	add    eax,esi
    4c54:	48 98                	cdqe   
    4c56:	45 8b 0c 80          	mov    r9d,DWORD PTR [r8+rax*4]
    4c5a:	45 89 ca             	mov    r10d,r9d
    4c5d:	45 89 cb             	mov    r11d,r9d
    4c60:	45 0f b6 e1          	movzx  r12d,r9b
    4c64:	41 c1 fa 10          	sar    r10d,0x10
    4c68:	41 c1 fb 08          	sar    r11d,0x8
    4c6c:	c4 41 79 6e f2       	vmovd  xmm14,r10d
    4c71:	c4 43 09 22 eb 01    	vpinsrd xmm13,xmm14,r11d,0x1
    4c77:	c4 c1 11 db db       	vpand  xmm3,xmm13,xmm11
    4c7c:	e9 6b fd ff ff       	jmp    49ec <is_hit_cylinder+0x47c>
    4c81:	c5 78 29 d8          	vmovaps xmm0,xmm11
    4c85:	88 44 24 3f          	mov    BYTE PTR [rsp+0x3f],al
    4c89:	c5 7a 11 74 24 38    	vmovss DWORD PTR [rsp+0x38],xmm14
    4c8f:	c5 fa 11 54 24 30    	vmovss DWORD PTR [rsp+0x30],xmm2
    4c95:	c5 7a 11 4c 24 2c    	vmovss DWORD PTR [rsp+0x2c],xmm9
    4c9b:	c5 7a 11 44 24 28    	vmovss DWORD PTR [rsp+0x28],xmm8
    4ca1:	c5 fa 11 7c 24 24    	vmovss DWORD PTR [rsp+0x24],xmm7
    4ca7:	c5 fa 11 6c 24 20    	vmovss DWORD PTR [rsp+0x20],xmm5
    4cad:	c5 fa 11 64 24 1c    	vmovss DWORD PTR [rsp+0x1c],xmm4
    4cb3:	c5 fa 11 5c 24 10    	vmovss DWORD PTR [rsp+0x10],xmm3
    4cb9:	c5 7a 11 5c 24 08    	vmovss DWORD PTR [rsp+0x8],xmm11
    4cbf:	c5 7a 11 64 24 34    	vmovss DWORD PTR [rsp+0x34],xmm12
    4cc5:	e8 c6 dc ff ff       	call   2990 <sqrtf@plt>
    4cca:	c5 fa 10 74 24 34    	vmovss xmm6,DWORD PTR [rsp+0x34]
    4cd0:	c4 41 00 57 ff       	vxorps xmm15,xmm15,xmm15
    4cd5:	c5 fa 10 4c 24 30    	vmovss xmm1,DWORD PTR [rsp+0x30]
    4cdb:	c5 7a 10 5c 24 08    	vmovss xmm11,DWORD PTR [rsp+0x8]
    4ce1:	c5 fa 10 5c 24 10    	vmovss xmm3,DWORD PTR [rsp+0x10]
    4ce7:	c5 4a 58 ee          	vaddss xmm13,xmm6,xmm6
    4ceb:	c5 f2 5c c0          	vsubss xmm0,xmm1,xmm0
    4cef:	c5 fa 10 64 24 1c    	vmovss xmm4,DWORD PTR [rsp+0x1c]
    4cf5:	c5 fa 10 6c 24 20    	vmovss xmm5,DWORD PTR [rsp+0x20]
    4cfb:	c5 fa 10 7c 24 24    	vmovss xmm7,DWORD PTR [rsp+0x24]
    4d01:	c5 7a 10 44 24 28    	vmovss xmm8,DWORD PTR [rsp+0x28]
    4d07:	c5 7a 10 4c 24 2c    	vmovss xmm9,DWORD PTR [rsp+0x2c]
    4d0d:	c5 7a 10 74 24 38    	vmovss xmm14,DWORD PTR [rsp+0x38]
    4d13:	c4 c1 7a 5e d5       	vdivss xmm2,xmm0,xmm13
    4d18:	0f b6 44 24 3f       	movzx  eax,BYTE PTR [rsp+0x3f]
    4d1d:	c5 78 2f fa          	vcomiss xmm15,xmm2
    4d21:	73 16                	jae    4d39 <is_hit_cylinder+0x7c9>
    4d23:	c5 f8 2f 55 30       	vcomiss xmm2,DWORD PTR [rbp+0x30]
    4d28:	0f 82 2d fa ff ff    	jb     475b <is_hit_cylinder+0x1eb>
    4d2e:	c4 41 78 2e fb       	vucomiss xmm15,xmm11
    4d33:	0f 86 b6 00 00 00    	jbe    4def <is_hit_cylinder+0x87f>
    4d39:	c5 78 29 d8          	vmovaps xmm0,xmm11
    4d3d:	88 44 24 38          	mov    BYTE PTR [rsp+0x38],al
    4d41:	c5 7a 11 6c 24 34    	vmovss DWORD PTR [rsp+0x34],xmm13
    4d47:	c5 7a 11 74 24 30    	vmovss DWORD PTR [rsp+0x30],xmm14
    4d4d:	c5 7a 11 4c 24 2c    	vmovss DWORD PTR [rsp+0x2c],xmm9
    4d53:	c5 7a 11 44 24 28    	vmovss DWORD PTR [rsp+0x28],xmm8
    4d59:	c5 fa 11 7c 24 24    	vmovss DWORD PTR [rsp+0x24],xmm7
    4d5f:	c5 fa 11 6c 24 20    	vmovss DWORD PTR [rsp+0x20],xmm5
    4d65:	c5 fa 11 64 24 1c    	vmovss DWORD PTR [rsp+0x1c],xmm4
    4d6b:	c5 fa 11 5c 24 10    	vmovss DWORD PTR [rsp+0x10],xmm3
    4d71:	c5 7a 11 5c 24 08    	vmovss DWORD PTR [rsp+0x8],xmm11
    4d77:	e8 14 dc ff ff       	call   2990 <sqrtf@plt>
    4d7c:	0f b6 44 24 38       	movzx  eax,BYTE PTR [rsp+0x38]
    4d81:	c4 41 00 57 ff       	vxorps xmm15,xmm15,xmm15
    4d86:	c5 7a 10 6c 24 34    	vmovss xmm13,DWORD PTR [rsp+0x34]
    4d8c:	c5 7a 10 74 24 30    	vmovss xmm14,DWORD PTR [rsp+0x30]
    4d92:	c5 7a 10 4c 24 2c    	vmovss xmm9,DWORD PTR [rsp+0x2c]
    4d98:	c5 7a 10 44 24 28    	vmovss xmm8,DWORD PTR [rsp+0x28]
    4d9e:	c5 fa 10 7c 24 24    	vmovss xmm7,DWORD PTR [rsp+0x24]
    4da4:	c5 fa 10 6c 24 20    	vmovss xmm5,DWORD PTR [rsp+0x20]
    4daa:	c5 fa 10 64 24 1c    	vmovss xmm4,DWORD PTR [rsp+0x1c]
    4db0:	c5 fa 10 5c 24 10    	vmovss xmm3,DWORD PTR [rsp+0x10]
    4db6:	c5 7a 10 5c 24 08    	vmovss xmm11,DWORD PTR [rsp+0x8]
    4dbc:	e9 7b f9 ff ff       	jmp    473c <is_hit_cylinder+0x1cc>
    4dc1:	c5 fa 11 6c 24 1c    	vmovss DWORD PTR [rsp+0x1c],xmm5
    4dc7:	c5 fa 11 64 24 10    	vmovss DWORD PTR [rsp+0x10],xmm4
    4dcd:	c5 fa 11 5c 24 08    	vmovss DWORD PTR [rsp+0x8],xmm3
    4dd3:	e8 b8 db ff ff       	call   2990 <sqrtf@plt>
    4dd8:	c5 fa 10 6c 24 1c    	vmovss xmm5,DWORD PTR [rsp+0x1c]
    4dde:	c5 fa 10 64 24 10    	vmovss xmm4,DWORD PTR [rsp+0x10]
    4de4:	c5 fa 10 5c 24 08    	vmovss xmm3,DWORD PTR [rsp+0x8]
    4dea:	e9 44 fa ff ff       	jmp    4833 <is_hit_cylinder+0x2c3>
    4def:	c4 c1 22 51 c3       	vsqrtss xmm0,xmm11,xmm11
    4df4:	e9 43 f9 ff ff       	jmp    473c <is_hit_cylinder+0x1cc>
    4df9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000004e00 <get_uv_coordinate_in_cylinder>:
    4e00:	f3 0f 1e fa          	endbr64 
    4e04:	31 c0                	xor    eax,eax
    4e06:	31 d2                	xor    edx,edx
    4e08:	c3                   	ret    
    4e09:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000004e10 <delete_cylinder>:
    4e10:	f3 0f 1e fa          	endbr64 
    4e14:	e9 b7 d8 ff ff       	jmp    26d0 <free@plt>
    4e19:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000004e20 <copy_construction_to_cylinder>:
    4e20:	f3 0f 1e fa          	endbr64 
    4e24:	55                   	push   rbp
    4e25:	bf a0 00 00 00       	mov    edi,0xa0
    4e2a:	48 89 e5             	mov    rbp,rsp
    4e2d:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    4e31:	e8 da d7 ff ff       	call   2610 <malloc@plt>
    4e36:	c5 f9 6f 55 10       	vmovdqa xmm2,XMMWORD PTR [rbp+0x10]
    4e3b:	c5 f9 6f 5d 20       	vmovdqa xmm3,XMMWORD PTR [rbp+0x20]
    4e40:	48 8d 0d c9 ff ff ff 	lea    rcx,[rip+0xffffffffffffffc9]        # 4e10 <delete_cylinder>
    4e47:	c4 e1 f9 6e c9       	vmovq  xmm1,rcx
    4e4c:	c5 f9 6f 65 30       	vmovdqa xmm4,XMMWORD PTR [rbp+0x30]
    4e51:	c5 f9 6f 6d 40       	vmovdqa xmm5,XMMWORD PTR [rbp+0x40]
    4e56:	48 8d 35 a3 ff ff ff 	lea    rsi,[rip+0xffffffffffffffa3]        # 4e00 <get_uv_coordinate_in_cylinder>
    4e5d:	c5 f9 6f 75 50       	vmovdqa xmm6,XMMWORD PTR [rbp+0x50]
    4e62:	c5 f9 6f 7d 60       	vmovdqa xmm7,XMMWORD PTR [rbp+0x60]
    4e67:	c5 f9 7f 10          	vmovdqa XMMWORD PTR [rax],xmm2
    4e6b:	c5 7a 7e 0d 55 21 01 	vmovq  xmm9,QWORD PTR [rip+0x12155]        # 16fc8 <_GLOBAL_OFFSET_TABLE_+0x2a0>
    4e72:	00 
    4e73:	c5 f9 6f 85 90 00 00 	vmovdqa xmm0,XMMWORD PTR [rbp+0x90]
    4e7a:	00 
    4e7b:	c5 f9 7f 58 10       	vmovdqa XMMWORD PTR [rax+0x10],xmm3
    4e80:	c4 63 f1 22 05 56 21 	vpinsrq xmm8,xmm1,QWORD PTR [rip+0x12156],0x1        # 16fe0 <_GLOBAL_OFFSET_TABLE_+0x2b8>
    4e87:	01 00 01 
    4e8a:	48 8d 15 4f 00 00 00 	lea    rdx,[rip+0x4f]        # 4ee0 <update_scale_diameter_cylinder>
    4e91:	c5 f9 7f 60 20       	vmovdqa XMMWORD PTR [rax+0x20],xmm4
    4e96:	48 8b bd a0 00 00 00 	mov    rdi,QWORD PTR [rbp+0xa0]
    4e9d:	c4 63 b1 22 d6 01    	vpinsrq xmm10,xmm9,rsi,0x1
    4ea3:	c5 f9 7f 68 30       	vmovdqa XMMWORD PTR [rax+0x30],xmm5
    4ea8:	c4 43 2d 38 d8 01    	vinserti128 ymm11,ymm10,xmm8,0x1
    4eae:	c5 f9 7f 80 80 00 00 	vmovdqa XMMWORD PTR [rax+0x80],xmm0
    4eb5:	00 
    4eb6:	48 89 b8 90 00 00 00 	mov    QWORD PTR [rax+0x90],rdi
    4ebd:	48 89 90 80 00 00 00 	mov    QWORD PTR [rax+0x80],rdx
    4ec4:	c5 f9 7f 70 40       	vmovdqa XMMWORD PTR [rax+0x40],xmm6
    4ec9:	c5 f9 7f 78 50       	vmovdqa XMMWORD PTR [rax+0x50],xmm7
    4ece:	c5 7e 7f 58 60       	vmovdqu YMMWORD PTR [rax+0x60],ymm11
    4ed3:	c5 f8 77             	vzeroupper 
    4ed6:	c9                   	leave  
    4ed7:	c3                   	ret    
    4ed8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    4edf:	00 

0000000000004ee0 <update_scale_diameter_cylinder>:
    4ee0:	f3 0f 1e fa          	endbr64 
    4ee4:	53                   	push   rbx
    4ee5:	48 89 fb             	mov    rbx,rdi
    4ee8:	83 fe 08             	cmp    esi,0x8
    4eeb:	74 33                	je     4f20 <update_scale_diameter_cylinder+0x40>
    4eed:	83 fe 09             	cmp    esi,0x9
    4ef0:	74 06                	je     4ef8 <update_scale_diameter_cylinder+0x18>
    4ef2:	5b                   	pop    rbx
    4ef3:	c3                   	ret    
    4ef4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    4ef8:	c5 fa 10 87 90 00 00 	vmovss xmm0,DWORD PTR [rdi+0x90]
    4eff:	00 
    4f00:	c5 fa 10 0d 6c d1 00 	vmovss xmm1,DWORD PTR [rip+0xd16c]        # 12074 <_IO_stdin_used+0x74>
    4f07:	00 
    4f08:	c5 fa 5c c1          	vsubss xmm0,xmm0,xmm1
    4f0c:	e8 5f d7 ff ff       	call   2670 <fmaxf@plt>
    4f11:	c5 fa 11 83 90 00 00 	vmovss DWORD PTR [rbx+0x90],xmm0
    4f18:	00 
    4f19:	5b                   	pop    rbx
    4f1a:	c3                   	ret    
    4f1b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    4f20:	c5 fa 10 0d 4c d1 00 	vmovss xmm1,DWORD PTR [rip+0xd14c]        # 12074 <_IO_stdin_used+0x74>
    4f27:	00 
    4f28:	c5 f2 58 97 90 00 00 	vaddss xmm2,xmm1,DWORD PTR [rdi+0x90]
    4f2f:	00 
    4f30:	5b                   	pop    rbx
    4f31:	c5 fa 11 97 90 00 00 	vmovss DWORD PTR [rdi+0x90],xmm2
    4f38:	00 
    4f39:	c3                   	ret    
    4f3a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004f40 <update_scale_height_cylinder>:
    4f40:	f3 0f 1e fa          	endbr64 
    4f44:	53                   	push   rbx
    4f45:	48 89 fb             	mov    rbx,rdi
    4f48:	83 fe 0a             	cmp    esi,0xa
    4f4b:	74 33                	je     4f80 <update_scale_height_cylinder+0x40>
    4f4d:	83 fe 0b             	cmp    esi,0xb
    4f50:	74 06                	je     4f58 <update_scale_height_cylinder+0x18>
    4f52:	5b                   	pop    rbx
    4f53:	c3                   	ret    
    4f54:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    4f58:	c5 fa 10 87 94 00 00 	vmovss xmm0,DWORD PTR [rdi+0x94]
    4f5f:	00 
    4f60:	c5 fa 10 0d 0c d1 00 	vmovss xmm1,DWORD PTR [rip+0xd10c]        # 12074 <_IO_stdin_used+0x74>
    4f67:	00 
    4f68:	c5 fa 5c c1          	vsubss xmm0,xmm0,xmm1
    4f6c:	e8 ff d6 ff ff       	call   2670 <fmaxf@plt>
    4f71:	c5 fa 11 83 94 00 00 	vmovss DWORD PTR [rbx+0x94],xmm0
    4f78:	00 
    4f79:	5b                   	pop    rbx
    4f7a:	c3                   	ret    
    4f7b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    4f80:	c5 fa 10 0d ec d0 00 	vmovss xmm1,DWORD PTR [rip+0xd0ec]        # 12074 <_IO_stdin_used+0x74>
    4f87:	00 
    4f88:	c5 f2 58 97 94 00 00 	vaddss xmm2,xmm1,DWORD PTR [rdi+0x94]
    4f8f:	00 
    4f90:	5b                   	pop    rbx
    4f91:	c5 fa 11 97 94 00 00 	vmovss DWORD PTR [rdi+0x94],xmm2
    4f98:	00 
    4f99:	c3                   	ret    
    4f9a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004fa0 <is_hit_cone>:
    4fa0:	f3 0f 1e fa          	endbr64 
    4fa4:	b8 01 00 00 00       	mov    eax,0x1
    4fa9:	c3                   	ret    
    4faa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000004fb0 <get_uv_coordinate_in_cone>:
    4fb0:	f3 0f 1e fa          	endbr64 
    4fb4:	31 c0                	xor    eax,eax
    4fb6:	31 d2                	xor    edx,edx
    4fb8:	c3                   	ret    
    4fb9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000004fc0 <delete_cone>:
    4fc0:	f3 0f 1e fa          	endbr64 
    4fc4:	e9 07 d7 ff ff       	jmp    26d0 <free@plt>
    4fc9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000004fd0 <copy_construction_to_cone>:
    4fd0:	f3 0f 1e fa          	endbr64 
    4fd4:	55                   	push   rbp
    4fd5:	bf a0 00 00 00       	mov    edi,0xa0
    4fda:	48 89 e5             	mov    rbp,rsp
    4fdd:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    4fe1:	e8 2a d6 ff ff       	call   2610 <malloc@plt>
    4fe6:	c5 f9 6f 55 10       	vmovdqa xmm2,XMMWORD PTR [rbp+0x10]
    4feb:	c5 f9 6f 5d 20       	vmovdqa xmm3,XMMWORD PTR [rbp+0x20]
    4ff0:	48 8d 0d c9 ff ff ff 	lea    rcx,[rip+0xffffffffffffffc9]        # 4fc0 <delete_cone>
    4ff7:	c4 e1 f9 6e c9       	vmovq  xmm1,rcx
    4ffc:	c5 f9 6f 65 30       	vmovdqa xmm4,XMMWORD PTR [rbp+0x30]
    5001:	c5 f9 6f 6d 40       	vmovdqa xmm5,XMMWORD PTR [rbp+0x40]
    5006:	48 8d 35 a3 ff ff ff 	lea    rsi,[rip+0xffffffffffffffa3]        # 4fb0 <get_uv_coordinate_in_cone>
    500d:	c5 f9 6f 75 50       	vmovdqa xmm6,XMMWORD PTR [rbp+0x50]
    5012:	c5 f9 6f 7d 60       	vmovdqa xmm7,XMMWORD PTR [rbp+0x60]
    5017:	c5 f9 7f 10          	vmovdqa XMMWORD PTR [rax],xmm2
    501b:	c5 7a 7e 0d 85 1f 01 	vmovq  xmm9,QWORD PTR [rip+0x11f85]        # 16fa8 <_GLOBAL_OFFSET_TABLE_+0x280>
    5022:	00 
    5023:	c5 f9 6f 85 90 00 00 	vmovdqa xmm0,XMMWORD PTR [rbp+0x90]
    502a:	00 
    502b:	c5 f9 7f 58 10       	vmovdqa XMMWORD PTR [rax+0x10],xmm3
    5030:	c4 63 f1 22 05 9e 1f 	vpinsrq xmm8,xmm1,QWORD PTR [rip+0x11f9e],0x1        # 16fd8 <_GLOBAL_OFFSET_TABLE_+0x2b0>
    5037:	01 00 01 
    503a:	48 8d 15 4f 00 00 00 	lea    rdx,[rip+0x4f]        # 5090 <update_scale_diameter_cone>
    5041:	c5 f9 7f 60 20       	vmovdqa XMMWORD PTR [rax+0x20],xmm4
    5046:	48 8b bd a0 00 00 00 	mov    rdi,QWORD PTR [rbp+0xa0]
    504d:	c4 63 b1 22 d6 01    	vpinsrq xmm10,xmm9,rsi,0x1
    5053:	c5 f9 7f 68 30       	vmovdqa XMMWORD PTR [rax+0x30],xmm5
    5058:	c4 43 2d 38 d8 01    	vinserti128 ymm11,ymm10,xmm8,0x1
    505e:	c5 f9 7f 80 80 00 00 	vmovdqa XMMWORD PTR [rax+0x80],xmm0
    5065:	00 
    5066:	48 89 b8 90 00 00 00 	mov    QWORD PTR [rax+0x90],rdi
    506d:	48 89 90 80 00 00 00 	mov    QWORD PTR [rax+0x80],rdx
    5074:	c5 f9 7f 70 40       	vmovdqa XMMWORD PTR [rax+0x40],xmm6
    5079:	c5 f9 7f 78 50       	vmovdqa XMMWORD PTR [rax+0x50],xmm7
    507e:	c5 7e 7f 58 60       	vmovdqu YMMWORD PTR [rax+0x60],ymm11
    5083:	c5 f8 77             	vzeroupper 
    5086:	c9                   	leave  
    5087:	c3                   	ret    
    5088:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    508f:	00 

0000000000005090 <update_scale_diameter_cone>:
    5090:	f3 0f 1e fa          	endbr64 
    5094:	53                   	push   rbx
    5095:	48 89 fb             	mov    rbx,rdi
    5098:	83 fe 08             	cmp    esi,0x8
    509b:	74 33                	je     50d0 <update_scale_diameter_cone+0x40>
    509d:	83 fe 09             	cmp    esi,0x9
    50a0:	74 06                	je     50a8 <update_scale_diameter_cone+0x18>
    50a2:	5b                   	pop    rbx
    50a3:	c3                   	ret    
    50a4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    50a8:	c5 fa 10 87 90 00 00 	vmovss xmm0,DWORD PTR [rdi+0x90]
    50af:	00 
    50b0:	c5 fa 10 0d bc cf 00 	vmovss xmm1,DWORD PTR [rip+0xcfbc]        # 12074 <_IO_stdin_used+0x74>
    50b7:	00 
    50b8:	c5 fa 5c c1          	vsubss xmm0,xmm0,xmm1
    50bc:	e8 af d5 ff ff       	call   2670 <fmaxf@plt>
    50c1:	c5 fa 11 83 90 00 00 	vmovss DWORD PTR [rbx+0x90],xmm0
    50c8:	00 
    50c9:	5b                   	pop    rbx
    50ca:	c3                   	ret    
    50cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    50d0:	c5 fa 10 0d 9c cf 00 	vmovss xmm1,DWORD PTR [rip+0xcf9c]        # 12074 <_IO_stdin_used+0x74>
    50d7:	00 
    50d8:	c5 f2 58 97 90 00 00 	vaddss xmm2,xmm1,DWORD PTR [rdi+0x90]
    50df:	00 
    50e0:	5b                   	pop    rbx
    50e1:	c5 fa 11 97 90 00 00 	vmovss DWORD PTR [rdi+0x90],xmm2
    50e8:	00 
    50e9:	c3                   	ret    
    50ea:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000050f0 <update_scale_height_cone>:
    50f0:	f3 0f 1e fa          	endbr64 
    50f4:	53                   	push   rbx
    50f5:	48 89 fb             	mov    rbx,rdi
    50f8:	83 fe 0a             	cmp    esi,0xa
    50fb:	74 33                	je     5130 <update_scale_height_cone+0x40>
    50fd:	83 fe 0b             	cmp    esi,0xb
    5100:	74 06                	je     5108 <update_scale_height_cone+0x18>
    5102:	5b                   	pop    rbx
    5103:	c3                   	ret    
    5104:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    5108:	c5 fa 10 87 94 00 00 	vmovss xmm0,DWORD PTR [rdi+0x94]
    510f:	00 
    5110:	c5 fa 10 0d 5c cf 00 	vmovss xmm1,DWORD PTR [rip+0xcf5c]        # 12074 <_IO_stdin_used+0x74>
    5117:	00 
    5118:	c5 fa 5c c1          	vsubss xmm0,xmm0,xmm1
    511c:	e8 4f d5 ff ff       	call   2670 <fmaxf@plt>
    5121:	c5 fa 11 83 94 00 00 	vmovss DWORD PTR [rbx+0x94],xmm0
    5128:	00 
    5129:	5b                   	pop    rbx
    512a:	c3                   	ret    
    512b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    5130:	c5 fa 10 0d 3c cf 00 	vmovss xmm1,DWORD PTR [rip+0xcf3c]        # 12074 <_IO_stdin_used+0x74>
    5137:	00 
    5138:	c5 f2 58 97 94 00 00 	vaddss xmm2,xmm1,DWORD PTR [rdi+0x94]
    513f:	00 
    5140:	5b                   	pop    rbx
    5141:	c5 fa 11 97 94 00 00 	vmovss DWORD PTR [rdi+0x94],xmm2
    5148:	00 
    5149:	c3                   	ret    
    514a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000005150 <load_hit_cy_equation>:
    5150:	f3 0f 1e fa          	endbr64 
    5154:	c5 7a 10 44 24 0c    	vmovss xmm8,DWORD PTR [rsp+0xc]
    515a:	c5 3a 5c 5c 24 2c    	vsubss xmm11,xmm8,DWORD PTR [rsp+0x2c]
    5160:	c5 fa 10 54 24 6c    	vmovss xmm2,DWORD PTR [rsp+0x6c]
    5166:	c5 fa 10 64 24 1c    	vmovss xmm4,DWORD PTR [rsp+0x1c]
    516c:	c5 7a 10 4c 24 08    	vmovss xmm9,DWORD PTR [rsp+0x8]
    5172:	c5 32 5c 54 24 28    	vsubss xmm10,xmm9,DWORD PTR [rsp+0x28]
    5178:	c5 ea 59 c4          	vmulss xmm0,xmm2,xmm4
    517c:	c5 fa 10 6c 24 68    	vmovss xmm5,DWORD PTR [rsp+0x68]
    5182:	c5 fa 10 74 24 18    	vmovss xmm6,DWORD PTR [rsp+0x18]
    5188:	c5 22 59 ea          	vmulss xmm13,xmm11,xmm2
    518c:	c5 fa 10 7c 24 10    	vmovss xmm7,DWORD PTR [rsp+0x10]
    5192:	c5 42 5c 64 24 30    	vsubss xmm12,xmm7,DWORD PTR [rsp+0x30]
    5198:	c5 fa 10 4c 24 70    	vmovss xmm1,DWORD PTR [rsp+0x70]
    519e:	c5 fa 10 5c 24 20    	vmovss xmm3,DWORD PTR [rsp+0x20]
    51a4:	c4 e2 51 b9 c6       	vfmadd231ss xmm0,xmm5,xmm6
    51a9:	c4 42 51 b9 ea       	vfmadd231ss xmm13,xmm5,xmm10
    51ae:	c4 e2 71 b9 c3       	vfmadd231ss xmm0,xmm1,xmm3
    51b3:	c4 42 71 b9 ec       	vfmadd231ss xmm13,xmm1,xmm12
    51b8:	c4 e2 79 bd e2       	vfnmadd231ss xmm4,xmm0,xmm2
    51bd:	c4 e2 51 bd f0       	vfnmadd231ss xmm6,xmm5,xmm0
    51c2:	c4 c2 21 9d d5       	vfnmadd132ss xmm2,xmm11,xmm13
    51c7:	c4 c2 29 9d ed       	vfnmadd132ss xmm5,xmm10,xmm13
    51cc:	c4 e2 61 9d c1       	vfnmadd132ss xmm0,xmm3,xmm1
    51d1:	c4 c2 19 9d cd       	vfnmadd132ss xmm1,xmm12,xmm13
    51d6:	c5 5a 59 f4          	vmulss xmm14,xmm4,xmm4
    51da:	c5 6a 59 fc          	vmulss xmm15,xmm2,xmm4
    51de:	c5 ea 59 d2          	vmulss xmm2,xmm2,xmm2
    51e2:	c4 62 49 b9 f6       	vfmadd231ss xmm14,xmm6,xmm6
    51e7:	c4 e2 01 99 f5       	vfmadd132ss xmm6,xmm15,xmm5
    51ec:	c4 e2 69 99 ed       	vfmadd132ss xmm5,xmm2,xmm5
    51f1:	c4 62 79 b9 f0       	vfmadd231ss xmm14,xmm0,xmm0
    51f6:	c5 0a 59 05 e2 ce 00 	vmulss xmm8,xmm14,DWORD PTR [rip+0xcee2]        # 120e0 <_IO_stdin_used+0xe0>
    51fd:	00 
    51fe:	c4 e2 49 99 c1       	vfmadd132ss xmm0,xmm6,xmm1
    5203:	c4 e2 51 99 c9       	vfmadd132ss xmm1,xmm5,xmm1
    5208:	c5 fa 10 2d 64 ce 00 	vmovss xmm5,DWORD PTR [rip+0xce64]        # 12074 <_IO_stdin_used+0x74>
    520f:	00 
    5210:	c5 52 59 94 24 b8 00 	vmulss xmm10,xmm5,DWORD PTR [rsp+0xb8]
    5217:	00 00 
    5219:	c5 7a 58 c8          	vaddss xmm9,xmm0,xmm0
    521d:	c4 c2 29 bd ca       	vfnmadd231ss xmm1,xmm10,xmm10
    5222:	c4 c1 08 14 f9       	vunpcklps xmm7,xmm14,xmm9
    5227:	c5 3a 59 d9          	vmulss xmm11,xmm8,xmm1
    522b:	c4 42 31 bb d9       	vfmsub231ss xmm11,xmm9,xmm9
    5230:	c4 c1 70 14 cb       	vunpcklps xmm1,xmm1,xmm11
    5235:	c5 40 16 e1          	vmovlhps xmm12,xmm7,xmm1
    5239:	c5 78 29 64 24 e8    	vmovaps XMMWORD PTR [rsp-0x18],xmm12
    523f:	48 8b 44 24 f0       	mov    rax,QWORD PTR [rsp-0x10]
    5244:	c5 fa 7e 44 24 e8    	vmovq  xmm0,QWORD PTR [rsp-0x18]
    524a:	c4 e1 f9 6e c8       	vmovq  xmm1,rax
    524f:	c3                   	ret    

0000000000005250 <load_hit_cone_equation>:
    5250:	f3 0f 1e fa          	endbr64 
    5254:	c5 f1 ef c9          	vpxor  xmm1,xmm1,xmm1
    5258:	c5 f9 ef c0          	vpxor  xmm0,xmm0,xmm0
    525c:	c3                   	ret    
    525d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000005260 <calculate_cylinder_hit_height>:
    5260:	f3 0f 1e fa          	endbr64 
    5264:	c5 fa 10 54 24 1c    	vmovss xmm2,DWORD PTR [rsp+0x1c]
    526a:	c4 e2 79 a9 54 24 0c 	vfmadd213ss xmm2,xmm0,DWORD PTR [rsp+0xc]
    5271:	c5 ea 5c 6c 24 2c    	vsubss xmm5,xmm2,DWORD PTR [rsp+0x2c]
    5277:	c5 fa 10 4c 24 18    	vmovss xmm1,DWORD PTR [rsp+0x18]
    527d:	c5 d2 59 74 24 6c    	vmulss xmm6,xmm5,DWORD PTR [rsp+0x6c]
    5283:	c4 e2 79 a9 4c 24 08 	vfmadd213ss xmm1,xmm0,DWORD PTR [rsp+0x8]
    528a:	c5 f2 5c 64 24 28    	vsubss xmm4,xmm1,DWORD PTR [rsp+0x28]
    5290:	c5 fa 10 5c 24 10    	vmovss xmm3,DWORD PTR [rsp+0x10]
    5296:	c4 e2 49 99 64 24 68 	vfmadd132ss xmm4,xmm6,DWORD PTR [rsp+0x68]
    529d:	c4 e2 61 99 44 24 20 	vfmadd132ss xmm0,xmm3,DWORD PTR [rsp+0x20]
    52a4:	c5 fa 5c 44 24 30    	vsubss xmm0,xmm0,DWORD PTR [rsp+0x30]
    52aa:	c4 e2 59 99 44 24 70 	vfmadd132ss xmm0,xmm4,DWORD PTR [rsp+0x70]
    52b1:	c3                   	ret    
    52b2:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    52b9:	00 00 00 00 
    52bd:	0f 1f 00             	nop    DWORD PTR [rax]

00000000000052c0 <get_quadtatic_root_plus>:
    52c0:	f3 0f 1e fa          	endbr64 
    52c4:	c4 e1 f9 7e c0       	vmovq  rax,xmm0
    52c9:	c5 f9 6f d0          	vmovdqa xmm2,xmm0
    52cd:	c4 e1 f9 7e ca       	vmovq  rdx,xmm1
    52d2:	c5 fa 59 05 06 ce 00 	vmulss xmm0,xmm0,DWORD PTR [rip+0xce06]        # 120e0 <_IO_stdin_used+0xe0>
    52d9:	00 
    52da:	c5 f9 6e e2          	vmovd  xmm4,edx
    52de:	48 c1 e8 20          	shr    rax,0x20
    52e2:	c5 e0 57 db          	vxorps xmm3,xmm3,xmm3
    52e6:	c5 f9 6e c8          	vmovd  xmm1,eax
    52ea:	c5 fa 59 c4          	vmulss xmm0,xmm0,xmm4
    52ee:	c4 e2 71 bb c1       	vfmsub231ss xmm0,xmm1,xmm1
    52f3:	c5 f8 2e d8          	vucomiss xmm3,xmm0
    52f7:	77 12                	ja     530b <get_quadtatic_root_plus+0x4b>
    52f9:	c5 fa 51 c0          	vsqrtss xmm0,xmm0,xmm0
    52fd:	c5 6a 58 d2          	vaddss xmm10,xmm2,xmm2
    5301:	c5 7a 5c c9          	vsubss xmm9,xmm0,xmm1
    5305:	c4 c1 32 5e c2       	vdivss xmm0,xmm9,xmm10
    530a:	c3                   	ret    
    530b:	48 83 ec 18          	sub    rsp,0x18
    530f:	89 44 24 0c          	mov    DWORD PTR [rsp+0xc],eax
    5313:	c5 fa 11 54 24 08    	vmovss DWORD PTR [rsp+0x8],xmm2
    5319:	e8 72 d6 ff ff       	call   2990 <sqrtf@plt>
    531e:	c5 fa 10 6c 24 0c    	vmovss xmm5,DWORD PTR [rsp+0xc]
    5324:	c5 fa 10 74 24 08    	vmovss xmm6,DWORD PTR [rsp+0x8]
    532a:	48 83 c4 18          	add    rsp,0x18
    532e:	c5 fa 5c fd          	vsubss xmm7,xmm0,xmm5
    5332:	c5 4a 58 c6          	vaddss xmm8,xmm6,xmm6
    5336:	c4 c1 42 5e c0       	vdivss xmm0,xmm7,xmm8
    533b:	c3                   	ret    
    533c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000005340 <get_quadtatic_root_minus>:
    5340:	f3 0f 1e fa          	endbr64 
    5344:	c5 f9 6f d0          	vmovdqa xmm2,xmm0
    5348:	c4 e1 f9 7e ca       	vmovq  rdx,xmm1
    534d:	c4 e1 f9 7e c0       	vmovq  rax,xmm0
    5352:	c5 ea 59 1d 86 cd 00 	vmulss xmm3,xmm2,DWORD PTR [rip+0xcd86]        # 120e0 <_IO_stdin_used+0xe0>
    5359:	00 
    535a:	c5 f9 6e e2          	vmovd  xmm4,edx
    535e:	48 c1 e8 20          	shr    rax,0x20
    5362:	c5 c8 57 f6          	vxorps xmm6,xmm6,xmm6
    5366:	c5 f9 6e c0          	vmovd  xmm0,eax
    536a:	c5 f8 57 0d 8e cd 00 	vxorps xmm1,xmm0,XMMWORD PTR [rip+0xcd8e]        # 12100 <_IO_stdin_used+0x100>
    5371:	00 
    5372:	c5 e2 59 ec          	vmulss xmm5,xmm3,xmm4
    5376:	c4 e2 51 9b c0       	vfmsub132ss xmm0,xmm5,xmm0
    537b:	c5 f8 2e f0          	vucomiss xmm6,xmm0
    537f:	77 12                	ja     5393 <get_quadtatic_root_minus+0x53>
    5381:	c5 fa 51 c0          	vsqrtss xmm0,xmm0,xmm0
    5385:	c5 6a 58 da          	vaddss xmm11,xmm2,xmm2
    5389:	c5 72 5c d0          	vsubss xmm10,xmm1,xmm0
    538d:	c4 c1 2a 5e c3       	vdivss xmm0,xmm10,xmm11
    5392:	c3                   	ret    
    5393:	48 83 ec 18          	sub    rsp,0x18
    5397:	c5 fa 11 54 24 0c    	vmovss DWORD PTR [rsp+0xc],xmm2
    539d:	c5 fa 11 4c 24 08    	vmovss DWORD PTR [rsp+0x8],xmm1
    53a3:	e8 e8 d5 ff ff       	call   2990 <sqrtf@plt>
    53a8:	c5 fa 10 7c 24 0c    	vmovss xmm7,DWORD PTR [rsp+0xc]
    53ae:	c5 7a 10 44 24 08    	vmovss xmm8,DWORD PTR [rsp+0x8]
    53b4:	48 83 c4 18          	add    rsp,0x18
    53b8:	c5 ba 5c c0          	vsubss xmm0,xmm8,xmm0
    53bc:	c5 42 58 cf          	vaddss xmm9,xmm7,xmm7
    53c0:	c4 c1 7a 5e c1       	vdivss xmm0,xmm0,xmm9
    53c5:	c3                   	ret    
    53c6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    53cd:	00 00 00 

00000000000053d0 <get_hit_record>:
    53d0:	f3 0f 1e fa          	endbr64 
    53d4:	c7 44 24 e8 ff ff 7f 	mov    DWORD PTR [rsp-0x18],0x7f7fffff
    53db:	7f 
    53dc:	c5 f9 ef c0          	vpxor  xmm0,xmm0,xmm0
    53e0:	48 89 f8             	mov    rax,rdi
    53e3:	c5 f9 6f 4c 24 e8    	vmovdqa xmm1,XMMWORD PTR [rsp-0x18]
    53e9:	c5 f9 7f 07          	vmovdqa XMMWORD PTR [rdi],xmm0
    53ed:	c5 f9 7f 47 10       	vmovdqa XMMWORD PTR [rdi+0x10],xmm0
    53f2:	c5 f9 7f 47 20       	vmovdqa XMMWORD PTR [rdi+0x20],xmm0
    53f7:	c5 f9 7f 4f 30       	vmovdqa XMMWORD PTR [rdi+0x30],xmm1
    53fc:	c3                   	ret    
    53fd:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000005400 <init_canvas>:
    5400:	f3 0f 1e fa          	endbr64 
    5404:	55                   	push   rbp
    5405:	31 c0                	xor    eax,eax
    5407:	53                   	push   rbx
    5408:	48 89 fb             	mov    rbx,rdi
    540b:	48 83 ec 08          	sub    rsp,0x8
    540f:	e8 1c ae 00 00       	call   10230 <mlx_init>
    5414:	48 89 03             	mov    QWORD PTR [rbx],rax
    5417:	48 89 c7             	mov    rdi,rax
    541a:	48 85 c0             	test   rax,rax
    541d:	0f 84 7d 00 00 00    	je     54a0 <init_canvas+0xa0>
    5423:	48 8d 53 30          	lea    rdx,[rbx+0x30]
    5427:	48 8d 73 28          	lea    rsi,[rbx+0x28]
    542b:	e8 e0 bd 00 00       	call   11210 <mlx_get_screen_size>
    5430:	c5 f9 6f 05 48 cd 00 	vmovdqa xmm0,XMMWORD PTR [rip+0xcd48]        # 12180 <_IO_stdin_used+0x180>
    5437:	00 
    5438:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    543b:	be e8 03 00 00       	mov    esi,0x3e8
    5440:	48 8d 0d fe cc 00 00 	lea    rcx,[rip+0xccfe]        # 12145 <_IO_stdin_used+0x145>
    5447:	ba e8 03 00 00       	mov    edx,0x3e8
    544c:	c5 fa 7f 43 28       	vmovdqu XMMWORD PTR [rbx+0x28],xmm0
    5451:	e8 3a af 00 00       	call   10390 <mlx_new_window>
    5456:	48 89 43 08          	mov    QWORD PTR [rbx+0x8],rax
    545a:	48 89 c6             	mov    rsi,rax
    545d:	48 85 c0             	test   rax,rax
    5460:	74 5e                	je     54c0 <init_canvas+0xc0>
    5462:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    5465:	e8 a6 b9 00 00       	call   10e10 <mlx_clear_window>
    546a:	8b 53 30             	mov    edx,DWORD PTR [rbx+0x30]
    546d:	8b 73 28             	mov    esi,DWORD PTR [rbx+0x28]
    5470:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    5473:	e8 98 b7 00 00       	call   10c10 <mlx_new_image>
    5478:	48 89 c5             	mov    rbp,rax
    547b:	48 85 c0             	test   rax,rax
    547e:	74 60                	je     54e0 <init_canvas+0xe0>
    5480:	48 89 6b 10          	mov    QWORD PTR [rbx+0x10],rbp
    5484:	48 83 c4 08          	add    rsp,0x8
    5488:	48 8d 4b 20          	lea    rcx,[rbx+0x20]
    548c:	48 8d 53 1c          	lea    rdx,[rbx+0x1c]
    5490:	48 8d 73 18          	lea    rsi,[rbx+0x18]
    5494:	48 89 ef             	mov    rdi,rbp
    5497:	5b                   	pop    rbx
    5498:	5d                   	pop    rbp
    5499:	e9 12 b8 00 00       	jmp    10cb0 <mlx_get_data_addr>
    549e:	66 90                	xchg   ax,ax
    54a0:	48 8d 3d 92 cc 00 00 	lea    rdi,[rip+0xcc92]        # 12139 <_IO_stdin_used+0x139>
    54a7:	48 8d 35 7a cc 00 00 	lea    rsi,[rip+0xcc7a]        # 12128 <_IO_stdin_used+0x128>
    54ae:	e8 bd 73 00 00       	call   c870 <exit_by_error>
    54b3:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    54b6:	e9 68 ff ff ff       	jmp    5423 <init_canvas+0x23>
    54bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    54c0:	48 8d 35 85 cc 00 00 	lea    rsi,[rip+0xcc85]        # 1214c <_IO_stdin_used+0x14c>
    54c7:	48 8d 3d 6b cc 00 00 	lea    rdi,[rip+0xcc6b]        # 12139 <_IO_stdin_used+0x139>
    54ce:	e8 9d 73 00 00       	call   c870 <exit_by_error>
    54d3:	48 8b 73 08          	mov    rsi,QWORD PTR [rbx+0x8]
    54d7:	eb 89                	jmp    5462 <init_canvas+0x62>
    54d9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    54e0:	48 8d 35 75 cc 00 00 	lea    rsi,[rip+0xcc75]        # 1215c <_IO_stdin_used+0x15c>
    54e7:	48 8d 3d 7d cc 00 00 	lea    rdi,[rip+0xcc7d]        # 1216b <_IO_stdin_used+0x16b>
    54ee:	e8 7d 73 00 00       	call   c870 <exit_by_error>
    54f3:	eb 8b                	jmp    5480 <init_canvas+0x80>
    54f5:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    54fc:	00 00 00 00 

0000000000005500 <free_canvas>:
    5500:	f3 0f 1e fa          	endbr64 
    5504:	53                   	push   rbx
    5505:	48 89 fb             	mov    rbx,rdi
    5508:	48 8b 77 10          	mov    rsi,QWORD PTR [rdi+0x10]
    550c:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
    550f:	e8 6c bc 00 00       	call   11180 <mlx_destroy_image>
    5514:	48 c7 43 10 00 00 00 	mov    QWORD PTR [rbx+0x10],0x0
    551b:	00 
    551c:	48 8b 73 08          	mov    rsi,QWORD PTR [rbx+0x8]
    5520:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    5523:	e8 18 b9 00 00       	call   10e40 <mlx_destroy_window>
    5528:	48 c7 43 08 00 00 00 	mov    QWORD PTR [rbx+0x8],0x0
    552f:	00 
    5530:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    5533:	e8 48 bd 00 00       	call   11280 <mlx_destroy_display>
    5538:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    553b:	e8 90 d1 ff ff       	call   26d0 <free@plt>
    5540:	48 c7 03 00 00 00 00 	mov    QWORD PTR [rbx],0x0
    5547:	5b                   	pop    rbx
    5548:	c3                   	ret    
    5549:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000005550 <init_img>:
    5550:	f3 0f 1e fa          	endbr64 
    5554:	48 83 ec 18          	sub    rsp,0x18
    5558:	8b 57 30             	mov    edx,DWORD PTR [rdi+0x30]
    555b:	8b 77 28             	mov    esi,DWORD PTR [rdi+0x28]
    555e:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
    5561:	e8 aa b6 00 00       	call   10c10 <mlx_new_image>
    5566:	48 85 c0             	test   rax,rax
    5569:	74 05                	je     5570 <init_img+0x20>
    556b:	48 83 c4 18          	add    rsp,0x18
    556f:	c3                   	ret    
    5570:	48 8d 35 e5 cb 00 00 	lea    rsi,[rip+0xcbe5]        # 1215c <_IO_stdin_used+0x15c>
    5577:	48 8d 3d ed cb 00 00 	lea    rdi,[rip+0xcbed]        # 1216b <_IO_stdin_used+0x16b>
    557e:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    5583:	e8 e8 72 00 00       	call   c870 <exit_by_error>
    5588:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
    558d:	48 83 c4 18          	add    rsp,0x18
    5591:	c3                   	ret    
    5592:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    5599:	00 00 00 
    559c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000000055a0 <is_valid_file>:
    55a0:	f3 0f 1e fa          	endbr64 
    55a4:	80 3f 00             	cmp    BYTE PTR [rdi],0x0
    55a7:	74 48                	je     55f1 <is_valid_file+0x51>
    55a9:	55                   	push   rbp
    55aa:	48 8d 2d df cb 00 00 	lea    rbp,[rip+0xcbdf]        # 12190 <_IO_stdin_used+0x190>
    55b1:	53                   	push   rbx
    55b2:	48 89 fb             	mov    rbx,rdi
    55b5:	48 83 ec 08          	sub    rsp,0x8
    55b9:	eb 0e                	jmp    55c9 <is_valid_file+0x29>
    55bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    55c0:	48 83 c3 01          	add    rbx,0x1
    55c4:	80 3b 00             	cmp    BYTE PTR [rbx],0x0
    55c7:	74 1f                	je     55e8 <is_valid_file+0x48>
    55c9:	48 89 ee             	mov    rsi,rbp
    55cc:	48 89 df             	mov    rdi,rbx
    55cf:	e8 9c 65 00 00       	call   bb70 <ft_strcmp>
    55d4:	85 c0                	test   eax,eax
    55d6:	75 e8                	jne    55c0 <is_valid_file+0x20>
    55d8:	48 83 c4 08          	add    rsp,0x8
    55dc:	b8 01 00 00 00       	mov    eax,0x1
    55e1:	5b                   	pop    rbx
    55e2:	5d                   	pop    rbp
    55e3:	c3                   	ret    
    55e4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    55e8:	48 83 c4 08          	add    rsp,0x8
    55ec:	31 c0                	xor    eax,eax
    55ee:	5b                   	pop    rbx
    55ef:	5d                   	pop    rbp
    55f0:	c3                   	ret    
    55f1:	31 c0                	xor    eax,eax
    55f3:	c3                   	ret    
    55f4:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    55fb:	00 00 00 00 
    55ff:	90                   	nop

0000000000005600 <try_parse_attributes>:
    5600:	f3 0f 1e fa          	endbr64 
    5604:	41 55                	push   r13
    5606:	49 89 d5             	mov    r13,rdx
    5609:	41 54                	push   r12
    560b:	49 89 f4             	mov    r12,rsi
    560e:	48 8d 35 7f cb 00 00 	lea    rsi,[rip+0xcb7f]        # 12194 <_IO_stdin_used+0x194>
    5615:	55                   	push   rbp
    5616:	48 89 fd             	mov    rbp,rdi
    5619:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
    561c:	e8 4f 65 00 00       	call   bb70 <ft_strcmp>
    5621:	85 c0                	test   eax,eax
    5623:	75 13                	jne    5638 <try_parse_attributes+0x38>
    5625:	4c 89 e6             	mov    rsi,r12
    5628:	48 89 ef             	mov    rdi,rbp
    562b:	5d                   	pop    rbp
    562c:	41 5c                	pop    r12
    562e:	41 5d                	pop    r13
    5630:	e9 2b 4d 00 00       	jmp    a360 <try_add_ambient_light_to_world>
    5635:	0f 1f 00             	nop    DWORD PTR [rax]
    5638:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
    563c:	48 8d 35 53 cb 00 00 	lea    rsi,[rip+0xcb53]        # 12196 <_IO_stdin_used+0x196>
    5643:	e8 28 65 00 00       	call   bb70 <ft_strcmp>
    5648:	85 c0                	test   eax,eax
    564a:	75 14                	jne    5660 <try_parse_attributes+0x60>
    564c:	4c 89 e6             	mov    rsi,r12
    564f:	48 89 ef             	mov    rdi,rbp
    5652:	5d                   	pop    rbp
    5653:	41 5c                	pop    r12
    5655:	41 5d                	pop    r13
    5657:	e9 64 4e 00 00       	jmp    a4c0 <try_add_light_to_world>
    565c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    5660:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
    5664:	48 8d 35 2d cb 00 00 	lea    rsi,[rip+0xcb2d]        # 12198 <_IO_stdin_used+0x198>
    566b:	e8 00 65 00 00       	call   bb70 <ft_strcmp>
    5670:	85 c0                	test   eax,eax
    5672:	74 2c                	je     56a0 <try_parse_attributes+0xa0>
    5674:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
    5678:	48 8d 35 1b cb 00 00 	lea    rsi,[rip+0xcb1b]        # 1219a <_IO_stdin_used+0x19a>
    567f:	e8 ec 64 00 00       	call   bb70 <ft_strcmp>
    5684:	85 c0                	test   eax,eax
    5686:	75 30                	jne    56b8 <try_parse_attributes+0xb8>
    5688:	4c 89 e6             	mov    rsi,r12
    568b:	48 89 ef             	mov    rdi,rbp
    568e:	5d                   	pop    rbp
    568f:	41 5c                	pop    r12
    5691:	41 5d                	pop    r13
    5693:	e9 e8 03 00 00       	jmp    5a80 <try_add_sphere_to_world>
    5698:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    569f:	00 
    56a0:	4c 89 ea             	mov    rdx,r13
    56a3:	4c 89 e6             	mov    rsi,r12
    56a6:	48 89 ef             	mov    rdi,rbp
    56a9:	5d                   	pop    rbp
    56aa:	41 5c                	pop    r12
    56ac:	41 5d                	pop    r13
    56ae:	e9 3d 4d 00 00       	jmp    a3f0 <try_add_camera_to_world>
    56b3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    56b8:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
    56bc:	48 8d 35 da ca 00 00 	lea    rsi,[rip+0xcada]        # 1219d <_IO_stdin_used+0x19d>
    56c3:	e8 a8 64 00 00       	call   bb70 <ft_strcmp>
    56c8:	85 c0                	test   eax,eax
    56ca:	74 24                	je     56f0 <try_parse_attributes+0xf0>
    56cc:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
    56d0:	48 8d 35 c9 ca 00 00 	lea    rsi,[rip+0xcac9]        # 121a0 <_IO_stdin_used+0x1a0>
    56d7:	e8 94 64 00 00       	call   bb70 <ft_strcmp>
    56dc:	85 c0                	test   eax,eax
    56de:	75 20                	jne    5700 <try_parse_attributes+0x100>
    56e0:	4c 89 e6             	mov    rsi,r12
    56e3:	48 89 ef             	mov    rdi,rbp
    56e6:	5d                   	pop    rbp
    56e7:	41 5c                	pop    r12
    56e9:	41 5d                	pop    r13
    56eb:	e9 d0 08 00 00       	jmp    5fc0 <try_add_cylinder_to_world>
    56f0:	4c 89 e6             	mov    rsi,r12
    56f3:	48 89 ef             	mov    rdi,rbp
    56f6:	5d                   	pop    rbp
    56f7:	41 5c                	pop    r12
    56f9:	41 5d                	pop    r13
    56fb:	e9 30 05 00 00       	jmp    5c30 <try_add_plane_to_world>
    5700:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
    5704:	48 8d 35 98 ca 00 00 	lea    rsi,[rip+0xca98]        # 121a3 <_IO_stdin_used+0x1a3>
    570b:	e8 60 64 00 00       	call   bb70 <ft_strcmp>
    5710:	85 c0                	test   eax,eax
    5712:	75 10                	jne    5724 <try_parse_attributes+0x124>
    5714:	4c 89 e6             	mov    rsi,r12
    5717:	48 89 ef             	mov    rdi,rbp
    571a:	5d                   	pop    rbp
    571b:	41 5c                	pop    r12
    571d:	41 5d                	pop    r13
    571f:	e9 6c 0b 00 00       	jmp    6290 <try_add_cone_to_world>
    5724:	5d                   	pop    rbp
    5725:	31 c0                	xor    eax,eax
    5727:	41 5c                	pop    r12
    5729:	41 5d                	pop    r13
    572b:	c3                   	ret    
    572c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000005730 <try_parse_file>:
    5730:	f3 0f 1e fa          	endbr64 
    5734:	41 57                	push   r15
    5736:	31 c0                	xor    eax,eax
    5738:	45 31 ff             	xor    r15d,r15d
    573b:	41 56                	push   r14
    573d:	49 89 f6             	mov    r14,rsi
    5740:	31 f6                	xor    esi,esi
    5742:	41 55                	push   r13
    5744:	41 54                	push   r12
    5746:	55                   	push   rbp
    5747:	53                   	push   rbx
    5748:	48 89 d3             	mov    rbx,rdx
    574b:	48 83 ec 08          	sub    rsp,0x8
    574f:	e8 fc d1 ff ff       	call   2950 <open@plt>
    5754:	41 89 c5             	mov    r13d,eax
    5757:	83 f8 ff             	cmp    eax,0xffffffff
    575a:	74 65                	je     57c1 <try_parse_file+0x91>
    575c:	44 89 ef             	mov    edi,r13d
    575f:	e8 cc 6d 00 00       	call   c530 <get_next_line>
    5764:	48 89 c5             	mov    rbp,rax
    5767:	48 85 c0             	test   rax,rax
    576a:	0f 84 8c 00 00 00    	je     57fc <try_parse_file+0xcc>
    5770:	48 89 c7             	mov    rdi,rax
    5773:	e8 c8 63 00 00       	call   bb40 <ft_strlen>
    5778:	be 20 00 00 00       	mov    esi,0x20
    577d:	48 89 ef             	mov    rdi,rbp
    5780:	c6 44 05 ff 00       	mov    BYTE PTR [rbp+rax*1-0x1],0x0
    5785:	e8 16 69 00 00       	call   c0a0 <ft_split>
    578a:	48 83 38 00          	cmp    QWORD PTR [rax],0x0
    578e:	49 89 c4             	mov    r12,rax
    5791:	74 45                	je     57d8 <try_parse_file+0xa8>
    5793:	48 89 da             	mov    rdx,rbx
    5796:	4c 89 f6             	mov    rsi,r14
    5799:	48 89 c7             	mov    rdi,rax
    579c:	e8 5f fe ff ff       	call   5600 <try_parse_attributes>
    57a1:	4c 89 e7             	mov    rdi,r12
    57a4:	41 89 c7             	mov    r15d,eax
    57a7:	e8 a4 6a 00 00       	call   c250 <clear_words>
    57ac:	48 89 ef             	mov    rdi,rbp
    57af:	e8 1c cf ff ff       	call   26d0 <free@plt>
    57b4:	45 84 ff             	test   r15b,r15b
    57b7:	75 a3                	jne    575c <try_parse_file+0x2c>
    57b9:	44 89 ef             	mov    edi,r13d
    57bc:	e8 6f cd ff ff       	call   2530 <close@plt>
    57c1:	48 83 c4 08          	add    rsp,0x8
    57c5:	44 89 f8             	mov    eax,r15d
    57c8:	5b                   	pop    rbx
    57c9:	5d                   	pop    rbp
    57ca:	41 5c                	pop    r12
    57cc:	41 5d                	pop    r13
    57ce:	41 5e                	pop    r14
    57d0:	41 5f                	pop    r15
    57d2:	c3                   	ret    
    57d3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    57d8:	48 89 c7             	mov    rdi,rax
    57db:	e8 70 6a 00 00       	call   c250 <clear_words>
    57e0:	48 89 ef             	mov    rdi,rbp
    57e3:	e8 e8 ce ff ff       	call   26d0 <free@plt>
    57e8:	44 89 ef             	mov    edi,r13d
    57eb:	e8 40 6d 00 00       	call   c530 <get_next_line>
    57f0:	48 89 c5             	mov    rbp,rax
    57f3:	48 85 c0             	test   rax,rax
    57f6:	0f 85 74 ff ff ff    	jne    5770 <try_parse_file+0x40>
    57fc:	41 bf 01 00 00 00    	mov    r15d,0x1
    5802:	eb b5                	jmp    57b9 <try_parse_file+0x89>
    5804:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    580b:	00 00 00 00 
    580f:	90                   	nop

0000000000005810 <try_parse>:
    5810:	f3 0f 1e fa          	endbr64 
    5814:	41 56                	push   r14
    5816:	41 55                	push   r13
    5818:	41 54                	push   r12
    581a:	55                   	push   rbp
    581b:	53                   	push   rbx
    581c:	83 ff 02             	cmp    edi,0x2
    581f:	0f 85 8b 00 00 00    	jne    58b0 <try_parse+0xa0>
    5825:	48 8b 5e 08          	mov    rbx,QWORD PTR [rsi+0x8]
    5829:	49 89 f5             	mov    r13,rsi
    582c:	80 3b 00             	cmp    BYTE PTR [rbx],0x0
    582f:	74 7f                	je     58b0 <try_parse+0xa0>
    5831:	49 89 d4             	mov    r12,rdx
    5834:	49 89 ce             	mov    r14,rcx
    5837:	48 8d 2d 52 c9 00 00 	lea    rbp,[rip+0xc952]        # 12190 <_IO_stdin_used+0x190>
    583e:	eb 09                	jmp    5849 <try_parse+0x39>
    5840:	48 83 c3 01          	add    rbx,0x1
    5844:	80 3b 00             	cmp    BYTE PTR [rbx],0x0
    5847:	74 67                	je     58b0 <try_parse+0xa0>
    5849:	48 89 ee             	mov    rsi,rbp
    584c:	48 89 df             	mov    rdi,rbx
    584f:	e8 1c 63 00 00       	call   bb70 <ft_strcmp>
    5854:	85 c0                	test   eax,eax
    5856:	75 e8                	jne    5840 <try_parse+0x30>
    5858:	4c 89 e7             	mov    rdi,r12
    585b:	e8 80 4a 00 00       	call   a2e0 <init_world>
    5860:	49 8b 7d 08          	mov    rdi,QWORD PTR [r13+0x8]
    5864:	4c 89 f2             	mov    rdx,r14
    5867:	4c 89 e6             	mov    rsi,r12
    586a:	e8 c1 fe ff ff       	call   5730 <try_parse_file>
    586f:	84 c0                	test   al,al
    5871:	74 2d                	je     58a0 <try_parse+0x90>
    5873:	41 80 bc 24 80 00 00 	cmp    BYTE PTR [r12+0x80],0x0
    587a:	00 00 
    587c:	74 22                	je     58a0 <try_parse+0x90>
    587e:	45 0f b6 6c 24 50    	movzx  r13d,BYTE PTR [r12+0x50]
    5884:	45 84 ed             	test   r13b,r13b
    5887:	74 17                	je     58a0 <try_parse+0x90>
    5889:	49 8d bc 24 88 00 00 	lea    rdi,[r12+0x88]
    5890:	00 
    5891:	41 ff 94 24 a8 00 00 	call   QWORD PTR [r12+0xa8]
    5898:	00 
    5899:	48 85 c0             	test   rax,rax
    589c:	75 15                	jne    58b3 <try_parse+0xa3>
    589e:	66 90                	xchg   ax,ax
    58a0:	4c 89 e7             	mov    rdi,r12
    58a3:	e8 88 4a 00 00       	call   a330 <destroy_world>
    58a8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    58af:	00 
    58b0:	45 31 ed             	xor    r13d,r13d
    58b3:	5b                   	pop    rbx
    58b4:	44 89 e8             	mov    eax,r13d
    58b7:	5d                   	pop    rbp
    58b8:	41 5c                	pop    r12
    58ba:	41 5d                	pop    r13
    58bc:	41 5e                	pop    r14
    58be:	c3                   	ret    
    58bf:	90                   	nop

00000000000058c0 <try_parse_vector3>:
    58c0:	f3 0f 1e fa          	endbr64 
    58c4:	41 55                	push   r13
    58c6:	41 54                	push   r12
    58c8:	55                   	push   rbp
    58c9:	48 89 f5             	mov    rbp,rsi
    58cc:	be 2c 00 00 00       	mov    esi,0x2c
    58d1:	53                   	push   rbx
    58d2:	48 83 ec 08          	sub    rsp,0x8
    58d6:	e8 c5 67 00 00       	call   c0a0 <ft_split>
    58db:	48 89 ee             	mov    rsi,rbp
    58de:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    58e1:	49 89 c4             	mov    r12,rax
    58e4:	e8 27 70 00 00       	call   c910 <try_atof>
    58e9:	49 8b 7c 24 08       	mov    rdi,QWORD PTR [r12+0x8]
    58ee:	48 8d 75 04          	lea    rsi,[rbp+0x4]
    58f2:	89 c3                	mov    ebx,eax
    58f4:	e8 17 70 00 00       	call   c910 <try_atof>
    58f9:	49 8b 7c 24 10       	mov    rdi,QWORD PTR [r12+0x10]
    58fe:	48 8d 75 08          	lea    rsi,[rbp+0x8]
    5902:	41 89 c5             	mov    r13d,eax
    5905:	e8 06 70 00 00       	call   c910 <try_atof>
    590a:	4c 89 e7             	mov    rdi,r12
    590d:	89 c5                	mov    ebp,eax
    590f:	e8 3c 69 00 00       	call   c250 <clear_words>
    5914:	89 d8                	mov    eax,ebx
    5916:	48 83 c4 08          	add    rsp,0x8
    591a:	44 21 e8             	and    eax,r13d
    591d:	5b                   	pop    rbx
    591e:	21 e8                	and    eax,ebp
    5920:	5d                   	pop    rbp
    5921:	41 5c                	pop    r12
    5923:	41 5d                	pop    r13
    5925:	c3                   	ret    
    5926:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    592d:	00 00 00 

0000000000005930 <try_parse_color>:
    5930:	f3 0f 1e fa          	endbr64 
    5934:	41 56                	push   r14
    5936:	41 55                	push   r13
    5938:	41 54                	push   r12
    593a:	55                   	push   rbp
    593b:	48 89 f5             	mov    rbp,rsi
    593e:	be 2c 00 00 00       	mov    esi,0x2c
    5943:	53                   	push   rbx
    5944:	e8 57 67 00 00       	call   c0a0 <ft_split>
    5949:	48 89 ee             	mov    rsi,rbp
    594c:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    594f:	49 89 c4             	mov    r12,rax
    5952:	e8 c9 65 00 00       	call   bf20 <try_atoi>
    5957:	49 8b 7c 24 08       	mov    rdi,QWORD PTR [r12+0x8]
    595c:	48 8d 75 04          	lea    rsi,[rbp+0x4]
    5960:	89 c3                	mov    ebx,eax
    5962:	e8 b9 65 00 00       	call   bf20 <try_atoi>
    5967:	49 8b 7c 24 10       	mov    rdi,QWORD PTR [r12+0x10]
    596c:	48 8d 75 08          	lea    rsi,[rbp+0x8]
    5970:	41 89 c6             	mov    r14d,eax
    5973:	e8 a8 65 00 00       	call   bf20 <try_atoi>
    5978:	4c 89 e7             	mov    rdi,r12
    597b:	41 89 c5             	mov    r13d,eax
    597e:	e8 cd 68 00 00       	call   c250 <clear_words>
    5983:	89 d8                	mov    eax,ebx
    5985:	44 21 f0             	and    eax,r14d
    5988:	44 20 e8             	and    al,r13b
    598b:	75 23                	jne    59b0 <try_parse_color+0x80>
    598d:	48 c7 45 00 00 00 00 	mov    QWORD PTR [rbp+0x0],0x0
    5994:	00 
    5995:	31 c0                	xor    eax,eax
    5997:	c7 45 08 00 00 00 00 	mov    DWORD PTR [rbp+0x8],0x0
    599e:	5b                   	pop    rbx
    599f:	5d                   	pop    rbp
    59a0:	41 5c                	pop    r12
    59a2:	41 5d                	pop    r13
    59a4:	41 5e                	pop    r14
    59a6:	c3                   	ret    
    59a7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    59ae:	00 00 
    59b0:	8b 55 04             	mov    edx,DWORD PTR [rbp+0x4]
    59b3:	0b 55 00             	or     edx,DWORD PTR [rbp+0x0]
    59b6:	0b 55 08             	or     edx,DWORD PTR [rbp+0x8]
    59b9:	81 fa ff 00 00 00    	cmp    edx,0xff
    59bf:	77 cc                	ja     598d <try_parse_color+0x5d>
    59c1:	eb db                	jmp    599e <try_parse_color+0x6e>
    59c3:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    59ca:	00 00 00 00 
    59ce:	66 90                	xchg   ax,ax

00000000000059d0 <is_invalid_normalized_vector3>:
    59d0:	f3 0f 1e fa          	endbr64 
    59d4:	c5 f9 d6 44 24 e8    	vmovq  QWORD PTR [rsp-0x18],xmm0
    59da:	c5 fa 10 44 24 e8    	vmovss xmm0,DWORD PTR [rsp-0x18]
    59e0:	b8 01 00 00 00       	mov    eax,0x1
    59e5:	c5 f9 d6 4c 24 f0    	vmovq  QWORD PTR [rsp-0x10],xmm1
    59eb:	c5 fa 10 0d b5 c7 00 	vmovss xmm1,DWORD PTR [rip+0xc7b5]        # 121a8 <_IO_stdin_used+0x1a8>
    59f2:	00 
    59f3:	c5 f8 2f c1          	vcomiss xmm0,xmm1
    59f7:	76 07                	jbe    5a00 <is_invalid_normalized_vector3+0x30>
    59f9:	c3                   	ret    
    59fa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    5a00:	c5 fa 10 15 a4 c7 00 	vmovss xmm2,DWORD PTR [rip+0xc7a4]        # 121ac <_IO_stdin_used+0x1ac>
    5a07:	00 
    5a08:	c5 f8 2f d0          	vcomiss xmm2,xmm0
    5a0c:	77 eb                	ja     59f9 <is_invalid_normalized_vector3+0x29>
    5a0e:	c5 fa 10 5c 24 ec    	vmovss xmm3,DWORD PTR [rsp-0x14]
    5a14:	c5 f8 2f d9          	vcomiss xmm3,xmm1
    5a18:	77 df                	ja     59f9 <is_invalid_normalized_vector3+0x29>
    5a1a:	c5 f8 2f d3          	vcomiss xmm2,xmm3
    5a1e:	77 d9                	ja     59f9 <is_invalid_normalized_vector3+0x29>
    5a20:	c5 fa 10 64 24 f0    	vmovss xmm4,DWORD PTR [rsp-0x10]
    5a26:	c5 f8 2f e1          	vcomiss xmm4,xmm1
    5a2a:	77 cd                	ja     59f9 <is_invalid_normalized_vector3+0x29>
    5a2c:	c5 f8 2f d4          	vcomiss xmm2,xmm4
    5a30:	0f 97 c0             	seta   al
    5a33:	c3                   	ret    
    5a34:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    5a3b:	00 00 00 00 
    5a3f:	90                   	nop

0000000000005a40 <is_invalid_ratio_in_range>:
    5a40:	f3 0f 1e fa          	endbr64 
    5a44:	c5 f0 57 c9          	vxorps xmm1,xmm1,xmm1
    5a48:	b8 01 00 00 00       	mov    eax,0x1
    5a4d:	c5 f8 2f c8          	vcomiss xmm1,xmm0
    5a51:	77 0b                	ja     5a5e <is_invalid_ratio_in_range+0x1e>
    5a53:	c5 f8 2f 05 4d c7 00 	vcomiss xmm0,DWORD PTR [rip+0xc74d]        # 121a8 <_IO_stdin_used+0x1a8>
    5a5a:	00 
    5a5b:	0f 97 c0             	seta   al
    5a5e:	c3                   	ret    
    5a5f:	90                   	nop

0000000000005a60 <is_invalid_colors>:
    5a60:	f3 0f 1e fa          	endbr64 
    5a64:	48 89 f8             	mov    rax,rdi
    5a67:	48 c1 e8 20          	shr    rax,0x20
    5a6b:	09 f0                	or     eax,esi
    5a6d:	09 f8                	or     eax,edi
    5a6f:	3d ff 00 00 00       	cmp    eax,0xff
    5a74:	0f 97 c0             	seta   al
    5a77:	c3                   	ret    
    5a78:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    5a7f:	00 

0000000000005a80 <try_add_sphere_to_world>:
    5a80:	f3 0f 1e fa          	endbr64 
    5a84:	4c 8d 54 24 08       	lea    r10,[rsp+0x8]
    5a89:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    5a8d:	41 ff 72 f8          	push   QWORD PTR [r10-0x8]
    5a91:	55                   	push   rbp
    5a92:	48 89 e5             	mov    rbp,rsp
    5a95:	41 55                	push   r13
    5a97:	49 89 f5             	mov    r13,rsi
    5a9a:	41 54                	push   r12
    5a9c:	41 52                	push   r10
    5a9e:	53                   	push   rbx
    5a9f:	48 89 fb             	mov    rbx,rdi
    5aa2:	48 81 ec 10 01 00 00 	sub    rsp,0x110
    5aa9:	e8 02 68 00 00       	call   c2b0 <get_count_to_words>
    5aae:	48 83 f8 04          	cmp    rax,0x4
    5ab2:	74 1c                	je     5ad0 <try_add_sphere_to_world+0x50>
    5ab4:	45 31 e4             	xor    r12d,r12d
    5ab7:	48 8d 65 e0          	lea    rsp,[rbp-0x20]
    5abb:	44 89 e0             	mov    eax,r12d
    5abe:	5b                   	pop    rbx
    5abf:	5a                   	pop    rdx
    5ac0:	41 5c                	pop    r12
    5ac2:	41 5d                	pop    r13
    5ac4:	5d                   	pop    rbp
    5ac5:	48 8d 62 f8          	lea    rsp,[rdx-0x8]
    5ac9:	c3                   	ret    
    5aca:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    5ad0:	48 8b 7b 08          	mov    rdi,QWORD PTR [rbx+0x8]
    5ad4:	be 2c 00 00 00       	mov    esi,0x2c
    5ad9:	e8 12 67 00 00       	call   c1f0 <get_count_words>
    5ade:	48 83 f8 03          	cmp    rax,0x3
    5ae2:	75 d0                	jne    5ab4 <try_add_sphere_to_world+0x34>
    5ae4:	48 8b 7b 18          	mov    rdi,QWORD PTR [rbx+0x18]
    5ae8:	be 2c 00 00 00       	mov    esi,0x2c
    5aed:	e8 fe 66 00 00       	call   c1f0 <get_count_words>
    5af2:	48 83 f8 03          	cmp    rax,0x3
    5af6:	75 bc                	jne    5ab4 <try_add_sphere_to_world+0x34>
    5af8:	48 8b 7b 08          	mov    rdi,QWORD PTR [rbx+0x8]
    5afc:	48 8d b5 30 ff ff ff 	lea    rsi,[rbp-0xd0]
    5b03:	e8 b8 fd ff ff       	call   58c0 <try_parse_vector3>
    5b08:	84 c0                	test   al,al
    5b0a:	74 a8                	je     5ab4 <try_add_sphere_to_world+0x34>
    5b0c:	48 8b 7b 10          	mov    rdi,QWORD PTR [rbx+0x10]
    5b10:	48 8d 75 c0          	lea    rsi,[rbp-0x40]
    5b14:	e8 f7 6d 00 00       	call   c910 <try_atof>
    5b19:	84 c0                	test   al,al
    5b1b:	74 97                	je     5ab4 <try_add_sphere_to_world+0x34>
    5b1d:	c5 fa 10 05 8b c6 00 	vmovss xmm0,DWORD PTR [rip+0xc68b]        # 121b0 <_IO_stdin_used+0x1b0>
    5b24:	00 
    5b25:	c5 f8 2f 45 c0       	vcomiss xmm0,DWORD PTR [rbp-0x40]
    5b2a:	77 88                	ja     5ab4 <try_add_sphere_to_world+0x34>
    5b2c:	48 8b 7b 18          	mov    rdi,QWORD PTR [rbx+0x18]
    5b30:	48 8d b5 40 ff ff ff 	lea    rsi,[rbp-0xc0]
    5b37:	e8 f4 fd ff ff       	call   5930 <try_parse_color>
    5b3c:	41 89 c4             	mov    r12d,eax
    5b3f:	84 c0                	test   al,al
    5b41:	0f 84 6d ff ff ff    	je     5ab4 <try_add_sphere_to_world+0x34>
    5b47:	c5 f1 ef c9          	vpxor  xmm1,xmm1,xmm1
    5b4b:	48 8d bd d0 fe ff ff 	lea    rdi,[rbp-0x130]
    5b52:	c5 f9 ef c0          	vpxor  xmm0,xmm0,xmm0
    5b56:	c5 f9 7f 8d 20 ff ff 	vmovdqa XMMWORD PTR [rbp-0xe0],xmm1
    5b5d:	ff 
    5b5e:	c7 85 28 ff ff ff 00 	mov    DWORD PTR [rbp-0xd8],0x3f800000
    5b65:	00 80 3f 
    5b68:	c5 fa 7e 8d 28 ff ff 	vmovq  xmm1,QWORD PTR [rbp-0xd8]
    5b6f:	ff 
    5b70:	e8 cb 3c 00 00       	call   9840 <get_local_basis>
    5b75:	49 8b 85 38 01 00 00 	mov    rax,QWORD PTR [r13+0x138]
    5b7c:	ff 75 c8             	push   QWORD PTR [rbp-0x38]
    5b7f:	c5 f9 6f 9d d0 fe ff 	vmovdqa xmm3,XMMWORD PTR [rbp-0x130]
    5b86:	ff 
    5b87:	ff 75 c0             	push   QWORD PTR [rbp-0x40]
    5b8a:	c5 f9 6f a5 e0 fe ff 	vmovdqa xmm4,XMMWORD PTR [rbp-0x120]
    5b91:	ff 
    5b92:	ff 75 b8             	push   QWORD PTR [rbp-0x48]
    5b95:	c5 f9 6f 95 f0 fe ff 	vmovdqa xmm2,XMMWORD PTR [rbp-0x110]
    5b9c:	ff 
    5b9d:	ff 75 b0             	push   QWORD PTR [rbp-0x50]
    5ba0:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    5ba4:	ff 75 a8             	push   QWORD PTR [rbp-0x58]
    5ba7:	c7 45 80 00 00 00 00 	mov    DWORD PTR [rbp-0x80],0x0
    5bae:	ff 75 a0             	push   QWORD PTR [rbp-0x60]
    5bb1:	ff 75 98             	push   QWORD PTR [rbp-0x68]
    5bb4:	ff 75 90             	push   QWORD PTR [rbp-0x70]
    5bb7:	ff 75 88             	push   QWORD PTR [rbp-0x78]
    5bba:	ff 75 80             	push   QWORD PTR [rbp-0x80]
    5bbd:	c5 f9 7f 9d 50 ff ff 	vmovdqa XMMWORD PTR [rbp-0xb0],xmm3
    5bc4:	ff 
    5bc5:	c5 f9 7f a5 60 ff ff 	vmovdqa XMMWORD PTR [rbp-0xa0],xmm4
    5bcc:	ff 
    5bcd:	48 83 ec 30          	sub    rsp,0x30
    5bd1:	c5 f9 7f 95 70 ff ff 	vmovdqa XMMWORD PTR [rbp-0x90],xmm2
    5bd8:	ff 
    5bd9:	c5 fa 7f 54 24 20    	vmovdqu XMMWORD PTR [rsp+0x20],xmm2
    5bdf:	c5 fa 7f 64 24 10    	vmovdqu XMMWORD PTR [rsp+0x10],xmm4
    5be5:	c5 fa 7f 1c 24       	vmovdqu XMMWORD PTR [rsp],xmm3
    5bea:	ff b5 48 ff ff ff    	push   QWORD PTR [rbp-0xb8]
    5bf0:	ff b5 40 ff ff ff    	push   QWORD PTR [rbp-0xc0]
    5bf6:	ff b5 38 ff ff ff    	push   QWORD PTR [rbp-0xc8]
    5bfc:	ff b5 30 ff ff ff    	push   QWORD PTR [rbp-0xd0]
    5c02:	e8 a9 45 00 00       	call   a1b0 <copy_construction_to_sphere>
    5c07:	48 81 c4 a0 00 00 00 	add    rsp,0xa0
    5c0e:	48 8d b5 18 ff ff ff 	lea    rsi,[rbp-0xe8]
    5c15:	49 8d bd d8 00 00 00 	lea    rdi,[r13+0xd8]
    5c1c:	48 89 85 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rax
    5c23:	41 ff 95 00 01 00 00 	call   QWORD PTR [r13+0x100]
    5c2a:	e9 88 fe ff ff       	jmp    5ab7 <try_add_sphere_to_world+0x37>
    5c2f:	90                   	nop

0000000000005c30 <try_add_plane_to_world>:
    5c30:	f3 0f 1e fa          	endbr64 
    5c34:	4c 8d 54 24 08       	lea    r10,[rsp+0x8]
    5c39:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    5c3d:	41 ff 72 f8          	push   QWORD PTR [r10-0x8]
    5c41:	55                   	push   rbp
    5c42:	48 89 e5             	mov    rbp,rsp
    5c45:	41 56                	push   r14
    5c47:	41 55                	push   r13
    5c49:	41 54                	push   r12
    5c4b:	49 89 f4             	mov    r12,rsi
    5c4e:	41 52                	push   r10
    5c50:	53                   	push   rbx
    5c51:	48 89 fb             	mov    rbx,rdi
    5c54:	48 81 ec 08 01 00 00 	sub    rsp,0x108
    5c5b:	e8 50 66 00 00       	call   c2b0 <get_count_to_words>
    5c60:	48 83 f8 04          	cmp    rax,0x4
    5c64:	74 1a                	je     5c80 <try_add_plane_to_world+0x50>
    5c66:	45 31 ed             	xor    r13d,r13d
    5c69:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    5c6d:	44 89 e8             	mov    eax,r13d
    5c70:	5b                   	pop    rbx
    5c71:	5a                   	pop    rdx
    5c72:	41 5c                	pop    r12
    5c74:	41 5d                	pop    r13
    5c76:	41 5e                	pop    r14
    5c78:	5d                   	pop    rbp
    5c79:	48 8d 62 f8          	lea    rsp,[rdx-0x8]
    5c7d:	c3                   	ret    
    5c7e:	66 90                	xchg   ax,ax
    5c80:	48 8b 7b 08          	mov    rdi,QWORD PTR [rbx+0x8]
    5c84:	be 2c 00 00 00       	mov    esi,0x2c
    5c89:	e8 62 65 00 00       	call   c1f0 <get_count_words>
    5c8e:	48 83 f8 03          	cmp    rax,0x3
    5c92:	75 d2                	jne    5c66 <try_add_plane_to_world+0x36>
    5c94:	48 8b 7b 10          	mov    rdi,QWORD PTR [rbx+0x10]
    5c98:	be 2c 00 00 00       	mov    esi,0x2c
    5c9d:	e8 4e 65 00 00       	call   c1f0 <get_count_words>
    5ca2:	48 83 f8 03          	cmp    rax,0x3
    5ca6:	75 be                	jne    5c66 <try_add_plane_to_world+0x36>
    5ca8:	48 8b 7b 18          	mov    rdi,QWORD PTR [rbx+0x18]
    5cac:	be 2c 00 00 00       	mov    esi,0x2c
    5cb1:	e8 3a 65 00 00       	call   c1f0 <get_count_words>
    5cb6:	48 83 f8 03          	cmp    rax,0x3
    5cba:	75 aa                	jne    5c66 <try_add_plane_to_world+0x36>
    5cbc:	48 8b 7b 08          	mov    rdi,QWORD PTR [rbx+0x8]
    5cc0:	48 8d b5 40 ff ff ff 	lea    rsi,[rbp-0xc0]
    5cc7:	e8 f4 fb ff ff       	call   58c0 <try_parse_vector3>
    5ccc:	48 8b 7b 10          	mov    rdi,QWORD PTR [rbx+0x10]
    5cd0:	48 8d 75 80          	lea    rsi,[rbp-0x80]
    5cd4:	41 89 c5             	mov    r13d,eax
    5cd7:	e8 e4 fb ff ff       	call   58c0 <try_parse_vector3>
    5cdc:	48 8b 7b 18          	mov    rdi,QWORD PTR [rbx+0x18]
    5ce0:	48 8d b5 50 ff ff ff 	lea    rsi,[rbp-0xb0]
    5ce7:	41 89 c6             	mov    r14d,eax
    5cea:	e8 41 fc ff ff       	call   5930 <try_parse_color>
    5cef:	89 c3                	mov    ebx,eax
    5cf1:	45 84 ed             	test   r13b,r13b
    5cf4:	0f 84 6c ff ff ff    	je     5c66 <try_add_plane_to_world+0x36>
    5cfa:	45 84 f6             	test   r14b,r14b
    5cfd:	0f 84 63 ff ff ff    	je     5c66 <try_add_plane_to_world+0x36>
    5d03:	c5 fa 7e 45 80       	vmovq  xmm0,QWORD PTR [rbp-0x80]
    5d08:	c5 fa 7e 4d 88       	vmovq  xmm1,QWORD PTR [rbp-0x78]
    5d0d:	e8 be fc ff ff       	call   59d0 <is_invalid_normalized_vector3>
    5d12:	83 f0 01             	xor    eax,0x1
    5d15:	41 89 c5             	mov    r13d,eax
    5d18:	41 20 dd             	and    r13b,bl
    5d1b:	0f 84 45 ff ff ff    	je     5c66 <try_add_plane_to_world+0x36>
    5d21:	c5 fa 10 5d 84       	vmovss xmm3,DWORD PTR [rbp-0x7c]
    5d26:	c5 fa 10 4d 80       	vmovss xmm1,DWORD PTR [rbp-0x80]
    5d2b:	c5 d8 57 e4          	vxorps xmm4,xmm4,xmm4
    5d2f:	c5 fa 10 55 88       	vmovss xmm2,DWORD PTR [rbp-0x78]
    5d34:	c5 e2 59 c3          	vmulss xmm0,xmm3,xmm3
    5d38:	c4 e2 71 b9 c1       	vfmadd231ss xmm0,xmm1,xmm1
    5d3d:	c4 e2 69 b9 c2       	vfmadd231ss xmm0,xmm2,xmm2
    5d42:	c5 f8 2e e0          	vucomiss xmm4,xmm0
    5d46:	0f 87 e7 00 00 00    	ja     5e33 <try_add_plane_to_world+0x203>
    5d4c:	c5 fa 51 c0          	vsqrtss xmm0,xmm0,xmm0
    5d50:	c5 f2 5e e8          	vdivss xmm5,xmm1,xmm0
    5d54:	48 8d bd f0 fe ff ff 	lea    rdi,[rbp-0x110]
    5d5b:	c5 e2 5e f0          	vdivss xmm6,xmm3,xmm0
    5d5f:	c5 ea 5e c0          	vdivss xmm0,xmm2,xmm0
    5d63:	c5 d0 14 fe          	vunpcklps xmm7,xmm5,xmm6
    5d67:	c5 f8 13 7d 80       	vmovlps QWORD PTR [rbp-0x80],xmm7
    5d6c:	c5 fa 11 45 88       	vmovss DWORD PTR [rbp-0x78],xmm0
    5d71:	c5 fa 7e 4d 88       	vmovq  xmm1,QWORD PTR [rbp-0x78]
    5d76:	c5 f9 6f c7          	vmovdqa xmm0,xmm7
    5d7a:	e8 c1 3a 00 00       	call   9840 <get_local_basis>
    5d7f:	49 8b 84 24 38 01 00 	mov    rax,QWORD PTR [r12+0x138]
    5d86:	00 
    5d87:	ff 75 c8             	push   QWORD PTR [rbp-0x38]
    5d8a:	c5 79 6f 8d f0 fe ff 	vmovdqa xmm9,XMMWORD PTR [rbp-0x110]
    5d91:	ff 
    5d92:	ff 75 c0             	push   QWORD PTR [rbp-0x40]
    5d95:	c5 79 6f 95 00 ff ff 	vmovdqa xmm10,XMMWORD PTR [rbp-0x100]
    5d9c:	ff 
    5d9d:	ff 75 b8             	push   QWORD PTR [rbp-0x48]
    5da0:	c5 79 6f 9d 10 ff ff 	vmovdqa xmm11,XMMWORD PTR [rbp-0xf0]
    5da7:	ff 
    5da8:	ff 75 b0             	push   QWORD PTR [rbp-0x50]
    5dab:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
    5daf:	ff 75 a8             	push   QWORD PTR [rbp-0x58]
    5db2:	c7 45 90 00 00 00 00 	mov    DWORD PTR [rbp-0x70],0x0
    5db9:	ff 75 a0             	push   QWORD PTR [rbp-0x60]
    5dbc:	ff 75 98             	push   QWORD PTR [rbp-0x68]
    5dbf:	ff 75 90             	push   QWORD PTR [rbp-0x70]
    5dc2:	c5 79 7f 8d 60 ff ff 	vmovdqa XMMWORD PTR [rbp-0xa0],xmm9
    5dc9:	ff 
    5dca:	c5 79 7f 95 70 ff ff 	vmovdqa XMMWORD PTR [rbp-0x90],xmm10
    5dd1:	ff 
    5dd2:	48 83 ec 30          	sub    rsp,0x30
    5dd6:	c5 79 7f 5d 80       	vmovdqa XMMWORD PTR [rbp-0x80],xmm11
    5ddb:	c5 7a 7f 5c 24 20    	vmovdqu XMMWORD PTR [rsp+0x20],xmm11
    5de1:	c5 7a 7f 54 24 10    	vmovdqu XMMWORD PTR [rsp+0x10],xmm10
    5de7:	c5 7a 7f 0c 24       	vmovdqu XMMWORD PTR [rsp],xmm9
    5dec:	ff b5 58 ff ff ff    	push   QWORD PTR [rbp-0xa8]
    5df2:	ff b5 50 ff ff ff    	push   QWORD PTR [rbp-0xb0]
    5df8:	ff b5 48 ff ff ff    	push   QWORD PTR [rbp-0xb8]
    5dfe:	ff b5 40 ff ff ff    	push   QWORD PTR [rbp-0xc0]
    5e04:	e8 27 0c 00 00       	call   6a30 <copy_construction_to_plane>
    5e09:	48 81 c4 90 00 00 00 	add    rsp,0x90
    5e10:	48 8d b5 38 ff ff ff 	lea    rsi,[rbp-0xc8]
    5e17:	49 8d bc 24 d8 00 00 	lea    rdi,[r12+0xd8]
    5e1e:	00 
    5e1f:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    5e26:	41 ff 94 24 00 01 00 	call   QWORD PTR [r12+0x100]
    5e2d:	00 
    5e2e:	e9 36 fe ff ff       	jmp    5c69 <try_add_plane_to_world+0x39>
    5e33:	c5 fa 11 95 e4 fe ff 	vmovss DWORD PTR [rbp-0x11c],xmm2
    5e3a:	ff 
    5e3b:	c5 fa 11 9d e8 fe ff 	vmovss DWORD PTR [rbp-0x118],xmm3
    5e42:	ff 
    5e43:	c5 fa 11 8d ec fe ff 	vmovss DWORD PTR [rbp-0x114],xmm1
    5e4a:	ff 
    5e4b:	e8 40 cb ff ff       	call   2990 <sqrtf@plt>
    5e50:	c5 fa 10 95 e4 fe ff 	vmovss xmm2,DWORD PTR [rbp-0x11c]
    5e57:	ff 
    5e58:	c5 fa 10 9d e8 fe ff 	vmovss xmm3,DWORD PTR [rbp-0x118]
    5e5f:	ff 
    5e60:	c5 fa 10 8d ec fe ff 	vmovss xmm1,DWORD PTR [rbp-0x114]
    5e67:	ff 
    5e68:	e9 e3 fe ff ff       	jmp    5d50 <try_add_plane_to_world+0x120>
    5e6d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000005e70 <is_invalid_value_in_plane>:
    5e70:	f3 0f 1e fa          	endbr64 
    5e74:	41 55                	push   r13
    5e76:	41 54                	push   r12
    5e78:	55                   	push   rbp
    5e79:	48 89 fd             	mov    rbp,rdi
    5e7c:	53                   	push   rbx
    5e7d:	48 89 f3             	mov    rbx,rsi
    5e80:	48 83 ec 08          	sub    rsp,0x8
    5e84:	48 8b 7f 08          	mov    rdi,QWORD PTR [rdi+0x8]
    5e88:	e8 33 fa ff ff       	call   58c0 <try_parse_vector3>
    5e8d:	48 8b 7d 10          	mov    rdi,QWORD PTR [rbp+0x10]
    5e91:	48 8d 73 40          	lea    rsi,[rbx+0x40]
    5e95:	41 89 c4             	mov    r12d,eax
    5e98:	e8 23 fa ff ff       	call   58c0 <try_parse_vector3>
    5e9d:	48 8b 7d 18          	mov    rdi,QWORD PTR [rbp+0x18]
    5ea1:	48 8d 73 10          	lea    rsi,[rbx+0x10]
    5ea5:	41 89 c5             	mov    r13d,eax
    5ea8:	e8 83 fa ff ff       	call   5930 <try_parse_color>
    5ead:	45 84 e4             	test   r12b,r12b
    5eb0:	74 05                	je     5eb7 <is_invalid_value_in_plane+0x47>
    5eb2:	45 84 ed             	test   r13b,r13b
    5eb5:	75 19                	jne    5ed0 <is_invalid_value_in_plane+0x60>
    5eb7:	48 83 c4 08          	add    rsp,0x8
    5ebb:	b8 01 00 00 00       	mov    eax,0x1
    5ec0:	5b                   	pop    rbx
    5ec1:	5d                   	pop    rbp
    5ec2:	41 5c                	pop    r12
    5ec4:	41 5d                	pop    r13
    5ec6:	c3                   	ret    
    5ec7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    5ece:	00 00 
    5ed0:	c5 fa 7e 43 40       	vmovq  xmm0,QWORD PTR [rbx+0x40]
    5ed5:	c5 fa 7e 4b 48       	vmovq  xmm1,QWORD PTR [rbx+0x48]
    5eda:	89 c5                	mov    ebp,eax
    5edc:	e8 ef fa ff ff       	call   59d0 <is_invalid_normalized_vector3>
    5ee1:	48 83 c4 08          	add    rsp,0x8
    5ee5:	41 89 c0             	mov    r8d,eax
    5ee8:	89 e8                	mov    eax,ebp
    5eea:	5b                   	pop    rbx
    5eeb:	5d                   	pop    rbp
    5eec:	83 f0 01             	xor    eax,0x1
    5eef:	41 5c                	pop    r12
    5ef1:	41 5d                	pop    r13
    5ef3:	44 09 c0             	or     eax,r8d
    5ef6:	c3                   	ret    
    5ef7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    5efe:	00 00 

0000000000005f00 <is_invalid_value_in_cylinder>:
    5f00:	f3 0f 1e fa          	endbr64 
    5f04:	55                   	push   rbp
    5f05:	48 89 fd             	mov    rbp,rdi
    5f08:	53                   	push   rbx
    5f09:	48 89 f3             	mov    rbx,rsi
    5f0c:	48 83 ec 08          	sub    rsp,0x8
    5f10:	48 8b 7f 08          	mov    rdi,QWORD PTR [rdi+0x8]
    5f14:	e8 a7 f9 ff ff       	call   58c0 <try_parse_vector3>
    5f19:	84 c0                	test   al,al
    5f1b:	75 13                	jne    5f30 <is_invalid_value_in_cylinder+0x30>
    5f1d:	b8 01 00 00 00       	mov    eax,0x1
    5f22:	48 83 c4 08          	add    rsp,0x8
    5f26:	5b                   	pop    rbx
    5f27:	5d                   	pop    rbp
    5f28:	c3                   	ret    
    5f29:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    5f30:	48 8b 7d 10          	mov    rdi,QWORD PTR [rbp+0x10]
    5f34:	48 8d 73 40          	lea    rsi,[rbx+0x40]
    5f38:	e8 83 f9 ff ff       	call   58c0 <try_parse_vector3>
    5f3d:	84 c0                	test   al,al
    5f3f:	74 dc                	je     5f1d <is_invalid_value_in_cylinder+0x1d>
    5f41:	c5 fa 7e 43 40       	vmovq  xmm0,QWORD PTR [rbx+0x40]
    5f46:	c5 fa 7e 4b 48       	vmovq  xmm1,QWORD PTR [rbx+0x48]
    5f4b:	e8 80 fa ff ff       	call   59d0 <is_invalid_normalized_vector3>
    5f50:	84 c0                	test   al,al
    5f52:	75 c9                	jne    5f1d <is_invalid_value_in_cylinder+0x1d>
    5f54:	48 8b 7d 18          	mov    rdi,QWORD PTR [rbp+0x18]
    5f58:	48 8d b3 90 00 00 00 	lea    rsi,[rbx+0x90]
    5f5f:	e8 ac 69 00 00       	call   c910 <try_atof>
    5f64:	84 c0                	test   al,al
    5f66:	74 b5                	je     5f1d <is_invalid_value_in_cylinder+0x1d>
    5f68:	c5 fa 10 15 40 c2 00 	vmovss xmm2,DWORD PTR [rip+0xc240]        # 121b0 <_IO_stdin_used+0x1b0>
    5f6f:	00 
    5f70:	c5 f8 2f 93 90 00 00 	vcomiss xmm2,DWORD PTR [rbx+0x90]
    5f77:	00 
    5f78:	77 a3                	ja     5f1d <is_invalid_value_in_cylinder+0x1d>
    5f7a:	48 8b 7d 20          	mov    rdi,QWORD PTR [rbp+0x20]
    5f7e:	48 8d b3 94 00 00 00 	lea    rsi,[rbx+0x94]
    5f85:	e8 86 69 00 00       	call   c910 <try_atof>
    5f8a:	84 c0                	test   al,al
    5f8c:	74 8f                	je     5f1d <is_invalid_value_in_cylinder+0x1d>
    5f8e:	c5 fa 10 1d 1a c2 00 	vmovss xmm3,DWORD PTR [rip+0xc21a]        # 121b0 <_IO_stdin_used+0x1b0>
    5f95:	00 
    5f96:	c5 f8 2f 9b 94 00 00 	vcomiss xmm3,DWORD PTR [rbx+0x94]
    5f9d:	00 
    5f9e:	0f 87 79 ff ff ff    	ja     5f1d <is_invalid_value_in_cylinder+0x1d>
    5fa4:	48 8b 7d 28          	mov    rdi,QWORD PTR [rbp+0x28]
    5fa8:	48 8d 73 10          	lea    rsi,[rbx+0x10]
    5fac:	e8 7f f9 ff ff       	call   5930 <try_parse_color>
    5fb1:	83 f0 01             	xor    eax,0x1
    5fb4:	e9 69 ff ff ff       	jmp    5f22 <is_invalid_value_in_cylinder+0x22>
    5fb9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000005fc0 <try_add_cylinder_to_world>:
    5fc0:	f3 0f 1e fa          	endbr64 
    5fc4:	4c 8d 54 24 08       	lea    r10,[rsp+0x8]
    5fc9:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    5fcd:	41 ff 72 f8          	push   QWORD PTR [r10-0x8]
    5fd1:	55                   	push   rbp
    5fd2:	48 89 e5             	mov    rbp,rsp
    5fd5:	41 54                	push   r12
    5fd7:	49 89 fc             	mov    r12,rdi
    5fda:	41 52                	push   r10
    5fdc:	53                   	push   rbx
    5fdd:	48 89 f3             	mov    rbx,rsi
    5fe0:	48 81 ec 38 01 00 00 	sub    rsp,0x138
    5fe7:	e8 c4 62 00 00       	call   c2b0 <get_count_to_words>
    5fec:	48 83 f8 06          	cmp    rax,0x6
    5ff0:	74 16                	je     6008 <try_add_cylinder_to_world+0x48>
    5ff2:	48 8d 65 e8          	lea    rsp,[rbp-0x18]
    5ff6:	31 c0                	xor    eax,eax
    5ff8:	5b                   	pop    rbx
    5ff9:	5a                   	pop    rdx
    5ffa:	41 5c                	pop    r12
    5ffc:	5d                   	pop    rbp
    5ffd:	48 8d 62 f8          	lea    rsp,[rdx-0x8]
    6001:	c3                   	ret    
    6002:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    6008:	49 8b 7c 24 08       	mov    rdi,QWORD PTR [r12+0x8]
    600d:	be 2c 00 00 00       	mov    esi,0x2c
    6012:	e8 d9 61 00 00       	call   c1f0 <get_count_words>
    6017:	48 83 f8 03          	cmp    rax,0x3
    601b:	75 d5                	jne    5ff2 <try_add_cylinder_to_world+0x32>
    601d:	49 8b 7c 24 10       	mov    rdi,QWORD PTR [r12+0x10]
    6022:	be 2c 00 00 00       	mov    esi,0x2c
    6027:	e8 c4 61 00 00       	call   c1f0 <get_count_words>
    602c:	48 83 f8 03          	cmp    rax,0x3
    6030:	75 c0                	jne    5ff2 <try_add_cylinder_to_world+0x32>
    6032:	49 8b 7c 24 28       	mov    rdi,QWORD PTR [r12+0x28]
    6037:	be 2c 00 00 00       	mov    esi,0x2c
    603c:	e8 af 61 00 00       	call   c1f0 <get_count_words>
    6041:	48 83 f8 03          	cmp    rax,0x3
    6045:	75 ab                	jne    5ff2 <try_add_cylinder_to_world+0x32>
    6047:	48 8d b5 30 ff ff ff 	lea    rsi,[rbp-0xd0]
    604e:	4c 89 e7             	mov    rdi,r12
    6051:	e8 aa fe ff ff       	call   5f00 <is_invalid_value_in_cylinder>
    6056:	84 c0                	test   al,al
    6058:	75 98                	jne    5ff2 <try_add_cylinder_to_world+0x32>
    605a:	c5 fa 10 9d 74 ff ff 	vmovss xmm3,DWORD PTR [rbp-0x8c]
    6061:	ff 
    6062:	c5 fa 10 8d 70 ff ff 	vmovss xmm1,DWORD PTR [rbp-0x90]
    6069:	ff 
    606a:	c5 d8 57 e4          	vxorps xmm4,xmm4,xmm4
    606e:	c5 fa 10 95 78 ff ff 	vmovss xmm2,DWORD PTR [rbp-0x88]
    6075:	ff 
    6076:	c5 e2 59 c3          	vmulss xmm0,xmm3,xmm3
    607a:	c4 e2 71 b9 c1       	vfmadd231ss xmm0,xmm1,xmm1
    607f:	c4 e2 69 b9 c2       	vfmadd231ss xmm0,xmm2,xmm2
    6084:	c5 f8 2e e0          	vucomiss xmm4,xmm0
    6088:	0f 87 03 01 00 00    	ja     6191 <try_add_cylinder_to_world+0x1d1>
    608e:	c5 fa 51 c0          	vsqrtss xmm0,xmm0,xmm0
    6092:	c5 f2 5e e8          	vdivss xmm5,xmm1,xmm0
    6096:	48 8d bd d0 fe ff ff 	lea    rdi,[rbp-0x130]
    609d:	c5 e2 5e f0          	vdivss xmm6,xmm3,xmm0
    60a1:	c5 ea 5e c0          	vdivss xmm0,xmm2,xmm0
    60a5:	c5 d0 14 fe          	vunpcklps xmm7,xmm5,xmm6
    60a9:	c5 f8 13 bd 70 ff ff 	vmovlps QWORD PTR [rbp-0x90],xmm7
    60b0:	ff 
    60b1:	c5 fa 11 85 78 ff ff 	vmovss DWORD PTR [rbp-0x88],xmm0
    60b8:	ff 
    60b9:	c5 fa 7e 8d 78 ff ff 	vmovq  xmm1,QWORD PTR [rbp-0x88]
    60c0:	ff 
    60c1:	c5 f9 6f c7          	vmovdqa xmm0,xmm7
    60c5:	e8 76 37 00 00       	call   9840 <get_local_basis>
    60ca:	48 8b 83 38 01 00 00 	mov    rax,QWORD PTR [rbx+0x138]
    60d1:	ff 75 c8             	push   QWORD PTR [rbp-0x38]
    60d4:	c5 79 6f 8d d0 fe ff 	vmovdqa xmm9,XMMWORD PTR [rbp-0x130]
    60db:	ff 
    60dc:	ff 75 c0             	push   QWORD PTR [rbp-0x40]
    60df:	c5 79 6f 95 e0 fe ff 	vmovdqa xmm10,XMMWORD PTR [rbp-0x120]
    60e6:	ff 
    60e7:	ff 75 b8             	push   QWORD PTR [rbp-0x48]
    60ea:	c5 79 6f 9d f0 fe ff 	vmovdqa xmm11,XMMWORD PTR [rbp-0x110]
    60f1:	ff 
    60f2:	ff 75 b0             	push   QWORD PTR [rbp-0x50]
    60f5:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    60f9:	ff 75 a8             	push   QWORD PTR [rbp-0x58]
    60fc:	c7 45 80 00 00 00 00 	mov    DWORD PTR [rbp-0x80],0x0
    6103:	ff 75 a0             	push   QWORD PTR [rbp-0x60]
    6106:	ff 75 98             	push   QWORD PTR [rbp-0x68]
    6109:	ff 75 90             	push   QWORD PTR [rbp-0x70]
    610c:	ff 75 88             	push   QWORD PTR [rbp-0x78]
    610f:	ff 75 80             	push   QWORD PTR [rbp-0x80]
    6112:	c5 79 7f 8d 50 ff ff 	vmovdqa XMMWORD PTR [rbp-0xb0],xmm9
    6119:	ff 
    611a:	c5 79 7f 95 60 ff ff 	vmovdqa XMMWORD PTR [rbp-0xa0],xmm10
    6121:	ff 
    6122:	48 83 ec 30          	sub    rsp,0x30
    6126:	c5 79 7f 9d 70 ff ff 	vmovdqa XMMWORD PTR [rbp-0x90],xmm11
    612d:	ff 
    612e:	c5 7a 7f 5c 24 20    	vmovdqu XMMWORD PTR [rsp+0x20],xmm11
    6134:	c5 7a 7f 54 24 10    	vmovdqu XMMWORD PTR [rsp+0x10],xmm10
    613a:	c5 7a 7f 0c 24       	vmovdqu XMMWORD PTR [rsp],xmm9
    613f:	ff b5 48 ff ff ff    	push   QWORD PTR [rbp-0xb8]
    6145:	ff b5 40 ff ff ff    	push   QWORD PTR [rbp-0xc0]
    614b:	ff b5 38 ff ff ff    	push   QWORD PTR [rbp-0xc8]
    6151:	ff b5 30 ff ff ff    	push   QWORD PTR [rbp-0xd0]
    6157:	e8 c4 ec ff ff       	call   4e20 <copy_construction_to_cylinder>
    615c:	48 81 c4 a0 00 00 00 	add    rsp,0xa0
    6163:	48 8d b5 28 ff ff ff 	lea    rsi,[rbp-0xd8]
    616a:	48 8d bb d8 00 00 00 	lea    rdi,[rbx+0xd8]
    6171:	48 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rax
    6178:	ff 93 00 01 00 00    	call   QWORD PTR [rbx+0x100]
    617e:	48 8d 65 e8          	lea    rsp,[rbp-0x18]
    6182:	b8 01 00 00 00       	mov    eax,0x1
    6187:	5b                   	pop    rbx
    6188:	5a                   	pop    rdx
    6189:	41 5c                	pop    r12
    618b:	5d                   	pop    rbp
    618c:	48 8d 62 f8          	lea    rsp,[rdx-0x8]
    6190:	c3                   	ret    
    6191:	c5 fa 11 95 c4 fe ff 	vmovss DWORD PTR [rbp-0x13c],xmm2
    6198:	ff 
    6199:	c5 fa 11 9d c8 fe ff 	vmovss DWORD PTR [rbp-0x138],xmm3
    61a0:	ff 
    61a1:	c5 fa 11 8d cc fe ff 	vmovss DWORD PTR [rbp-0x134],xmm1
    61a8:	ff 
    61a9:	e8 e2 c7 ff ff       	call   2990 <sqrtf@plt>
    61ae:	c5 fa 10 95 c4 fe ff 	vmovss xmm2,DWORD PTR [rbp-0x13c]
    61b5:	ff 
    61b6:	c5 fa 10 9d c8 fe ff 	vmovss xmm3,DWORD PTR [rbp-0x138]
    61bd:	ff 
    61be:	c5 fa 10 8d cc fe ff 	vmovss xmm1,DWORD PTR [rbp-0x134]
    61c5:	ff 
    61c6:	e9 c7 fe ff ff       	jmp    6092 <try_add_cylinder_to_world+0xd2>
    61cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000061d0 <is_invalid_value_in_cone>:
    61d0:	f3 0f 1e fa          	endbr64 
    61d4:	55                   	push   rbp
    61d5:	48 89 fd             	mov    rbp,rdi
    61d8:	53                   	push   rbx
    61d9:	48 89 f3             	mov    rbx,rsi
    61dc:	48 83 ec 08          	sub    rsp,0x8
    61e0:	48 8b 7f 08          	mov    rdi,QWORD PTR [rdi+0x8]
    61e4:	e8 d7 f6 ff ff       	call   58c0 <try_parse_vector3>
    61e9:	84 c0                	test   al,al
    61eb:	75 13                	jne    6200 <is_invalid_value_in_cone+0x30>
    61ed:	b8 01 00 00 00       	mov    eax,0x1
    61f2:	48 83 c4 08          	add    rsp,0x8
    61f6:	5b                   	pop    rbx
    61f7:	5d                   	pop    rbp
    61f8:	c3                   	ret    
    61f9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    6200:	48 8b 7d 10          	mov    rdi,QWORD PTR [rbp+0x10]
    6204:	48 8d 73 40          	lea    rsi,[rbx+0x40]
    6208:	e8 b3 f6 ff ff       	call   58c0 <try_parse_vector3>
    620d:	84 c0                	test   al,al
    620f:	74 dc                	je     61ed <is_invalid_value_in_cone+0x1d>
    6211:	c5 fa 7e 43 40       	vmovq  xmm0,QWORD PTR [rbx+0x40]
    6216:	c5 fa 7e 4b 48       	vmovq  xmm1,QWORD PTR [rbx+0x48]
    621b:	e8 b0 f7 ff ff       	call   59d0 <is_invalid_normalized_vector3>
    6220:	84 c0                	test   al,al
    6222:	75 c9                	jne    61ed <is_invalid_value_in_cone+0x1d>
    6224:	48 8b 7d 18          	mov    rdi,QWORD PTR [rbp+0x18]
    6228:	48 8d b3 90 00 00 00 	lea    rsi,[rbx+0x90]
    622f:	e8 dc 66 00 00       	call   c910 <try_atof>
    6234:	84 c0                	test   al,al
    6236:	74 b5                	je     61ed <is_invalid_value_in_cone+0x1d>
    6238:	c5 fa 10 15 70 bf 00 	vmovss xmm2,DWORD PTR [rip+0xbf70]        # 121b0 <_IO_stdin_used+0x1b0>
    623f:	00 
    6240:	c5 f8 2f 93 90 00 00 	vcomiss xmm2,DWORD PTR [rbx+0x90]
    6247:	00 
    6248:	77 a3                	ja     61ed <is_invalid_value_in_cone+0x1d>
    624a:	48 8b 7d 20          	mov    rdi,QWORD PTR [rbp+0x20]
    624e:	48 8d b3 94 00 00 00 	lea    rsi,[rbx+0x94]
    6255:	e8 b6 66 00 00       	call   c910 <try_atof>
    625a:	84 c0                	test   al,al
    625c:	74 8f                	je     61ed <is_invalid_value_in_cone+0x1d>
    625e:	c5 fa 10 1d 4a bf 00 	vmovss xmm3,DWORD PTR [rip+0xbf4a]        # 121b0 <_IO_stdin_used+0x1b0>
    6265:	00 
    6266:	c5 f8 2f 9b 94 00 00 	vcomiss xmm3,DWORD PTR [rbx+0x94]
    626d:	00 
    626e:	0f 87 79 ff ff ff    	ja     61ed <is_invalid_value_in_cone+0x1d>
    6274:	48 8b 7d 28          	mov    rdi,QWORD PTR [rbp+0x28]
    6278:	48 8d 73 10          	lea    rsi,[rbx+0x10]
    627c:	e8 af f6 ff ff       	call   5930 <try_parse_color>
    6281:	83 f0 01             	xor    eax,0x1
    6284:	e9 69 ff ff ff       	jmp    61f2 <is_invalid_value_in_cone+0x22>
    6289:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000006290 <try_add_cone_to_world>:
    6290:	f3 0f 1e fa          	endbr64 
    6294:	4c 8d 54 24 08       	lea    r10,[rsp+0x8]
    6299:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    629d:	41 ff 72 f8          	push   QWORD PTR [r10-0x8]
    62a1:	55                   	push   rbp
    62a2:	48 89 e5             	mov    rbp,rsp
    62a5:	41 54                	push   r12
    62a7:	49 89 fc             	mov    r12,rdi
    62aa:	41 52                	push   r10
    62ac:	53                   	push   rbx
    62ad:	48 89 f3             	mov    rbx,rsi
    62b0:	48 81 ec 38 01 00 00 	sub    rsp,0x138
    62b7:	e8 f4 5f 00 00       	call   c2b0 <get_count_to_words>
    62bc:	48 83 f8 06          	cmp    rax,0x6
    62c0:	74 16                	je     62d8 <try_add_cone_to_world+0x48>
    62c2:	48 8d 65 e8          	lea    rsp,[rbp-0x18]
    62c6:	31 c0                	xor    eax,eax
    62c8:	5b                   	pop    rbx
    62c9:	5a                   	pop    rdx
    62ca:	41 5c                	pop    r12
    62cc:	5d                   	pop    rbp
    62cd:	48 8d 62 f8          	lea    rsp,[rdx-0x8]
    62d1:	c3                   	ret    
    62d2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    62d8:	49 8b 7c 24 08       	mov    rdi,QWORD PTR [r12+0x8]
    62dd:	be 2c 00 00 00       	mov    esi,0x2c
    62e2:	e8 09 5f 00 00       	call   c1f0 <get_count_words>
    62e7:	48 83 f8 03          	cmp    rax,0x3
    62eb:	75 d5                	jne    62c2 <try_add_cone_to_world+0x32>
    62ed:	49 8b 7c 24 10       	mov    rdi,QWORD PTR [r12+0x10]
    62f2:	be 2c 00 00 00       	mov    esi,0x2c
    62f7:	e8 f4 5e 00 00       	call   c1f0 <get_count_words>
    62fc:	48 83 f8 03          	cmp    rax,0x3
    6300:	75 c0                	jne    62c2 <try_add_cone_to_world+0x32>
    6302:	49 8b 7c 24 28       	mov    rdi,QWORD PTR [r12+0x28]
    6307:	be 2c 00 00 00       	mov    esi,0x2c
    630c:	e8 df 5e 00 00       	call   c1f0 <get_count_words>
    6311:	48 83 f8 03          	cmp    rax,0x3
    6315:	75 ab                	jne    62c2 <try_add_cone_to_world+0x32>
    6317:	48 8d b5 30 ff ff ff 	lea    rsi,[rbp-0xd0]
    631e:	4c 89 e7             	mov    rdi,r12
    6321:	e8 aa fe ff ff       	call   61d0 <is_invalid_value_in_cone>
    6326:	84 c0                	test   al,al
    6328:	75 98                	jne    62c2 <try_add_cone_to_world+0x32>
    632a:	c5 fa 10 9d 74 ff ff 	vmovss xmm3,DWORD PTR [rbp-0x8c]
    6331:	ff 
    6332:	c5 fa 10 8d 70 ff ff 	vmovss xmm1,DWORD PTR [rbp-0x90]
    6339:	ff 
    633a:	c5 d8 57 e4          	vxorps xmm4,xmm4,xmm4
    633e:	c5 fa 10 95 78 ff ff 	vmovss xmm2,DWORD PTR [rbp-0x88]
    6345:	ff 
    6346:	c5 e2 59 c3          	vmulss xmm0,xmm3,xmm3
    634a:	c4 e2 71 b9 c1       	vfmadd231ss xmm0,xmm1,xmm1
    634f:	c4 e2 69 b9 c2       	vfmadd231ss xmm0,xmm2,xmm2
    6354:	c5 f8 2e e0          	vucomiss xmm4,xmm0
    6358:	0f 87 03 01 00 00    	ja     6461 <try_add_cone_to_world+0x1d1>
    635e:	c5 fa 51 c0          	vsqrtss xmm0,xmm0,xmm0
    6362:	c5 f2 5e e8          	vdivss xmm5,xmm1,xmm0
    6366:	48 8d bd d0 fe ff ff 	lea    rdi,[rbp-0x130]
    636d:	c5 e2 5e f0          	vdivss xmm6,xmm3,xmm0
    6371:	c5 ea 5e c0          	vdivss xmm0,xmm2,xmm0
    6375:	c5 d0 14 fe          	vunpcklps xmm7,xmm5,xmm6
    6379:	c5 f8 13 bd 70 ff ff 	vmovlps QWORD PTR [rbp-0x90],xmm7
    6380:	ff 
    6381:	c5 fa 11 85 78 ff ff 	vmovss DWORD PTR [rbp-0x88],xmm0
    6388:	ff 
    6389:	c5 fa 7e 8d 78 ff ff 	vmovq  xmm1,QWORD PTR [rbp-0x88]
    6390:	ff 
    6391:	c5 f9 6f c7          	vmovdqa xmm0,xmm7
    6395:	e8 a6 34 00 00       	call   9840 <get_local_basis>
    639a:	48 8b 83 38 01 00 00 	mov    rax,QWORD PTR [rbx+0x138]
    63a1:	ff 75 c8             	push   QWORD PTR [rbp-0x38]
    63a4:	c5 79 6f 8d d0 fe ff 	vmovdqa xmm9,XMMWORD PTR [rbp-0x130]
    63ab:	ff 
    63ac:	ff 75 c0             	push   QWORD PTR [rbp-0x40]
    63af:	c5 79 6f 95 e0 fe ff 	vmovdqa xmm10,XMMWORD PTR [rbp-0x120]
    63b6:	ff 
    63b7:	ff 75 b8             	push   QWORD PTR [rbp-0x48]
    63ba:	c5 79 6f 9d f0 fe ff 	vmovdqa xmm11,XMMWORD PTR [rbp-0x110]
    63c1:	ff 
    63c2:	ff 75 b0             	push   QWORD PTR [rbp-0x50]
    63c5:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    63c9:	ff 75 a8             	push   QWORD PTR [rbp-0x58]
    63cc:	c7 45 80 00 00 00 00 	mov    DWORD PTR [rbp-0x80],0x0
    63d3:	ff 75 a0             	push   QWORD PTR [rbp-0x60]
    63d6:	ff 75 98             	push   QWORD PTR [rbp-0x68]
    63d9:	ff 75 90             	push   QWORD PTR [rbp-0x70]
    63dc:	ff 75 88             	push   QWORD PTR [rbp-0x78]
    63df:	ff 75 80             	push   QWORD PTR [rbp-0x80]
    63e2:	c5 79 7f 8d 50 ff ff 	vmovdqa XMMWORD PTR [rbp-0xb0],xmm9
    63e9:	ff 
    63ea:	c5 79 7f 95 60 ff ff 	vmovdqa XMMWORD PTR [rbp-0xa0],xmm10
    63f1:	ff 
    63f2:	48 83 ec 30          	sub    rsp,0x30
    63f6:	c5 79 7f 9d 70 ff ff 	vmovdqa XMMWORD PTR [rbp-0x90],xmm11
    63fd:	ff 
    63fe:	c5 7a 7f 5c 24 20    	vmovdqu XMMWORD PTR [rsp+0x20],xmm11
    6404:	c5 7a 7f 54 24 10    	vmovdqu XMMWORD PTR [rsp+0x10],xmm10
    640a:	c5 7a 7f 0c 24       	vmovdqu XMMWORD PTR [rsp],xmm9
    640f:	ff b5 48 ff ff ff    	push   QWORD PTR [rbp-0xb8]
    6415:	ff b5 40 ff ff ff    	push   QWORD PTR [rbp-0xc0]
    641b:	ff b5 38 ff ff ff    	push   QWORD PTR [rbp-0xc8]
    6421:	ff b5 30 ff ff ff    	push   QWORD PTR [rbp-0xd0]
    6427:	e8 a4 eb ff ff       	call   4fd0 <copy_construction_to_cone>
    642c:	48 81 c4 a0 00 00 00 	add    rsp,0xa0
    6433:	48 8d b5 28 ff ff ff 	lea    rsi,[rbp-0xd8]
    643a:	48 8d bb d8 00 00 00 	lea    rdi,[rbx+0xd8]
    6441:	48 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rax
    6448:	ff 93 00 01 00 00    	call   QWORD PTR [rbx+0x100]
    644e:	48 8d 65 e8          	lea    rsp,[rbp-0x18]
    6452:	b8 01 00 00 00       	mov    eax,0x1
    6457:	5b                   	pop    rbx
    6458:	5a                   	pop    rdx
    6459:	41 5c                	pop    r12
    645b:	5d                   	pop    rbp
    645c:	48 8d 62 f8          	lea    rsp,[rdx-0x8]
    6460:	c3                   	ret    
    6461:	c5 fa 11 95 c4 fe ff 	vmovss DWORD PTR [rbp-0x13c],xmm2
    6468:	ff 
    6469:	c5 fa 11 9d c8 fe ff 	vmovss DWORD PTR [rbp-0x138],xmm3
    6470:	ff 
    6471:	c5 fa 11 8d cc fe ff 	vmovss DWORD PTR [rbp-0x134],xmm1
    6478:	ff 
    6479:	e8 12 c5 ff ff       	call   2990 <sqrtf@plt>
    647e:	c5 fa 10 95 c4 fe ff 	vmovss xmm2,DWORD PTR [rbp-0x13c]
    6485:	ff 
    6486:	c5 fa 10 9d c8 fe ff 	vmovss xmm3,DWORD PTR [rbp-0x138]
    648d:	ff 
    648e:	c5 fa 10 8d cc fe ff 	vmovss xmm1,DWORD PTR [rbp-0x134]
    6495:	ff 
    6496:	e9 c7 fe ff ff       	jmp    6362 <try_add_cone_to_world+0xd2>
    649b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000064a0 <get_uv_coordinate_in_plane>:
    64a0:	f3 0f 1e fa          	endbr64 
    64a4:	c5 f9 d6 44 24 e8    	vmovq  QWORD PTR [rsp-0x18],xmm0
    64aa:	c5 fa 10 5c 24 ec    	vmovss xmm3,DWORD PTR [rsp-0x14]
    64b0:	c5 e2 5c 6f 04       	vsubss xmm5,xmm3,DWORD PTR [rdi+0x4]
    64b5:	c5 f9 d6 4c 24 f0    	vmovq  QWORD PTR [rsp-0x10],xmm1
    64bb:	c5 d2 59 7f 34       	vmulss xmm7,xmm5,DWORD PTR [rdi+0x34]
    64c0:	c5 fa 10 54 24 e8    	vmovss xmm2,DWORD PTR [rsp-0x18]
    64c6:	c5 d2 59 4f 24       	vmulss xmm1,xmm5,DWORD PTR [rdi+0x24]
    64cb:	c5 ea 5c 27          	vsubss xmm4,xmm2,DWORD PTR [rdi]
    64cf:	c4 e2 59 b9 4f 20    	vfmadd231ss xmm1,xmm4,DWORD PTR [rdi+0x20]
    64d5:	c4 e2 41 99 67 30    	vfmadd132ss xmm4,xmm7,DWORD PTR [rdi+0x30]
    64db:	c5 fa 10 44 24 f0    	vmovss xmm0,DWORD PTR [rsp-0x10]
    64e1:	c5 fa 5c 77 08       	vsubss xmm6,xmm0,DWORD PTR [rdi+0x8]
    64e6:	c4 e2 49 b9 4f 28    	vfmadd231ss xmm1,xmm6,DWORD PTR [rdi+0x28]
    64ec:	c4 e2 59 99 77 38    	vfmadd132ss xmm6,xmm4,DWORD PTR [rdi+0x38]
    64f2:	c5 7a 10 05 ba bc 00 	vmovss xmm8,DWORD PTR [rip+0xbcba]        # 121b4 <_IO_stdin_used+0x1b4>
    64f9:	00 
    64fa:	c4 41 72 5e c8       	vdivss xmm9,xmm1,xmm8
    64ff:	c4 41 4a 5e d0       	vdivss xmm10,xmm6,xmm8
    6504:	c4 c1 7a 2c c1       	vcvttss2si eax,xmm9
    6509:	89 c0                	mov    eax,eax
    650b:	c4 c1 7a 2c d2       	vcvttss2si edx,xmm10
    6510:	48 c1 e2 20          	shl    rdx,0x20
    6514:	48 09 d0             	or     rax,rdx
    6517:	31 d2                	xor    edx,edx
    6519:	c3                   	ret    
    651a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000006520 <delete_plane>:
    6520:	f3 0f 1e fa          	endbr64 
    6524:	e9 a7 c1 ff ff       	jmp    26d0 <free@plt>
    6529:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000006530 <is_hit_plane>:
    6530:	f3 0f 1e fa          	endbr64 
    6534:	41 54                	push   r12
    6536:	c4 41 08 57 f6       	vxorps xmm14,xmm14,xmm14
    653b:	55                   	push   rbp
    653c:	48 89 f5             	mov    rbp,rsi
    653f:	53                   	push   rbx
    6540:	48 89 fb             	mov    rbx,rdi
    6543:	48 81 ec 70 01 00 00 	sub    rsp,0x170
    654a:	c5 fa 10 7f 44       	vmovss xmm7,DWORD PTR [rdi+0x44]
    654f:	c5 7a 10 67 40       	vmovss xmm12,DWORD PTR [rdi+0x40]
    6554:	c5 7a 10 8c 24 a4 01 	vmovss xmm9,DWORD PTR [rsp+0x1a4]
    655b:	00 00 
    655d:	c5 fa 10 47 48       	vmovss xmm0,DWORD PTR [rdi+0x48]
    6562:	c5 fa 10 a4 24 a0 01 	vmovss xmm4,DWORD PTR [rsp+0x1a0]
    6569:	00 00 
    656b:	c5 f9 6f 77 40       	vmovdqa xmm6,XMMWORD PTR [rdi+0x40]
    6570:	c5 fa 10 ac 24 a8 01 	vmovss xmm5,DWORD PTR [rsp+0x1a8]
    6577:	00 00 
    6579:	c4 c1 42 59 c9       	vmulss xmm1,xmm7,xmm9
    657e:	c5 f9 7f 74 24 10    	vmovdqa XMMWORD PTR [rsp+0x10],xmm6
    6584:	c4 e2 19 b9 cc       	vfmadd231ss xmm1,xmm12,xmm4
    6589:	c4 e2 79 b9 cd       	vfmadd231ss xmm1,xmm0,xmm5
    658e:	c4 c1 78 2e ce       	vucomiss xmm1,xmm14
    6593:	7a 0b                	jp     65a0 <is_hit_plane+0x70>
    6595:	b8 00 00 00 00       	mov    eax,0x0
    659a:	0f 84 61 02 00 00    	je     6801 <is_hit_plane+0x2d1>
    65a0:	c5 7a 10 6b 08       	vmovss xmm13,DWORD PTR [rbx+0x8]
    65a5:	c5 fa 10 1b          	vmovss xmm3,DWORD PTR [rbx]
    65a9:	31 c0                	xor    eax,eax
    65ab:	c5 7a 10 84 24 90 01 	vmovss xmm8,DWORD PTR [rsp+0x190]
    65b2:	00 00 
    65b4:	c5 fa 10 53 04       	vmovss xmm2,DWORD PTR [rbx+0x4]
    65b9:	c5 7a 10 94 24 98 01 	vmovss xmm10,DWORD PTR [rsp+0x198]
    65c0:	00 00 
    65c2:	c5 7a 10 9c 24 94 01 	vmovss xmm11,DWORD PTR [rsp+0x194]
    65c9:	00 00 
    65cb:	c4 41 12 5c fa       	vsubss xmm15,xmm13,xmm10
    65d0:	c4 41 62 5c e8       	vsubss xmm13,xmm3,xmm8
    65d5:	c4 c1 6a 5c f3       	vsubss xmm6,xmm2,xmm11
    65da:	c4 41 12 59 e4       	vmulss xmm12,xmm13,xmm12
    65df:	c4 e2 19 99 f7       	vfmadd132ss xmm6,xmm12,xmm7
    65e4:	c4 c2 49 99 c7       	vfmadd132ss xmm0,xmm6,xmm15
    65e9:	c5 fa 5e f9          	vdivss xmm7,xmm0,xmm1
    65ed:	c5 78 2f f7          	vcomiss xmm14,xmm7
    65f1:	c5 c0 c6 c7 00       	vshufps xmm0,xmm7,xmm7,0x0
    65f6:	0f 83 05 02 00 00    	jae    6801 <is_hit_plane+0x2d1>
    65fc:	c5 f8 2f 7d 30       	vcomiss xmm7,DWORD PTR [rbp+0x30]
    6601:	0f 83 fa 01 00 00    	jae    6801 <is_hit_plane+0x2d1>
    6607:	c4 41 38 14 f3       	vunpcklps xmm14,xmm8,xmm11
    660c:	c4 c1 58 14 e1       	vunpcklps xmm4,xmm4,xmm9
    6611:	c5 79 6f 3b          	vmovdqa xmm15,XMMWORD PTR [rbx]
    6615:	c4 e3 29 21 8c 24 9c 	vinsertps xmm1,xmm10,DWORD PTR [rsp+0x19c],0x10
    661c:	01 00 00 10 
    6620:	c5 79 6f 6b 10       	vmovdqa xmm13,XMMWORD PTR [rbx+0x10]
    6625:	c5 79 6f 63 20       	vmovdqa xmm12,XMMWORD PTR [rbx+0x20]
    662a:	c5 fa 11 7d 30       	vmovss DWORD PTR [rbp+0x30],xmm7
    662f:	c5 08 16 c1          	vmovlhps xmm8,xmm14,xmm1
    6633:	c5 f9 6f 4b 50       	vmovdqa xmm1,XMMWORD PTR [rbx+0x50]
    6638:	c5 f9 6f 73 30       	vmovdqa xmm6,XMMWORD PTR [rbx+0x30]
    663d:	c5 79 7f bc 24 e0 00 	vmovdqa XMMWORD PTR [rsp+0xe0],xmm15
    6644:	00 00 
    6646:	c4 e3 51 21 ac 24 ac 	vinsertps xmm5,xmm5,DWORD PTR [rsp+0x1ac],0x10
    664d:	01 00 00 10 
    6651:	c5 f9 6f 7b 40       	vmovdqa xmm7,XMMWORD PTR [rbx+0x40]
    6656:	c5 79 7f ac 24 f0 00 	vmovdqa XMMWORD PTR [rsp+0xf0],xmm13
    665d:	00 00 
    665f:	c5 79 6f 73 60       	vmovdqa xmm14,XMMWORD PTR [rbx+0x60]
    6664:	c5 f9 6f 5b 70       	vmovdqa xmm3,XMMWORD PTR [rbx+0x70]
    6669:	c5 f9 7e c8          	vmovd  eax,xmm1
    666d:	c5 79 7f a4 24 00 01 	vmovdqa XMMWORD PTR [rsp+0x100],xmm12
    6674:	00 00 
    6676:	c5 58 16 cd          	vmovlhps xmm9,xmm4,xmm5
    667a:	c5 79 6f 5c 24 10    	vmovdqa xmm11,XMMWORD PTR [rsp+0x10]
    6680:	c5 f9 6f 93 80 00 00 	vmovdqa xmm2,XMMWORD PTR [rbx+0x80]
    6687:	00 
    6688:	c5 f9 7f b4 24 10 01 	vmovdqa XMMWORD PTR [rsp+0x110],xmm6
    668f:	00 00 
    6691:	c5 f9 7f bc 24 20 01 	vmovdqa XMMWORD PTR [rsp+0x120],xmm7
    6698:	00 00 
    669a:	c4 c2 39 98 c1       	vfmadd132ps xmm0,xmm8,xmm9
    669f:	c5 f9 7f 8c 24 30 01 	vmovdqa XMMWORD PTR [rsp+0x130],xmm1
    66a6:	00 00 
    66a8:	c5 79 7f b4 24 40 01 	vmovdqa XMMWORD PTR [rsp+0x140],xmm14
    66af:	00 00 
    66b1:	c5 f9 7f 9c 24 50 01 	vmovdqa XMMWORD PTR [rsp+0x150],xmm3
    66b8:	00 00 
    66ba:	c5 f9 7f 94 24 60 01 	vmovdqa XMMWORD PTR [rsp+0x160],xmm2
    66c1:	00 00 
    66c3:	c5 f8 29 45 00       	vmovaps XMMWORD PTR [rbp+0x0],xmm0
    66c8:	c5 79 7f 5c 24 20    	vmovdqa XMMWORD PTR [rsp+0x20],xmm11
    66ce:	c5 f9 7f 44 24 40    	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
    66d4:	83 f8 01             	cmp    eax,0x1
    66d7:	76 4b                	jbe    6724 <is_hit_plane+0x1f4>
    66d9:	83 f8 02             	cmp    eax,0x2
    66dc:	0f 84 2e 01 00 00    	je     6810 <is_hit_plane+0x2e0>
    66e2:	48 8d 35 9f b9 00 00 	lea    rsi,[rip+0xb99f]        # 12088 <_IO_stdin_used+0x88>
    66e9:	31 ff                	xor    edi,edi
    66eb:	e8 60 61 00 00       	call   c850 <ft_assert>
    66f0:	c5 79 6f 3b          	vmovdqa xmm15,XMMWORD PTR [rbx]
    66f4:	c5 79 6f 6b 10       	vmovdqa xmm13,XMMWORD PTR [rbx+0x10]
    66f9:	c5 79 6f 63 20       	vmovdqa xmm12,XMMWORD PTR [rbx+0x20]
    66fe:	c5 f9 6f 73 30       	vmovdqa xmm6,XMMWORD PTR [rbx+0x30]
    6703:	c5 f9 6f 7b 40       	vmovdqa xmm7,XMMWORD PTR [rbx+0x40]
    6708:	c5 f9 6f 4b 50       	vmovdqa xmm1,XMMWORD PTR [rbx+0x50]
    670d:	c5 79 6f 73 60       	vmovdqa xmm14,XMMWORD PTR [rbx+0x60]
    6712:	c5 f9 6f 5b 70       	vmovdqa xmm3,XMMWORD PTR [rbx+0x70]
    6717:	c5 f9 6f 93 80 00 00 	vmovdqa xmm2,XMMWORD PTR [rbx+0x80]
    671e:	00 
    671f:	c5 f9 6f 45 00       	vmovdqa xmm0,XMMWORD PTR [rbp+0x0]
    6724:	c5 79 6f 54 24 20    	vmovdqa xmm10,XMMWORD PTR [rsp+0x20]
    672a:	8b 53 50             	mov    edx,DWORD PTR [rbx+0x50]
    672d:	c5 79 7f 7c 24 50    	vmovdqa XMMWORD PTR [rsp+0x50],xmm15
    6733:	c5 7a 7e 43 10       	vmovq  xmm8,QWORD PTR [rbx+0x10]
    6738:	44 8b 63 18          	mov    r12d,DWORD PTR [rbx+0x18]
    673c:	c5 79 7f 6c 24 60    	vmovdqa XMMWORD PTR [rsp+0x60],xmm13
    6742:	c5 79 7f 54 24 30    	vmovdqa XMMWORD PTR [rsp+0x30],xmm10
    6748:	c5 79 7f 55 10       	vmovdqa XMMWORD PTR [rbp+0x10],xmm10
    674d:	c5 79 7f 64 24 70    	vmovdqa XMMWORD PTR [rsp+0x70],xmm12
    6753:	c5 f9 7f b4 24 80 00 	vmovdqa XMMWORD PTR [rsp+0x80],xmm6
    675a:	00 00 
    675c:	c5 f9 7f bc 24 90 00 	vmovdqa XMMWORD PTR [rsp+0x90],xmm7
    6763:	00 00 
    6765:	c5 f9 7f 8c 24 a0 00 	vmovdqa XMMWORD PTR [rsp+0xa0],xmm1
    676c:	00 00 
    676e:	c5 79 7f b4 24 b0 00 	vmovdqa XMMWORD PTR [rsp+0xb0],xmm14
    6775:	00 00 
    6777:	c5 f9 7f 9c 24 c0 00 	vmovdqa XMMWORD PTR [rsp+0xc0],xmm3
    677e:	00 00 
    6780:	c5 f9 7f 94 24 d0 00 	vmovdqa XMMWORD PTR [rsp+0xd0],xmm2
    6787:	00 00 
    6789:	c5 f9 7f 44 24 20    	vmovdqa XMMWORD PTR [rsp+0x20],xmm0
    678f:	85 d2                	test   edx,edx
    6791:	74 2c                	je     67bf <is_hit_plane+0x28f>
    6793:	83 fa 01             	cmp    edx,0x1
    6796:	0f 84 5c 01 00 00    	je     68f8 <is_hit_plane+0x3c8>
    679c:	83 fa 02             	cmp    edx,0x2
    679f:	0f 84 8b 00 00 00    	je     6830 <is_hit_plane+0x300>
    67a5:	48 8d 35 04 b9 00 00 	lea    rsi,[rip+0xb904]        # 120b0 <_IO_stdin_used+0xb0>
    67ac:	31 ff                	xor    edi,edi
    67ae:	c5 79 d6 44 24 08    	vmovq  QWORD PTR [rsp+0x8],xmm8
    67b4:	e8 97 60 00 00       	call   c850 <ft_assert>
    67b9:	c5 7a 7e 44 24 08    	vmovq  xmm8,QWORD PTR [rsp+0x8]
    67bf:	44 89 64 24 68       	mov    DWORD PTR [rsp+0x68],r12d
    67c4:	c5 79 d6 44 24 60    	vmovq  QWORD PTR [rsp+0x60],xmm8
    67ca:	c5 79 6f 74 24 60    	vmovdqa xmm14,XMMWORD PTR [rsp+0x60]
    67d0:	c5 79 7f b4 24 e0 00 	vmovdqa XMMWORD PTR [rsp+0xe0],xmm14
    67d7:	00 00 
    67d9:	44 89 a4 24 e8 00 00 	mov    DWORD PTR [rsp+0xe8],r12d
    67e0:	00 
    67e1:	b8 01 00 00 00       	mov    eax,0x1
    67e6:	c5 79 d6 84 24 e0 00 	vmovq  QWORD PTR [rsp+0xe0],xmm8
    67ed:	00 00 
    67ef:	c5 f9 6f 9c 24 e0 00 	vmovdqa xmm3,XMMWORD PTR [rsp+0xe0]
    67f6:	00 00 
    67f8:	48 89 5d 38          	mov    QWORD PTR [rbp+0x38],rbx
    67fc:	c5 f9 7f 5d 20       	vmovdqa XMMWORD PTR [rbp+0x20],xmm3
    6801:	48 81 c4 70 01 00 00 	add    rsp,0x170
    6808:	5b                   	pop    rbx
    6809:	5d                   	pop    rbp
    680a:	41 5c                	pop    r12
    680c:	c3                   	ret    
    680d:	0f 1f 00             	nop    DWORD PTR [rax]
    6810:	c5 fa 7e 44 24 40    	vmovq  xmm0,QWORD PTR [rsp+0x40]
    6816:	c5 fa 7e 4c 24 48    	vmovq  xmm1,QWORD PTR [rsp+0x48]
    681c:	48 8d bc 24 e0 00 00 	lea    rdi,[rsp+0xe0]
    6823:	00 
    6824:	ff 94 24 48 01 00 00 	call   QWORD PTR [rsp+0x148]
    682b:	e9 c0 fe ff ff       	jmp    66f0 <is_hit_plane+0x1c0>
    6830:	44 89 64 24 68       	mov    DWORD PTR [rsp+0x68],r12d
    6835:	48 8d bc 24 e0 00 00 	lea    rdi,[rsp+0xe0]
    683c:	00 
    683d:	c7 84 24 a0 00 00 00 	mov    DWORD PTR [rsp+0xa0],0x2
    6844:	02 00 00 00 
    6848:	c5 f9 6f a4 24 a0 00 	vmovdqa xmm4,XMMWORD PTR [rsp+0xa0]
    684f:	00 00 
    6851:	c5 79 d6 44 24 60    	vmovq  QWORD PTR [rsp+0x60],xmm8
    6857:	c5 f9 6f 6c 24 60    	vmovdqa xmm5,XMMWORD PTR [rsp+0x60]
    685d:	c5 f9 7f 44 24 40    	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
    6863:	c5 fa 7e 4c 24 48    	vmovq  xmm1,QWORD PTR [rsp+0x48]
    6869:	c5 79 7f bc 24 e0 00 	vmovdqa XMMWORD PTR [rsp+0xe0],xmm15
    6870:	00 00 
    6872:	c5 f9 7f ac 24 f0 00 	vmovdqa XMMWORD PTR [rsp+0xf0],xmm5
    6879:	00 00 
    687b:	c5 79 7f a4 24 00 01 	vmovdqa XMMWORD PTR [rsp+0x100],xmm12
    6882:	00 00 
    6884:	c5 f9 7f b4 24 10 01 	vmovdqa XMMWORD PTR [rsp+0x110],xmm6
    688b:	00 00 
    688d:	c5 f9 7f bc 24 20 01 	vmovdqa XMMWORD PTR [rsp+0x120],xmm7
    6894:	00 00 
    6896:	c5 f9 7f a4 24 30 01 	vmovdqa XMMWORD PTR [rsp+0x130],xmm4
    689d:	00 00 
    689f:	c5 79 7f b4 24 40 01 	vmovdqa XMMWORD PTR [rsp+0x140],xmm14
    68a6:	00 00 
    68a8:	c5 f9 7f 9c 24 50 01 	vmovdqa XMMWORD PTR [rsp+0x150],xmm3
    68af:	00 00 
    68b1:	c5 f9 7f 94 24 60 01 	vmovdqa XMMWORD PTR [rsp+0x160],xmm2
    68b8:	00 00 
    68ba:	ff 94 24 48 01 00 00 	call   QWORD PTR [rsp+0x148]
    68c1:	48 89 c1             	mov    rcx,rax
    68c4:	48 c1 f9 20          	sar    rcx,0x20
    68c8:	3d 9f 00 00 00       	cmp    eax,0x9f
    68cd:	7e 0c                	jle    68db <is_hit_plane+0x3ab>
    68cf:	81 f9 9f 00 00 00    	cmp    ecx,0x9f
    68d5:	0f 86 00 01 00 00    	jbe    69db <is_hit_plane+0x4ab>
    68db:	48 8d 3d bb b7 00 00 	lea    rdi,[rip+0xb7bb]        # 1209d <_IO_stdin_used+0x9d>
    68e2:	45 31 e4             	xor    r12d,r12d
    68e5:	e8 96 bc ff ff       	call   2580 <puts@plt>
    68ea:	c4 41 39 ef c0       	vpxor  xmm8,xmm8,xmm8
    68ef:	e9 e5 fe ff ff       	jmp    67d9 <is_hit_plane+0x2a9>
    68f4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    68f8:	44 89 64 24 68       	mov    DWORD PTR [rsp+0x68],r12d
    68fd:	48 8d bc 24 e0 00 00 	lea    rdi,[rsp+0xe0]
    6904:	00 
    6905:	c7 84 24 a0 00 00 00 	mov    DWORD PTR [rsp+0xa0],0x1
    690c:	01 00 00 00 
    6910:	c5 79 d6 44 24 60    	vmovq  QWORD PTR [rsp+0x60],xmm8
    6916:	c5 f9 6f 4c 24 60    	vmovdqa xmm1,XMMWORD PTR [rsp+0x60]
    691c:	c5 79 7f a4 24 00 01 	vmovdqa XMMWORD PTR [rsp+0x100],xmm12
    6923:	00 00 
    6925:	c5 79 6f a4 24 a0 00 	vmovdqa xmm12,XMMWORD PTR [rsp+0xa0]
    692c:	00 00 
    692e:	c5 f9 7f 8c 24 f0 00 	vmovdqa XMMWORD PTR [rsp+0xf0],xmm1
    6935:	00 00 
    6937:	c5 f9 7f 44 24 40    	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
    693d:	c5 fa 7e 4c 24 48    	vmovq  xmm1,QWORD PTR [rsp+0x48]
    6943:	c5 79 7f bc 24 e0 00 	vmovdqa XMMWORD PTR [rsp+0xe0],xmm15
    694a:	00 00 
    694c:	c5 f9 7f b4 24 10 01 	vmovdqa XMMWORD PTR [rsp+0x110],xmm6
    6953:	00 00 
    6955:	c5 f9 7f bc 24 20 01 	vmovdqa XMMWORD PTR [rsp+0x120],xmm7
    695c:	00 00 
    695e:	c5 79 7f a4 24 30 01 	vmovdqa XMMWORD PTR [rsp+0x130],xmm12
    6965:	00 00 
    6967:	c5 79 7f b4 24 40 01 	vmovdqa XMMWORD PTR [rsp+0x140],xmm14
    696e:	00 00 
    6970:	c5 f9 7f 9c 24 50 01 	vmovdqa XMMWORD PTR [rsp+0x150],xmm3
    6977:	00 00 
    6979:	c5 f9 7f 94 24 60 01 	vmovdqa XMMWORD PTR [rsp+0x160],xmm2
    6980:	00 00 
    6982:	ff 94 24 48 01 00 00 	call   QWORD PTR [rsp+0x148]
    6989:	49 89 c4             	mov    r12,rax
    698c:	49 c1 fc 20          	sar    r12,0x20
    6990:	45 85 e4             	test   r12d,r12d
    6993:	41 8d 54 24 0f       	lea    edx,[r12+0xf]
    6998:	41 0f 49 d4          	cmovns edx,r12d
    699c:	83 e2 10             	and    edx,0x10
    699f:	74 21                	je     69c2 <is_hit_plane+0x492>
    69a1:	85 c0                	test   eax,eax
    69a3:	8d 48 0f             	lea    ecx,[rax+0xf]
    69a6:	0f 49 c8             	cmovns ecx,eax
    69a9:	c1 e1 1b             	shl    ecx,0x1b
    69ac:	c1 f9 1f             	sar    ecx,0x1f
    69af:	44 0f b6 e1          	movzx  r12d,cl
    69b3:	c4 c1 79 6e fc       	vmovd  xmm7,r12d
    69b8:	c5 79 70 c7 e0       	vpshufd xmm8,xmm7,0xe0
    69bd:	e9 17 fe ff ff       	jmp    67d9 <is_hit_plane+0x2a9>
    69c2:	85 c0                	test   eax,eax
    69c4:	8d 70 0f             	lea    esi,[rax+0xf]
    69c7:	0f 48 c6             	cmovs  eax,esi
    69ca:	c1 f8 04             	sar    eax,0x4
    69cd:	83 e0 01             	and    eax,0x1
    69d0:	83 f8 01             	cmp    eax,0x1
    69d3:	19 c0                	sbb    eax,eax
    69d5:	44 0f b6 e0          	movzx  r12d,al
    69d9:	eb d8                	jmp    69b3 <is_hit_plane+0x483>
    69db:	48 8b bc 24 38 01 00 	mov    rdi,QWORD PTR [rsp+0x138]
    69e2:	00 
    69e3:	8d 34 89             	lea    esi,[rcx+rcx*4]
    69e6:	c5 7a 7e 2d 32 b7 00 	vmovq  xmm13,QWORD PTR [rip+0xb732]        # 12120 <_IO_stdin_used+0x120>
    69ed:	00 
    69ee:	c1 e6 05             	shl    esi,0x5
    69f1:	4c 8b 47 30          	mov    r8,QWORD PTR [rdi+0x30]
    69f5:	01 f0                	add    eax,esi
    69f7:	48 98                	cdqe   
    69f9:	45 8b 0c 80          	mov    r9d,DWORD PTR [r8+rax*4]
    69fd:	45 89 ca             	mov    r10d,r9d
    6a00:	45 89 cb             	mov    r11d,r9d
    6a03:	45 0f b6 e1          	movzx  r12d,r9b
    6a07:	41 c1 fa 10          	sar    r10d,0x10
    6a0b:	41 c1 fb 08          	sar    r11d,0x8
    6a0f:	c4 41 79 6e da       	vmovd  xmm11,r10d
    6a14:	c4 43 21 22 fb 01    	vpinsrd xmm15,xmm11,r11d,0x1
    6a1a:	c4 41 01 db c5       	vpand  xmm8,xmm15,xmm13
    6a1f:	e9 b5 fd ff ff       	jmp    67d9 <is_hit_plane+0x2a9>
    6a24:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    6a2b:	00 00 00 00 
    6a2f:	90                   	nop

0000000000006a30 <copy_construction_to_plane>:
    6a30:	f3 0f 1e fa          	endbr64 
    6a34:	55                   	push   rbp
    6a35:	bf 90 00 00 00       	mov    edi,0x90
    6a3a:	48 89 e5             	mov    rbp,rsp
    6a3d:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    6a41:	e8 ca bb ff ff       	call   2610 <malloc@plt>
    6a46:	c5 f9 6f 55 10       	vmovdqa xmm2,XMMWORD PTR [rbp+0x10]
    6a4b:	c5 f9 6f 5d 20       	vmovdqa xmm3,XMMWORD PTR [rbp+0x20]
    6a50:	48 8d 0d c9 fa ff ff 	lea    rcx,[rip+0xfffffffffffffac9]        # 6520 <delete_plane>
    6a57:	c4 e1 f9 6e c9       	vmovq  xmm1,rcx
    6a5c:	c5 f9 6f 65 30       	vmovdqa xmm4,XMMWORD PTR [rbp+0x30]
    6a61:	c5 f9 6f 6d 40       	vmovdqa xmm5,XMMWORD PTR [rbp+0x40]
    6a66:	48 8d 35 c3 fa ff ff 	lea    rsi,[rip+0xfffffffffffffac3]        # 6530 <is_hit_plane>
    6a6d:	48 8d 3d 2c fa ff ff 	lea    rdi,[rip+0xfffffffffffffa2c]        # 64a0 <get_uv_coordinate_in_plane>
    6a74:	c4 61 f9 6e ce       	vmovq  xmm9,rsi
    6a79:	c4 63 f1 22 05 1d 05 	vpinsrq xmm8,xmm1,QWORD PTR [rip+0x1051d],0x1        # 16fa0 <_GLOBAL_OFFSET_TABLE_+0x278>
    6a80:	01 00 01 
    6a83:	c5 f9 6f 75 50       	vmovdqa xmm6,XMMWORD PTR [rbp+0x50]
    6a88:	c5 f9 6f 7d 60       	vmovdqa xmm7,XMMWORD PTR [rbp+0x60]
    6a8d:	c4 63 b1 22 d7 01    	vpinsrq xmm10,xmm9,rdi,0x1
    6a93:	c5 f9 7f 10          	vmovdqa XMMWORD PTR [rax],xmm2
    6a97:	c5 f9 6f 85 90 00 00 	vmovdqa xmm0,XMMWORD PTR [rbp+0x90]
    6a9e:	00 
    6a9f:	48 8d 15 3a 00 00 00 	lea    rdx,[rip+0x3a]        # 6ae0 <update_scale_diameter_plane>
    6aa6:	c4 43 2d 38 d8 01    	vinserti128 ymm11,ymm10,xmm8,0x1
    6aac:	c5 f9 7f 58 10       	vmovdqa XMMWORD PTR [rax+0x10],xmm3
    6ab1:	c5 f9 7f 80 80 00 00 	vmovdqa XMMWORD PTR [rax+0x80],xmm0
    6ab8:	00 
    6ab9:	c5 f9 7f 60 20       	vmovdqa XMMWORD PTR [rax+0x20],xmm4
    6abe:	48 89 90 80 00 00 00 	mov    QWORD PTR [rax+0x80],rdx
    6ac5:	c5 f9 7f 68 30       	vmovdqa XMMWORD PTR [rax+0x30],xmm5
    6aca:	c5 f9 7f 70 40       	vmovdqa XMMWORD PTR [rax+0x40],xmm6
    6acf:	c5 f9 7f 78 50       	vmovdqa XMMWORD PTR [rax+0x50],xmm7
    6ad4:	c5 7e 7f 58 60       	vmovdqu YMMWORD PTR [rax+0x60],ymm11
    6ad9:	c5 f8 77             	vzeroupper 
    6adc:	c9                   	leave  
    6add:	c3                   	ret    
    6ade:	66 90                	xchg   ax,ax

0000000000006ae0 <update_scale_diameter_plane>:
    6ae0:	f3 0f 1e fa          	endbr64 
    6ae4:	c3                   	ret    
    6ae5:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    6aec:	00 00 00 00 

0000000000006af0 <update_scale_height_plane>:
    6af0:	f3 0f 1e fa          	endbr64 
    6af4:	c3                   	ret    
    6af5:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    6afc:	00 00 00 
    6aff:	90                   	nop

0000000000006b00 <get_ray>:
    6b00:	f3 0f 1e fa          	endbr64 
    6b04:	c5 f9 d6 44 24 e8    	vmovq  QWORD PTR [rsp-0x18],xmm0
    6b0a:	48 89 f8             	mov    rax,rdi
    6b0d:	c5 f9 d6 4c 24 f0    	vmovq  QWORD PTR [rsp-0x10],xmm1
    6b13:	c5 f9 6f 64 24 e8    	vmovdqa xmm4,XMMWORD PTR [rsp-0x18]
    6b19:	c5 f9 d6 54 24 d8    	vmovq  QWORD PTR [rsp-0x28],xmm2
    6b1f:	c5 f9 d6 5c 24 e0    	vmovq  QWORD PTR [rsp-0x20],xmm3
    6b25:	c5 f9 6f 6c 24 d8    	vmovdqa xmm5,XMMWORD PTR [rsp-0x28]
    6b2b:	c5 f9 7f 27          	vmovdqa XMMWORD PTR [rdi],xmm4
    6b2f:	c5 f9 7f 6f 10       	vmovdqa XMMWORD PTR [rdi+0x10],xmm5
    6b34:	c3                   	ret    
    6b35:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    6b3c:	00 00 00 00 

0000000000006b40 <get_point_in_ray>:
    6b40:	f3 0f 1e fa          	endbr64 
    6b44:	55                   	push   rbp
    6b45:	c5 f8 c6 c0 00       	vshufps xmm0,xmm0,xmm0,0x0
    6b4a:	48 89 e5             	mov    rbp,rsp
    6b4d:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    6b51:	c5 f8 28 55 10       	vmovaps xmm2,XMMWORD PTR [rbp+0x10]
    6b56:	c4 e2 69 98 45 20    	vfmadd132ps xmm0,xmm2,XMMWORD PTR [rbp+0x20]
    6b5c:	c5 f8 29 44 24 f0    	vmovaps XMMWORD PTR [rsp-0x10],xmm0
    6b62:	c5 fa 7e 4c 24 f8    	vmovq  xmm1,QWORD PTR [rsp-0x8]
    6b68:	c9                   	leave  
    6b69:	c3                   	ret    
    6b6a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000006b70 <load_hit_record>:
    6b70:	f3 0f 1e fa          	endbr64 
    6b74:	41 56                	push   r14
    6b76:	c5 f9 ef c0          	vpxor  xmm0,xmm0,xmm0
    6b7a:	31 d2                	xor    edx,edx
    6b7c:	49 89 fe             	mov    r14,rdi
    6b7f:	41 55                	push   r13
    6b81:	41 54                	push   r12
    6b83:	55                   	push   rbp
    6b84:	48 89 f5             	mov    rbp,rsi
    6b87:	53                   	push   rbx
    6b88:	48 83 c4 80          	add    rsp,0xffffffffffffff80
    6b8c:	48 83 be e0 00 00 00 	cmp    QWORD PTR [rsi+0xe0],0x0
    6b93:	00 
    6b94:	c7 44 24 30 ff ff 7f 	mov    DWORD PTR [rsp+0x30],0x7f7fffff
    6b9b:	7f 
    6b9c:	c5 f9 6f 4c 24 30    	vmovdqa xmm1,XMMWORD PTR [rsp+0x30]
    6ba2:	c5 f9 7f 44 24 20    	vmovdqa XMMWORD PTR [rsp+0x20],xmm0
    6ba8:	c5 f9 7f 04 24       	vmovdqa XMMWORD PTR [rsp],xmm0
    6bad:	c5 f9 7f 44 24 10    	vmovdqa XMMWORD PTR [rsp+0x10],xmm0
    6bb3:	c5 f9 7f 44 24 40    	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
    6bb9:	c5 f9 7f 44 24 50    	vmovdqa XMMWORD PTR [rsp+0x50],xmm0
    6bbf:	c5 f9 7f 44 24 60    	vmovdqa XMMWORD PTR [rsp+0x60],xmm0
    6bc5:	c5 f9 7f 4c 24 70    	vmovdqa XMMWORD PTR [rsp+0x70],xmm1
    6bcb:	0f 84 a7 00 00 00    	je     6c78 <load_hit_record+0x108>
    6bd1:	4c 8d ae d8 00 00 00 	lea    r13,[rsi+0xd8]
    6bd8:	31 db                	xor    ebx,ebx
    6bda:	49 89 e4             	mov    r12,rsp
    6bdd:	0f 1f 00             	nop    DWORD PTR [rax]
    6be0:	48 89 de             	mov    rsi,rbx
    6be3:	4c 89 ef             	mov    rdi,r13
    6be6:	48 83 c3 01          	add    rbx,0x1
    6bea:	e8 f1 61 00 00       	call   cde0 <get_element_or_null_in_list>
    6bef:	4c 89 e6             	mov    rsi,r12
    6bf2:	48 8b 00             	mov    rax,QWORD PTR [rax]
    6bf5:	ff b4 24 c8 00 00 00 	push   QWORD PTR [rsp+0xc8]
    6bfc:	ff b4 24 c8 00 00 00 	push   QWORD PTR [rsp+0xc8]
    6c03:	ff b4 24 c8 00 00 00 	push   QWORD PTR [rsp+0xc8]
    6c0a:	48 89 c7             	mov    rdi,rax
    6c0d:	ff b4 24 c8 00 00 00 	push   QWORD PTR [rsp+0xc8]
    6c14:	ff 50 60             	call   QWORD PTR [rax+0x60]
    6c17:	48 83 c4 20          	add    rsp,0x20
    6c1b:	48 39 9d e0 00 00 00 	cmp    QWORD PTR [rbp+0xe0],rbx
    6c22:	77 bc                	ja     6be0 <load_hit_record+0x70>
    6c24:	4c 8b 04 24          	mov    r8,QWORD PTR [rsp]
    6c28:	4c 8b 4c 24 08       	mov    r9,QWORD PTR [rsp+0x8]
    6c2d:	48 8b 74 24 10       	mov    rsi,QWORD PTR [rsp+0x10]
    6c32:	48 8b 7c 24 18       	mov    rdi,QWORD PTR [rsp+0x18]
    6c37:	48 8b 44 24 20       	mov    rax,QWORD PTR [rsp+0x20]
    6c3c:	48 8b 54 24 28       	mov    rdx,QWORD PTR [rsp+0x28]
    6c41:	c5 f9 6f 4c 24 30    	vmovdqa xmm1,XMMWORD PTR [rsp+0x30]
    6c47:	49 89 46 20          	mov    QWORD PTR [r14+0x20],rax
    6c4b:	4c 89 f0             	mov    rax,r14
    6c4e:	4d 89 06             	mov    QWORD PTR [r14],r8
    6c51:	4d 89 4e 08          	mov    QWORD PTR [r14+0x8],r9
    6c55:	49 89 76 10          	mov    QWORD PTR [r14+0x10],rsi
    6c59:	49 89 7e 18          	mov    QWORD PTR [r14+0x18],rdi
    6c5d:	49 89 56 28          	mov    QWORD PTR [r14+0x28],rdx
    6c61:	c4 c1 79 7f 4e 30    	vmovdqa XMMWORD PTR [r14+0x30],xmm1
    6c67:	48 83 ec 80          	sub    rsp,0xffffffffffffff80
    6c6b:	5b                   	pop    rbx
    6c6c:	5d                   	pop    rbp
    6c6d:	41 5c                	pop    r12
    6c6f:	41 5d                	pop    r13
    6c71:	41 5e                	pop    r14
    6c73:	c3                   	ret    
    6c74:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    6c78:	45 31 c0             	xor    r8d,r8d
    6c7b:	45 31 c9             	xor    r9d,r9d
    6c7e:	31 f6                	xor    esi,esi
    6c80:	31 ff                	xor    edi,edi
    6c82:	31 c0                	xor    eax,eax
    6c84:	eb c1                	jmp    6c47 <load_hit_record+0xd7>
    6c86:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    6c8d:	00 00 00 

0000000000006c90 <get_ray_mappied_to_pixel>:
    6c90:	f3 0f 1e fa          	endbr64 
    6c94:	41 54                	push   r12
    6c96:	49 89 fc             	mov    r12,rdi
    6c99:	48 83 ec 40          	sub    rsp,0x40
    6c9d:	c5 f2 59 0d 17 b5 00 	vmulss xmm1,xmm1,DWORD PTR [rip+0xb517]        # 121bc <_IO_stdin_used+0x1bc>
    6ca4:	00 
    6ca5:	c5 fa 11 44 24 04    	vmovss DWORD PTR [rsp+0x4],xmm0
    6cab:	c5 f2 5e 05 0d b5 00 	vdivss xmm0,xmm1,DWORD PTR [rip+0xb50d]        # 121c0 <_IO_stdin_used+0x1c0>
    6cb2:	00 
    6cb3:	e8 98 b8 ff ff       	call   2550 <tanf@plt>
    6cb8:	c5 fa 10 2d fc b4 00 	vmovss xmm5,DWORD PTR [rip+0xb4fc]        # 121bc <_IO_stdin_used+0x1bc>
    6cbf:	00 
    6cc0:	c5 fa 11 44 24 08    	vmovss DWORD PTR [rsp+0x8],xmm0
    6cc6:	c5 d2 59 44 24 04    	vmulss xmm0,xmm5,DWORD PTR [rsp+0x4]
    6ccc:	c5 fa 5e 05 ec b4 00 	vdivss xmm0,xmm0,DWORD PTR [rip+0xb4ec]        # 121c0 <_IO_stdin_used+0x1c0>
    6cd3:	00 
    6cd4:	e8 77 b8 ff ff       	call   2550 <tanf@plt>
    6cd9:	c5 fa 59 5c 24 64    	vmulss xmm3,xmm0,DWORD PTR [rsp+0x64]
    6cdf:	c5 fa 10 54 24 08    	vmovss xmm2,DWORD PTR [rsp+0x8]
    6ce5:	c4 e2 69 b9 5c 24 74 	vfmadd231ss xmm3,xmm2,DWORD PTR [rsp+0x74]
    6cec:	c5 c0 57 ff          	vxorps xmm7,xmm7,xmm7
    6cf0:	c5 62 58 8c 24 84 00 	vaddss xmm9,xmm3,DWORD PTR [rsp+0x84]
    6cf7:	00 00 
    6cf9:	c5 fa 59 64 24 68    	vmulss xmm4,xmm0,DWORD PTR [rsp+0x68]
    6cff:	c5 fa 59 74 24 60    	vmulss xmm6,xmm0,DWORD PTR [rsp+0x60]
    6d05:	c4 e2 69 b9 74 24 70 	vfmadd231ss xmm6,xmm2,DWORD PTR [rsp+0x70]
    6d0c:	c4 e2 59 99 54 24 78 	vfmadd132ss xmm2,xmm4,DWORD PTR [rsp+0x78]
    6d13:	c5 4a 58 94 24 80 00 	vaddss xmm10,xmm6,DWORD PTR [rsp+0x80]
    6d1a:	00 00 
    6d1c:	c4 c1 32 59 c1       	vmulss xmm0,xmm9,xmm9
    6d21:	c5 6a 58 84 24 88 00 	vaddss xmm8,xmm2,DWORD PTR [rsp+0x88]
    6d28:	00 00 
    6d2a:	c4 c2 29 b9 c2       	vfmadd231ss xmm0,xmm10,xmm10
    6d2f:	c4 c2 39 b9 c0       	vfmadd231ss xmm0,xmm8,xmm8
    6d34:	c5 f8 2e f8          	vucomiss xmm7,xmm0
    6d38:	77 44                	ja     6d7e <get_ray_mappied_to_pixel+0xee>
    6d3a:	c5 fa 51 c0          	vsqrtss xmm0,xmm0,xmm0
    6d3e:	c5 2a 5e d8          	vdivss xmm11,xmm10,xmm0
    6d42:	c5 79 6f 7c 24 50    	vmovdqa xmm15,XMMWORD PTR [rsp+0x50]
    6d48:	4c 89 e0             	mov    rax,r12
    6d4b:	c4 41 79 7f 3c 24    	vmovdqa XMMWORD PTR [r12],xmm15
    6d51:	c5 32 5e e0          	vdivss xmm12,xmm9,xmm0
    6d55:	c5 3a 5e f0          	vdivss xmm14,xmm8,xmm0
    6d59:	c4 41 20 14 ec       	vunpcklps xmm13,xmm11,xmm12
    6d5e:	c5 78 13 6c 24 30    	vmovlps QWORD PTR [rsp+0x30],xmm13
    6d64:	c5 7a 11 74 24 38    	vmovss DWORD PTR [rsp+0x38],xmm14
    6d6a:	c5 f9 6f 4c 24 30    	vmovdqa xmm1,XMMWORD PTR [rsp+0x30]
    6d70:	c4 c1 79 7f 4c 24 10 	vmovdqa XMMWORD PTR [r12+0x10],xmm1
    6d77:	48 83 c4 40          	add    rsp,0x40
    6d7b:	41 5c                	pop    r12
    6d7d:	c3                   	ret    
    6d7e:	c5 7a 11 44 24 0c    	vmovss DWORD PTR [rsp+0xc],xmm8
    6d84:	c5 7a 11 4c 24 08    	vmovss DWORD PTR [rsp+0x8],xmm9
    6d8a:	c5 7a 11 54 24 04    	vmovss DWORD PTR [rsp+0x4],xmm10
    6d90:	e8 fb bb ff ff       	call   2990 <sqrtf@plt>
    6d95:	c5 7a 10 44 24 0c    	vmovss xmm8,DWORD PTR [rsp+0xc]
    6d9b:	c5 7a 10 4c 24 08    	vmovss xmm9,DWORD PTR [rsp+0x8]
    6da1:	c5 7a 10 54 24 04    	vmovss xmm10,DWORD PTR [rsp+0x4]
    6da7:	eb 95                	jmp    6d3e <get_ray_mappied_to_pixel+0xae>
    6da9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000006db0 <compute_reflection_lighting_recursive>:
    6db0:	f3 0f 1e fa          	endbr64 
    6db4:	4c 8d 54 24 08       	lea    r10,[rsp+0x8]
    6db9:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    6dbd:	41 ff 72 f8          	push   QWORD PTR [r10-0x8]
    6dc1:	55                   	push   rbp
    6dc2:	48 89 e5             	mov    rbp,rsp
    6dc5:	41 57                	push   r15
    6dc7:	49 89 ff             	mov    r15,rdi
    6dca:	41 56                	push   r14
    6dcc:	41 55                	push   r13
    6dce:	41 54                	push   r12
    6dd0:	41 52                	push   r10
    6dd2:	53                   	push   rbx
    6dd3:	48 81 ec 80 01 00 00 	sub    rsp,0x180
    6dda:	45 8b 72 44          	mov    r14d,DWORD PTR [r10+0x44]
    6dde:	45 8b 6a 48          	mov    r13d,DWORD PTR [r10+0x48]
    6de2:	4c 89 95 58 fe ff ff 	mov    QWORD PTR [rbp-0x1a8],r10
    6de9:	41 8b 5a 40          	mov    ebx,DWORD PTR [r10+0x40]
    6ded:	49 8b 4a 58          	mov    rcx,QWORD PTR [r10+0x58]
    6df1:	c4 c1 7a 10 6a 20    	vmovss xmm5,DWORD PTR [r10+0x20]
    6df7:	c4 c1 7a 10 72 24    	vmovss xmm6,DWORD PTR [r10+0x24]
    6dfd:	44 89 b5 6c fe ff ff 	mov    DWORD PTR [rbp-0x194],r14d
    6e04:	c4 c1 7a 10 42 28    	vmovss xmm0,DWORD PTR [r10+0x28]
    6e0a:	c4 c1 7a 10 4a 30    	vmovss xmm1,DWORD PTR [r10+0x30]
    6e10:	48 89 8d 70 fe ff ff 	mov    QWORD PTR [rbp-0x190],rcx
    6e17:	c4 c1 7a 10 52 34    	vmovss xmm2,DWORD PTR [r10+0x34]
    6e1d:	c4 c1 7a 10 7a 38    	vmovss xmm7,DWORD PTR [r10+0x38]
    6e23:	89 9d 68 fe ff ff    	mov    DWORD PTR [rbp-0x198],ebx
    6e29:	44 89 ad 64 fe ff ff 	mov    DWORD PTR [rbp-0x19c],r13d
    6e30:	c5 fa 11 ad b8 fe ff 	vmovss DWORD PTR [rbp-0x148],xmm5
    6e37:	ff 
    6e38:	c5 fa 11 b5 bc fe ff 	vmovss DWORD PTR [rbp-0x144],xmm6
    6e3f:	ff 
    6e40:	c5 fa 11 85 c0 fe ff 	vmovss DWORD PTR [rbp-0x140],xmm0
    6e47:	ff 
    6e48:	c5 fa 11 8d 88 fe ff 	vmovss DWORD PTR [rbp-0x178],xmm1
    6e4f:	ff 
    6e50:	c5 fa 11 95 8c fe ff 	vmovss DWORD PTR [rbp-0x174],xmm2
    6e57:	ff 
    6e58:	c5 fa 11 bd 84 fe ff 	vmovss DWORD PTR [rbp-0x17c],xmm7
    6e5f:	ff 
    6e60:	41 ff 72 58          	push   QWORD PTR [r10+0x58]
    6e64:	41 ff 72 50          	push   QWORD PTR [r10+0x50]
    6e68:	41 ff 72 48          	push   QWORD PTR [r10+0x48]
    6e6c:	41 ff 72 40          	push   QWORD PTR [r10+0x40]
    6e70:	41 ff 72 38          	push   QWORD PTR [r10+0x38]
    6e74:	41 ff 72 30          	push   QWORD PTR [r10+0x30]
    6e78:	41 ff 72 28          	push   QWORD PTR [r10+0x28]
    6e7c:	41 ff 72 20          	push   QWORD PTR [r10+0x20]
    6e80:	41 ff 72 18          	push   QWORD PTR [r10+0x18]
    6e84:	41 ff 72 10          	push   QWORD PTR [r10+0x10]
    6e88:	41 ff 72 08          	push   QWORD PTR [r10+0x8]
    6e8c:	41 ff 32             	push   QWORD PTR [r10]
    6e8f:	e8 ac 0a 00 00       	call   7940 <trace_reflection_color>
    6e94:	41 0f af 5f 70       	imul   ebx,DWORD PTR [r15+0x70]
    6e99:	b9 ff 00 00 00       	mov    ecx,0xff
    6e9e:	c5 fa 10 1d 1e b3 00 	vmovss xmm3,DWORD PTR [rip+0xb31e]        # 121c4 <_IO_stdin_used+0x1c4>
    6ea5:	00 
    6ea6:	c4 c1 62 59 67 60    	vmulss xmm4,xmm3,DWORD PTR [r15+0x60]
    6eac:	48 89 d7             	mov    rdi,rdx
    6eaf:	48 89 85 f0 fe ff ff 	mov    QWORD PTR [rbp-0x110],rax
    6eb6:	48 89 c2             	mov    rdx,rax
    6eb9:	48 89 bd f8 fe ff ff 	mov    QWORD PTR [rbp-0x108],rdi
    6ec0:	41 8b 7f 74          	mov    edi,DWORD PTR [r15+0x74]
    6ec4:	48 63 c3             	movsxd rax,ebx
    6ec7:	4c 69 d8 81 80 80 80 	imul   r11,rax,0xffffffff80808081
    6ece:	48 89 c6             	mov    rsi,rax
    6ed1:	c1 fe 1f             	sar    esi,0x1f
    6ed4:	c5 7a 2c cc          	vcvttss2si r9d,xmm4
    6ed8:	49 c1 eb 20          	shr    r11,0x20
    6edc:	41 01 c3             	add    r11d,eax
    6edf:	8b 85 f4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x10c]
    6ee5:	41 c1 fb 07          	sar    r11d,0x7
    6ee9:	41 29 f3             	sub    r11d,esi
    6eec:	45 0f af d9          	imul   r11d,r9d
    6ef0:	4d 63 e3             	movsxd r12,r11d
    6ef3:	4d 69 d4 81 80 80 80 	imul   r10,r12,0xffffffff80808081
    6efa:	45 8b 67 78          	mov    r12d,DWORD PTR [r15+0x78]
    6efe:	49 c1 ea 20          	shr    r10,0x20
    6f02:	45 01 da             	add    r10d,r11d
    6f05:	41 c1 fb 1f          	sar    r11d,0x1f
    6f09:	41 c1 fa 07          	sar    r10d,0x7
    6f0d:	45 29 da             	sub    r10d,r11d
    6f10:	41 bb ff 00 00 00    	mov    r11d,0xff
    6f16:	41 8d 1c 12          	lea    ebx,[r10+rdx*1]
    6f1a:	39 cb                	cmp    ebx,ecx
    6f1c:	0f 4e cb             	cmovle ecx,ebx
    6f1f:	41 0f af fe          	imul   edi,r14d
    6f23:	89 8d a8 fe ff ff    	mov    DWORD PTR [rbp-0x158],ecx
    6f29:	8b 8d f8 fe ff ff    	mov    ecx,DWORD PTR [rbp-0x108]
    6f2f:	4c 63 f7             	movsxd r14,edi
    6f32:	49 69 d6 81 80 80 80 	imul   rdx,r14,0xffffffff80808081
    6f39:	48 c1 ea 20          	shr    rdx,0x20
    6f3d:	01 fa                	add    edx,edi
    6f3f:	c1 ff 1f             	sar    edi,0x1f
    6f42:	c1 fa 07             	sar    edx,0x7
    6f45:	29 fa                	sub    edx,edi
    6f47:	bf ff 00 00 00       	mov    edi,0xff
    6f4c:	41 0f af d1          	imul   edx,r9d
    6f50:	4c 63 c2             	movsxd r8,edx
    6f53:	49 69 f0 81 80 80 80 	imul   rsi,r8,0xffffffff80808081
    6f5a:	48 c1 ee 20          	shr    rsi,0x20
    6f5e:	01 d6                	add    esi,edx
    6f60:	c1 fa 1f             	sar    edx,0x1f
    6f63:	c1 fe 07             	sar    esi,0x7
    6f66:	29 d6                	sub    esi,edx
    6f68:	01 f0                	add    eax,esi
    6f6a:	44 39 d8             	cmp    eax,r11d
    6f6d:	44 0f 4e d8          	cmovle r11d,eax
    6f71:	45 0f af e5          	imul   r12d,r13d
    6f75:	44 89 9d 94 fe ff ff 	mov    DWORD PTR [rbp-0x16c],r11d
    6f7c:	4d 63 ec             	movsxd r13,r12d
    6f7f:	4d 69 d5 81 80 80 80 	imul   r10,r13,0xffffffff80808081
    6f86:	49 c1 ea 20          	shr    r10,0x20
    6f8a:	45 01 e2             	add    r10d,r12d
    6f8d:	41 c1 fc 1f          	sar    r12d,0x1f
    6f91:	41 c1 fa 07          	sar    r10d,0x7
    6f95:	45 29 e2             	sub    r10d,r12d
    6f98:	45 0f af d1          	imul   r10d,r9d
    6f9c:	4d 63 ca             	movsxd r9,r10d
    6f9f:	49 69 d9 81 80 80 80 	imul   rbx,r9,0xffffffff80808081
    6fa6:	48 c1 eb 20          	shr    rbx,0x20
    6faa:	44 01 d3             	add    ebx,r10d
    6fad:	41 c1 fa 1f          	sar    r10d,0x1f
    6fb1:	c1 fb 07             	sar    ebx,0x7
    6fb4:	44 29 d3             	sub    ebx,r10d
    6fb7:	01 d9                	add    ecx,ebx
    6fb9:	39 f9                	cmp    ecx,edi
    6fbb:	0f 4e f9             	cmovle edi,ecx
    6fbe:	48 83 c4 60          	add    rsp,0x60
    6fc2:	49 83 bf 90 00 00 00 	cmp    QWORD PTR [r15+0x90],0x0
    6fc9:	00 
    6fca:	89 bd 90 fe ff ff    	mov    DWORD PTR [rbp-0x170],edi
    6fd0:	0f 84 1e 03 00 00    	je     72f4 <compute_reflection_lighting_recursive+0x544>
    6fd6:	48 c7 85 a0 fe ff ff 	mov    QWORD PTR [rbp-0x160],0x0
    6fdd:	00 00 00 00 
    6fe1:	4d 8d b7 88 00 00 00 	lea    r14,[r15+0x88]
    6fe8:	4c 89 b5 78 fe ff ff 	mov    QWORD PTR [rbp-0x188],r14
    6fef:	4c 8d 75 90          	lea    r14,[rbp-0x70]
    6ff3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    6ff8:	4c 8b ad a0 fe ff ff 	mov    r13,QWORD PTR [rbp-0x160]
    6fff:	48 8b bd 78 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x188]
    7006:	4c 89 ee             	mov    rsi,r13
    7009:	49 83 c5 01          	add    r13,0x1
    700d:	e8 ce 5d 00 00       	call   cde0 <get_element_or_null_in_list>
    7012:	c5 d0 57 ed          	vxorps xmm5,xmm5,xmm5
    7016:	4c 89 ad a0 fe ff ff 	mov    QWORD PTR [rbp-0x160],r13
    701d:	c5 7a 10 b5 bc fe ff 	vmovss xmm14,DWORD PTR [rbp-0x144]
    7024:	ff 
    7025:	c5 8a 5c 78 04       	vsubss xmm7,xmm14,DWORD PTR [rax+0x4]
    702a:	c5 7a 10 60 08       	vmovss xmm12,DWORD PTR [rax+0x8]
    702f:	49 89 c4             	mov    r12,rax
    7032:	c5 7a 10 ad b8 fe ff 	vmovss xmm13,DWORD PTR [rbp-0x148]
    7039:	ff 
    703a:	c5 92 5c 08          	vsubss xmm1,xmm13,DWORD PTR [rax]
    703e:	c5 fa 7e 30          	vmovq  xmm6,QWORD PTR [rax]
    7042:	c5 7a 10 bd c0 fe ff 	vmovss xmm15,DWORD PTR [rbp-0x140]
    7049:	ff 
    704a:	c5 7a 11 a5 b4 fe ff 	vmovss DWORD PTR [rbp-0x14c],xmm12
    7051:	ff 
    7052:	c5 c2 59 c7          	vmulss xmm0,xmm7,xmm7
    7056:	c5 79 6f 00          	vmovdqa xmm8,XMMWORD PTR [rax]
    705a:	c5 79 6f 48 10       	vmovdqa xmm9,XMMWORD PTR [rax+0x10]
    705f:	c4 c1 02 5c d4       	vsubss xmm2,xmm15,xmm12
    7064:	c5 7a 16 de          	vmovshdup xmm11,xmm6
    7068:	c5 79 6f 50 20       	vmovdqa xmm10,XMMWORD PTR [rax+0x20]
    706d:	c5 fa 11 b5 ac fe ff 	vmovss DWORD PTR [rbp-0x154],xmm6
    7074:	ff 
    7075:	c5 79 7f 85 20 ff ff 	vmovdqa XMMWORD PTR [rbp-0xe0],xmm8
    707c:	ff 
    707d:	c5 79 7f 8d 30 ff ff 	vmovdqa XMMWORD PTR [rbp-0xd0],xmm9
    7084:	ff 
    7085:	c5 79 7f 95 40 ff ff 	vmovdqa XMMWORD PTR [rbp-0xc0],xmm10
    708c:	ff 
    708d:	c4 e2 71 b9 c1       	vfmadd231ss xmm0,xmm1,xmm1
    7092:	c5 7a 11 9d b0 fe ff 	vmovss DWORD PTR [rbp-0x150],xmm11
    7099:	ff 
    709a:	c4 e2 69 b9 c2       	vfmadd231ss xmm0,xmm2,xmm2
    709f:	c5 f8 2e e8          	vucomiss xmm5,xmm0
    70a3:	0f 87 1e 07 00 00    	ja     77c7 <compute_reflection_lighting_recursive+0xa17>
    70a9:	c5 fa 51 c0          	vsqrtss xmm0,xmm0,xmm0
    70ad:	c5 72 5e c0          	vdivss xmm8,xmm1,xmm0
    70b1:	c5 f9 6f 9d 20 ff ff 	vmovdqa xmm3,XMMWORD PTR [rbp-0xe0]
    70b8:	ff 
    70b9:	c5 fa 10 a5 b4 fe ff 	vmovss xmm4,DWORD PTR [rbp-0x14c]
    70c0:	ff 
    70c1:	c5 f1 ef c9          	vpxor  xmm1,xmm1,xmm1
    70c5:	c5 7a 10 ad ac fe ff 	vmovss xmm13,DWORD PTR [rbp-0x154]
    70cc:	ff 
    70cd:	c5 7a 10 bd b0 fe ff 	vmovss xmm15,DWORD PTR [rbp-0x150]
    70d4:	ff 
    70d5:	c7 45 80 ff ff 7f 7f 	mov    DWORD PTR [rbp-0x80],0x7f7fffff
    70dc:	c5 f9 7f 5d 90       	vmovdqa XMMWORD PTR [rbp-0x70],xmm3
    70e1:	c5 12 5c b5 b8 fe ff 	vsubss xmm14,xmm13,DWORD PTR [rbp-0x148]
    70e8:	ff 
    70e9:	c5 82 5c ad bc fe ff 	vsubss xmm5,xmm15,DWORD PTR [rbp-0x144]
    70f0:	ff 
    70f1:	c5 f8 13 75 90       	vmovlps QWORD PTR [rbp-0x70],xmm6
    70f6:	c5 da 5c b5 c0 fe ff 	vsubss xmm6,xmm4,DWORD PTR [rbp-0x140]
    70fd:	ff 
    70fe:	49 83 bf e0 00 00 00 	cmp    QWORD PTR [r15+0xe0],0x0
    7105:	00 
    7106:	c5 fa 11 65 98       	vmovss DWORD PTR [rbp-0x68],xmm4
    710b:	c5 f9 6f 65 80       	vmovdqa xmm4,XMMWORD PTR [rbp-0x80]
    7110:	c5 79 6f 5d 90       	vmovdqa xmm11,XMMWORD PTR [rbp-0x70]
    7115:	c5 fd 7f 8d 50 ff ff 	vmovdqa YMMWORD PTR [rbp-0xb0],ymm1
    711c:	ff 
    711d:	c5 f9 6f 9d 60 ff ff 	vmovdqa xmm3,XMMWORD PTR [rbp-0xa0]
    7124:	ff 
    7125:	c5 79 7f 9d 00 ff ff 	vmovdqa XMMWORD PTR [rbp-0x100],xmm11
    712c:	ff 
    712d:	c5 7a 11 b5 c4 fe ff 	vmovss DWORD PTR [rbp-0x13c],xmm14
    7134:	ff 
    7135:	c5 fa 11 ad cc fe ff 	vmovss DWORD PTR [rbp-0x134],xmm5
    713c:	ff 
    713d:	c5 fa 11 b5 c8 fe ff 	vmovss DWORD PTR [rbp-0x138],xmm6
    7144:	ff 
    7145:	c5 f9 7f 4d 90       	vmovdqa XMMWORD PTR [rbp-0x70],xmm1
    714a:	c5 f9 7f 65 c0       	vmovdqa XMMWORD PTR [rbp-0x40],xmm4
    714f:	c5 42 5e c8          	vdivss xmm9,xmm7,xmm0
    7153:	c5 c1 ef ff          	vpxor  xmm7,xmm7,xmm7
    7157:	c5 f9 7f bd 70 ff ff 	vmovdqa XMMWORD PTR [rbp-0x90],xmm7
    715e:	ff 
    715f:	c5 f9 7f 7d b0       	vmovdqa XMMWORD PTR [rbp-0x50],xmm7
    7164:	c5 ea 5e c0          	vdivss xmm0,xmm2,xmm0
    7168:	c4 41 38 14 d1       	vunpcklps xmm10,xmm8,xmm9
    716d:	c5 78 13 55 a0       	vmovlps QWORD PTR [rbp-0x60],xmm10
    7172:	c5 fa 11 45 a8       	vmovss DWORD PTR [rbp-0x58],xmm0
    7177:	c5 79 6f 65 a0       	vmovdqa xmm12,XMMWORD PTR [rbp-0x60]
    717c:	c5 f9 7f 5d a0       	vmovdqa XMMWORD PTR [rbp-0x60],xmm3
    7181:	c5 79 7f a5 10 ff ff 	vmovdqa XMMWORD PTR [rbp-0xf0],xmm12
    7188:	ff 
    7189:	0f 84 b7 05 00 00    	je     7746 <compute_reflection_lighting_recursive+0x996>
    718f:	49 8d 97 d8 00 00 00 	lea    rdx,[r15+0xd8]
    7196:	45 31 c0             	xor    r8d,r8d
    7199:	48 8b 9d 70 fe ff ff 	mov    rbx,QWORD PTR [rbp-0x190]
    71a0:	4c 89 a5 98 fe ff ff 	mov    QWORD PTR [rbp-0x168],r12
    71a7:	49 89 d5             	mov    r13,rdx
    71aa:	4d 89 c4             	mov    r12,r8
    71ad:	c5 f8 77             	vzeroupper 
    71b0:	eb 17                	jmp    71c9 <compute_reflection_lighting_recursive+0x419>
    71b2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    71b8:	49 83 c4 01          	add    r12,0x1
    71bc:	4d 39 a7 e0 00 00 00 	cmp    QWORD PTR [r15+0xe0],r12
    71c3:	0f 86 77 01 00 00    	jbe    7340 <compute_reflection_lighting_recursive+0x590>
    71c9:	4c 89 e6             	mov    rsi,r12
    71cc:	4c 89 ef             	mov    rdi,r13
    71cf:	e8 0c 5c 00 00       	call   cde0 <get_element_or_null_in_list>
    71d4:	48 8b 00             	mov    rax,QWORD PTR [rax]
    71d7:	48 39 d8             	cmp    rax,rbx
    71da:	74 dc                	je     71b8 <compute_reflection_lighting_recursive+0x408>
    71dc:	ff b5 18 ff ff ff    	push   QWORD PTR [rbp-0xe8]
    71e2:	4c 89 f6             	mov    rsi,r14
    71e5:	48 89 c7             	mov    rdi,rax
    71e8:	ff b5 10 ff ff ff    	push   QWORD PTR [rbp-0xf0]
    71ee:	ff b5 08 ff ff ff    	push   QWORD PTR [rbp-0xf8]
    71f4:	ff b5 00 ff ff ff    	push   QWORD PTR [rbp-0x100]
    71fa:	ff 50 60             	call   QWORD PTR [rax+0x60]
    71fd:	48 83 c4 20          	add    rsp,0x20
    7201:	84 c0                	test   al,al
    7203:	74 b3                	je     71b8 <compute_reflection_lighting_recursive+0x408>
    7205:	c5 7a 10 8d cc fe ff 	vmovss xmm9,DWORD PTR [rbp-0x134]
    720c:	ff 
    720d:	c5 7a 10 95 c4 fe ff 	vmovss xmm10,DWORD PTR [rbp-0x13c]
    7214:	ff 
    7215:	c4 41 18 57 e4       	vxorps xmm12,xmm12,xmm12
    721a:	c5 7a 10 9d c8 fe ff 	vmovss xmm11,DWORD PTR [rbp-0x138]
    7221:	ff 
    7222:	c4 c1 32 59 c1       	vmulss xmm0,xmm9,xmm9
    7227:	c4 c2 29 b9 c2       	vfmadd231ss xmm0,xmm10,xmm10
    722c:	c4 c2 21 b9 c3       	vfmadd231ss xmm0,xmm11,xmm11
    7231:	c5 78 2e e0          	vucomiss xmm12,xmm0
    7235:	0f 87 17 05 00 00    	ja     7752 <compute_reflection_lighting_recursive+0x9a2>
    723b:	c5 fa 51 c0          	vsqrtss xmm0,xmm0,xmm0
    723f:	c4 41 78 28 e9       	vmovaps xmm13,xmm9
    7244:	c5 92 5e f0          	vdivss xmm6,xmm13,xmm0
    7248:	c5 7a 10 b5 c4 fe ff 	vmovss xmm14,DWORD PTR [rbp-0x13c]
    724f:	ff 
    7250:	c5 fa 10 a5 c8 fe ff 	vmovss xmm4,DWORD PTR [rbp-0x138]
    7257:	ff 
    7258:	c5 7a 10 85 b0 fe ff 	vmovss xmm8,DWORD PTR [rbp-0x150]
    725f:	ff 
    7260:	c5 fa 10 bd ac fe ff 	vmovss xmm7,DWORD PTR [rbp-0x154]
    7267:	ff 
    7268:	c5 7a 10 6d 90       	vmovss xmm13,DWORD PTR [rbp-0x70]
    726d:	c5 7a 10 95 b4 fe ff 	vmovss xmm10,DWORD PTR [rbp-0x14c]
    7274:	ff 
    7275:	c5 0a 5e f8          	vdivss xmm15,xmm14,xmm0
    7279:	c5 ca 58 95 bc fe ff 	vaddss xmm2,xmm6,DWORD PTR [rbp-0x144]
    7280:	ff 
    7281:	c5 12 5c f7          	vsubss xmm14,xmm13,xmm7
    7285:	c5 ba 5c da          	vsubss xmm3,xmm8,xmm2
    7289:	c5 62 59 e3          	vmulss xmm12,xmm3,xmm3
    728d:	c5 da 5e c0          	vdivss xmm0,xmm4,xmm0
    7291:	c5 82 58 ad b8 fe ff 	vaddss xmm5,xmm15,DWORD PTR [rbp-0x148]
    7298:	ff 
    7299:	c5 7a 10 7d 94       	vmovss xmm15,DWORD PTR [rbp-0x6c]
    729e:	c5 c2 5c cd          	vsubss xmm1,xmm7,xmm5
    72a2:	c4 c1 02 5c e8       	vsubss xmm5,xmm15,xmm8
    72a7:	c5 fa 10 7d 98       	vmovss xmm7,DWORD PTR [rbp-0x68]
    72ac:	c5 d2 59 f5          	vmulss xmm6,xmm5,xmm5
    72b0:	c4 e2 19 99 c9       	vfmadd132ss xmm1,xmm12,xmm1
    72b5:	c4 42 49 99 f6       	vfmadd132ss xmm14,xmm6,xmm14
    72ba:	c5 7a 58 8d c0 fe ff 	vaddss xmm9,xmm0,DWORD PTR [rbp-0x140]
    72c1:	ff 
    72c2:	c4 41 2a 5c d9       	vsubss xmm11,xmm10,xmm9
    72c7:	c4 42 71 99 db       	vfmadd132ss xmm11,xmm1,xmm11
    72cc:	c4 c1 42 5c ca       	vsubss xmm1,xmm7,xmm10
    72d1:	c4 e2 09 99 c9       	vfmadd132ss xmm1,xmm14,xmm1
    72d6:	c5 78 2f d9          	vcomiss xmm11,xmm1
    72da:	0f 86 d8 fe ff ff    	jbe    71b8 <compute_reflection_lighting_recursive+0x408>
    72e0:	48 8b bd a0 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x160]
    72e7:	49 39 bf 90 00 00 00 	cmp    QWORD PTR [r15+0x90],rdi
    72ee:	0f 87 04 fd ff ff    	ja     6ff8 <compute_reflection_lighting_recursive+0x248>
    72f4:	44 8b bd a8 fe ff ff 	mov    r15d,DWORD PTR [rbp-0x158]
    72fb:	44 8b b5 94 fe ff ff 	mov    r14d,DWORD PTR [rbp-0x16c]
    7302:	8b 9d 90 fe ff ff    	mov    ebx,DWORD PTR [rbp-0x170]
    7308:	44 89 bd f0 fe ff ff 	mov    DWORD PTR [rbp-0x110],r15d
    730f:	44 89 b5 f4 fe ff ff 	mov    DWORD PTR [rbp-0x10c],r14d
    7316:	48 8b 85 f0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x110]
    731d:	89 9d f8 fe ff ff    	mov    DWORD PTR [rbp-0x108],ebx
    7323:	48 8b 95 f8 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x108]
    732a:	48 8d 65 d0          	lea    rsp,[rbp-0x30]
    732e:	5b                   	pop    rbx
    732f:	41 58                	pop    r8
    7331:	41 5c                	pop    r12
    7333:	41 5d                	pop    r13
    7335:	41 5e                	pop    r14
    7337:	41 5f                	pop    r15
    7339:	5d                   	pop    rbp
    733a:	49 8d 60 f8          	lea    rsp,[r8-0x8]
    733e:	c3                   	ret    
    733f:	90                   	nop
    7340:	4c 8b a5 98 fe ff ff 	mov    r12,QWORD PTR [rbp-0x168]
    7347:	c4 c1 7a 10 14 24    	vmovss xmm2,DWORD PTR [r12]
    734d:	c4 c1 7a 10 5c 24 04 	vmovss xmm3,DWORD PTR [r12+0x4]
    7354:	c5 6a 5c 85 b8 fe ff 	vsubss xmm8,xmm2,DWORD PTR [rbp-0x148]
    735b:	ff 
    735c:	c5 e2 5c a5 bc fe ff 	vsubss xmm4,xmm3,DWORD PTR [rbp-0x144]
    7363:	ff 
    7364:	c4 c1 7a 10 44 24 08 	vmovss xmm0,DWORD PTR [r12+0x8]
    736b:	c5 7a 5c 8d c0 fe ff 	vsubss xmm9,xmm0,DWORD PTR [rbp-0x140]
    7372:	ff 
    7373:	c5 7a 11 85 c4 fe ff 	vmovss DWORD PTR [rbp-0x13c],xmm8
    737a:	ff 
    737b:	c5 78 28 c4          	vmovaps xmm8,xmm4
    737f:	c5 fa 11 a5 cc fe ff 	vmovss DWORD PTR [rbp-0x134],xmm4
    7386:	ff 
    7387:	c5 7a 11 8d c8 fe ff 	vmovss DWORD PTR [rbp-0x138],xmm9
    738e:	ff 
    738f:	c4 41 3a 59 f8       	vmulss xmm15,xmm8,xmm8
    7394:	c5 7a 10 95 c4 fe ff 	vmovss xmm10,DWORD PTR [rbp-0x13c]
    739b:	ff 
    739c:	c4 41 18 57 e4       	vxorps xmm12,xmm12,xmm12
    73a1:	c5 7a 10 9d c8 fe ff 	vmovss xmm11,DWORD PTR [rbp-0x138]
    73a8:	ff 
    73a9:	c4 41 7a 10 74 24 10 	vmovss xmm14,DWORD PTR [r12+0x10]
    73b0:	45 8b 54 24 20       	mov    r10d,DWORD PTR [r12+0x20]
    73b5:	45 8b 5c 24 24       	mov    r11d,DWORD PTR [r12+0x24]
    73ba:	41 8b 5c 24 28       	mov    ebx,DWORD PTR [r12+0x28]
    73bf:	c4 42 29 b9 fa       	vfmadd231ss xmm15,xmm10,xmm10
    73c4:	c4 42 21 b9 fb       	vfmadd231ss xmm15,xmm11,xmm11
    73c9:	c4 41 78 2e e7       	vucomiss xmm12,xmm15
    73ce:	0f 87 90 03 00 00    	ja     7764 <compute_reflection_lighting_recursive+0x9b4>
    73d4:	c4 41 02 51 ef       	vsqrtss xmm13,xmm15,xmm15
    73d9:	44 89 9d b4 fe ff ff 	mov    DWORD PTR [rbp-0x14c],r11d
    73e0:	41 89 dc             	mov    r12d,ebx
    73e3:	45 89 d5             	mov    r13d,r10d
    73e6:	c5 fa 10 8d cc fe ff 	vmovss xmm1,DWORD PTR [rbp-0x134]
    73ed:	ff 
    73ee:	c5 fa 10 bd c4 fe ff 	vmovss xmm7,DWORD PTR [rbp-0x13c]
    73f5:	ff 
    73f6:	44 89 9d 98 fe ff ff 	mov    DWORD PTR [rbp-0x168],r11d
    73fd:	c5 fa 10 ad c8 fe ff 	vmovss xmm5,DWORD PTR [rbp-0x138]
    7404:	ff 
    7405:	44 89 95 ac fe ff ff 	mov    DWORD PTR [rbp-0x154],r10d
    740c:	c4 c1 72 5e d5       	vdivss xmm2,xmm1,xmm13
    7411:	c5 f0 57 c9          	vxorps xmm1,xmm1,xmm1
    7415:	c5 7a 11 bd 80 fe ff 	vmovss DWORD PTR [rbp-0x180],xmm15
    741c:	ff 
    741d:	c5 7a 11 b5 b0 fe ff 	vmovss DWORD PTR [rbp-0x150],xmm14
    7424:	ff 
    7425:	c4 c1 42 5e f5       	vdivss xmm6,xmm7,xmm13
    742a:	c5 6a 59 85 8c fe ff 	vmulss xmm8,xmm2,DWORD PTR [rbp-0x174]
    7431:	ff 
    7432:	c4 c1 52 5e c5       	vdivss xmm0,xmm5,xmm13
    7437:	c4 62 49 b9 85 88 fe 	vfmadd231ss xmm8,xmm6,DWORD PTR [rbp-0x178]
    743e:	ff ff 
    7440:	c4 e2 39 99 85 84 fe 	vfmadd132ss xmm0,xmm8,DWORD PTR [rbp-0x17c]
    7447:	ff ff 
    7449:	e8 22 b2 ff ff       	call   2670 <fmaxf@plt>
    744e:	44 8b 8d ac fe ff ff 	mov    r9d,DWORD PTR [rbp-0x154]
    7455:	c5 d8 57 e4          	vxorps xmm4,xmm4,xmm4
    7459:	8b 85 98 fe ff ff    	mov    eax,DWORD PTR [rbp-0x168]
    745f:	c5 f8 28 d8          	vmovaps xmm3,xmm0
    7463:	c5 da 2a eb          	vcvtsi2ss xmm5,xmm4,ebx
    7467:	c5 fa 10 b5 b0 fe ff 	vmovss xmm6,DWORD PTR [rbp-0x150]
    746e:	ff 
    746f:	c4 c1 5a 2a c1       	vcvtsi2ss xmm0,xmm4,r9d
    7474:	c5 5a 2a e0          	vcvtsi2ss xmm12,xmm4,eax
    7478:	c5 d2 59 fb          	vmulss xmm7,xmm5,xmm3
    747c:	c5 7a 59 cb          	vmulss xmm9,xmm0,xmm3
    7480:	c5 1a 59 eb          	vmulss xmm13,xmm12,xmm3
    7484:	c5 fa 2c df          	vcvttss2si ebx,xmm7
    7488:	c4 c1 7a 2c c9       	vcvttss2si ecx,xmm9
    748d:	c5 7a 10 8d 80 fe ff 	vmovss xmm9,DWORD PTR [rbp-0x180]
    7494:	ff 
    7495:	c4 c1 7a 2c f5       	vcvttss2si esi,xmm13
    749a:	c4 41 10 57 ed       	vxorps xmm13,xmm13,xmm13
    749f:	c5 da 2a cb          	vcvtsi2ss xmm1,xmm4,ebx
    74a3:	c5 5a 2a d1          	vcvtsi2ss xmm10,xmm4,ecx
    74a7:	c5 5a 2a f6          	vcvtsi2ss xmm14,xmm4,esi
    74ab:	c5 f2 59 d6          	vmulss xmm2,xmm1,xmm6
    74af:	c5 2a 59 de          	vmulss xmm11,xmm10,xmm6
    74b3:	c5 0a 59 fe          	vmulss xmm15,xmm14,xmm6
    74b7:	c5 fa 2c ca          	vcvttss2si ecx,xmm2
    74bb:	c4 c1 7a 2c fb       	vcvttss2si edi,xmm11
    74c0:	0f af bd 68 fe ff ff 	imul   edi,DWORD PTR [rbp-0x198]
    74c7:	0f af 8d 64 fe ff ff 	imul   ecx,DWORD PTR [rbp-0x19c]
    74ce:	c4 41 7a 2c df       	vcvttss2si r11d,xmm15
    74d3:	48 63 d7             	movsxd rdx,edi
    74d6:	44 0f af 9d 6c fe ff 	imul   r11d,DWORD PTR [rbp-0x194]
    74dd:	ff 
    74de:	4c 69 c2 81 80 80 80 	imul   r8,rdx,0xffffffff80808081
    74e5:	48 8b 95 58 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1a8]
    74ec:	c5 fa 10 5a 04       	vmovss xmm3,DWORD PTR [rdx+0x4]
    74f1:	c5 62 5c 9d bc fe ff 	vsubss xmm11,xmm3,DWORD PTR [rbp-0x144]
    74f8:	ff 
    74f9:	4d 63 d3             	movsxd r10,r11d
    74fc:	c5 7a 10 02          	vmovss xmm8,DWORD PTR [rdx]
    7500:	49 c1 e8 20          	shr    r8,0x20
    7504:	c5 3a 5c a5 b8 fe ff 	vsubss xmm12,xmm8,DWORD PTR [rbp-0x148]
    750b:	ff 
    750c:	41 01 f8             	add    r8d,edi
    750f:	c5 fa 10 62 08       	vmovss xmm4,DWORD PTR [rdx+0x8]
    7514:	c1 ff 1f             	sar    edi,0x1f
    7517:	c5 5a 5c 95 c0 fe ff 	vsubss xmm10,xmm4,DWORD PTR [rbp-0x140]
    751e:	ff 
    751f:	c4 c1 22 59 c3       	vmulss xmm0,xmm11,xmm11
    7524:	41 c1 f8 07          	sar    r8d,0x7
    7528:	4d 69 ca 81 80 80 80 	imul   r9,r10,0xffffffff80808081
    752f:	41 29 f8             	sub    r8d,edi
    7532:	48 63 f9             	movsxd rdi,ecx
    7535:	48 69 df 81 80 80 80 	imul   rbx,rdi,0xffffffff80808081
    753c:	44 89 85 b0 fe ff ff 	mov    DWORD PTR [rbp-0x150],r8d
    7543:	49 c1 e9 20          	shr    r9,0x20
    7547:	45 01 d9             	add    r9d,r11d
    754a:	41 c1 fb 1f          	sar    r11d,0x1f
    754e:	48 c1 eb 20          	shr    rbx,0x20
    7552:	c4 c2 19 b9 c4       	vfmadd231ss xmm0,xmm12,xmm12
    7557:	41 c1 f9 07          	sar    r9d,0x7
    755b:	01 cb                	add    ebx,ecx
    755d:	c1 f9 1f             	sar    ecx,0x1f
    7560:	45 29 d9             	sub    r9d,r11d
    7563:	c1 fb 07             	sar    ebx,0x7
    7566:	44 89 8d ac fe ff ff 	mov    DWORD PTR [rbp-0x154],r9d
    756d:	29 cb                	sub    ebx,ecx
    756f:	c4 c2 29 b9 c2       	vfmadd231ss xmm0,xmm10,xmm10
    7574:	c5 78 2e e8          	vucomiss xmm13,xmm0
    7578:	0f 87 60 03 00 00    	ja     78de <compute_reflection_lighting_recursive+0xb2e>
    757e:	c5 fa 51 c0          	vsqrtss xmm0,xmm0,xmm0
    7582:	c5 9a 5e e8          	vdivss xmm5,xmm12,xmm0
    7586:	c4 41 78 2e e9       	vucomiss xmm13,xmm9
    758b:	c5 a2 5e f8          	vdivss xmm7,xmm11,xmm0
    758f:	c5 aa 5e e0          	vdivss xmm4,xmm10,xmm0
    7593:	0f 87 f2 02 00 00    	ja     788b <compute_reflection_lighting_recursive+0xadb>
    7599:	c4 c1 32 51 c1       	vsqrtss xmm0,xmm9,xmm9
    759e:	c4 41 78 28 f5       	vmovaps xmm14,xmm13
    75a3:	c5 fa 10 8d cc fe ff 	vmovss xmm1,DWORD PTR [rbp-0x134]
    75aa:	ff 
    75ab:	c5 7a 10 bd c4 fe ff 	vmovss xmm15,DWORD PTR [rbp-0x13c]
    75b2:	ff 
    75b3:	c5 7a 10 85 c8 fe ff 	vmovss xmm8,DWORD PTR [rbp-0x138]
    75ba:	ff 
    75bb:	c5 7a 10 9d 8c fe ff 	vmovss xmm11,DWORD PTR [rbp-0x174]
    75c2:	ff 
    75c3:	c5 7a 10 8d 88 fe ff 	vmovss xmm9,DWORD PTR [rbp-0x178]
    75ca:	ff 
    75cb:	c5 7a 10 95 84 fe ff 	vmovss xmm10,DWORD PTR [rbp-0x17c]
    75d2:	ff 
    75d3:	c5 72 5e e8          	vdivss xmm13,xmm1,xmm0
    75d7:	c5 82 5e d0          	vdivss xmm2,xmm15,xmm0
    75db:	c4 c1 12 59 db       	vmulss xmm3,xmm13,xmm11
    75e0:	c5 ba 5e c0          	vdivss xmm0,xmm8,xmm0
    75e4:	c4 c2 69 b9 d9       	vfmadd231ss xmm3,xmm2,xmm9
    75e9:	c4 c2 79 b9 da       	vfmadd231ss xmm3,xmm0,xmm10
    75ee:	c5 62 58 e3          	vaddss xmm12,xmm3,xmm3
    75f2:	c4 42 19 bb eb       	vfmsub231ss xmm13,xmm12,xmm11
    75f7:	c4 c2 19 bb d1       	vfmsub231ss xmm2,xmm12,xmm9
    75fc:	c4 42 79 9b e2       	vfmsub132ss xmm12,xmm0,xmm10
    7601:	c4 c1 12 59 c5       	vmulss xmm0,xmm13,xmm13
    7606:	c4 e2 69 b9 c2       	vfmadd231ss xmm0,xmm2,xmm2
    760b:	c4 c2 19 b9 c4       	vfmadd231ss xmm0,xmm12,xmm12
    7610:	c5 78 2e f0          	vucomiss xmm14,xmm0
    7614:	0f 87 f7 01 00 00    	ja     7811 <compute_reflection_lighting_recursive+0xa61>
    761a:	c5 fa 51 c0          	vsqrtss xmm0,xmm0,xmm0
    761e:	c5 92 5e c8          	vdivss xmm1,xmm13,xmm0
    7622:	c5 fa 11 b5 cc fe ff 	vmovss DWORD PTR [rbp-0x134],xmm6
    7629:	ff 
    762a:	c5 6a 5e f8          	vdivss xmm15,xmm2,xmm0
    762e:	c5 72 59 c7          	vmulss xmm8,xmm1,xmm7
    7632:	c5 f0 57 c9          	vxorps xmm1,xmm1,xmm1
    7636:	c5 1a 5e f0          	vdivss xmm14,xmm12,xmm0
    763a:	c4 c2 39 99 ef       	vfmadd132ss xmm5,xmm8,xmm15
    763f:	c4 c2 51 99 e6       	vfmadd132ss xmm4,xmm5,xmm14
    7644:	c5 f8 28 c4          	vmovaps xmm0,xmm4
    7648:	e8 23 b0 ff ff       	call   2670 <fmaxf@plt>
    764d:	c5 fa 10 0d 73 ab 00 	vmovss xmm1,DWORD PTR [rip+0xab73]        # 121c8 <_IO_stdin_used+0x1c8>
    7654:	00 
    7655:	e8 a6 ae ff ff       	call   2500 <powf@plt>
    765a:	c4 41 20 57 db       	vxorps xmm11,xmm11,xmm11
    765f:	b8 ff 00 00 00       	mov    eax,0xff
    7664:	c5 fa 10 a5 cc fe ff 	vmovss xmm4,DWORD PTR [rbp-0x134]
    766b:	ff 
    766c:	c4 c1 22 2a dd       	vcvtsi2ss xmm3,xmm11,r13d
    7671:	41 ba ff 00 00 00    	mov    r10d,0xff
    7677:	b9 ff 00 00 00       	mov    ecx,0xff
    767c:	48 8b bd a0 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x160]
    7683:	c5 a2 2a ad b4 fe ff 	vcvtsi2ss xmm5,xmm11,DWORD PTR [rbp-0x14c]
    768a:	ff 
    768b:	c4 c1 22 2a f4       	vcvtsi2ss xmm6,xmm11,r12d
    7690:	c5 62 59 c8          	vmulss xmm9,xmm3,xmm0
    7694:	c5 52 59 e0          	vmulss xmm12,xmm5,xmm0
    7698:	c5 ca 59 c0          	vmulss xmm0,xmm6,xmm0
    769c:	c4 41 7a 2c e9       	vcvttss2si r13d,xmm9
    76a1:	c4 c1 7a 2c f4       	vcvttss2si esi,xmm12
    76a6:	c5 7a 2c e0          	vcvttss2si r12d,xmm0
    76aa:	c4 41 22 2a d5       	vcvtsi2ss xmm10,xmm11,r13d
    76af:	c5 22 2a ee          	vcvtsi2ss xmm13,xmm11,esi
    76b3:	c4 41 22 2a f4       	vcvtsi2ss xmm14,xmm11,r12d
    76b8:	c5 aa 59 fc          	vmulss xmm7,xmm10,xmm4
    76bc:	c5 92 59 d4          	vmulss xmm2,xmm13,xmm4
    76c0:	c5 0a 59 fc          	vmulss xmm15,xmm14,xmm4
    76c4:	c5 7a 2c c7          	vcvttss2si r8d,xmm7
    76c8:	44 03 85 a8 fe ff ff 	add    r8d,DWORD PTR [rbp-0x158]
    76cf:	41 39 c0             	cmp    r8d,eax
    76d2:	c5 7a 2c da          	vcvttss2si r11d,xmm2
    76d6:	44 0f 4f c0          	cmovg  r8d,eax
    76da:	c4 41 7a 2c cf       	vcvttss2si r9d,xmm15
    76df:	44 03 85 b0 fe ff ff 	add    r8d,DWORD PTR [rbp-0x150]
    76e6:	41 39 c0             	cmp    r8d,eax
    76e9:	41 0f 4e c0          	cmovle eax,r8d
    76ed:	44 03 9d 94 fe ff ff 	add    r11d,DWORD PTR [rbp-0x16c]
    76f4:	45 39 d3             	cmp    r11d,r10d
    76f7:	45 0f 4f da          	cmovg  r11d,r10d
    76fb:	44 03 9d ac fe ff ff 	add    r11d,DWORD PTR [rbp-0x154]
    7702:	89 85 a8 fe ff ff    	mov    DWORD PTR [rbp-0x158],eax
    7708:	45 39 d3             	cmp    r11d,r10d
    770b:	45 0f 4e d3          	cmovle r10d,r11d
    770f:	44 03 8d 90 fe ff ff 	add    r9d,DWORD PTR [rbp-0x170]
    7716:	41 39 c9             	cmp    r9d,ecx
    7719:	44 0f 4f c9          	cmovg  r9d,ecx
    771d:	44 89 95 94 fe ff ff 	mov    DWORD PTR [rbp-0x16c],r10d
    7724:	41 01 d9             	add    r9d,ebx
    7727:	41 39 c9             	cmp    r9d,ecx
    772a:	41 0f 4e c9          	cmovle ecx,r9d
    772e:	89 8d 90 fe ff ff    	mov    DWORD PTR [rbp-0x170],ecx
    7734:	49 39 bf 90 00 00 00 	cmp    QWORD PTR [r15+0x90],rdi
    773b:	0f 87 b7 f8 ff ff    	ja     6ff8 <compute_reflection_lighting_recursive+0x248>
    7741:	e9 ae fb ff ff       	jmp    72f4 <compute_reflection_lighting_recursive+0x544>
    7746:	c5 f8 77             	vzeroupper 
    7749:	c5 78 28 c5          	vmovaps xmm8,xmm5
    774d:	e9 3d fc ff ff       	jmp    738f <compute_reflection_lighting_recursive+0x5df>
    7752:	e8 39 b2 ff ff       	call   2990 <sqrtf@plt>
    7757:	c5 7a 10 ad cc fe ff 	vmovss xmm13,DWORD PTR [rbp-0x134]
    775e:	ff 
    775f:	e9 e0 fa ff ff       	jmp    7244 <compute_reflection_lighting_recursive+0x494>
    7764:	c5 78 29 f8          	vmovaps xmm0,xmm15
    7768:	44 89 9d 80 fe ff ff 	mov    DWORD PTR [rbp-0x180],r11d
    776f:	44 89 95 98 fe ff ff 	mov    DWORD PTR [rbp-0x168],r10d
    7776:	c5 7a 11 b5 ac fe ff 	vmovss DWORD PTR [rbp-0x154],xmm14
    777d:	ff 
    777e:	c5 7a 11 bd b0 fe ff 	vmovss DWORD PTR [rbp-0x150],xmm15
    7785:	ff 
    7786:	e8 05 b2 ff ff       	call   2990 <sqrtf@plt>
    778b:	41 8b 74 24 24       	mov    esi,DWORD PTR [r12+0x24]
    7790:	45 8b 6c 24 20       	mov    r13d,DWORD PTR [r12+0x20]
    7795:	44 8b 9d 80 fe ff ff 	mov    r11d,DWORD PTR [rbp-0x180]
    779c:	45 8b 64 24 28       	mov    r12d,DWORD PTR [r12+0x28]
    77a1:	c5 78 28 e8          	vmovaps xmm13,xmm0
    77a5:	89 b5 b4 fe ff ff    	mov    DWORD PTR [rbp-0x14c],esi
    77ab:	44 8b 95 98 fe ff ff 	mov    r10d,DWORD PTR [rbp-0x168]
    77b2:	c5 7a 10 b5 ac fe ff 	vmovss xmm14,DWORD PTR [rbp-0x154]
    77b9:	ff 
    77ba:	c5 7a 10 bd b0 fe ff 	vmovss xmm15,DWORD PTR [rbp-0x150]
    77c1:	ff 
    77c2:	e9 1f fc ff ff       	jmp    73e6 <compute_reflection_lighting_recursive+0x636>
    77c7:	c5 f8 13 b5 98 fe ff 	vmovlps QWORD PTR [rbp-0x168],xmm6
    77ce:	ff 
    77cf:	c5 fa 11 95 c4 fe ff 	vmovss DWORD PTR [rbp-0x13c],xmm2
    77d6:	ff 
    77d7:	c5 fa 11 bd c8 fe ff 	vmovss DWORD PTR [rbp-0x138],xmm7
    77de:	ff 
    77df:	c5 fa 11 8d cc fe ff 	vmovss DWORD PTR [rbp-0x134],xmm1
    77e6:	ff 
    77e7:	e8 a4 b1 ff ff       	call   2990 <sqrtf@plt>
    77ec:	c5 fa 7e b5 98 fe ff 	vmovq  xmm6,QWORD PTR [rbp-0x168]
    77f3:	ff 
    77f4:	c5 fa 10 95 c4 fe ff 	vmovss xmm2,DWORD PTR [rbp-0x13c]
    77fb:	ff 
    77fc:	c5 fa 10 bd c8 fe ff 	vmovss xmm7,DWORD PTR [rbp-0x138]
    7803:	ff 
    7804:	c5 fa 10 8d cc fe ff 	vmovss xmm1,DWORD PTR [rbp-0x134]
    780b:	ff 
    780c:	e9 9c f8 ff ff       	jmp    70ad <compute_reflection_lighting_recursive+0x2fd>
    7811:	c5 fa 11 a5 54 fe ff 	vmovss DWORD PTR [rbp-0x1ac],xmm4
    7818:	ff 
    7819:	c5 fa 11 bd 60 fe ff 	vmovss DWORD PTR [rbp-0x1a0],xmm7
    7820:	ff 
    7821:	c5 fa 11 ad 80 fe ff 	vmovss DWORD PTR [rbp-0x180],xmm5
    7828:	ff 
    7829:	c5 7a 11 a5 98 fe ff 	vmovss DWORD PTR [rbp-0x168],xmm12
    7830:	ff 
    7831:	c5 7a 11 ad c4 fe ff 	vmovss DWORD PTR [rbp-0x13c],xmm13
    7838:	ff 
    7839:	c5 fa 11 95 c8 fe ff 	vmovss DWORD PTR [rbp-0x138],xmm2
    7840:	ff 
    7841:	c5 fa 11 b5 cc fe ff 	vmovss DWORD PTR [rbp-0x134],xmm6
    7848:	ff 
    7849:	e8 42 b1 ff ff       	call   2990 <sqrtf@plt>
    784e:	c5 fa 10 a5 54 fe ff 	vmovss xmm4,DWORD PTR [rbp-0x1ac]
    7855:	ff 
    7856:	c5 fa 10 bd 60 fe ff 	vmovss xmm7,DWORD PTR [rbp-0x1a0]
    785d:	ff 
    785e:	c5 fa 10 ad 80 fe ff 	vmovss xmm5,DWORD PTR [rbp-0x180]
    7865:	ff 
    7866:	c5 7a 10 a5 98 fe ff 	vmovss xmm12,DWORD PTR [rbp-0x168]
    786d:	ff 
    786e:	c5 7a 10 ad c4 fe ff 	vmovss xmm13,DWORD PTR [rbp-0x13c]
    7875:	ff 
    7876:	c5 fa 10 95 c8 fe ff 	vmovss xmm2,DWORD PTR [rbp-0x138]
    787d:	ff 
    787e:	c5 fa 10 b5 cc fe ff 	vmovss xmm6,DWORD PTR [rbp-0x134]
    7885:	ff 
    7886:	e9 93 fd ff ff       	jmp    761e <compute_reflection_lighting_recursive+0x86e>
    788b:	c5 78 29 c8          	vmovaps xmm0,xmm9
    788f:	c5 fa 11 a5 54 fe ff 	vmovss DWORD PTR [rbp-0x1ac],xmm4
    7896:	ff 
    7897:	c5 fa 11 bd 60 fe ff 	vmovss DWORD PTR [rbp-0x1a0],xmm7
    789e:	ff 
    789f:	c5 fa 11 ad 80 fe ff 	vmovss DWORD PTR [rbp-0x180],xmm5
    78a6:	ff 
    78a7:	c5 fa 11 b5 98 fe ff 	vmovss DWORD PTR [rbp-0x168],xmm6
    78ae:	ff 
    78af:	e8 dc b0 ff ff       	call   2990 <sqrtf@plt>
    78b4:	c5 fa 10 a5 54 fe ff 	vmovss xmm4,DWORD PTR [rbp-0x1ac]
    78bb:	ff 
    78bc:	c5 fa 10 bd 60 fe ff 	vmovss xmm7,DWORD PTR [rbp-0x1a0]
    78c3:	ff 
    78c4:	c4 41 08 57 f6       	vxorps xmm14,xmm14,xmm14
    78c9:	c5 fa 10 ad 80 fe ff 	vmovss xmm5,DWORD PTR [rbp-0x180]
    78d0:	ff 
    78d1:	c5 fa 10 b5 98 fe ff 	vmovss xmm6,DWORD PTR [rbp-0x168]
    78d8:	ff 
    78d9:	e9 c5 fc ff ff       	jmp    75a3 <compute_reflection_lighting_recursive+0x7f3>
    78de:	c5 7a 11 8d 50 fe ff 	vmovss DWORD PTR [rbp-0x1b0],xmm9
    78e5:	ff 
    78e6:	c5 7a 11 95 54 fe ff 	vmovss DWORD PTR [rbp-0x1ac],xmm10
    78ed:	ff 
    78ee:	c5 7a 11 9d 60 fe ff 	vmovss DWORD PTR [rbp-0x1a0],xmm11
    78f5:	ff 
    78f6:	c5 7a 11 a5 80 fe ff 	vmovss DWORD PTR [rbp-0x180],xmm12
    78fd:	ff 
    78fe:	c5 fa 11 b5 98 fe ff 	vmovss DWORD PTR [rbp-0x168],xmm6
    7905:	ff 
    7906:	e8 85 b0 ff ff       	call   2990 <sqrtf@plt>
    790b:	c5 7a 10 8d 50 fe ff 	vmovss xmm9,DWORD PTR [rbp-0x1b0]
    7912:	ff 
    7913:	c5 7a 10 95 54 fe ff 	vmovss xmm10,DWORD PTR [rbp-0x1ac]
    791a:	ff 
    791b:	c4 41 10 57 ed       	vxorps xmm13,xmm13,xmm13
    7920:	c5 7a 10 9d 60 fe ff 	vmovss xmm11,DWORD PTR [rbp-0x1a0]
    7927:	ff 
    7928:	c5 7a 10 a5 80 fe ff 	vmovss xmm12,DWORD PTR [rbp-0x180]
    792f:	ff 
    7930:	c5 fa 10 b5 98 fe ff 	vmovss xmm6,DWORD PTR [rbp-0x168]
    7937:	ff 
    7938:	e9 45 fc ff ff       	jmp    7582 <compute_reflection_lighting_recursive+0x7d2>
    793d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000007940 <trace_reflection_color>:
    7940:	f3 0f 1e fa          	endbr64 
    7944:	4c 8d 54 24 08       	lea    r10,[rsp+0x8]
    7949:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    794d:	c4 41 10 57 ed       	vxorps xmm13,xmm13,xmm13
    7952:	41 ff 72 f8          	push   QWORD PTR [r10-0x8]
    7956:	55                   	push   rbp
    7957:	48 89 e5             	mov    rbp,rsp
    795a:	41 57                	push   r15
    795c:	41 56                	push   r14
    795e:	49 89 f6             	mov    r14,rsi
    7961:	41 55                	push   r13
    7963:	41 54                	push   r12
    7965:	49 89 fc             	mov    r12,rdi
    7968:	41 52                	push   r10
    796a:	53                   	push   rbx
    796b:	48 81 ec 60 01 00 00 	sub    rsp,0x160
    7972:	c4 c1 7a 10 6a 24    	vmovss xmm5,DWORD PTR [r10+0x24]
    7978:	c4 41 7a 10 4a 04    	vmovss xmm9,DWORD PTR [r10+0x4]
    797e:	c4 c1 7a 10 42 34    	vmovss xmm0,DWORD PTR [r10+0x34]
    7984:	c4 c1 7a 10 7a 20    	vmovss xmm7,DWORD PTR [r10+0x20]
    798a:	c5 32 5c d5          	vsubss xmm10,xmm9,xmm5
    798e:	c4 c1 7a 10 12       	vmovss xmm2,DWORD PTR [r10]
    7993:	41 8b 42 40          	mov    eax,DWORD PTR [r10+0x40]
    7997:	c5 fa 11 ad b4 fe ff 	vmovss DWORD PTR [rbp-0x14c],xmm5
    799e:	ff 
    799f:	c5 fa 11 85 c8 fe ff 	vmovss DWORD PTR [rbp-0x138],xmm0
    79a6:	ff 
    79a7:	c4 c1 7a 10 72 28    	vmovss xmm6,DWORD PTR [r10+0x28]
    79ad:	c4 c1 7a 10 62 30    	vmovss xmm4,DWORD PTR [r10+0x30]
    79b3:	c5 6a 5c c7          	vsubss xmm8,xmm2,xmm7
    79b7:	c4 c1 7a 10 4a 38    	vmovss xmm1,DWORD PTR [r10+0x38]
    79bd:	41 8b 52 44          	mov    edx,DWORD PTR [r10+0x44]
    79c1:	89 85 84 fe ff ff    	mov    DWORD PTR [rbp-0x17c],eax
    79c7:	c4 c1 2a 59 c2       	vmulss xmm0,xmm10,xmm10
    79cc:	41 8b 4a 48          	mov    ecx,DWORD PTR [r10+0x48]
    79d0:	c4 c1 7a 10 5a 2c    	vmovss xmm3,DWORD PTR [r10+0x2c]
    79d6:	c5 fa 11 bd ac fe ff 	vmovss DWORD PTR [rbp-0x154],xmm7
    79dd:	ff 
    79de:	89 95 7c fe ff ff    	mov    DWORD PTR [rbp-0x184],edx
    79e4:	89 8d 88 fe ff ff    	mov    DWORD PTR [rbp-0x178],ecx
    79ea:	c5 fa 11 b5 b0 fe ff 	vmovss DWORD PTR [rbp-0x150],xmm6
    79f1:	ff 
    79f2:	c5 fa 11 a5 c4 fe ff 	vmovss DWORD PTR [rbp-0x13c],xmm4
    79f9:	ff 
    79fa:	c4 c2 39 b9 c0       	vfmadd231ss xmm0,xmm8,xmm8
    79ff:	c5 fa 11 8d cc fe ff 	vmovss DWORD PTR [rbp-0x134],xmm1
    7a06:	ff 
    7a07:	c5 7a 11 85 c0 fe ff 	vmovss DWORD PTR [rbp-0x140],xmm8
    7a0e:	ff 
    7a0f:	c5 7a 11 95 bc fe ff 	vmovss DWORD PTR [rbp-0x144],xmm10
    7a16:	ff 
    7a17:	c4 41 7a 10 5a 08    	vmovss xmm11,DWORD PTR [r10+0x8]
    7a1d:	c5 22 5c e6          	vsubss xmm12,xmm11,xmm6
    7a21:	c4 c2 19 b9 c4       	vfmadd231ss xmm0,xmm12,xmm12
    7a26:	c5 7a 11 a5 b8 fe ff 	vmovss DWORD PTR [rbp-0x148],xmm12
    7a2d:	ff 
    7a2e:	c5 78 2e e8          	vucomiss xmm13,xmm0
    7a32:	c5 fa 11 85 a8 fe ff 	vmovss DWORD PTR [rbp-0x158],xmm0
    7a39:	ff 
    7a3a:	0f 87 38 07 00 00    	ja     8178 <trace_reflection_color+0x838>
    7a40:	c5 fa 51 c0          	vsqrtss xmm0,xmm0,xmm0
    7a44:	c4 41 78 28 f0       	vmovaps xmm14,xmm8
    7a49:	c4 41 78 28 fa       	vmovaps xmm15,xmm10
    7a4e:	c5 82 5e d0          	vdivss xmm2,xmm15,xmm0
    7a52:	c5 fa 10 bd b8 fe ff 	vmovss xmm7,DWORD PTR [rbp-0x148]
    7a59:	ff 
    7a5a:	c5 fa 10 b5 c8 fe ff 	vmovss xmm6,DWORD PTR [rbp-0x138]
    7a61:	ff 
    7a62:	c4 41 30 57 c9       	vxorps xmm9,xmm9,xmm9
    7a67:	c5 7a 10 85 c4 fe ff 	vmovss xmm8,DWORD PTR [rbp-0x13c]
    7a6e:	ff 
    7a6f:	c5 fa 10 ad cc fe ff 	vmovss xmm5,DWORD PTR [rbp-0x134]
    7a76:	ff 
    7a77:	c5 8a 5e e0          	vdivss xmm4,xmm14,xmm0
    7a7b:	c5 ea 59 ce          	vmulss xmm1,xmm2,xmm6
    7a7f:	c5 c2 5e c0          	vdivss xmm0,xmm7,xmm0
    7a83:	c4 c2 59 b9 c8       	vfmadd231ss xmm1,xmm4,xmm8
    7a88:	c4 e2 79 b9 cd       	vfmadd231ss xmm1,xmm0,xmm5
    7a8d:	c5 72 58 d1          	vaddss xmm10,xmm1,xmm1
    7a91:	c4 e2 29 bb d6       	vfmsub231ss xmm2,xmm10,xmm6
    7a96:	c4 c2 29 bb e0       	vfmsub231ss xmm4,xmm10,xmm8
    7a9b:	c4 62 79 9b d5       	vfmsub132ss xmm10,xmm0,xmm5
    7aa0:	c5 ea 59 c2          	vmulss xmm0,xmm2,xmm2
    7aa4:	c4 e2 59 b9 c4       	vfmadd231ss xmm0,xmm4,xmm4
    7aa9:	c4 c2 29 b9 c2       	vfmadd231ss xmm0,xmm10,xmm10
    7aae:	c5 78 2e c8          	vucomiss xmm9,xmm0
    7ab2:	0f 87 f2 06 00 00    	ja     81aa <trace_reflection_color+0x86a>
    7ab8:	c5 fa 51 c0          	vsqrtss xmm0,xmm0,xmm0
    7abc:	c5 5a 5e d8          	vdivss xmm11,xmm4,xmm0
    7ac0:	c5 7a 10 3d 04 a7 00 	vmovss xmm15,DWORD PTR [rip+0xa704]        # 121cc <_IO_stdin_used+0x1cc>
    7ac7:	00 
    7ac8:	31 ff                	xor    edi,edi
    7aca:	31 d2                	xor    edx,edx
    7acc:	c7 45 80 ff ff 7f 7f 	mov    DWORD PTR [rbp-0x80],0x7f7fffff
    7ad3:	45 31 c0             	xor    r8d,r8d
    7ad6:	45 31 c9             	xor    r9d,r9d
    7ad9:	45 31 d2             	xor    r10d,r10d
    7adc:	c5 7a 10 b5 0c ff ff 	vmovss xmm14,DWORD PTR [rbp-0xf4]
    7ae3:	ff 
    7ae4:	45 31 db             	xor    r11d,r11d
    7ae7:	45 31 ff             	xor    r15d,r15d
    7aea:	49 83 bc 24 e0 00 00 	cmp    QWORD PTR [r12+0xe0],0x0
    7af1:	00 00 
    7af3:	4d 8d ac 24 d8 00 00 	lea    r13,[r12+0xd8]
    7afa:	00 
    7afb:	48 8d 9d 50 ff ff ff 	lea    rbx,[rbp-0xb0]
    7b02:	c5 7a 11 b5 80 fe ff 	vmovss DWORD PTR [rbp-0x180],xmm14
    7b09:	ff 
    7b0a:	c5 6a 5e e0          	vdivss xmm12,xmm2,xmm0
    7b0e:	c5 78 29 df          	vmovaps xmm7,xmm11
    7b12:	c5 7a 11 9d 94 fe ff 	vmovss DWORD PTR [rbp-0x16c],xmm11
    7b19:	ff 
    7b1a:	c4 e2 01 a9 bd ac fe 	vfmadd213ss xmm7,xmm15,DWORD PTR [rbp-0x154]
    7b21:	ff ff 
    7b23:	c5 fa 11 bd a4 fe ff 	vmovss DWORD PTR [rbp-0x15c],xmm7
    7b2a:	ff 
    7b2b:	c5 2a 5e e8          	vdivss xmm13,xmm10,xmm0
    7b2f:	c5 78 29 e6          	vmovaps xmm6,xmm12
    7b33:	c4 c1 20 14 cc       	vunpcklps xmm1,xmm11,xmm12
    7b38:	c4 41 21 ef db       	vpxor  xmm11,xmm11,xmm11
    7b3d:	c5 7a 11 a5 90 fe ff 	vmovss DWORD PTR [rbp-0x170],xmm12
    7b44:	ff 
    7b45:	c4 e2 01 a9 b5 b4 fe 	vfmadd213ss xmm6,xmm15,DWORD PTR [rbp-0x14c]
    7b4c:	ff ff 
    7b4e:	c5 79 7f 9d 70 ff ff 	vmovdqa XMMWORD PTR [rbp-0x90],xmm11
    7b55:	ff 
    7b56:	c5 79 7f 9d 50 ff ff 	vmovdqa XMMWORD PTR [rbp-0xb0],xmm11
    7b5d:	ff 
    7b5e:	c5 79 7f 9d 60 ff ff 	vmovdqa XMMWORD PTR [rbp-0xa0],xmm11
    7b65:	ff 
    7b66:	c5 79 7f 5d 90       	vmovdqa XMMWORD PTR [rbp-0x70],xmm11
    7b6b:	c5 79 7f 5d a0       	vmovdqa XMMWORD PTR [rbp-0x60],xmm11
    7b70:	c5 c0 14 d6          	vunpcklps xmm2,xmm7,xmm6
    7b74:	c5 fa 11 b5 a0 fe ff 	vmovss DWORD PTR [rbp-0x160],xmm6
    7b7b:	ff 
    7b7c:	c5 79 7f 5d b0       	vmovdqa XMMWORD PTR [rbp-0x50],xmm11
    7b81:	c5 78 29 e8          	vmovaps xmm0,xmm13
    7b85:	c5 7a 11 ad 8c fe ff 	vmovss DWORD PTR [rbp-0x174],xmm13
    7b8c:	ff 
    7b8d:	c4 62 01 a9 ad b0 fe 	vfmadd213ss xmm13,xmm15,DWORD PTR [rbp-0x150]
    7b94:	ff ff 
    7b96:	c4 42 61 99 fe       	vfmadd132ss xmm15,xmm3,xmm14
    7b9b:	c4 c1 78 14 ee       	vunpcklps xmm5,xmm0,xmm14
    7ba0:	c5 f9 6f 45 80       	vmovdqa xmm0,XMMWORD PTR [rbp-0x80]
    7ba5:	c5 70 16 cd          	vmovlhps xmm9,xmm1,xmm5
    7ba9:	c5 f9 7f 45 c0       	vmovdqa XMMWORD PTR [rbp-0x40],xmm0
    7bae:	c5 7a 11 ad 9c fe ff 	vmovss DWORD PTR [rbp-0x164],xmm13
    7bb5:	ff 
    7bb6:	c4 41 10 14 d7       	vunpcklps xmm10,xmm13,xmm15
    7bbb:	c5 7a 11 bd 98 fe ff 	vmovss DWORD PTR [rbp-0x168],xmm15
    7bc2:	ff 
    7bc3:	c4 c1 68 16 e2       	vmovlhps xmm4,xmm2,xmm10
    7bc8:	c4 c3 5d 18 d9 01    	vinsertf128 ymm3,ymm4,xmm9,0x1
    7bce:	c5 fc 29 9d 30 ff ff 	vmovaps YMMWORD PTR [rbp-0xd0],ymm3
    7bd5:	ff 
    7bd6:	0f 84 94 05 00 00    	je     8170 <trace_reflection_color+0x830>
    7bdc:	c5 f8 77             	vzeroupper 
    7bdf:	90                   	nop
    7be0:	4c 89 fe             	mov    rsi,r15
    7be3:	4c 89 ef             	mov    rdi,r13
    7be6:	49 83 c7 01          	add    r15,0x1
    7bea:	e8 f1 51 00 00       	call   cde0 <get_element_or_null_in_list>
    7bef:	48 89 de             	mov    rsi,rbx
    7bf2:	48 8b 00             	mov    rax,QWORD PTR [rax]
    7bf5:	ff b5 48 ff ff ff    	push   QWORD PTR [rbp-0xb8]
    7bfb:	ff b5 40 ff ff ff    	push   QWORD PTR [rbp-0xc0]
    7c01:	ff b5 38 ff ff ff    	push   QWORD PTR [rbp-0xc8]
    7c07:	48 89 c7             	mov    rdi,rax
    7c0a:	ff b5 30 ff ff ff    	push   QWORD PTR [rbp-0xd0]
    7c10:	ff 50 60             	call   QWORD PTR [rax+0x60]
    7c13:	48 83 c4 20          	add    rsp,0x20
    7c17:	4d 3b bc 24 e0 00 00 	cmp    r15,QWORD PTR [r12+0xe0]
    7c1e:	00 
    7c1f:	72 bf                	jb     7be0 <trace_reflection_color+0x2a0>
    7c21:	48 8b bd 50 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb0]
    7c28:	48 8b 95 58 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xa8]
    7c2f:	4c 8b 85 60 ff ff ff 	mov    r8,QWORD PTR [rbp-0xa0]
    7c36:	4c 8b 8d 68 ff ff ff 	mov    r9,QWORD PTR [rbp-0x98]
    7c3d:	4c 8b 95 70 ff ff ff 	mov    r10,QWORD PTR [rbp-0x90]
    7c44:	4c 8b 9d 78 ff ff ff 	mov    r11,QWORD PTR [rbp-0x88]
    7c4b:	c5 f9 6f 45 80       	vmovdqa xmm0,XMMWORD PTR [rbp-0x80]
    7c50:	49 83 fe 05          	cmp    r14,0x5
    7c54:	48 89 7d 90          	mov    QWORD PTR [rbp-0x70],rdi
    7c58:	c5 7a 10 b5 50 ff ff 	vmovss xmm14,DWORD PTR [rbp-0xb0]
    7c5f:	ff 
    7c60:	48 89 55 98          	mov    QWORD PTR [rbp-0x68],rdx
    7c64:	c5 7a 10 ad 54 ff ff 	vmovss xmm13,DWORD PTR [rbp-0xac]
    7c6b:	ff 
    7c6c:	40 0f 97 c6          	seta   sil
    7c70:	4c 89 45 a0          	mov    QWORD PTR [rbp-0x60],r8
    7c74:	c5 7a 10 a5 58 ff ff 	vmovss xmm12,DWORD PTR [rbp-0xa8]
    7c7b:	ff 
    7c7c:	4c 89 4d a8          	mov    QWORD PTR [rbp-0x58],r9
    7c80:	c5 7a 10 7d 80       	vmovss xmm15,DWORD PTR [rbp-0x80]
    7c85:	4c 89 55 b0          	mov    QWORD PTR [rbp-0x50],r10
    7c89:	4c 89 5d b8          	mov    QWORD PTR [rbp-0x48],r11
    7c8d:	c5 f9 7f 45 c0       	vmovdqa XMMWORD PTR [rbp-0x40],xmm0
    7c92:	77 12                	ja     7ca6 <trace_reflection_color+0x366>
    7c94:	c5 78 2e 3d 1c a5 00 	vucomiss xmm15,DWORD PTR [rip+0xa51c]        # 121b8 <_IO_stdin_used+0x1b8>
    7c9b:	00 
    7c9c:	0f 9b c1             	setnp  cl
    7c9f:	0f 45 ce             	cmovne ecx,esi
    7ca2:	84 c9                	test   cl,cl
    7ca4:	74 3a                	je     7ce0 <trace_reflection_color+0x3a0>
    7ca6:	48 c7 85 10 ff ff ff 	mov    QWORD PTR [rbp-0xf0],0x0
    7cad:	00 00 00 00 
    7cb1:	c7 85 18 ff ff ff 00 	mov    DWORD PTR [rbp-0xe8],0x0
    7cb8:	00 00 00 
    7cbb:	48 8b 85 10 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf0]
    7cc2:	48 8b 95 18 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xe8]
    7cc9:	48 8d 65 d0          	lea    rsp,[rbp-0x30]
    7ccd:	5b                   	pop    rbx
    7cce:	5e                   	pop    rsi
    7ccf:	41 5c                	pop    r12
    7cd1:	41 5d                	pop    r13
    7cd3:	41 5e                	pop    r14
    7cd5:	41 5f                	pop    r15
    7cd7:	5d                   	pop    rbp
    7cd8:	48 8d 66 f8          	lea    rsp,[rsi-0x8]
    7cdc:	c3                   	ret    
    7cdd:	0f 1f 00             	nop    DWORD PTR [rax]
    7ce0:	c5 fa 10 bd a4 fe ff 	vmovss xmm7,DWORD PTR [rbp-0x15c]
    7ce7:	ff 
    7ce8:	c5 fa 10 b5 a0 fe ff 	vmovss xmm6,DWORD PTR [rbp-0x160]
    7cef:	ff 
    7cf0:	48 83 ec 10          	sub    rsp,0x10
    7cf4:	c5 7a 11 a5 70 fe ff 	vmovss DWORD PTR [rbp-0x190],xmm12
    7cfb:	ff 
    7cfc:	c5 7a 10 85 9c fe ff 	vmovss xmm8,DWORD PTR [rbp-0x164]
    7d03:	ff 
    7d04:	c5 fa 10 ad 98 fe ff 	vmovss xmm5,DWORD PTR [rbp-0x168]
    7d0b:	ff 
    7d0c:	c5 fa 7f 04 24       	vmovdqu XMMWORD PTR [rsp],xmm0
    7d11:	49 8d 76 01          	lea    rsi,[r14+0x1]
    7d15:	c5 fa 10 8d 94 fe ff 	vmovss xmm1,DWORD PTR [rbp-0x16c]
    7d1c:	ff 
    7d1d:	c5 7a 10 8d 90 fe ff 	vmovss xmm9,DWORD PTR [rbp-0x170]
    7d24:	ff 
    7d25:	41 53                	push   r11
    7d27:	c5 7a 10 95 8c fe ff 	vmovss xmm10,DWORD PTR [rbp-0x174]
    7d2e:	ff 
    7d2f:	c5 fa 10 95 80 fe ff 	vmovss xmm2,DWORD PTR [rbp-0x180]
    7d36:	ff 
    7d37:	41 52                	push   r10
    7d39:	c5 7a 11 ad 74 fe ff 	vmovss DWORD PTR [rbp-0x18c],xmm13
    7d40:	ff 
    7d41:	41 51                	push   r9
    7d43:	c5 7a 11 b5 78 fe ff 	vmovss DWORD PTR [rbp-0x188],xmm14
    7d4a:	ff 
    7d4b:	41 50                	push   r8
    7d4d:	c5 fa 11 bd 50 ff ff 	vmovss DWORD PTR [rbp-0xb0],xmm7
    7d54:	ff 
    7d55:	52                   	push   rdx
    7d56:	c5 7a 11 85 58 ff ff 	vmovss DWORD PTR [rbp-0xa8],xmm8
    7d5d:	ff 
    7d5e:	57                   	push   rdi
    7d5f:	4c 89 e7             	mov    rdi,r12
    7d62:	c5 fa 11 ad 5c ff ff 	vmovss DWORD PTR [rbp-0xa4],xmm5
    7d69:	ff 
    7d6a:	c5 fa 11 8d 60 ff ff 	vmovss DWORD PTR [rbp-0xa0],xmm1
    7d71:	ff 
    7d72:	c5 7a 11 8d 64 ff ff 	vmovss DWORD PTR [rbp-0x9c],xmm9
    7d79:	ff 
    7d7a:	c5 7a 11 95 68 ff ff 	vmovss DWORD PTR [rbp-0x98],xmm10
    7d81:	ff 
    7d82:	c5 fa 11 95 6c ff ff 	vmovss DWORD PTR [rbp-0x94],xmm2
    7d89:	ff 
    7d8a:	c5 fa 11 b5 54 ff ff 	vmovss DWORD PTR [rbp-0xac],xmm6
    7d91:	ff 
    7d92:	ff b5 68 ff ff ff    	push   QWORD PTR [rbp-0x98]
    7d98:	ff b5 60 ff ff ff    	push   QWORD PTR [rbp-0xa0]
    7d9e:	ff b5 58 ff ff ff    	push   QWORD PTR [rbp-0xa8]
    7da4:	ff b5 50 ff ff ff    	push   QWORD PTR [rbp-0xb0]
    7daa:	e8 01 f0 ff ff       	call   6db0 <compute_reflection_lighting_recursive>
    7daf:	c4 41 08 57 f6       	vxorps xmm14,xmm14,xmm14
    7db4:	48 83 c4 60          	add    rsp,0x60
    7db8:	c5 fa 10 a5 74 fe ff 	vmovss xmm4,DWORD PTR [rbp-0x18c]
    7dbf:	ff 
    7dc0:	c5 5a 5c ad b4 fe ff 	vsubss xmm13,xmm4,DWORD PTR [rbp-0x14c]
    7dc7:	ff 
    7dc8:	c5 fa 10 85 78 fe ff 	vmovss xmm0,DWORD PTR [rbp-0x188]
    7dcf:	ff 
    7dd0:	48 89 85 f0 fe ff ff 	mov    QWORD PTR [rbp-0x110],rax
    7dd7:	41 89 c5             	mov    r13d,eax
    7dda:	c5 fa 5c 9d ac fe ff 	vsubss xmm3,xmm0,DWORD PTR [rbp-0x154]
    7de1:	ff 
    7de2:	c5 7a 10 9d 70 fe ff 	vmovss xmm11,DWORD PTR [rbp-0x190]
    7de9:	ff 
    7dea:	48 89 95 f8 fe ff ff 	mov    QWORD PTR [rbp-0x108],rdx
    7df1:	c5 22 5c a5 b0 fe ff 	vsubss xmm12,xmm11,DWORD PTR [rbp-0x150]
    7df8:	ff 
    7df9:	44 8b a5 f4 fe ff ff 	mov    r12d,DWORD PTR [rbp-0x10c]
    7e00:	c4 c1 12 59 fd       	vmulss xmm7,xmm13,xmm13
    7e05:	8b 9d f8 fe ff ff    	mov    ebx,DWORD PTR [rbp-0x108]
    7e0b:	c4 e2 61 b9 fb       	vfmadd231ss xmm7,xmm3,xmm3
    7e10:	c4 c2 19 b9 fc       	vfmadd231ss xmm7,xmm12,xmm12
    7e15:	c5 78 2e f7          	vucomiss xmm14,xmm7
    7e19:	0f 87 d5 03 00 00    	ja     81f4 <trace_reflection_color+0x8b4>
    7e1f:	c5 42 51 ff          	vsqrtss xmm15,xmm7,xmm7
    7e23:	c4 41 12 5e c7       	vdivss xmm8,xmm13,xmm15
    7e28:	c5 f0 57 c9          	vxorps xmm1,xmm1,xmm1
    7e2c:	c5 fa 11 bd a4 fe ff 	vmovss DWORD PTR [rbp-0x15c],xmm7
    7e33:	ff 
    7e34:	c5 7a 11 a5 ac fe ff 	vmovss DWORD PTR [rbp-0x154],xmm12
    7e3b:	ff 
    7e3c:	c5 fa 11 9d b0 fe ff 	vmovss DWORD PTR [rbp-0x150],xmm3
    7e43:	ff 
    7e44:	c5 7a 11 ad b4 fe ff 	vmovss DWORD PTR [rbp-0x14c],xmm13
    7e4b:	ff 
    7e4c:	c4 c1 62 5e f7       	vdivss xmm6,xmm3,xmm15
    7e51:	c5 ba 59 ad c8 fe ff 	vmulss xmm5,xmm8,DWORD PTR [rbp-0x138]
    7e58:	ff 
    7e59:	c4 c1 1a 5e c7       	vdivss xmm0,xmm12,xmm15
    7e5e:	c4 e2 49 b9 ad c4 fe 	vfmadd231ss xmm5,xmm6,DWORD PTR [rbp-0x13c]
    7e65:	ff ff 
    7e67:	c4 e2 51 99 85 cc fe 	vfmadd132ss xmm0,xmm5,DWORD PTR [rbp-0x134]
    7e6e:	ff ff 
    7e70:	e8 fb a7 ff ff       	call   2670 <fmaxf@plt>
    7e75:	c5 e8 57 d2          	vxorps xmm2,xmm2,xmm2
    7e79:	c5 d0 57 ed          	vxorps xmm5,xmm5,xmm5
    7e7d:	c5 7a 10 35 ef a1 00 	vmovss xmm14,DWORD PTR [rip+0xa1ef]        # 12074 <_IO_stdin_used+0x74>
    7e84:	00 
    7e85:	c7 85 2c ff ff ff 00 	mov    DWORD PTR [rbp-0xd4],0x0
    7e8c:	00 00 00 
    7e8f:	c4 41 6a 2a d5       	vcvtsi2ss xmm10,xmm2,r13d
    7e94:	c4 41 6a 2a cc       	vcvtsi2ss xmm9,xmm2,r12d
    7e99:	c5 6a 2a db          	vcvtsi2ss xmm11,xmm2,ebx
    7e9d:	c4 c1 7a 59 ca       	vmulss xmm1,xmm0,xmm10
    7ea2:	c4 41 7a 59 e1       	vmulss xmm12,xmm0,xmm9
    7ea7:	c4 c1 7a 59 c3       	vmulss xmm0,xmm0,xmm11
    7eac:	c5 fa 2c f9          	vcvttss2si edi,xmm1
    7eb0:	c5 fa 10 8d a8 fe ff 	vmovss xmm1,DWORD PTR [rbp-0x158]
    7eb7:	ff 
    7eb8:	c4 41 7a 2c cc       	vcvttss2si r9d,xmm12
    7ebd:	c5 7a 10 a5 ac fe ff 	vmovss xmm12,DWORD PTR [rbp-0x154]
    7ec4:	ff 
    7ec5:	c5 fa 2c f0          	vcvttss2si esi,xmm0
    7ec9:	c5 ea 2a e7          	vcvtsi2ss xmm4,xmm2,edi
    7ecd:	c4 41 6a 2a e9       	vcvtsi2ss xmm13,xmm2,r9d
    7ed2:	c5 ea 2a fe          	vcvtsi2ss xmm7,xmm2,esi
    7ed6:	c5 fa 10 95 a4 fe ff 	vmovss xmm2,DWORD PTR [rbp-0x15c]
    7edd:	ff 
    7ede:	c4 41 5a 59 fe       	vmulss xmm15,xmm4,xmm14
    7ee3:	c4 c1 12 59 de       	vmulss xmm3,xmm13,xmm14
    7ee8:	c5 7a 10 ad b4 fe ff 	vmovss xmm13,DWORD PTR [rbp-0x14c]
    7eef:	ff 
    7ef0:	c4 c1 42 59 f6       	vmulss xmm6,xmm7,xmm14
    7ef5:	c4 c1 7a 2c d7       	vcvttss2si edx,xmm15
    7efa:	c5 7a 2c d3          	vcvttss2si r10d,xmm3
    7efe:	c5 fa 10 9d b0 fe ff 	vmovss xmm3,DWORD PTR [rbp-0x150]
    7f05:	ff 
    7f06:	0f af 95 84 fe ff ff 	imul   edx,DWORD PTR [rbp-0x17c]
    7f0d:	44 0f af 95 7c fe ff 	imul   r10d,DWORD PTR [rbp-0x184]
    7f14:	ff 
    7f15:	c5 fa 2c ce          	vcvttss2si ecx,xmm6
    7f19:	0f af 8d 88 fe ff ff 	imul   ecx,DWORD PTR [rbp-0x178]
    7f20:	4c 63 c2             	movsxd r8,edx
    7f23:	4d 63 da             	movsxd r11,r10d
    7f26:	4d 69 f0 81 80 80 80 	imul   r14,r8,0xffffffff80808081
    7f2d:	4d 69 e3 81 80 80 80 	imul   r12,r11,0xffffffff80808081
    7f34:	48 63 c1             	movsxd rax,ecx
    7f37:	4c 69 e8 81 80 80 80 	imul   r13,rax,0xffffffff80808081
    7f3e:	49 c1 ee 20          	shr    r14,0x20
    7f42:	49 c1 ec 20          	shr    r12,0x20
    7f46:	41 01 d6             	add    r14d,edx
    7f49:	c1 fa 1f             	sar    edx,0x1f
    7f4c:	45 01 d4             	add    r12d,r10d
    7f4f:	41 c1 fe 07          	sar    r14d,0x7
    7f53:	49 c1 ed 20          	shr    r13,0x20
    7f57:	41 c1 fc 07          	sar    r12d,0x7
    7f5b:	41 29 d6             	sub    r14d,edx
    7f5e:	41 01 cd             	add    r13d,ecx
    7f61:	41 c1 fa 1f          	sar    r10d,0x1f
    7f65:	44 89 b5 20 ff ff ff 	mov    DWORD PTR [rbp-0xe0],r14d
    7f6c:	41 c1 fd 07          	sar    r13d,0x7
    7f70:	c1 f9 1f             	sar    ecx,0x1f
    7f73:	45 29 d4             	sub    r12d,r10d
    7f76:	41 29 cd             	sub    r13d,ecx
    7f79:	c5 f8 2e e9          	vucomiss xmm5,xmm1
    7f7d:	44 89 a5 24 ff ff ff 	mov    DWORD PTR [rbp-0xdc],r12d
    7f84:	45 89 e7             	mov    r15d,r12d
    7f87:	44 89 ad 28 ff ff ff 	mov    DWORD PTR [rbp-0xd8],r13d
    7f8e:	c5 79 6f 85 20 ff ff 	vmovdqa xmm8,XMMWORD PTR [rbp-0xe0]
    7f95:	ff 
    7f96:	44 89 eb             	mov    ebx,r13d
    7f99:	c5 79 7f 85 30 ff ff 	vmovdqa XMMWORD PTR [rbp-0xd0],xmm8
    7fa0:	ff 
    7fa1:	c5 79 7f 85 10 ff ff 	vmovdqa XMMWORD PTR [rbp-0xf0],xmm8
    7fa8:	ff 
    7fa9:	c5 79 7f 85 f0 fe ff 	vmovdqa XMMWORD PTR [rbp-0x110],xmm8
    7fb0:	ff 
    7fb1:	0f 87 29 03 00 00    	ja     82e0 <trace_reflection_color+0x9a0>
    7fb7:	c5 f2 51 c1          	vsqrtss xmm0,xmm1,xmm1
    7fbb:	c5 fa 10 a5 c0 fe ff 	vmovss xmm4,DWORD PTR [rbp-0x140]
    7fc2:	ff 
    7fc3:	c5 7a 10 b5 bc fe ff 	vmovss xmm14,DWORD PTR [rbp-0x144]
    7fca:	ff 
    7fcb:	c5 7a 10 bd b8 fe ff 	vmovss xmm15,DWORD PTR [rbp-0x148]
    7fd2:	ff 
    7fd3:	c5 da 5e e8          	vdivss xmm5,xmm4,xmm0
    7fd7:	c5 8a 5e f8          	vdivss xmm7,xmm14,xmm0
    7fdb:	c5 82 5e e0          	vdivss xmm4,xmm15,xmm0
    7fdf:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    7fe3:	c5 f8 2e c2          	vucomiss xmm0,xmm2
    7fe7:	0f 87 75 03 00 00    	ja     8362 <trace_reflection_color+0xa22>
    7fed:	c5 ea 51 d2          	vsqrtss xmm2,xmm2,xmm2
    7ff1:	c5 fa 10 b5 c8 fe ff 	vmovss xmm6,DWORD PTR [rbp-0x138]
    7ff8:	ff 
    7ff9:	c5 7a 10 b5 c4 fe ff 	vmovss xmm14,DWORD PTR [rbp-0x13c]
    8000:	ff 
    8001:	c5 7a 10 bd cc fe ff 	vmovss xmm15,DWORD PTR [rbp-0x134]
    8008:	ff 
    8009:	c5 92 5e ca          	vdivss xmm1,xmm13,xmm2
    800d:	c5 e2 5e da          	vdivss xmm3,xmm3,xmm2
    8011:	c5 72 59 c6          	vmulss xmm8,xmm1,xmm6
    8015:	c5 9a 5e d2          	vdivss xmm2,xmm12,xmm2
    8019:	c4 41 18 57 e4       	vxorps xmm12,xmm12,xmm12
    801e:	c4 42 61 b9 c6       	vfmadd231ss xmm8,xmm3,xmm14
    8023:	c4 42 69 b9 c7       	vfmadd231ss xmm8,xmm2,xmm15
    8028:	c4 c1 3a 58 c0       	vaddss xmm0,xmm8,xmm8
    802d:	c4 e2 79 bb ce       	vfmsub231ss xmm1,xmm0,xmm6
    8032:	c4 c2 79 bb de       	vfmsub231ss xmm3,xmm0,xmm14
    8037:	c4 c2 79 bb d7       	vfmsub231ss xmm2,xmm0,xmm15
    803c:	c5 f2 59 c1          	vmulss xmm0,xmm1,xmm1
    8040:	c4 e2 61 b9 c3       	vfmadd231ss xmm0,xmm3,xmm3
    8045:	c4 e2 69 b9 c2       	vfmadd231ss xmm0,xmm2,xmm2
    804a:	c5 78 2e e0          	vucomiss xmm12,xmm0
    804e:	0f 87 f2 01 00 00    	ja     8246 <trace_reflection_color+0x906>
    8054:	c5 fa 51 c0          	vsqrtss xmm0,xmm0,xmm0
    8058:	c5 72 5e c0          	vdivss xmm8,xmm1,xmm0
    805c:	c5 f0 57 c9          	vxorps xmm1,xmm1,xmm1
    8060:	c5 7a 11 9d c4 fe ff 	vmovss DWORD PTR [rbp-0x13c],xmm11
    8067:	ff 
    8068:	c5 7a 11 8d c8 fe ff 	vmovss DWORD PTR [rbp-0x138],xmm9
    806f:	ff 
    8070:	c5 7a 11 95 cc fe ff 	vmovss DWORD PTR [rbp-0x134],xmm10
    8077:	ff 
    8078:	c5 e2 5e f0          	vdivss xmm6,xmm3,xmm0
    807c:	c5 3a 59 f7          	vmulss xmm14,xmm8,xmm7
    8080:	c5 6a 5e e8          	vdivss xmm13,xmm2,xmm0
    8084:	c4 e2 09 99 ee       	vfmadd132ss xmm5,xmm14,xmm6
    8089:	c4 c2 51 99 e5       	vfmadd132ss xmm4,xmm5,xmm13
    808e:	c5 f8 28 c4          	vmovaps xmm0,xmm4
    8092:	e8 d9 a5 ff ff       	call   2670 <fmaxf@plt>
    8097:	c5 fa 10 0d 29 a1 00 	vmovss xmm1,DWORD PTR [rip+0xa129]        # 121c8 <_IO_stdin_used+0x1c8>
    809e:	00 
    809f:	e8 5c a4 ff ff       	call   2500 <powf@plt>
    80a4:	c5 d8 57 e4          	vxorps xmm4,xmm4,xmm4
    80a8:	c5 7a 10 bd cc fe ff 	vmovss xmm15,DWORD PTR [rbp-0x134]
    80af:	ff 
    80b0:	c5 fa 10 2d bc 9f 00 	vmovss xmm5,DWORD PTR [rip+0x9fbc]        # 12074 <_IO_stdin_used+0x74>
    80b7:	00 
    80b8:	c5 fa 10 8d c8 fe ff 	vmovss xmm1,DWORD PTR [rbp-0x138]
    80bf:	ff 
    80c0:	c5 fa 10 b5 c4 fe ff 	vmovss xmm6,DWORD PTR [rbp-0x13c]
    80c7:	ff 
    80c8:	ba ff 00 00 00       	mov    edx,0xff
    80cd:	41 ba ff 00 00 00    	mov    r10d,0xff
    80d3:	c4 41 7a 59 e7       	vmulss xmm12,xmm0,xmm15
    80d8:	c5 fa 59 d9          	vmulss xmm3,xmm0,xmm1
    80dc:	c5 fa 59 c6          	vmulss xmm0,xmm0,xmm6
    80e0:	c4 c1 7a 2c fc       	vcvttss2si edi,xmm12
    80e5:	c5 7a 2c d8          	vcvttss2si r11d,xmm0
    80e9:	c5 da 2a ff          	vcvtsi2ss xmm7,xmm4,edi
    80ed:	c4 41 5a 2a c3       	vcvtsi2ss xmm8,xmm4,r11d
    80f2:	c5 c2 59 d5          	vmulss xmm2,xmm7,xmm5
    80f6:	c5 3a 59 f5          	vmulss xmm14,xmm8,xmm5
    80fa:	c5 7a 2c c2          	vcvttss2si r8d,xmm2
    80fe:	c4 41 7a 2c e6       	vcvttss2si r12d,xmm14
    8103:	45 01 f0             	add    r8d,r14d
    8106:	c5 7a 2c f3          	vcvttss2si r14d,xmm3
    810a:	41 39 d0             	cmp    r8d,edx
    810d:	44 0f 4f c2          	cmovg  r8d,edx
    8111:	c4 41 5a 2a de       	vcvtsi2ss xmm11,xmm4,r14d
    8116:	c4 41 79 6e d0       	vmovd  xmm10,r8d
    811b:	c5 22 59 cd          	vmulss xmm9,xmm11,xmm5
    811f:	c4 41 7a 2c c9       	vcvttss2si r9d,xmm9
    8124:	45 01 f9             	add    r9d,r15d
    8127:	41 bf ff 00 00 00    	mov    r15d,0xff
    812d:	45 39 d1             	cmp    r9d,r10d
    8130:	45 0f 4f ca          	cmovg  r9d,r10d
    8134:	41 01 dc             	add    r12d,ebx
    8137:	45 39 fc             	cmp    r12d,r15d
    813a:	45 0f 4f e7          	cmovg  r12d,r15d
    813e:	c4 43 29 22 e9 01    	vpinsrd xmm13,xmm10,r9d,0x1
    8144:	c5 79 d6 ad f0 fe ff 	vmovq  QWORD PTR [rbp-0x110],xmm13
    814b:	ff 
    814c:	44 89 a5 f8 fe ff ff 	mov    DWORD PTR [rbp-0x108],r12d
    8153:	c5 79 6f bd f0 fe ff 	vmovdqa xmm15,XMMWORD PTR [rbp-0x110]
    815a:	ff 
    815b:	c5 79 7f bd 10 ff ff 	vmovdqa XMMWORD PTR [rbp-0xf0],xmm15
    8162:	ff 
    8163:	e9 53 fb ff ff       	jmp    7cbb <trace_reflection_color+0x37b>
    8168:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    816f:	00 
    8170:	c5 f8 77             	vzeroupper 
    8173:	e9 d8 fa ff ff       	jmp    7c50 <trace_reflection_color+0x310>
    8178:	c5 fa 10 85 a8 fe ff 	vmovss xmm0,DWORD PTR [rbp-0x158]
    817f:	ff 
    8180:	c5 fa 11 9d a4 fe ff 	vmovss DWORD PTR [rbp-0x15c],xmm3
    8187:	ff 
    8188:	e8 03 a8 ff ff       	call   2990 <sqrtf@plt>
    818d:	c5 fa 10 9d a4 fe ff 	vmovss xmm3,DWORD PTR [rbp-0x15c]
    8194:	ff 
    8195:	c5 7a 10 b5 c0 fe ff 	vmovss xmm14,DWORD PTR [rbp-0x140]
    819c:	ff 
    819d:	c5 7a 10 bd bc fe ff 	vmovss xmm15,DWORD PTR [rbp-0x144]
    81a4:	ff 
    81a5:	e9 a4 f8 ff ff       	jmp    7a4e <trace_reflection_color+0x10e>
    81aa:	c5 7a 11 95 98 fe ff 	vmovss DWORD PTR [rbp-0x168],xmm10
    81b1:	ff 
    81b2:	c5 fa 11 95 9c fe ff 	vmovss DWORD PTR [rbp-0x164],xmm2
    81b9:	ff 
    81ba:	c5 fa 11 a5 a0 fe ff 	vmovss DWORD PTR [rbp-0x160],xmm4
    81c1:	ff 
    81c2:	c5 fa 11 9d a4 fe ff 	vmovss DWORD PTR [rbp-0x15c],xmm3
    81c9:	ff 
    81ca:	e8 c1 a7 ff ff       	call   2990 <sqrtf@plt>
    81cf:	c5 7a 10 95 98 fe ff 	vmovss xmm10,DWORD PTR [rbp-0x168]
    81d6:	ff 
    81d7:	c5 fa 10 95 9c fe ff 	vmovss xmm2,DWORD PTR [rbp-0x164]
    81de:	ff 
    81df:	c5 fa 10 a5 a0 fe ff 	vmovss xmm4,DWORD PTR [rbp-0x160]
    81e6:	ff 
    81e7:	c5 fa 10 9d a4 fe ff 	vmovss xmm3,DWORD PTR [rbp-0x15c]
    81ee:	ff 
    81ef:	e9 c8 f8 ff ff       	jmp    7abc <trace_reflection_color+0x17c>
    81f4:	c5 f8 28 c7          	vmovaps xmm0,xmm7
    81f8:	c5 7a 11 a5 a4 fe ff 	vmovss DWORD PTR [rbp-0x15c],xmm12
    81ff:	ff 
    8200:	c5 7a 11 ad ac fe ff 	vmovss DWORD PTR [rbp-0x154],xmm13
    8207:	ff 
    8208:	c5 fa 11 9d b0 fe ff 	vmovss DWORD PTR [rbp-0x150],xmm3
    820f:	ff 
    8210:	c5 fa 11 bd b4 fe ff 	vmovss DWORD PTR [rbp-0x14c],xmm7
    8217:	ff 
    8218:	e8 73 a7 ff ff       	call   2990 <sqrtf@plt>
    821d:	c5 7a 10 a5 a4 fe ff 	vmovss xmm12,DWORD PTR [rbp-0x15c]
    8224:	ff 
    8225:	c5 7a 10 ad ac fe ff 	vmovss xmm13,DWORD PTR [rbp-0x154]
    822c:	ff 
    822d:	c5 fa 10 9d b0 fe ff 	vmovss xmm3,DWORD PTR [rbp-0x150]
    8234:	ff 
    8235:	c5 fa 10 bd b4 fe ff 	vmovss xmm7,DWORD PTR [rbp-0x14c]
    823c:	ff 
    823d:	c5 78 28 f8          	vmovaps xmm15,xmm0
    8241:	e9 dd fb ff ff       	jmp    7e23 <trace_reflection_color+0x4e3>
    8246:	c5 fa 11 a5 ac fe ff 	vmovss DWORD PTR [rbp-0x154],xmm4
    824d:	ff 
    824e:	c5 fa 11 bd b0 fe ff 	vmovss DWORD PTR [rbp-0x150],xmm7
    8255:	ff 
    8256:	c5 fa 11 ad b4 fe ff 	vmovss DWORD PTR [rbp-0x14c],xmm5
    825d:	ff 
    825e:	c5 fa 11 95 b8 fe ff 	vmovss DWORD PTR [rbp-0x148],xmm2
    8265:	ff 
    8266:	c5 fa 11 8d bc fe ff 	vmovss DWORD PTR [rbp-0x144],xmm1
    826d:	ff 
    826e:	c5 fa 11 9d c0 fe ff 	vmovss DWORD PTR [rbp-0x140],xmm3
    8275:	ff 
    8276:	c5 7a 11 9d c4 fe ff 	vmovss DWORD PTR [rbp-0x13c],xmm11
    827d:	ff 
    827e:	c5 7a 11 8d c8 fe ff 	vmovss DWORD PTR [rbp-0x138],xmm9
    8285:	ff 
    8286:	c5 7a 11 95 cc fe ff 	vmovss DWORD PTR [rbp-0x134],xmm10
    828d:	ff 
    828e:	e8 fd a6 ff ff       	call   2990 <sqrtf@plt>
    8293:	c5 fa 10 a5 ac fe ff 	vmovss xmm4,DWORD PTR [rbp-0x154]
    829a:	ff 
    829b:	c5 fa 10 bd b0 fe ff 	vmovss xmm7,DWORD PTR [rbp-0x150]
    82a2:	ff 
    82a3:	c5 fa 10 ad b4 fe ff 	vmovss xmm5,DWORD PTR [rbp-0x14c]
    82aa:	ff 
    82ab:	c5 fa 10 95 b8 fe ff 	vmovss xmm2,DWORD PTR [rbp-0x148]
    82b2:	ff 
    82b3:	c5 fa 10 8d bc fe ff 	vmovss xmm1,DWORD PTR [rbp-0x144]
    82ba:	ff 
    82bb:	c5 fa 10 9d c0 fe ff 	vmovss xmm3,DWORD PTR [rbp-0x140]
    82c2:	ff 
    82c3:	c5 7a 10 9d c4 fe ff 	vmovss xmm11,DWORD PTR [rbp-0x13c]
    82ca:	ff 
    82cb:	c5 7a 10 8d c8 fe ff 	vmovss xmm9,DWORD PTR [rbp-0x138]
    82d2:	ff 
    82d3:	c5 7a 10 95 cc fe ff 	vmovss xmm10,DWORD PTR [rbp-0x134]
    82da:	ff 
    82db:	e9 78 fd ff ff       	jmp    8058 <trace_reflection_color+0x718>
    82e0:	c5 fa 10 85 a8 fe ff 	vmovss xmm0,DWORD PTR [rbp-0x158]
    82e7:	ff 
    82e8:	c5 fa 11 95 98 fe ff 	vmovss DWORD PTR [rbp-0x168],xmm2
    82ef:	ff 
    82f0:	c5 7a 11 9d 9c fe ff 	vmovss DWORD PTR [rbp-0x164],xmm11
    82f7:	ff 
    82f8:	c5 7a 11 8d a0 fe ff 	vmovss DWORD PTR [rbp-0x160],xmm9
    82ff:	ff 
    8300:	c5 7a 11 95 a4 fe ff 	vmovss DWORD PTR [rbp-0x15c],xmm10
    8307:	ff 
    8308:	c5 7a 11 a5 ac fe ff 	vmovss DWORD PTR [rbp-0x154],xmm12
    830f:	ff 
    8310:	c5 7a 11 ad b0 fe ff 	vmovss DWORD PTR [rbp-0x150],xmm13
    8317:	ff 
    8318:	c5 fa 11 9d b4 fe ff 	vmovss DWORD PTR [rbp-0x14c],xmm3
    831f:	ff 
    8320:	e8 6b a6 ff ff       	call   2990 <sqrtf@plt>
    8325:	c5 fa 10 95 98 fe ff 	vmovss xmm2,DWORD PTR [rbp-0x168]
    832c:	ff 
    832d:	c5 7a 10 9d 9c fe ff 	vmovss xmm11,DWORD PTR [rbp-0x164]
    8334:	ff 
    8335:	c5 7a 10 8d a0 fe ff 	vmovss xmm9,DWORD PTR [rbp-0x160]
    833c:	ff 
    833d:	c5 7a 10 95 a4 fe ff 	vmovss xmm10,DWORD PTR [rbp-0x15c]
    8344:	ff 
    8345:	c5 7a 10 a5 ac fe ff 	vmovss xmm12,DWORD PTR [rbp-0x154]
    834c:	ff 
    834d:	c5 7a 10 ad b0 fe ff 	vmovss xmm13,DWORD PTR [rbp-0x150]
    8354:	ff 
    8355:	c5 fa 10 9d b4 fe ff 	vmovss xmm3,DWORD PTR [rbp-0x14c]
    835c:	ff 
    835d:	e9 59 fc ff ff       	jmp    7fbb <trace_reflection_color+0x67b>
    8362:	c5 f8 28 c2          	vmovaps xmm0,xmm2
    8366:	c5 fa 11 a5 a0 fe ff 	vmovss DWORD PTR [rbp-0x160],xmm4
    836d:	ff 
    836e:	c5 fa 11 bd a4 fe ff 	vmovss DWORD PTR [rbp-0x15c],xmm7
    8375:	ff 
    8376:	c5 fa 11 ad a8 fe ff 	vmovss DWORD PTR [rbp-0x158],xmm5
    837d:	ff 
    837e:	c5 7a 11 9d ac fe ff 	vmovss DWORD PTR [rbp-0x154],xmm11
    8385:	ff 
    8386:	c5 7a 11 8d b0 fe ff 	vmovss DWORD PTR [rbp-0x150],xmm9
    838d:	ff 
    838e:	c5 7a 11 95 b4 fe ff 	vmovss DWORD PTR [rbp-0x14c],xmm10
    8395:	ff 
    8396:	c5 7a 11 a5 b8 fe ff 	vmovss DWORD PTR [rbp-0x148],xmm12
    839d:	ff 
    839e:	c5 7a 11 ad bc fe ff 	vmovss DWORD PTR [rbp-0x144],xmm13
    83a5:	ff 
    83a6:	c5 fa 11 9d c0 fe ff 	vmovss DWORD PTR [rbp-0x140],xmm3
    83ad:	ff 
    83ae:	e8 dd a5 ff ff       	call   2990 <sqrtf@plt>
    83b3:	c5 fa 10 a5 a0 fe ff 	vmovss xmm4,DWORD PTR [rbp-0x160]
    83ba:	ff 
    83bb:	c5 fa 10 bd a4 fe ff 	vmovss xmm7,DWORD PTR [rbp-0x15c]
    83c2:	ff 
    83c3:	c5 fa 10 ad a8 fe ff 	vmovss xmm5,DWORD PTR [rbp-0x158]
    83ca:	ff 
    83cb:	c5 7a 10 9d ac fe ff 	vmovss xmm11,DWORD PTR [rbp-0x154]
    83d2:	ff 
    83d3:	c5 f8 28 d0          	vmovaps xmm2,xmm0
    83d7:	c5 7a 10 8d b0 fe ff 	vmovss xmm9,DWORD PTR [rbp-0x150]
    83de:	ff 
    83df:	c5 7a 10 95 b4 fe ff 	vmovss xmm10,DWORD PTR [rbp-0x14c]
    83e6:	ff 
    83e7:	c5 7a 10 a5 b8 fe ff 	vmovss xmm12,DWORD PTR [rbp-0x148]
    83ee:	ff 
    83ef:	c5 7a 10 ad bc fe ff 	vmovss xmm13,DWORD PTR [rbp-0x144]
    83f6:	ff 
    83f7:	c5 fa 10 9d c0 fe ff 	vmovss xmm3,DWORD PTR [rbp-0x140]
    83fe:	ff 
    83ff:	e9 ed fb ff ff       	jmp    7ff1 <trace_reflection_color+0x6b1>
    8404:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    840b:	00 00 00 00 
    840f:	90                   	nop

0000000000008410 <load_hit_point_color>:
    8410:	f3 0f 1e fa          	endbr64 
    8414:	4c 8d 54 24 08       	lea    r10,[rsp+0x8]
    8419:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    841d:	c5 f9 ef c0          	vpxor  xmm0,xmm0,xmm0
    8421:	31 d2                	xor    edx,edx
    8423:	41 ff 72 f8          	push   QWORD PTR [r10-0x8]
    8427:	55                   	push   rbp
    8428:	48 89 e5             	mov    rbp,rsp
    842b:	41 57                	push   r15
    842d:	4d 89 d7             	mov    r15,r10
    8430:	41 56                	push   r14
    8432:	4c 8d b7 d8 00 00 00 	lea    r14,[rdi+0xd8]
    8439:	41 55                	push   r13
    843b:	4c 8d ad 50 ff ff ff 	lea    r13,[rbp-0xb0]
    8442:	41 54                	push   r12
    8444:	49 89 fc             	mov    r12,rdi
    8447:	41 52                	push   r10
    8449:	53                   	push   rbx
    844a:	31 db                	xor    ebx,ebx
    844c:	48 81 ec c0 00 00 00 	sub    rsp,0xc0
    8453:	c7 45 80 ff ff 7f 7f 	mov    DWORD PTR [rbp-0x80],0x7f7fffff
    845a:	c4 c1 79 6f 0a       	vmovdqa xmm1,XMMWORD PTR [r10]
    845f:	c4 c1 79 6f 52 10    	vmovdqa xmm2,XMMWORD PTR [r10+0x10]
    8465:	c5 f9 6f 5d 80       	vmovdqa xmm3,XMMWORD PTR [rbp-0x80]
    846a:	c5 f9 7f 85 70 ff ff 	vmovdqa XMMWORD PTR [rbp-0x90],xmm0
    8471:	ff 
    8472:	48 83 bf e0 00 00 00 	cmp    QWORD PTR [rdi+0xe0],0x0
    8479:	00 
    847a:	c5 f9 7f 8d 30 ff ff 	vmovdqa XMMWORD PTR [rbp-0xd0],xmm1
    8481:	ff 
    8482:	c5 f9 7f 95 40 ff ff 	vmovdqa XMMWORD PTR [rbp-0xc0],xmm2
    8489:	ff 
    848a:	c5 f9 7f 85 50 ff ff 	vmovdqa XMMWORD PTR [rbp-0xb0],xmm0
    8491:	ff 
    8492:	c5 f9 7f 85 60 ff ff 	vmovdqa XMMWORD PTR [rbp-0xa0],xmm0
    8499:	ff 
    849a:	c5 f9 7f 45 90       	vmovdqa XMMWORD PTR [rbp-0x70],xmm0
    849f:	c5 f9 7f 45 a0       	vmovdqa XMMWORD PTR [rbp-0x60],xmm0
    84a4:	c5 f9 7f 45 b0       	vmovdqa XMMWORD PTR [rbp-0x50],xmm0
    84a9:	c5 f9 7f 5d c0       	vmovdqa XMMWORD PTR [rbp-0x40],xmm3
    84ae:	0f 84 24 01 00 00    	je     85d8 <load_hit_point_color+0x1c8>
    84b4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    84b8:	48 89 de             	mov    rsi,rbx
    84bb:	4c 89 f7             	mov    rdi,r14
    84be:	48 83 c3 01          	add    rbx,0x1
    84c2:	e8 19 49 00 00       	call   cde0 <get_element_or_null_in_list>
    84c7:	4c 89 ee             	mov    rsi,r13
    84ca:	48 8b 00             	mov    rax,QWORD PTR [rax]
    84cd:	ff b5 48 ff ff ff    	push   QWORD PTR [rbp-0xb8]
    84d3:	ff b5 40 ff ff ff    	push   QWORD PTR [rbp-0xc0]
    84d9:	ff b5 38 ff ff ff    	push   QWORD PTR [rbp-0xc8]
    84df:	48 89 c7             	mov    rdi,rax
    84e2:	ff b5 30 ff ff ff    	push   QWORD PTR [rbp-0xd0]
    84e8:	ff 50 60             	call   QWORD PTR [rax+0x60]
    84eb:	48 83 c4 20          	add    rsp,0x20
    84ef:	49 3b 9c 24 e0 00 00 	cmp    rbx,QWORD PTR [r12+0xe0]
    84f6:	00 
    84f7:	72 bf                	jb     84b8 <load_hit_point_color+0xa8>
    84f9:	4c 8b 85 50 ff ff ff 	mov    r8,QWORD PTR [rbp-0xb0]
    8500:	4c 8b 8d 58 ff ff ff 	mov    r9,QWORD PTR [rbp-0xa8]
    8507:	48 8b b5 60 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xa0]
    850e:	48 8b bd 68 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x98]
    8515:	48 8b 8d 70 ff ff ff 	mov    rcx,QWORD PTR [rbp-0x90]
    851c:	48 8b 95 78 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x88]
    8523:	c5 f9 6f 5d 80       	vmovdqa xmm3,XMMWORD PTR [rbp-0x80]
    8528:	c5 fa 10 65 80       	vmovss xmm4,DWORD PTR [rbp-0x80]
    852d:	c5 f8 2e 25 83 9c 00 	vucomiss xmm4,DWORD PTR [rip+0x9c83]        # 121b8 <_IO_stdin_used+0x1b8>
    8534:	00 
    8535:	4c 89 45 90          	mov    QWORD PTR [rbp-0x70],r8
    8539:	4c 89 4d 98          	mov    QWORD PTR [rbp-0x68],r9
    853d:	48 89 75 a0          	mov    QWORD PTR [rbp-0x60],rsi
    8541:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
    8545:	48 89 4d b0          	mov    QWORD PTR [rbp-0x50],rcx
    8549:	48 89 55 b8          	mov    QWORD PTR [rbp-0x48],rdx
    854d:	c5 f9 7f 5d c0       	vmovdqa XMMWORD PTR [rbp-0x40],xmm3
    8552:	7a 3c                	jp     8590 <load_hit_point_color+0x180>
    8554:	75 3a                	jne    8590 <load_hit_point_color+0x180>
    8556:	48 c7 85 50 ff ff ff 	mov    QWORD PTR [rbp-0xb0],0x0
    855d:	00 00 00 00 
    8561:	c7 85 58 ff ff ff 00 	mov    DWORD PTR [rbp-0xa8],0x0
    8568:	00 00 00 
    856b:	48 8b 85 50 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb0]
    8572:	48 8b 95 58 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xa8]
    8579:	48 8d 65 d0          	lea    rsp,[rbp-0x30]
    857d:	5b                   	pop    rbx
    857e:	41 5b                	pop    r11
    8580:	41 5c                	pop    r12
    8582:	41 5d                	pop    r13
    8584:	41 5e                	pop    r14
    8586:	41 5f                	pop    r15
    8588:	5d                   	pop    rbp
    8589:	49 8d 63 f8          	lea    rsp,[r11-0x8]
    858d:	c3                   	ret    
    858e:	66 90                	xchg   ax,ax
    8590:	ff 75 c8             	push   QWORD PTR [rbp-0x38]
    8593:	31 f6                	xor    esi,esi
    8595:	4c 89 e7             	mov    rdi,r12
    8598:	ff 75 c0             	push   QWORD PTR [rbp-0x40]
    859b:	ff 75 b8             	push   QWORD PTR [rbp-0x48]
    859e:	ff 75 b0             	push   QWORD PTR [rbp-0x50]
    85a1:	ff 75 a8             	push   QWORD PTR [rbp-0x58]
    85a4:	ff 75 a0             	push   QWORD PTR [rbp-0x60]
    85a7:	ff 75 98             	push   QWORD PTR [rbp-0x68]
    85aa:	ff 75 90             	push   QWORD PTR [rbp-0x70]
    85ad:	41 ff 77 18          	push   QWORD PTR [r15+0x18]
    85b1:	41 ff 77 10          	push   QWORD PTR [r15+0x10]
    85b5:	41 ff 77 08          	push   QWORD PTR [r15+0x8]
    85b9:	41 ff 37             	push   QWORD PTR [r15]
    85bc:	e8 ef e7 ff ff       	call   6db0 <compute_reflection_lighting_recursive>
    85c1:	48 83 c4 60          	add    rsp,0x60
    85c5:	48 89 85 50 ff ff ff 	mov    QWORD PTR [rbp-0xb0],rax
    85cc:	48 89 95 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rdx
    85d3:	eb 96                	jmp    856b <load_hit_point_color+0x15b>
    85d5:	0f 1f 00             	nop    DWORD PTR [rax]
    85d8:	45 31 c0             	xor    r8d,r8d
    85db:	45 31 c9             	xor    r9d,r9d
    85de:	31 f6                	xor    esi,esi
    85e0:	31 ff                	xor    edi,edi
    85e2:	31 c9                	xor    ecx,ecx
    85e4:	e9 3f ff ff ff       	jmp    8528 <load_hit_point_color+0x118>
    85e9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000085f0 <render>:
    85f0:	f3 0f 1e fa          	endbr64 
    85f4:	4c 8d 54 24 08       	lea    r10,[rsp+0x8]
    85f9:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    85fd:	41 ff 72 f8          	push   QWORD PTR [r10-0x8]
    8601:	55                   	push   rbp
    8602:	48 89 e5             	mov    rbp,rsp
    8605:	41 57                	push   r15
    8607:	41 56                	push   r14
    8609:	41 55                	push   r13
    860b:	41 54                	push   r12
    860d:	41 52                	push   r10
    860f:	53                   	push   rbx
    8610:	48 81 ec 20 01 00 00 	sub    rsp,0x120
    8617:	48 8b 57 20          	mov    rdx,QWORD PTR [rdi+0x20]
    861b:	48 8b 77 28          	mov    rsi,QWORD PTR [rdi+0x28]
    861f:	48 89 bd d8 fe ff ff 	mov    QWORD PTR [rbp-0x128],rdi
    8626:	48 89 95 c0 fe ff ff 	mov    QWORD PTR [rbp-0x140],rdx
    862d:	48 39 f2             	cmp    rdx,rsi
    8630:	0f 83 b5 03 00 00    	jae    89eb <render+0x3fb>
    8636:	4c 8b 57 18          	mov    r10,QWORD PTR [rdi+0x18]
    863a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    8640:	48 8b 8d d8 fe ff ff 	mov    rcx,QWORD PTR [rbp-0x128]
    8647:	48 8b 9d c0 fe ff ff 	mov    rbx,QWORD PTR [rbp-0x140]
    864e:	48 8b 51 08          	mov    rdx,QWORD PTR [rcx+0x8]
    8652:	48 85 db             	test   rbx,rbx
    8655:	0f 88 1c 04 00 00    	js     8a77 <render+0x487>
    865b:	c5 e0 57 db          	vxorps xmm3,xmm3,xmm3
    865f:	c4 e1 e2 2a d3       	vcvtsi2ss xmm2,xmm3,rbx
    8664:	4c 8b 5a 30          	mov    r11,QWORD PTR [rdx+0x30]
    8668:	4d 85 db             	test   r11,r11
    866b:	0f 88 e7 03 00 00    	js     8a58 <render+0x468>
    8671:	c5 d8 57 e4          	vxorps xmm4,xmm4,xmm4
    8675:	c4 c1 da 2a f3       	vcvtsi2ss xmm6,xmm4,r11
    867a:	c5 6a 5e c6          	vdivss xmm8,xmm2,xmm6
    867e:	4c 8b ad d8 fe ff ff 	mov    r13,QWORD PTR [rbp-0x128]
    8685:	c5 7a 10 0d 1b 9b 00 	vmovss xmm9,DWORD PTR [rip+0x9b1b]        # 121a8 <_IO_stdin_used+0x1a8>
    868c:	00 
    868d:	4c 8b b5 c0 fe ff ff 	mov    r14,QWORD PTR [rbp-0x140]
    8694:	4d 8b 7d 00          	mov    r15,QWORD PTR [r13+0x0]
    8698:	c4 c1 7a 10 4f 48    	vmovss xmm1,DWORD PTR [r15+0x48]
    869e:	c5 70 57 1d 5a 9a 00 	vxorps xmm11,xmm1,XMMWORD PTR [rip+0x9a5a]        # 12100 <_IO_stdin_used+0x100>
    86a5:	00 
    86a6:	c4 41 22 59 e0       	vmulss xmm12,xmm11,xmm8
    86ab:	c4 41 32 5c d0       	vsubss xmm10,xmm9,xmm8
    86b0:	c4 c2 19 99 ca       	vfmadd132ss xmm1,xmm12,xmm10
    86b5:	c4 c1 7a 11 4d 30    	vmovss DWORD PTR [r13+0x30],xmm1
    86bb:	4d 8b 6d 10          	mov    r13,QWORD PTR [r13+0x10]
    86bf:	4d 39 d5             	cmp    r13,r10
    86c2:	0f 83 d0 03 00 00    	jae    8a98 <render+0x4a8>
    86c8:	4c 8d 9d f0 fe ff ff 	lea    r11,[rbp-0x110]
    86cf:	44 89 b5 d0 fe ff ff 	mov    DWORD PTR [rbp-0x130],r14d
    86d6:	44 89 b5 d4 fe ff ff 	mov    DWORD PTR [rbp-0x12c],r14d
    86dd:	4c 89 9d c8 fe ff ff 	mov    QWORD PTR [rbp-0x138],r11
    86e4:	4d 85 ed             	test   r13,r13
    86e7:	0f 88 8c 02 00 00    	js     8979 <render+0x389>
    86ed:	0f 1f 00             	nop    DWORD PTR [rax]
    86f0:	4c 8b 52 28          	mov    r10,QWORD PTR [rdx+0x28]
    86f4:	c4 41 20 57 db       	vxorps xmm11,xmm11,xmm11
    86f9:	c4 41 a2 2a f5       	vcvtsi2ss xmm14,xmm11,r13
    86fe:	4d 85 d2             	test   r10,r10
    8701:	0f 88 9e 02 00 00    	js     89a5 <render+0x3b5>
    8707:	c4 41 00 57 ff       	vxorps xmm15,xmm15,xmm15
    870c:	c4 c1 82 2a c2       	vcvtsi2ss xmm0,xmm15,r10
    8711:	c5 8a 5e d0          	vdivss xmm2,xmm14,xmm0
    8715:	c4 c1 7a 10 47 44    	vmovss xmm0,DWORD PTR [r15+0x44]
    871b:	c5 fa 10 3d 85 9a 00 	vmovss xmm7,DWORD PTR [rip+0x9a85]        # 121a8 <_IO_stdin_used+0x1a8>
    8722:	00 
    8723:	45 31 f6             	xor    r14d,r14d
    8726:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    872d:	48 8b bd c8 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x138]
    8734:	4d 8d a7 d8 00 00 00 	lea    r12,[r15+0xd8]
    873b:	48 8d 5d 90          	lea    rbx,[rbp-0x70]
    873f:	c5 ea 59 f0          	vmulss xmm6,xmm2,xmm0
    8743:	c5 c2 5c ea          	vsubss xmm5,xmm7,xmm2
    8747:	c4 e2 49 9d c5       	vfnmadd132ss xmm0,xmm6,xmm5
    874c:	c5 fa 11 40 34       	vmovss DWORD PTR [rax+0x34],xmm0
    8751:	41 ff 77 48          	push   QWORD PTR [r15+0x48]
    8755:	41 ff 77 40          	push   QWORD PTR [r15+0x40]
    8759:	41 ff 77 38          	push   QWORD PTR [r15+0x38]
    875d:	41 ff 77 30          	push   QWORD PTR [r15+0x30]
    8761:	41 ff 77 28          	push   QWORD PTR [r15+0x28]
    8765:	41 ff 77 20          	push   QWORD PTR [r15+0x20]
    8769:	41 ff 77 18          	push   QWORD PTR [r15+0x18]
    876d:	41 ff 77 10          	push   QWORD PTR [r15+0x10]
    8771:	41 ff 77 08          	push   QWORD PTR [r15+0x8]
    8775:	41 ff 37             	push   QWORD PTR [r15]
    8778:	e8 13 e5 ff ff       	call   6c90 <get_ray_mappied_to_pixel>
    877d:	c4 41 29 ef d2       	vpxor  xmm10,xmm10,xmm10
    8782:	c4 41 31 ef c9       	vpxor  xmm9,xmm9,xmm9
    8787:	c5 f9 6f 8d f0 fe ff 	vmovdqa xmm1,XMMWORD PTR [rbp-0x110]
    878e:	ff 
    878f:	c5 79 6f 85 00 ff ff 	vmovdqa xmm8,XMMWORD PTR [rbp-0x100]
    8796:	ff 
    8797:	c7 45 80 ff ff 7f 7f 	mov    DWORD PTR [rbp-0x80],0x7f7fffff
    879e:	c4 41 11 ef ed       	vpxor  xmm13,xmm13,xmm13
    87a3:	48 83 c4 50          	add    rsp,0x50
    87a7:	c5 79 6f 75 80       	vmovdqa xmm14,XMMWORD PTR [rbp-0x80]
    87ac:	c5 7d 7f 95 50 ff ff 	vmovdqa YMMWORD PTR [rbp-0xb0],ymm10
    87b3:	ff 
    87b4:	c5 79 6f a5 60 ff ff 	vmovdqa xmm12,XMMWORD PTR [rbp-0xa0]
    87bb:	ff 
    87bc:	49 83 bf e0 00 00 00 	cmp    QWORD PTR [r15+0xe0],0x0
    87c3:	00 
    87c4:	c5 f9 7f 8d 10 ff ff 	vmovdqa XMMWORD PTR [rbp-0xf0],xmm1
    87cb:	ff 
    87cc:	c5 79 7f 85 20 ff ff 	vmovdqa XMMWORD PTR [rbp-0xe0],xmm8
    87d3:	ff 
    87d4:	c5 f9 7f 8d 30 ff ff 	vmovdqa XMMWORD PTR [rbp-0xd0],xmm1
    87db:	ff 
    87dc:	c5 79 7f 85 40 ff ff 	vmovdqa XMMWORD PTR [rbp-0xc0],xmm8
    87e3:	ff 
    87e4:	c5 79 7f 8d 70 ff ff 	vmovdqa XMMWORD PTR [rbp-0x90],xmm9
    87eb:	ff 
    87ec:	c5 79 7f 55 90       	vmovdqa XMMWORD PTR [rbp-0x70],xmm10
    87f1:	c5 79 7f 65 a0       	vmovdqa XMMWORD PTR [rbp-0x60],xmm12
    87f6:	c5 79 7f 6d b0       	vmovdqa XMMWORD PTR [rbp-0x50],xmm13
    87fb:	c5 79 7f 75 c0       	vmovdqa XMMWORD PTR [rbp-0x40],xmm14
    8800:	0f 84 02 02 00 00    	je     8a08 <render+0x418>
    8806:	c5 f8 77             	vzeroupper 
    8809:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    8810:	4c 89 f6             	mov    rsi,r14
    8813:	4c 89 e7             	mov    rdi,r12
    8816:	49 83 c6 01          	add    r14,0x1
    881a:	e8 c1 45 00 00       	call   cde0 <get_element_or_null_in_list>
    881f:	48 89 de             	mov    rsi,rbx
    8822:	48 8b 00             	mov    rax,QWORD PTR [rax]
    8825:	ff b5 48 ff ff ff    	push   QWORD PTR [rbp-0xb8]
    882b:	ff b5 40 ff ff ff    	push   QWORD PTR [rbp-0xc0]
    8831:	ff b5 38 ff ff ff    	push   QWORD PTR [rbp-0xc8]
    8837:	48 89 c7             	mov    rdi,rax
    883a:	ff b5 30 ff ff ff    	push   QWORD PTR [rbp-0xd0]
    8840:	ff 50 60             	call   QWORD PTR [rax+0x60]
    8843:	48 83 c4 20          	add    rsp,0x20
    8847:	4d 3b b7 e0 00 00 00 	cmp    r14,QWORD PTR [r15+0xe0]
    884e:	72 c0                	jb     8810 <render+0x220>
    8850:	c5 fa 10 55 c0       	vmovss xmm2,DWORD PTR [rbp-0x40]
    8855:	c5 f8 2e 15 5b 99 00 	vucomiss xmm2,DWORD PTR [rip+0x995b]        # 121b8 <_IO_stdin_used+0x1b8>
    885c:	00 
    885d:	c5 79 6f 7d 90       	vmovdqa xmm15,XMMWORD PTR [rbp-0x70]
    8862:	c5 f9 6f 5d a0       	vmovdqa xmm3,XMMWORD PTR [rbp-0x60]
    8867:	c5 f9 6f 65 b0       	vmovdqa xmm4,XMMWORD PTR [rbp-0x50]
    886c:	c5 f9 6f 45 c0       	vmovdqa xmm0,XMMWORD PTR [rbp-0x40]
    8871:	c5 79 7f bd 50 ff ff 	vmovdqa XMMWORD PTR [rbp-0xb0],xmm15
    8878:	ff 
    8879:	c5 f9 7f 9d 60 ff ff 	vmovdqa XMMWORD PTR [rbp-0xa0],xmm3
    8880:	ff 
    8881:	c5 f9 7f a5 70 ff ff 	vmovdqa XMMWORD PTR [rbp-0x90],xmm4
    8888:	ff 
    8889:	c5 f9 7f 45 80       	vmovdqa XMMWORD PTR [rbp-0x80],xmm0
    888e:	7a 08                	jp     8898 <render+0x2a8>
    8890:	41 be 00 00 00 00    	mov    r14d,0x0
    8896:	74 7e                	je     8916 <render+0x326>
    8898:	ff 75 88             	push   QWORD PTR [rbp-0x78]
    889b:	31 f6                	xor    esi,esi
    889d:	4c 89 ff             	mov    rdi,r15
    88a0:	ff 75 80             	push   QWORD PTR [rbp-0x80]
    88a3:	ff b5 78 ff ff ff    	push   QWORD PTR [rbp-0x88]
    88a9:	ff b5 70 ff ff ff    	push   QWORD PTR [rbp-0x90]
    88af:	ff b5 68 ff ff ff    	push   QWORD PTR [rbp-0x98]
    88b5:	ff b5 60 ff ff ff    	push   QWORD PTR [rbp-0xa0]
    88bb:	ff b5 58 ff ff ff    	push   QWORD PTR [rbp-0xa8]
    88c1:	ff b5 50 ff ff ff    	push   QWORD PTR [rbp-0xb0]
    88c7:	ff b5 28 ff ff ff    	push   QWORD PTR [rbp-0xd8]
    88cd:	ff b5 20 ff ff ff    	push   QWORD PTR [rbp-0xe0]
    88d3:	ff b5 18 ff ff ff    	push   QWORD PTR [rbp-0xe8]
    88d9:	ff b5 10 ff ff ff    	push   QWORD PTR [rbp-0xf0]
    88df:	e8 cc e4 ff ff       	call   6db0 <compute_reflection_lighting_recursive>
    88e4:	41 b8 08 00 00 00    	mov    r8d,0x8
    88ea:	48 83 c4 60          	add    rsp,0x60
    88ee:	41 89 c6             	mov    r14d,eax
    88f1:	48 89 85 e0 fe ff ff 	mov    QWORD PTR [rbp-0x120],rax
    88f8:	c4 e2 39 f7 b5 e4 fe 	shlx   esi,DWORD PTR [rbp-0x11c],r8d
    88ff:	ff ff 
    8901:	41 c1 e6 10          	shl    r14d,0x10
    8905:	48 89 95 e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rdx
    890c:	41 01 f6             	add    r14d,esi
    890f:	44 03 b5 e8 fe ff ff 	add    r14d,DWORD PTR [rbp-0x118]
    8916:	44 8b 9d d4 fe ff ff 	mov    r11d,DWORD PTR [rbp-0x12c]
    891d:	45 89 da             	mov    r10d,r11d
    8920:	45 09 ea             	or     r10d,r13d
    8923:	78 23                	js     8948 <render+0x358>
    8925:	48 8b 95 d8 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x128]
    892c:	48 8b 5a 08          	mov    rbx,QWORD PTR [rdx+0x8]
    8930:	44 3b 5b 30          	cmp    r11d,DWORD PTR [rbx+0x30]
    8934:	7d 12                	jge    8948 <render+0x358>
    8936:	4c 8b 63 28          	mov    r12,QWORD PTR [rbx+0x28]
    893a:	45 39 e5             	cmp    r13d,r12d
    893d:	0f 8c cd 00 00 00    	jl     8a10 <render+0x420>
    8943:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    8948:	4c 8b b5 d8 fe ff ff 	mov    r14,QWORD PTR [rbp-0x128]
    894f:	49 83 c5 01          	add    r13,0x1
    8953:	4d 8b 56 18          	mov    r10,QWORD PTR [r14+0x18]
    8957:	4d 39 ea             	cmp    r10,r13
    895a:	76 6c                	jbe    89c8 <render+0x3d8>
    895c:	4c 8b 9d d8 fe ff ff 	mov    r11,QWORD PTR [rbp-0x128]
    8963:	49 8b 53 08          	mov    rdx,QWORD PTR [r11+0x8]
    8967:	4d 8b 3b             	mov    r15,QWORD PTR [r11]
    896a:	c4 c1 7a 10 4b 30    	vmovss xmm1,DWORD PTR [r11+0x30]
    8970:	4d 85 ed             	test   r13,r13
    8973:	0f 89 77 fd ff ff    	jns    86f0 <render+0x100>
    8979:	4d 89 ec             	mov    r12,r13
    897c:	4d 89 ee             	mov    r14,r13
    897f:	c4 41 18 57 e4       	vxorps xmm12,xmm12,xmm12
    8984:	4c 8b 52 28          	mov    r10,QWORD PTR [rdx+0x28]
    8988:	49 d1 ec             	shr    r12,1
    898b:	41 83 e6 01          	and    r14d,0x1
    898f:	4d 09 f4             	or     r12,r14
    8992:	c4 41 9a 2a ec       	vcvtsi2ss xmm13,xmm12,r12
    8997:	c4 41 12 58 f5       	vaddss xmm14,xmm13,xmm13
    899c:	4d 85 d2             	test   r10,r10
    899f:	0f 89 62 fd ff ff    	jns    8707 <render+0x117>
    89a5:	4c 89 d2             	mov    rdx,r10
    89a8:	41 83 e2 01          	and    r10d,0x1
    89ac:	c5 e0 57 db          	vxorps xmm3,xmm3,xmm3
    89b0:	48 d1 ea             	shr    rdx,1
    89b3:	49 09 d2             	or     r10,rdx
    89b6:	c4 c1 e2 2a e2       	vcvtsi2ss xmm4,xmm3,r10
    89bb:	c5 da 58 c4          	vaddss xmm0,xmm4,xmm4
    89bf:	e9 4d fd ff ff       	jmp    8711 <render+0x121>
    89c4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    89c8:	4c 8b ad d8 fe ff ff 	mov    r13,QWORD PTR [rbp-0x128]
    89cf:	48 83 85 c0 fe ff ff 	add    QWORD PTR [rbp-0x140],0x1
    89d6:	01 
    89d7:	4c 8b 85 c0 fe ff ff 	mov    r8,QWORD PTR [rbp-0x140]
    89de:	49 8b 75 28          	mov    rsi,QWORD PTR [r13+0x28]
    89e2:	4c 39 c6             	cmp    rsi,r8
    89e5:	0f 87 55 fc ff ff    	ja     8640 <render+0x50>
    89eb:	48 8d 65 d0          	lea    rsp,[rbp-0x30]
    89ef:	31 c0                	xor    eax,eax
    89f1:	5b                   	pop    rbx
    89f2:	41 59                	pop    r9
    89f4:	41 5c                	pop    r12
    89f6:	41 5d                	pop    r13
    89f8:	41 5e                	pop    r14
    89fa:	41 5f                	pop    r15
    89fc:	5d                   	pop    rbp
    89fd:	49 8d 61 f8          	lea    rsp,[r9-0x8]
    8a01:	c3                   	ret    
    8a02:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    8a08:	c5 f8 77             	vzeroupper 
    8a0b:	e9 40 fe ff ff       	jmp    8850 <render+0x260>
    8a10:	4c 8b 7b 10          	mov    r15,QWORD PTR [rbx+0x10]
    8a14:	48 8b 8d d8 fe ff ff 	mov    rcx,QWORD PTR [rbp-0x128]
    8a1b:	49 8b 47 30          	mov    rax,QWORD PTR [r15+0x30]
    8a1f:	48 8d 59 38          	lea    rbx,[rcx+0x38]
    8a23:	48 89 df             	mov    rdi,rbx
    8a26:	48 89 85 b8 fe ff ff 	mov    QWORD PTR [rbp-0x148],rax
    8a2d:	e8 6e 9e ff ff       	call   28a0 <pthread_mutex_lock@plt>
    8a32:	44 0f af a5 d0 fe ff 	imul   r12d,DWORD PTR [rbp-0x130]
    8a39:	ff 
    8a3a:	48 8b bd b8 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x148]
    8a41:	43 8d 04 2c          	lea    eax,[r12+r13*1]
    8a45:	48 98                	cdqe   
    8a47:	44 89 34 87          	mov    DWORD PTR [rdi+rax*4],r14d
    8a4b:	48 89 df             	mov    rdi,rbx
    8a4e:	e8 dd 9e ff ff       	call   2930 <pthread_mutex_unlock@plt>
    8a53:	e9 f0 fe ff ff       	jmp    8948 <render+0x358>
    8a58:	4d 89 dc             	mov    r12,r11
    8a5b:	41 83 e3 01          	and    r11d,0x1
    8a5f:	c5 c0 57 ff          	vxorps xmm7,xmm7,xmm7
    8a63:	49 d1 ec             	shr    r12,1
    8a66:	4d 09 e3             	or     r11,r12
    8a69:	c4 c1 c2 2a eb       	vcvtsi2ss xmm5,xmm7,r11
    8a6e:	c5 d2 58 f5          	vaddss xmm6,xmm5,xmm5
    8a72:	e9 03 fc ff ff       	jmp    867a <render+0x8a>
    8a77:	48 89 df             	mov    rdi,rbx
    8a7a:	49 89 d8             	mov    r8,rbx
    8a7d:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    8a81:	49 d1 e8             	shr    r8,1
    8a84:	83 e7 01             	and    edi,0x1
    8a87:	49 09 f8             	or     r8,rdi
    8a8a:	c4 c1 fa 2a c8       	vcvtsi2ss xmm1,xmm0,r8
    8a8f:	c5 f2 58 d1          	vaddss xmm2,xmm1,xmm1
    8a93:	e9 cc fb ff ff       	jmp    8664 <render+0x74>
    8a98:	49 83 c6 01          	add    r14,0x1
    8a9c:	49 39 f6             	cmp    r14,rsi
    8a9f:	0f 82 fb 9e ff ff    	jb     29a0 <render.cold>
    8aa5:	e9 41 ff ff ff       	jmp    89eb <render+0x3fb>
    8aaa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000008ab0 <is_collision>:
    8ab0:	f3 0f 1e fa          	endbr64 
    8ab4:	c5 fa 10 44 24 38    	vmovss xmm0,DWORD PTR [rsp+0x38]
    8aba:	c5 f8 2e 05 f6 96 00 	vucomiss xmm0,DWORD PTR [rip+0x96f6]        # 121b8 <_IO_stdin_used+0x1b8>
    8ac1:	00 
    8ac2:	ba 01 00 00 00       	mov    edx,0x1
    8ac7:	0f 9a c0             	setp   al
    8aca:	0f 45 c2             	cmovne eax,edx
    8acd:	c3                   	ret    
    8ace:	66 90                	xchg   ax,ax

0000000000008ad0 <put_color_in_image_frame>:
    8ad0:	f3 0f 1e fa          	endbr64 
    8ad4:	89 d0                	mov    eax,edx
    8ad6:	09 f0                	or     eax,esi
    8ad8:	78 2e                	js     8b08 <put_color_in_image_frame+0x38>
    8ada:	4c 8b 47 08          	mov    r8,QWORD PTR [rdi+0x8]
    8ade:	41 3b 50 30          	cmp    edx,DWORD PTR [r8+0x30]
    8ae2:	7d 24                	jge    8b08 <put_color_in_image_frame+0x38>
    8ae4:	41 56                	push   r14
    8ae6:	41 55                	push   r13
    8ae8:	41 54                	push   r12
    8aea:	48 83 ec 10          	sub    rsp,0x10
    8aee:	4d 8b 68 28          	mov    r13,QWORD PTR [r8+0x28]
    8af2:	44 39 ee             	cmp    esi,r13d
    8af5:	7c 19                	jl     8b10 <put_color_in_image_frame+0x40>
    8af7:	48 83 c4 10          	add    rsp,0x10
    8afb:	41 5c                	pop    r12
    8afd:	41 5d                	pop    r13
    8aff:	41 5e                	pop    r14
    8b01:	c3                   	ret    
    8b02:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    8b08:	c3                   	ret    
    8b09:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    8b10:	89 54 24 08          	mov    DWORD PTR [rsp+0x8],edx
    8b14:	4c 8d 67 38          	lea    r12,[rdi+0x38]
    8b18:	49 8b 50 10          	mov    rdx,QWORD PTR [r8+0x10]
    8b1c:	4c 89 e7             	mov    rdi,r12
    8b1f:	89 4c 24 0c          	mov    DWORD PTR [rsp+0xc],ecx
    8b23:	89 74 24 04          	mov    DWORD PTR [rsp+0x4],esi
    8b27:	4c 8b 72 30          	mov    r14,QWORD PTR [rdx+0x30]
    8b2b:	e8 70 9d ff ff       	call   28a0 <pthread_mutex_lock@plt>
    8b30:	8b 4c 24 08          	mov    ecx,DWORD PTR [rsp+0x8]
    8b34:	8b 74 24 04          	mov    esi,DWORD PTR [rsp+0x4]
    8b38:	44 8b 4c 24 0c       	mov    r9d,DWORD PTR [rsp+0xc]
    8b3d:	44 0f af e9          	imul   r13d,ecx
    8b41:	41 01 f5             	add    r13d,esi
    8b44:	49 63 fd             	movsxd rdi,r13d
    8b47:	45 89 0c be          	mov    DWORD PTR [r14+rdi*4],r9d
    8b4b:	48 83 c4 10          	add    rsp,0x10
    8b4f:	4c 89 e7             	mov    rdi,r12
    8b52:	41 5c                	pop    r12
    8b54:	41 5d                	pop    r13
    8b56:	41 5e                	pop    r14
    8b58:	e9 d3 9d ff ff       	jmp    2930 <pthread_mutex_unlock@plt>
    8b5d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000008b60 <is_shadowed_surface>:
    8b60:	f3 0f 1e fa          	endbr64 
    8b64:	41 56                	push   r14
    8b66:	c4 41 38 57 c0       	vxorps xmm8,xmm8,xmm8
    8b6b:	41 55                	push   r13
    8b6d:	41 54                	push   r12
    8b6f:	55                   	push   rbp
    8b70:	48 89 f5             	mov    rbp,rsi
    8b73:	53                   	push   rbx
    8b74:	48 89 fb             	mov    rbx,rdi
    8b77:	48 81 ec e0 00 00 00 	sub    rsp,0xe0
    8b7e:	c5 fa 10 ac 24 18 01 	vmovss xmm5,DWORD PTR [rsp+0x118]
    8b85:	00 00 
    8b87:	c5 f9 d6 44 24 30    	vmovq  QWORD PTR [rsp+0x30],xmm0
    8b8d:	c5 fa 10 5c 24 34    	vmovss xmm3,DWORD PTR [rsp+0x34]
    8b93:	c5 62 5c 8c 24 14 01 	vsubss xmm9,xmm3,DWORD PTR [rsp+0x114]
    8b9a:	00 00 
    8b9c:	c5 fa 10 44 24 30    	vmovss xmm0,DWORD PTR [rsp+0x30]
    8ba2:	c5 f9 d6 4c 24 38    	vmovq  QWORD PTR [rsp+0x38],xmm1
    8ba8:	c5 fa 5c 8c 24 10 01 	vsubss xmm1,xmm0,DWORD PTR [rsp+0x110]
    8baf:	00 00 
    8bb1:	c5 fa 10 7c 24 38    	vmovss xmm7,DWORD PTR [rsp+0x38]
    8bb7:	c5 fa 11 6c 24 10    	vmovss DWORD PTR [rsp+0x10],xmm5
    8bbd:	c5 fa 7e a4 24 10 01 	vmovq  xmm4,QWORD PTR [rsp+0x110]
    8bc4:	00 00 
    8bc6:	c5 fa 11 44 24 14    	vmovss DWORD PTR [rsp+0x14],xmm0
    8bcc:	c4 c1 32 59 c1       	vmulss xmm0,xmm9,xmm9
    8bd1:	c5 c2 5c d5          	vsubss xmm2,xmm7,xmm5
    8bd5:	c5 fa 11 5c 24 18    	vmovss DWORD PTR [rsp+0x18],xmm3
    8bdb:	c5 fa 16 f4          	vmovshdup xmm6,xmm4
    8bdf:	c5 fa 11 64 24 24    	vmovss DWORD PTR [rsp+0x24],xmm4
    8be5:	c5 fa 11 7c 24 1c    	vmovss DWORD PTR [rsp+0x1c],xmm7
    8beb:	c4 e2 71 b9 c1       	vfmadd231ss xmm0,xmm1,xmm1
    8bf0:	c5 fa 11 74 24 20    	vmovss DWORD PTR [rsp+0x20],xmm6
    8bf6:	c4 e2 69 b9 c2       	vfmadd231ss xmm0,xmm2,xmm2
    8bfb:	c5 78 2e c0          	vucomiss xmm8,xmm0
    8bff:	0f 87 56 02 00 00    	ja     8e5b <is_shadowed_surface+0x2fb>
    8c05:	c5 fa 51 c0          	vsqrtss xmm0,xmm0,xmm0
    8c09:	c5 32 5e e0          	vdivss xmm12,xmm9,xmm0
    8c0d:	c5 fa 10 7c 24 20    	vmovss xmm7,DWORD PTR [rsp+0x20]
    8c13:	c5 79 6f 94 24 10 01 	vmovdqa xmm10,XMMWORD PTR [rsp+0x110]
    8c1a:	00 00 
    8c1c:	c7 84 24 90 00 00 00 	mov    DWORD PTR [rsp+0x90],0x7f7fffff
    8c23:	ff ff 7f 7f 
    8c27:	c5 42 5c 44 24 18    	vsubss xmm8,xmm7,DWORD PTR [rsp+0x18]
    8c2d:	45 31 f6             	xor    r14d,r14d
    8c30:	c5 79 6f 8c 24 90 00 	vmovdqa xmm9,XMMWORD PTR [rsp+0x90]
    8c37:	00 00 
    8c39:	4c 8d a3 d8 00 00 00 	lea    r12,[rbx+0xd8]
    8c40:	c5 79 7f 94 24 a0 00 	vmovdqa XMMWORD PTR [rsp+0xa0],xmm10
    8c47:	00 00 
    8c49:	48 83 bb e0 00 00 00 	cmp    QWORD PTR [rbx+0xe0],0x0
    8c50:	00 
    8c51:	4c 8d 6c 24 60       	lea    r13,[rsp+0x60]
    8c56:	c5 f8 13 a4 24 a0 00 	vmovlps QWORD PTR [rsp+0xa0],xmm4
    8c5d:	00 00 
    8c5f:	c5 d2 5c 64 24 1c    	vsubss xmm4,xmm5,DWORD PTR [rsp+0x1c]
    8c65:	c5 fa 11 ac 24 a8 00 	vmovss DWORD PTR [rsp+0xa8],xmm5
    8c6c:	00 00 
    8c6e:	c5 79 6f bc 24 a0 00 	vmovdqa xmm15,XMMWORD PTR [rsp+0xa0]
    8c75:	00 00 
    8c77:	c5 7a 11 44 24 08    	vmovss DWORD PTR [rsp+0x8],xmm8
    8c7d:	c5 79 7f 7c 24 40    	vmovdqa XMMWORD PTR [rsp+0x40],xmm15
    8c83:	c5 fa 11 64 24 0c    	vmovss DWORD PTR [rsp+0xc],xmm4
    8c89:	c5 79 7f 8c 24 d0 00 	vmovdqa XMMWORD PTR [rsp+0xd0],xmm9
    8c90:	00 00 
    8c92:	c5 72 5e d8          	vdivss xmm11,xmm1,xmm0
    8c96:	c5 6a 5e f0          	vdivss xmm14,xmm2,xmm0
    8c9a:	c5 fa 10 44 24 24    	vmovss xmm0,DWORD PTR [rsp+0x24]
    8ca0:	c5 fa 5c 5c 24 14    	vsubss xmm3,xmm0,DWORD PTR [rsp+0x14]
    8ca6:	c5 e9 ef d2          	vpxor  xmm2,xmm2,xmm2
    8caa:	c5 f9 7f 94 24 80 00 	vmovdqa XMMWORD PTR [rsp+0x80],xmm2
    8cb1:	00 00 
    8cb3:	c5 f9 7f 54 24 60    	vmovdqa XMMWORD PTR [rsp+0x60],xmm2
    8cb9:	c5 fa 11 5c 24 04    	vmovss DWORD PTR [rsp+0x4],xmm3
    8cbf:	c4 41 20 14 ec       	vunpcklps xmm13,xmm11,xmm12
    8cc4:	c5 f9 7f 54 24 70    	vmovdqa XMMWORD PTR [rsp+0x70],xmm2
    8cca:	c5 78 13 ac 24 b0 00 	vmovlps QWORD PTR [rsp+0xb0],xmm13
    8cd1:	00 00 
    8cd3:	c5 f9 7f 94 24 a0 00 	vmovdqa XMMWORD PTR [rsp+0xa0],xmm2
    8cda:	00 00 
    8cdc:	c5 f9 7f 94 24 c0 00 	vmovdqa XMMWORD PTR [rsp+0xc0],xmm2
    8ce3:	00 00 
    8ce5:	c5 7a 11 b4 24 b8 00 	vmovss DWORD PTR [rsp+0xb8],xmm14
    8cec:	00 00 
    8cee:	c5 f9 6f b4 24 b0 00 	vmovdqa xmm6,XMMWORD PTR [rsp+0xb0]
    8cf5:	00 00 
    8cf7:	c5 f9 7f 94 24 b0 00 	vmovdqa XMMWORD PTR [rsp+0xb0],xmm2
    8cfe:	00 00 
    8d00:	c5 f9 7f 74 24 50    	vmovdqa XMMWORD PTR [rsp+0x50],xmm6
    8d06:	75 19                	jne    8d21 <is_shadowed_surface+0x1c1>
    8d08:	e9 23 01 00 00       	jmp    8e30 <is_shadowed_surface+0x2d0>
    8d0d:	0f 1f 00             	nop    DWORD PTR [rax]
    8d10:	49 83 c6 01          	add    r14,0x1
    8d14:	4c 39 b3 e0 00 00 00 	cmp    QWORD PTR [rbx+0xe0],r14
    8d1b:	0f 86 0f 01 00 00    	jbe    8e30 <is_shadowed_surface+0x2d0>
    8d21:	4c 89 f6             	mov    rsi,r14
    8d24:	4c 89 e7             	mov    rdi,r12
    8d27:	e8 b4 40 00 00       	call   cde0 <get_element_or_null_in_list>
    8d2c:	48 8b 00             	mov    rax,QWORD PTR [rax]
    8d2f:	48 39 e8             	cmp    rax,rbp
    8d32:	74 dc                	je     8d10 <is_shadowed_surface+0x1b0>
    8d34:	ff 74 24 58          	push   QWORD PTR [rsp+0x58]
    8d38:	4c 89 ee             	mov    rsi,r13
    8d3b:	48 89 c7             	mov    rdi,rax
    8d3e:	ff 74 24 58          	push   QWORD PTR [rsp+0x58]
    8d42:	ff 74 24 58          	push   QWORD PTR [rsp+0x58]
    8d46:	ff 74 24 58          	push   QWORD PTR [rsp+0x58]
    8d4a:	ff 50 60             	call   QWORD PTR [rax+0x60]
    8d4d:	48 83 c4 20          	add    rsp,0x20
    8d51:	84 c0                	test   al,al
    8d53:	74 bb                	je     8d10 <is_shadowed_surface+0x1b0>
    8d55:	c5 fa 10 4c 24 08    	vmovss xmm1,DWORD PTR [rsp+0x8]
    8d5b:	c5 fa 10 6c 24 04    	vmovss xmm5,DWORD PTR [rsp+0x4]
    8d61:	c4 41 20 57 db       	vxorps xmm11,xmm11,xmm11
    8d66:	c5 7a 10 54 24 0c    	vmovss xmm10,DWORD PTR [rsp+0xc]
    8d6c:	c5 f2 59 c1          	vmulss xmm0,xmm1,xmm1
    8d70:	c4 e2 51 b9 c5       	vfmadd231ss xmm0,xmm5,xmm5
    8d75:	c4 c2 29 b9 c2       	vfmadd231ss xmm0,xmm10,xmm10
    8d7a:	c5 78 2e d8          	vucomiss xmm11,xmm0
    8d7e:	0f 87 be 00 00 00    	ja     8e42 <is_shadowed_surface+0x2e2>
    8d84:	c5 fa 51 c0          	vsqrtss xmm0,xmm0,xmm0
    8d88:	c4 41 78 28 e2       	vmovaps xmm12,xmm10
    8d8d:	c5 fa 10 74 24 08    	vmovss xmm6,DWORD PTR [rsp+0x8]
    8d93:	c5 7a 10 6c 24 04    	vmovss xmm13,DWORD PTR [rsp+0x4]
    8d99:	c5 7a 10 4c 24 20    	vmovss xmm9,DWORD PTR [rsp+0x20]
    8d9f:	c5 fa 10 5c 24 24    	vmovss xmm3,DWORD PTR [rsp+0x24]
    8da5:	c5 ca 5e f8          	vdivss xmm7,xmm6,xmm0
    8da9:	c5 fa 10 6c 24 10    	vmovss xmm5,DWORD PTR [rsp+0x10]
    8daf:	c5 12 5e f0          	vdivss xmm14,xmm13,xmm0
    8db3:	c5 c2 58 64 24 18    	vaddss xmm4,xmm7,DWORD PTR [rsp+0x18]
    8db9:	c5 b2 5c d4          	vsubss xmm2,xmm9,xmm4
    8dbd:	c5 6a 59 da          	vmulss xmm11,xmm2,xmm2
    8dc1:	c5 9a 5e c0          	vdivss xmm0,xmm12,xmm0
    8dc5:	c5 0a 58 7c 24 14    	vaddss xmm15,xmm14,DWORD PTR [rsp+0x14]
    8dcb:	c5 7a 10 74 24 64    	vmovss xmm14,DWORD PTR [rsp+0x64]
    8dd1:	c5 7a 10 64 24 60    	vmovss xmm12,DWORD PTR [rsp+0x60]
    8dd7:	c4 41 62 5c c7       	vsubss xmm8,xmm3,xmm15
    8ddc:	c4 41 0a 5c f9       	vsubss xmm15,xmm14,xmm9
    8de1:	c5 1a 5c eb          	vsubss xmm13,xmm12,xmm3
    8de5:	c5 fa 10 5c 24 68    	vmovss xmm3,DWORD PTR [rsp+0x68]
    8deb:	c4 c1 02 59 f7       	vmulss xmm6,xmm15,xmm15
    8df0:	c4 42 21 99 c0       	vfmadd132ss xmm8,xmm11,xmm8
    8df5:	c4 42 49 99 ed       	vfmadd132ss xmm13,xmm6,xmm13
    8dfa:	c5 fa 58 4c 24 1c    	vaddss xmm1,xmm0,DWORD PTR [rsp+0x1c]
    8e00:	c5 52 5c d1          	vsubss xmm10,xmm5,xmm1
    8e04:	c4 42 39 99 d2       	vfmadd132ss xmm10,xmm8,xmm10
    8e09:	c5 62 5c c5          	vsubss xmm8,xmm3,xmm5
    8e0d:	c4 42 11 99 c0       	vfmadd132ss xmm8,xmm13,xmm8
    8e12:	c4 41 78 2f d0       	vcomiss xmm10,xmm8
    8e17:	0f 86 f3 fe ff ff    	jbe    8d10 <is_shadowed_surface+0x1b0>
    8e1d:	48 81 c4 e0 00 00 00 	add    rsp,0xe0
    8e24:	5b                   	pop    rbx
    8e25:	5d                   	pop    rbp
    8e26:	41 5c                	pop    r12
    8e28:	41 5d                	pop    r13
    8e2a:	41 5e                	pop    r14
    8e2c:	c3                   	ret    
    8e2d:	0f 1f 00             	nop    DWORD PTR [rax]
    8e30:	48 81 c4 e0 00 00 00 	add    rsp,0xe0
    8e37:	31 c0                	xor    eax,eax
    8e39:	5b                   	pop    rbx
    8e3a:	5d                   	pop    rbp
    8e3b:	41 5c                	pop    r12
    8e3d:	41 5d                	pop    r13
    8e3f:	41 5e                	pop    r14
    8e41:	c3                   	ret    
    8e42:	88 44 24 28          	mov    BYTE PTR [rsp+0x28],al
    8e46:	e8 45 9b ff ff       	call   2990 <sqrtf@plt>
    8e4b:	0f b6 44 24 28       	movzx  eax,BYTE PTR [rsp+0x28]
    8e50:	c5 7a 10 64 24 0c    	vmovss xmm12,DWORD PTR [rsp+0xc]
    8e56:	e9 32 ff ff ff       	jmp    8d8d <is_shadowed_surface+0x22d>
    8e5b:	c5 f8 13 64 24 28    	vmovlps QWORD PTR [rsp+0x28],xmm4
    8e61:	c5 fa 11 54 24 0c    	vmovss DWORD PTR [rsp+0xc],xmm2
    8e67:	c5 7a 11 4c 24 08    	vmovss DWORD PTR [rsp+0x8],xmm9
    8e6d:	c5 fa 11 4c 24 04    	vmovss DWORD PTR [rsp+0x4],xmm1
    8e73:	e8 18 9b ff ff       	call   2990 <sqrtf@plt>
    8e78:	c5 fa 7e 64 24 28    	vmovq  xmm4,QWORD PTR [rsp+0x28]
    8e7e:	c5 fa 10 54 24 0c    	vmovss xmm2,DWORD PTR [rsp+0xc]
    8e84:	c5 7a 10 4c 24 08    	vmovss xmm9,DWORD PTR [rsp+0x8]
    8e8a:	c5 fa 10 4c 24 04    	vmovss xmm1,DWORD PTR [rsp+0x4]
    8e90:	c5 fa 10 6c 24 10    	vmovss xmm5,DWORD PTR [rsp+0x10]
    8e96:	e9 6e fd ff ff       	jmp    8c09 <is_shadowed_surface+0xa9>
    8e9b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000008ea0 <reflect_light>:
    8ea0:	f3 0f 1e fa          	endbr64 
    8ea4:	55                   	push   rbp
    8ea5:	48 89 f8             	mov    rax,rdi
    8ea8:	48 c1 ef 20          	shr    rdi,0x20
    8eac:	48 89 e5             	mov    rbp,rsp
    8eaf:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    8eb3:	48 89 4c 24 c8       	mov    QWORD PTR [rsp-0x38],rcx
    8eb8:	0f af 74 24 c8       	imul   esi,DWORD PTR [rsp-0x38]
    8ebd:	48 89 54 24 c0       	mov    QWORD PTR [rsp-0x40],rdx
    8ec2:	8b 4c 24 c0          	mov    ecx,DWORD PTR [rsp-0x40]
    8ec6:	0f af 7c 24 c4       	imul   edi,DWORD PTR [rsp-0x3c]
    8ecb:	c7 44 24 ec 00 00 00 	mov    DWORD PTR [rsp-0x14],0x0
    8ed2:	00 
    8ed3:	48 63 d6             	movsxd rdx,esi
    8ed6:	0f af c8             	imul   ecx,eax
    8ed9:	4c 69 c2 81 80 80 80 	imul   r8,rdx,0xffffffff80808081
    8ee0:	4c 63 d7             	movsxd r10,edi
    8ee3:	4d 69 da 81 80 80 80 	imul   r11,r10,0xffffffff80808081
    8eea:	49 c1 e8 20          	shr    r8,0x20
    8eee:	41 01 f0             	add    r8d,esi
    8ef1:	c1 fe 1f             	sar    esi,0x1f
    8ef4:	41 c1 f8 07          	sar    r8d,0x7
    8ef8:	49 c1 eb 20          	shr    r11,0x20
    8efc:	41 29 f0             	sub    r8d,esi
    8eff:	48 63 f1             	movsxd rsi,ecx
    8f02:	41 01 fb             	add    r11d,edi
    8f05:	c1 ff 1f             	sar    edi,0x1f
    8f08:	4c 69 ce 81 80 80 80 	imul   r9,rsi,0xffffffff80808081
    8f0f:	41 c1 fb 07          	sar    r11d,0x7
    8f13:	44 89 44 24 e8       	mov    DWORD PTR [rsp-0x18],r8d
    8f18:	48 8b 54 24 e8       	mov    rdx,QWORD PTR [rsp-0x18]
    8f1d:	41 29 fb             	sub    r11d,edi
    8f20:	49 c1 e9 20          	shr    r9,0x20
    8f24:	41 01 c9             	add    r9d,ecx
    8f27:	c1 f9 1f             	sar    ecx,0x1f
    8f2a:	41 c1 f9 07          	sar    r9d,0x7
    8f2e:	41 29 c9             	sub    r9d,ecx
    8f31:	c4 c1 79 6e c9       	vmovd  xmm1,r9d
    8f36:	c4 c3 71 22 c3 01    	vpinsrd xmm0,xmm1,r11d,0x1
    8f3c:	c5 f9 d6 44 24 e0    	vmovq  QWORD PTR [rsp-0x20],xmm0
    8f42:	48 8b 44 24 e0       	mov    rax,QWORD PTR [rsp-0x20]
    8f47:	c9                   	leave  
    8f48:	c3                   	ret    
    8f49:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000008f50 <get_normal_at_hit_point>:
    8f50:	f3 0f 1e fa          	endbr64 
    8f54:	4c 8d 54 24 08       	lea    r10,[rsp+0x8]
    8f59:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    8f5d:	41 ff 72 f8          	push   QWORD PTR [r10-0x8]
    8f61:	55                   	push   rbp
    8f62:	48 89 e5             	mov    rbp,rsp
    8f65:	41 52                	push   r10
    8f67:	48 83 ec 68          	sub    rsp,0x68
    8f6b:	41 8b 4a 50          	mov    ecx,DWORD PTR [r10+0x50]
    8f6f:	c5 f9 d6 45 d0       	vmovq  QWORD PTR [rbp-0x30],xmm0
    8f74:	c5 f9 d6 4d d8       	vmovq  QWORD PTR [rbp-0x28],xmm1
    8f79:	c5 f9 d6 55 c0       	vmovq  QWORD PTR [rbp-0x40],xmm2
    8f7e:	c5 f9 d6 5d c8       	vmovq  QWORD PTR [rbp-0x38],xmm3
    8f83:	83 f9 01             	cmp    ecx,0x1
    8f86:	76 13                	jbe    8f9b <get_normal_at_hit_point+0x4b>
    8f88:	83 f9 02             	cmp    ecx,0x2
    8f8b:	74 33                	je     8fc0 <get_normal_at_hit_point+0x70>
    8f8d:	48 8d 35 f4 90 00 00 	lea    rsi,[rip+0x90f4]        # 12088 <_IO_stdin_used+0x88>
    8f94:	31 ff                	xor    edi,edi
    8f96:	e8 b5 38 00 00       	call   c850 <ft_assert>
    8f9b:	c5 f9 6f 65 d0       	vmovdqa xmm4,XMMWORD PTR [rbp-0x30]
    8fa0:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
    8fa4:	c5 fa 7e 45 d0       	vmovq  xmm0,QWORD PTR [rbp-0x30]
    8fa9:	c5 f9 7f 65 e0       	vmovdqa XMMWORD PTR [rbp-0x20],xmm4
    8fae:	c5 fa 7e 4d e8       	vmovq  xmm1,QWORD PTR [rbp-0x18]
    8fb3:	c9                   	leave  
    8fb4:	48 8d 66 f8          	lea    rsp,[rsi-0x8]
    8fb8:	c3                   	ret    
    8fb9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    8fc0:	c5 f9 6f c2          	vmovdqa xmm0,xmm2
    8fc4:	c5 f9 6f cb          	vmovdqa xmm1,xmm3
    8fc8:	4c 89 d7             	mov    rdi,r10
    8fcb:	41 ff 52 68          	call   QWORD PTR [r10+0x68]
    8fcf:	eb ca                	jmp    8f9b <get_normal_at_hit_point+0x4b>
    8fd1:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    8fd8:	00 00 00 00 
    8fdc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000008fe0 <get_checkerboard_color_at_hit_point>:
    8fe0:	f3 0f 1e fa          	endbr64 
    8fe4:	4c 8d 54 24 08       	lea    r10,[rsp+0x8]
    8fe9:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    8fed:	41 ff 72 f8          	push   QWORD PTR [r10-0x8]
    8ff1:	4c 89 d7             	mov    rdi,r10
    8ff4:	55                   	push   rbp
    8ff5:	48 89 e5             	mov    rbp,rsp
    8ff8:	41 52                	push   r10
    8ffa:	48 83 ec 48          	sub    rsp,0x48
    8ffe:	c5 f9 d6 45 d0       	vmovq  QWORD PTR [rbp-0x30],xmm0
    9003:	c5 f9 d6 4d d8       	vmovq  QWORD PTR [rbp-0x28],xmm1
    9008:	41 ff 52 68          	call   QWORD PTR [r10+0x68]
    900c:	48 89 c1             	mov    rcx,rax
    900f:	8d 70 0f             	lea    esi,[rax+0xf]
    9012:	48 c1 f9 20          	sar    rcx,0x20
    9016:	85 c9                	test   ecx,ecx
    9018:	8d 51 0f             	lea    edx,[rcx+0xf]
    901b:	0f 49 d1             	cmovns edx,ecx
    901e:	83 e2 10             	and    edx,0x10
    9021:	74 35                	je     9058 <get_checkerboard_color_at_hit_point+0x78>
    9023:	85 c0                	test   eax,eax
    9025:	0f 48 c6             	cmovs  eax,esi
    9028:	c1 e0 1b             	shl    eax,0x1b
    902b:	c1 f8 1f             	sar    eax,0x1f
    902e:	0f b6 c0             	movzx  eax,al
    9031:	4c 8b 45 f8          	mov    r8,QWORD PTR [rbp-0x8]
    9035:	c5 f9 6e d0          	vmovd  xmm2,eax
    9039:	89 45 e8             	mov    DWORD PTR [rbp-0x18],eax
    903c:	c5 f9 70 c2 e0       	vpshufd xmm0,xmm2,0xe0
    9041:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    9045:	c5 f9 d6 45 e0       	vmovq  QWORD PTR [rbp-0x20],xmm0
    904a:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    904e:	c9                   	leave  
    904f:	49 8d 60 f8          	lea    rsp,[r8-0x8]
    9053:	c3                   	ret    
    9054:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    9058:	85 c0                	test   eax,eax
    905a:	0f 48 c6             	cmovs  eax,esi
    905d:	c1 f8 04             	sar    eax,0x4
    9060:	83 e0 01             	and    eax,0x1
    9063:	83 f8 01             	cmp    eax,0x1
    9066:	19 ff                	sbb    edi,edi
    9068:	40 0f b6 c7          	movzx  eax,dil
    906c:	eb c3                	jmp    9031 <get_checkerboard_color_at_hit_point+0x51>
    906e:	66 90                	xchg   ax,ax

0000000000009070 <get_image_color_at_hit_point>:
    9070:	f3 0f 1e fa          	endbr64 
    9074:	4c 8d 54 24 08       	lea    r10,[rsp+0x8]
    9079:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    907d:	41 ff 72 f8          	push   QWORD PTR [r10-0x8]
    9081:	4c 89 d7             	mov    rdi,r10
    9084:	55                   	push   rbp
    9085:	48 89 e5             	mov    rbp,rsp
    9088:	41 52                	push   r10
    908a:	53                   	push   rbx
    908b:	4c 89 d3             	mov    rbx,r10
    908e:	48 83 ec 40          	sub    rsp,0x40
    9092:	c5 f9 d6 45 d0       	vmovq  QWORD PTR [rbp-0x30],xmm0
    9097:	c5 f9 d6 4d d8       	vmovq  QWORD PTR [rbp-0x28],xmm1
    909c:	41 ff 52 68          	call   QWORD PTR [r10+0x68]
    90a0:	48 89 c2             	mov    rdx,rax
    90a3:	48 c1 fa 20          	sar    rdx,0x20
    90a7:	3d 9f 00 00 00       	cmp    eax,0x9f
    90ac:	7e 08                	jle    90b6 <get_image_color_at_hit_point+0x46>
    90ae:	81 fa 9f 00 00 00    	cmp    edx,0x9f
    90b4:	76 3a                	jbe    90f0 <get_image_color_at_hit_point+0x80>
    90b6:	48 8d 3d e0 8f 00 00 	lea    rdi,[rip+0x8fe0]        # 1209d <_IO_stdin_used+0x9d>
    90bd:	31 db                	xor    ebx,ebx
    90bf:	e8 bc 94 ff ff       	call   2580 <puts@plt>
    90c4:	45 31 c9             	xor    r9d,r9d
    90c7:	45 31 db             	xor    r11d,r11d
    90ca:	89 5d e4             	mov    DWORD PTR [rbp-0x1c],ebx
    90cd:	44 89 4d e0          	mov    DWORD PTR [rbp-0x20],r9d
    90d1:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    90d5:	44 89 5d e8          	mov    DWORD PTR [rbp-0x18],r11d
    90d9:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    90dd:	48 83 c4 40          	add    rsp,0x40
    90e1:	5b                   	pop    rbx
    90e2:	41 5a                	pop    r10
    90e4:	5d                   	pop    rbp
    90e5:	49 8d 62 f8          	lea    rsp,[r10-0x8]
    90e9:	c3                   	ret    
    90ea:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    90f0:	48 8b 4b 58          	mov    rcx,QWORD PTR [rbx+0x58]
    90f4:	8d 34 92             	lea    esi,[rdx+rdx*4]
    90f7:	c1 e6 05             	shl    esi,0x5
    90fa:	48 8b 79 30          	mov    rdi,QWORD PTR [rcx+0x30]
    90fe:	01 f0                	add    eax,esi
    9100:	48 98                	cdqe   
    9102:	8b 04 87             	mov    eax,DWORD PTR [rdi+rax*4]
    9105:	41 89 c0             	mov    r8d,eax
    9108:	0f b6 dc             	movzx  ebx,ah
    910b:	44 0f b6 d8          	movzx  r11d,al
    910f:	41 c1 f8 10          	sar    r8d,0x10
    9113:	45 0f b6 c8          	movzx  r9d,r8b
    9117:	eb b1                	jmp    90ca <get_image_color_at_hit_point+0x5a>
    9119:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000009120 <get_color_at_hit_point>:
    9120:	f3 0f 1e fa          	endbr64 
    9124:	4c 8d 54 24 08       	lea    r10,[rsp+0x8]
    9129:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    912d:	41 ff 72 f8          	push   QWORD PTR [r10-0x8]
    9131:	55                   	push   rbp
    9132:	48 89 e5             	mov    rbp,rsp
    9135:	41 52                	push   r10
    9137:	53                   	push   rbx
    9138:	4c 89 d3             	mov    rbx,r10
    913b:	48 81 ec e0 00 00 00 	sub    rsp,0xe0
    9142:	41 8b 42 50          	mov    eax,DWORD PTR [r10+0x50]
    9146:	c5 f9 d6 85 30 ff ff 	vmovq  QWORD PTR [rbp-0xd0],xmm0
    914d:	ff 
    914e:	c5 f9 d6 8d 38 ff ff 	vmovq  QWORD PTR [rbp-0xc8],xmm1
    9155:	ff 
    9156:	85 c0                	test   eax,eax
    9158:	74 4e                	je     91a8 <get_color_at_hit_point+0x88>
    915a:	83 f8 01             	cmp    eax,0x1
    915d:	0f 84 3d 01 00 00    	je     92a0 <get_color_at_hit_point+0x180>
    9163:	83 f8 02             	cmp    eax,0x2
    9166:	74 58                	je     91c0 <get_color_at_hit_point+0xa0>
    9168:	48 8d 35 41 8f 00 00 	lea    rsi,[rip+0x8f41]        # 120b0 <_IO_stdin_used+0xb0>
    916f:	31 ff                	xor    edi,edi
    9171:	e8 da 36 00 00       	call   c850 <ft_assert>
    9176:	c5 f9 6f 53 10       	vmovdqa xmm2,XMMWORD PTR [rbx+0x10]
    917b:	c5 f9 7f 95 40 ff ff 	vmovdqa XMMWORD PTR [rbp-0xc0],xmm2
    9182:	ff 
    9183:	48 8b 85 40 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc0]
    918a:	48 8b 95 48 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xb8]
    9191:	48 81 c4 e0 00 00 00 	add    rsp,0xe0
    9198:	5b                   	pop    rbx
    9199:	41 58                	pop    r8
    919b:	5d                   	pop    rbp
    919c:	49 8d 60 f8          	lea    rsp,[r8-0x8]
    91a0:	c3                   	ret    
    91a1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    91a8:	c4 c1 79 6f 5a 10    	vmovdqa xmm3,XMMWORD PTR [r10+0x10]
    91ae:	c5 f9 7f 9d 40 ff ff 	vmovdqa XMMWORD PTR [rbp-0xc0],xmm3
    91b5:	ff 
    91b6:	eb cb                	jmp    9183 <get_color_at_hit_point+0x63>
    91b8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    91bf:	00 
    91c0:	c4 c1 79 6f 42 40    	vmovdqa xmm0,XMMWORD PTR [r10+0x40]
    91c6:	c4 c1 79 6f 4a 50    	vmovdqa xmm1,XMMWORD PTR [r10+0x50]
    91cc:	48 8d bd 60 ff ff ff 	lea    rdi,[rbp-0xa0]
    91d3:	c4 c1 79 6f 22       	vmovdqa xmm4,XMMWORD PTR [r10]
    91d8:	c4 c1 79 6f 6a 10    	vmovdqa xmm5,XMMWORD PTR [r10+0x10]
    91de:	c4 c1 79 6f 72 20    	vmovdqa xmm6,XMMWORD PTR [r10+0x20]
    91e4:	c4 c1 79 6f 7a 30    	vmovdqa xmm7,XMMWORD PTR [r10+0x30]
    91ea:	c5 f9 7f 45 a0       	vmovdqa XMMWORD PTR [rbp-0x60],xmm0
    91ef:	c4 c1 79 6f 5a 60    	vmovdqa xmm3,XMMWORD PTR [r10+0x60]
    91f5:	c4 41 79 6f 42 70    	vmovdqa xmm8,XMMWORD PTR [r10+0x70]
    91fb:	c5 f9 7f 4d b0       	vmovdqa XMMWORD PTR [rbp-0x50],xmm1
    9200:	c4 41 79 6f 8a 80 00 	vmovdqa xmm9,XMMWORD PTR [r10+0x80]
    9207:	00 00 
    9209:	c5 79 6f 95 30 ff ff 	vmovdqa xmm10,XMMWORD PTR [rbp-0xd0]
    9210:	ff 
    9211:	c5 f9 7f a5 60 ff ff 	vmovdqa XMMWORD PTR [rbp-0xa0],xmm4
    9218:	ff 
    9219:	c5 fa 7e 85 30 ff ff 	vmovq  xmm0,QWORD PTR [rbp-0xd0]
    9220:	ff 
    9221:	c5 f9 7f ad 70 ff ff 	vmovdqa XMMWORD PTR [rbp-0x90],xmm5
    9228:	ff 
    9229:	c5 79 7f 95 50 ff ff 	vmovdqa XMMWORD PTR [rbp-0xb0],xmm10
    9230:	ff 
    9231:	c5 fa 7e 8d 58 ff ff 	vmovq  xmm1,QWORD PTR [rbp-0xa8]
    9238:	ff 
    9239:	c5 f9 7f 75 80       	vmovdqa XMMWORD PTR [rbp-0x80],xmm6
    923e:	c5 f9 7f 7d 90       	vmovdqa XMMWORD PTR [rbp-0x70],xmm7
    9243:	c5 f9 7f 5d c0       	vmovdqa XMMWORD PTR [rbp-0x40],xmm3
    9248:	c5 79 7f 45 d0       	vmovdqa XMMWORD PTR [rbp-0x30],xmm8
    924d:	c5 79 7f 4d e0       	vmovdqa XMMWORD PTR [rbp-0x20],xmm9
    9252:	ff 55 c8             	call   QWORD PTR [rbp-0x38]
    9255:	48 89 c2             	mov    rdx,rax
    9258:	48 c1 fa 20          	sar    rdx,0x20
    925c:	3d 9f 00 00 00       	cmp    eax,0x9f
    9261:	7e 0c                	jle    926f <get_color_at_hit_point+0x14f>
    9263:	81 fa 9f 00 00 00    	cmp    edx,0x9f
    9269:	0f 86 21 01 00 00    	jbe    9390 <get_color_at_hit_point+0x270>
    926f:	48 8d 3d 27 8e 00 00 	lea    rdi,[rip+0x8e27]        # 1209d <_IO_stdin_used+0x9d>
    9276:	e8 05 93 ff ff       	call   2580 <puts@plt>
    927b:	45 31 db             	xor    r11d,r11d
    927e:	31 d2                	xor    edx,edx
    9280:	45 31 c9             	xor    r9d,r9d
    9283:	44 89 8d 40 ff ff ff 	mov    DWORD PTR [rbp-0xc0],r9d
    928a:	89 95 44 ff ff ff    	mov    DWORD PTR [rbp-0xbc],edx
    9290:	44 89 9d 48 ff ff ff 	mov    DWORD PTR [rbp-0xb8],r11d
    9297:	e9 e7 fe ff ff       	jmp    9183 <get_color_at_hit_point+0x63>
    929c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    92a0:	c4 41 79 6f 1a       	vmovdqa xmm11,XMMWORD PTR [r10]
    92a5:	c4 41 79 6f 62 10    	vmovdqa xmm12,XMMWORD PTR [r10+0x10]
    92ab:	48 8d bd 60 ff ff ff 	lea    rdi,[rbp-0xa0]
    92b2:	c4 41 79 6f 6a 20    	vmovdqa xmm13,XMMWORD PTR [r10+0x20]
    92b8:	c4 41 79 6f 72 30    	vmovdqa xmm14,XMMWORD PTR [r10+0x30]
    92be:	c4 41 79 6f 7a 40    	vmovdqa xmm15,XMMWORD PTR [r10+0x40]
    92c4:	c4 c1 79 6f 52 50    	vmovdqa xmm2,XMMWORD PTR [r10+0x50]
    92ca:	c5 79 7f 9d 60 ff ff 	vmovdqa XMMWORD PTR [rbp-0xa0],xmm11
    92d1:	ff 
    92d2:	c4 c1 79 6f 62 60    	vmovdqa xmm4,XMMWORD PTR [r10+0x60]
    92d8:	c4 c1 79 6f 6a 70    	vmovdqa xmm5,XMMWORD PTR [r10+0x70]
    92de:	c5 79 7f a5 70 ff ff 	vmovdqa XMMWORD PTR [rbp-0x90],xmm12
    92e5:	ff 
    92e6:	c4 c1 79 6f b2 80 00 	vmovdqa xmm6,XMMWORD PTR [r10+0x80]
    92ed:	00 00 
    92ef:	c5 f9 6f bd 30 ff ff 	vmovdqa xmm7,XMMWORD PTR [rbp-0xd0]
    92f6:	ff 
    92f7:	c5 79 7f 6d 80       	vmovdqa XMMWORD PTR [rbp-0x80],xmm13
    92fc:	c5 fa 7e 85 30 ff ff 	vmovq  xmm0,QWORD PTR [rbp-0xd0]
    9303:	ff 
    9304:	c5 79 7f 75 90       	vmovdqa XMMWORD PTR [rbp-0x70],xmm14
    9309:	c5 f9 7f bd 50 ff ff 	vmovdqa XMMWORD PTR [rbp-0xb0],xmm7
    9310:	ff 
    9311:	c5 fa 7e 8d 58 ff ff 	vmovq  xmm1,QWORD PTR [rbp-0xa8]
    9318:	ff 
    9319:	c5 79 7f 7d a0       	vmovdqa XMMWORD PTR [rbp-0x60],xmm15
    931e:	c5 f9 7f 55 b0       	vmovdqa XMMWORD PTR [rbp-0x50],xmm2
    9323:	c5 f9 7f 65 c0       	vmovdqa XMMWORD PTR [rbp-0x40],xmm4
    9328:	c5 f9 7f 6d d0       	vmovdqa XMMWORD PTR [rbp-0x30],xmm5
    932d:	c5 f9 7f 75 e0       	vmovdqa XMMWORD PTR [rbp-0x20],xmm6
    9332:	ff 55 c8             	call   QWORD PTR [rbp-0x38]
    9335:	49 89 c2             	mov    r10,rax
    9338:	8d 70 0f             	lea    esi,[rax+0xf]
    933b:	49 c1 fa 20          	sar    r10,0x20
    933f:	45 85 d2             	test   r10d,r10d
    9342:	41 8d 4a 0f          	lea    ecx,[r10+0xf]
    9346:	41 0f 49 ca          	cmovns ecx,r10d
    934a:	83 e1 10             	and    ecx,0x10
    934d:	75 31                	jne    9380 <get_color_at_hit_point+0x260>
    934f:	85 c0                	test   eax,eax
    9351:	0f 48 c6             	cmovs  eax,esi
    9354:	c1 f8 04             	sar    eax,0x4
    9357:	83 e0 01             	and    eax,0x1
    935a:	83 f8 01             	cmp    eax,0x1
    935d:	19 ff                	sbb    edi,edi
    935f:	40 0f b6 c7          	movzx  eax,dil
    9363:	c5 f9 6e c0          	vmovd  xmm0,eax
    9367:	89 85 48 ff ff ff    	mov    DWORD PTR [rbp-0xb8],eax
    936d:	c5 f9 70 c8 e0       	vpshufd xmm1,xmm0,0xe0
    9372:	c5 f9 d6 8d 40 ff ff 	vmovq  QWORD PTR [rbp-0xc0],xmm1
    9379:	ff 
    937a:	e9 04 fe ff ff       	jmp    9183 <get_color_at_hit_point+0x63>
    937f:	90                   	nop
    9380:	85 c0                	test   eax,eax
    9382:	0f 48 c6             	cmovs  eax,esi
    9385:	c1 e0 1b             	shl    eax,0x1b
    9388:	c1 f8 1f             	sar    eax,0x1f
    938b:	0f b6 c0             	movzx  eax,al
    938e:	eb d3                	jmp    9363 <get_color_at_hit_point+0x243>
    9390:	8d 0c 92             	lea    ecx,[rdx+rdx*4]
    9393:	48 8b 75 b8          	mov    rsi,QWORD PTR [rbp-0x48]
    9397:	c1 e1 05             	shl    ecx,0x5
    939a:	48 8b 7e 30          	mov    rdi,QWORD PTR [rsi+0x30]
    939e:	01 c8                	add    eax,ecx
    93a0:	48 98                	cdqe   
    93a2:	8b 1c 87             	mov    ebx,DWORD PTR [rdi+rax*4]
    93a5:	41 89 d8             	mov    r8d,ebx
    93a8:	0f b6 d7             	movzx  edx,bh
    93ab:	44 0f b6 db          	movzx  r11d,bl
    93af:	41 c1 f8 10          	sar    r8d,0x10
    93b3:	45 0f b6 c8          	movzx  r9d,r8b
    93b7:	e9 c7 fe ff ff       	jmp    9283 <get_color_at_hit_point+0x163>
    93bc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000000093c0 <move_shape>:
    93c0:	f3 0f 1e fa          	endbr64 
    93c4:	83 ee 0c             	sub    esi,0xc
    93c7:	83 fe 05             	cmp    esi,0x5
    93ca:	77 21                	ja     93ed <move_shape+0x2d>
    93cc:	48 8d 15 fd 8d 00 00 	lea    rdx,[rip+0x8dfd]        # 121d0 <_IO_stdin_used+0x1d0>
    93d3:	48 63 04 b2          	movsxd rax,DWORD PTR [rdx+rsi*4]
    93d7:	48 01 d0             	add    rax,rdx
    93da:	3e ff e0             	notrack jmp rax
    93dd:	0f 1f 00             	nop    DWORD PTR [rax]
    93e0:	c5 78 28 17          	vmovaps xmm10,XMMWORD PTR [rdi]
    93e4:	c5 28 5c 5f 40       	vsubps xmm11,xmm10,XMMWORD PTR [rdi+0x40]
    93e9:	c5 78 29 1f          	vmovaps XMMWORD PTR [rdi],xmm11
    93ed:	c3                   	ret    
    93ee:	66 90                	xchg   ax,ax
    93f0:	c5 f8 28 2f          	vmovaps xmm5,XMMWORD PTR [rdi]
    93f4:	c5 d0 58 47 40       	vaddps xmm0,xmm5,XMMWORD PTR [rdi+0x40]
    93f9:	c5 f8 29 07          	vmovaps XMMWORD PTR [rdi],xmm0
    93fd:	c3                   	ret    
    93fe:	66 90                	xchg   ax,ax
    9400:	c5 78 28 07          	vmovaps xmm8,XMMWORD PTR [rdi]
    9404:	c5 38 58 4f 30       	vaddps xmm9,xmm8,XMMWORD PTR [rdi+0x30]
    9409:	c5 78 29 0f          	vmovaps XMMWORD PTR [rdi],xmm9
    940d:	c3                   	ret    
    940e:	66 90                	xchg   ax,ax
    9410:	c5 f8 28 37          	vmovaps xmm6,XMMWORD PTR [rdi]
    9414:	c5 c8 5c 7f 30       	vsubps xmm7,xmm6,XMMWORD PTR [rdi+0x30]
    9419:	c5 f8 29 3f          	vmovaps XMMWORD PTR [rdi],xmm7
    941d:	c3                   	ret    
    941e:	66 90                	xchg   ax,ax
    9420:	c5 f8 28 1f          	vmovaps xmm3,XMMWORD PTR [rdi]
    9424:	c5 e0 5c 57 20       	vsubps xmm2,xmm3,XMMWORD PTR [rdi+0x20]
    9429:	c5 f8 29 17          	vmovaps XMMWORD PTR [rdi],xmm2
    942d:	c3                   	ret    
    942e:	66 90                	xchg   ax,ax
    9430:	c5 f8 28 27          	vmovaps xmm4,XMMWORD PTR [rdi]
    9434:	c5 d8 58 4f 20       	vaddps xmm1,xmm4,XMMWORD PTR [rdi+0x20]
    9439:	c5 f8 29 0f          	vmovaps XMMWORD PTR [rdi],xmm1
    943d:	c3                   	ret    
    943e:	66 90                	xchg   ax,ax

0000000000009440 <rotate_shape>:
    9440:	f3 0f 1e fa          	endbr64 
    9444:	4c 8d 54 24 08       	lea    r10,[rsp+0x8]
    9449:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    944d:	41 ff 72 f8          	push   QWORD PTR [r10-0x8]
    9451:	55                   	push   rbp
    9452:	48 89 e5             	mov    rbp,rsp
    9455:	41 56                	push   r14
    9457:	41 89 f6             	mov    r14d,esi
    945a:	41 55                	push   r13
    945c:	41 54                	push   r12
    945e:	41 52                	push   r10
    9460:	53                   	push   rbx
    9461:	48 89 fb             	mov    rbx,rdi
    9464:	48 83 ec 68          	sub    rsp,0x68
    9468:	ff 77 48             	push   QWORD PTR [rdi+0x48]
    946b:	ff 77 40             	push   QWORD PTR [rdi+0x40]
    946e:	ff 77 38             	push   QWORD PTR [rdi+0x38]
    9471:	ff 77 30             	push   QWORD PTR [rdi+0x30]
    9474:	ff 77 28             	push   QWORD PTR [rdi+0x28]
    9477:	ff 77 20             	push   QWORD PTR [rdi+0x20]
    947a:	e8 c1 1b 00 00       	call   b040 <convert_quaternion>
    947f:	48 83 c4 30          	add    rsp,0x30
    9483:	41 83 fe 02          	cmp    r14d,0x2
    9487:	c5 e8 57 d2          	vxorps xmm2,xmm2,xmm2
    948b:	c4 e1 f9 7e ca       	vmovq  rdx,xmm1
    9490:	74 1e                	je     94b0 <rotate_shape+0x70>
    9492:	41 83 ee 03          	sub    r14d,0x3
    9496:	41 83 fe 04          	cmp    r14d,0x4
    949a:	77 69                	ja     9505 <rotate_shape+0xc5>
    949c:	48 8d 0d 45 8d 00 00 	lea    rcx,[rip+0x8d45]        # 121e8 <_IO_stdin_used+0x1e8>
    94a3:	4a 63 04 b1          	movsxd rax,DWORD PTR [rcx+r14*4]
    94a7:	48 01 c8             	add    rax,rcx
    94aa:	3e ff e0             	notrack jmp rax
    94ad:	0f 1f 00             	nop    DWORD PTR [rax]
    94b0:	c5 7b 10 2d c0 8b 00 	vmovsd xmm13,QWORD PTR [rip+0x8bc0]        # 12078 <_IO_stdin_used+0x78>
    94b7:	00 
    94b8:	c5 6a 5a 53 20       	vcvtss2sd xmm10,xmm2,DWORD PTR [rbx+0x20]
    94bd:	c5 6a 5a 5b 24       	vcvtss2sd xmm11,xmm2,DWORD PTR [rbx+0x24]
    94c2:	c5 ea 5a 53 28       	vcvtss2sd xmm2,xmm2,DWORD PTR [rbx+0x28]
    94c7:	c4 41 2b 59 f5       	vmulsd xmm14,xmm10,xmm13
    94cc:	c4 c1 23 59 cd       	vmulsd xmm1,xmm11,xmm13
    94d1:	c4 41 6b 59 e5       	vmulsd xmm12,xmm2,xmm13
    94d6:	c4 41 0b 5a ee       	vcvtsd2ss xmm13,xmm14,xmm14
    94db:	c4 41 79 7e ed       	vmovd  r13d,xmm13
    94e0:	c5 73 5a f1          	vcvtsd2ss xmm14,xmm1,xmm1
    94e4:	49 c1 e5 20          	shl    r13,0x20
    94e8:	c4 41 79 7e f4       	vmovd  r12d,xmm14
    94ed:	49 81 cd a0 c1 7f 3f 	or     r13,0x3f7fc1a0
    94f4:	c4 41 1b 5a fc       	vcvtsd2ss xmm15,xmm12,xmm12
    94f9:	c4 41 79 7e f8       	vmovd  r8d,xmm15
    94fe:	49 c1 e0 20          	shl    r8,0x20
    9502:	4d 09 c4             	or     r12,r8
    9505:	c4 c1 f9 6e d5       	vmovq  xmm2,r13
    950a:	c4 c1 f9 6e dc       	vmovq  xmm3,r12
    950f:	c4 e1 f9 6e ca       	vmovq  xmm1,rdx
    9514:	e8 97 19 00 00       	call   aeb0 <hamilton_product>
    9519:	48 8d 7d 90          	lea    rdi,[rbp-0x70]
    951d:	e8 3e 1a 00 00       	call   af60 <convert_matrix>
    9522:	c5 f9 6f 45 90       	vmovdqa xmm0,XMMWORD PTR [rbp-0x70]
    9527:	c5 e8 57 d2          	vxorps xmm2,xmm2,xmm2
    952b:	c5 f9 6f 65 a0       	vmovdqa xmm4,XMMWORD PTR [rbp-0x60]
    9530:	c5 f9 6f 5d b0       	vmovdqa xmm3,XMMWORD PTR [rbp-0x50]
    9535:	c5 f9 7f 43 20       	vmovdqa XMMWORD PTR [rbx+0x20],xmm0
    953a:	c5 fa 10 7b 24       	vmovss xmm7,DWORD PTR [rbx+0x24]
    953f:	c5 fa 10 4b 20       	vmovss xmm1,DWORD PTR [rbx+0x20]
    9544:	c5 7a 10 4b 28       	vmovss xmm9,DWORD PTR [rbx+0x28]
    9549:	c5 f9 7f 63 30       	vmovdqa XMMWORD PTR [rbx+0x30],xmm4
    954e:	c5 c2 59 c7          	vmulss xmm0,xmm7,xmm7
    9552:	c5 f9 7f 5b 40       	vmovdqa XMMWORD PTR [rbx+0x40],xmm3
    9557:	c4 e2 71 b9 c1       	vfmadd231ss xmm0,xmm1,xmm1
    955c:	c4 c2 31 b9 c1       	vfmadd231ss xmm0,xmm9,xmm9
    9561:	c5 f8 2e d0          	vucomiss xmm2,xmm0
    9565:	0f 87 0b 02 00 00    	ja     9776 <rotate_shape+0x336>
    956b:	c5 fa 51 c0          	vsqrtss xmm0,xmm0,xmm0
    956f:	c5 7a 10 63 34       	vmovss xmm12,DWORD PTR [rbx+0x34]
    9574:	c5 f2 5e e8          	vdivss xmm5,xmm1,xmm0
    9578:	c5 7a 10 6b 30       	vmovss xmm13,DWORD PTR [rbx+0x30]
    957d:	c5 7a 10 5b 38       	vmovss xmm11,DWORD PTR [rbx+0x38]
    9582:	c5 c2 5e f0          	vdivss xmm6,xmm7,xmm0
    9586:	c5 32 5e d0          	vdivss xmm10,xmm9,xmm0
    958a:	c4 c1 1a 59 c4       	vmulss xmm0,xmm12,xmm12
    958f:	c5 50 14 c6          	vunpcklps xmm8,xmm5,xmm6
    9593:	c5 78 13 43 20       	vmovlps QWORD PTR [rbx+0x20],xmm8
    9598:	c4 c2 11 b9 c5       	vfmadd231ss xmm0,xmm13,xmm13
    959d:	c4 c2 21 b9 c3       	vfmadd231ss xmm0,xmm11,xmm11
    95a2:	c5 f8 2e d0          	vucomiss xmm2,xmm0
    95a6:	c5 7a 11 53 28       	vmovss DWORD PTR [rbx+0x28],xmm10
    95ab:	0f 87 19 02 00 00    	ja     97ca <rotate_shape+0x38a>
    95b1:	c5 fa 51 c0          	vsqrtss xmm0,xmm0,xmm0
    95b5:	c5 12 5e f0          	vdivss xmm14,xmm13,xmm0
    95b9:	c5 7a 10 4b 44       	vmovss xmm9,DWORD PTR [rbx+0x44]
    95be:	c5 fa 10 7b 40       	vmovss xmm7,DWORD PTR [rbx+0x40]
    95c3:	c5 fa 10 5b 48       	vmovss xmm3,DWORD PTR [rbx+0x48]
    95c8:	c5 1a 5e f8          	vdivss xmm15,xmm12,xmm0
    95cc:	c5 a2 5e c0          	vdivss xmm0,xmm11,xmm0
    95d0:	c4 c1 08 14 e7       	vunpcklps xmm4,xmm14,xmm15
    95d5:	c5 f8 13 63 30       	vmovlps QWORD PTR [rbx+0x30],xmm4
    95da:	c5 fa 11 43 38       	vmovss DWORD PTR [rbx+0x38],xmm0
    95df:	c4 c1 32 59 c1       	vmulss xmm0,xmm9,xmm9
    95e4:	c4 e2 41 b9 c7       	vfmadd231ss xmm0,xmm7,xmm7
    95e9:	c4 e2 61 b9 c3       	vfmadd231ss xmm0,xmm3,xmm3
    95ee:	c5 f8 2e d0          	vucomiss xmm2,xmm0
    95f2:	0f 87 aa 01 00 00    	ja     97a2 <rotate_shape+0x362>
    95f8:	c5 fa 51 c0          	vsqrtss xmm0,xmm0,xmm0
    95fc:	c5 c2 5e c8          	vdivss xmm1,xmm7,xmm0
    9600:	c5 b2 5e e8          	vdivss xmm5,xmm9,xmm0
    9604:	c5 62 5e c0          	vdivss xmm8,xmm3,xmm0
    9608:	c5 f0 14 f5          	vunpcklps xmm6,xmm1,xmm5
    960c:	c5 f8 13 73 40       	vmovlps QWORD PTR [rbx+0x40],xmm6
    9611:	c5 7a 11 43 48       	vmovss DWORD PTR [rbx+0x48],xmm8
    9616:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    961a:	5b                   	pop    rbx
    961b:	41 59                	pop    r9
    961d:	41 5c                	pop    r12
    961f:	41 5d                	pop    r13
    9621:	41 5e                	pop    r14
    9623:	5d                   	pop    rbp
    9624:	49 8d 61 f8          	lea    rsp,[r9-0x8]
    9628:	c3                   	ret    
    9629:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    9630:	c5 ea 5a 4b 40       	vcvtss2sd xmm1,xmm2,DWORD PTR [rbx+0x40]
    9635:	c5 ea 5a 7b 48       	vcvtss2sd xmm7,xmm2,DWORD PTR [rbx+0x48]
    963a:	c5 ea 5a 6b 44       	vcvtss2sd xmm5,xmm2,DWORD PTR [rbx+0x44]
    963f:	c5 fb 10 25 31 8a 00 	vmovsd xmm4,QWORD PTR [rip+0x8a31]        # 12078 <_IO_stdin_used+0x78>
    9646:	00 
    9647:	c5 f3 59 dc          	vmulsd xmm3,xmm1,xmm4
    964b:	c5 43 59 c4          	vmulsd xmm8,xmm7,xmm4
    964f:	c5 d3 59 f4          	vmulsd xmm6,xmm5,xmm4
    9653:	c5 63 5a cb          	vcvtsd2ss xmm9,xmm3,xmm3
    9657:	c4 41 79 7e cd       	vmovd  r13d,xmm9
    965c:	c4 41 3b 5a d8       	vcvtsd2ss xmm11,xmm8,xmm8
    9661:	c5 79 7e de          	vmovd  esi,xmm11
    9665:	49 c1 e5 20          	shl    r13,0x20
    9669:	48 c1 e6 20          	shl    rsi,0x20
    966d:	c5 4b 5a d6          	vcvtsd2ss xmm10,xmm6,xmm6
    9671:	c4 41 79 7e d4       	vmovd  r12d,xmm10
    9676:	49 81 cd a0 c1 7f 3f 	or     r13,0x3f7fc1a0
    967d:	49 09 f4             	or     r12,rsi
    9680:	e9 80 fe ff ff       	jmp    9505 <rotate_shape+0xc5>
    9685:	0f 1f 00             	nop    DWORD PTR [rax]
    9688:	c5 fb 10 25 f0 89 00 	vmovsd xmm4,QWORD PTR [rip+0x89f0]        # 12080 <_IO_stdin_used+0x80>
    968f:	00 
    9690:	c5 6a 5a 7b 40       	vcvtss2sd xmm15,xmm2,DWORD PTR [rbx+0x40]
    9695:	c5 ea 5a 4b 44       	vcvtss2sd xmm1,xmm2,DWORD PTR [rbx+0x44]
    969a:	c5 ea 5a 53 48       	vcvtss2sd xmm2,xmm2,DWORD PTR [rbx+0x48]
    969f:	c5 83 59 dc          	vmulsd xmm3,xmm15,xmm4
    96a3:	c5 73 59 cc          	vmulsd xmm9,xmm1,xmm4
    96a7:	c5 eb 59 fc          	vmulsd xmm7,xmm2,xmm4
    96ab:	c5 e3 5a eb          	vcvtsd2ss xmm5,xmm3,xmm3
    96af:	c4 c1 79 7e ed       	vmovd  r13d,xmm5
    96b4:	c5 43 5a c7          	vcvtsd2ss xmm8,xmm7,xmm7
    96b8:	c5 79 7e c7          	vmovd  edi,xmm8
    96bc:	49 c1 e5 20          	shl    r13,0x20
    96c0:	c4 c1 33 5a f1       	vcvtsd2ss xmm6,xmm9,xmm9
    96c5:	48 c1 e7 20          	shl    rdi,0x20
    96c9:	c4 c1 79 7e f4       	vmovd  r12d,xmm6
    96ce:	49 81 cd a0 c1 7f 3f 	or     r13,0x3f7fc1a0
    96d5:	49 09 fc             	or     r12,rdi
    96d8:	e9 28 fe ff ff       	jmp    9505 <rotate_shape+0xc5>
    96dd:	0f 1f 00             	nop    DWORD PTR [rax]
    96e0:	c5 6a 5a 4b 20       	vcvtss2sd xmm9,xmm2,DWORD PTR [rbx+0x20]
    96e5:	c5 6a 5a 63 24       	vcvtss2sd xmm12,xmm2,DWORD PTR [rbx+0x24]
    96ea:	c5 6a 5a 6b 28       	vcvtss2sd xmm13,xmm2,DWORD PTR [rbx+0x28]
    96ef:	c5 7b 10 15 89 89 00 	vmovsd xmm10,QWORD PTR [rip+0x8989]        # 12080 <_IO_stdin_used+0x80>
    96f6:	00 
    96f7:	c4 41 33 59 da       	vmulsd xmm11,xmm9,xmm10
    96fc:	c4 c1 13 59 fa       	vmulsd xmm7,xmm13,xmm10
    9701:	c4 41 1b 59 ca       	vmulsd xmm9,xmm12,xmm10
    9706:	c4 41 23 5a f3       	vcvtsd2ss xmm14,xmm11,xmm11
    970b:	c4 41 79 7e f5       	vmovd  r13d,xmm14
    9710:	eb a2                	jmp    96b4 <rotate_shape+0x274>
    9712:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    9718:	c5 ea 5a 5b 30       	vcvtss2sd xmm3,xmm2,DWORD PTR [rbx+0x30]
    971d:	c5 ea 5a 73 34       	vcvtss2sd xmm6,xmm2,DWORD PTR [rbx+0x34]
    9722:	c5 ea 5a 7b 38       	vcvtss2sd xmm7,xmm2,DWORD PTR [rbx+0x38]
    9727:	c5 fb 10 25 49 89 00 	vmovsd xmm4,QWORD PTR [rip+0x8949]        # 12078 <_IO_stdin_used+0x78>
    972e:	00 
    972f:	c5 e3 59 ec          	vmulsd xmm5,xmm3,xmm4
    9733:	c5 4b 59 cc          	vmulsd xmm9,xmm6,xmm4
    9737:	c5 c3 59 fc          	vmulsd xmm7,xmm7,xmm4
    973b:	c5 53 5a c5          	vcvtsd2ss xmm8,xmm5,xmm5
    973f:	c4 41 79 7e c5       	vmovd  r13d,xmm8
    9744:	e9 6b ff ff ff       	jmp    96b4 <rotate_shape+0x274>
    9749:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    9750:	c5 7b 10 2d 28 89 00 	vmovsd xmm13,QWORD PTR [rip+0x8928]        # 12080 <_IO_stdin_used+0x80>
    9757:	00 
    9758:	c5 6a 5a 63 30       	vcvtss2sd xmm12,xmm2,DWORD PTR [rbx+0x30]
    975d:	c5 6a 5a 7b 34       	vcvtss2sd xmm15,xmm2,DWORD PTR [rbx+0x34]
    9762:	c5 ea 5a 53 38       	vcvtss2sd xmm2,xmm2,DWORD PTR [rbx+0x38]
    9767:	c4 41 1b 59 f5       	vmulsd xmm14,xmm12,xmm13
    976c:	c4 c1 03 59 cd       	vmulsd xmm1,xmm15,xmm13
    9771:	e9 5b fd ff ff       	jmp    94d1 <rotate_shape+0x91>
    9776:	c5 7a 11 4d 84       	vmovss DWORD PTR [rbp-0x7c],xmm9
    977b:	c5 fa 11 7d 88       	vmovss DWORD PTR [rbp-0x78],xmm7
    9780:	c5 fa 11 4d 8c       	vmovss DWORD PTR [rbp-0x74],xmm1
    9785:	e8 06 92 ff ff       	call   2990 <sqrtf@plt>
    978a:	c5 7a 10 4d 84       	vmovss xmm9,DWORD PTR [rbp-0x7c]
    978f:	c5 fa 10 7d 88       	vmovss xmm7,DWORD PTR [rbp-0x78]
    9794:	c5 e8 57 d2          	vxorps xmm2,xmm2,xmm2
    9798:	c5 fa 10 4d 8c       	vmovss xmm1,DWORD PTR [rbp-0x74]
    979d:	e9 cd fd ff ff       	jmp    956f <rotate_shape+0x12f>
    97a2:	c5 fa 11 5d 84       	vmovss DWORD PTR [rbp-0x7c],xmm3
    97a7:	c5 7a 11 4d 88       	vmovss DWORD PTR [rbp-0x78],xmm9
    97ac:	c5 fa 11 7d 8c       	vmovss DWORD PTR [rbp-0x74],xmm7
    97b1:	e8 da 91 ff ff       	call   2990 <sqrtf@plt>
    97b6:	c5 fa 10 5d 84       	vmovss xmm3,DWORD PTR [rbp-0x7c]
    97bb:	c5 7a 10 4d 88       	vmovss xmm9,DWORD PTR [rbp-0x78]
    97c0:	c5 fa 10 7d 8c       	vmovss xmm7,DWORD PTR [rbp-0x74]
    97c5:	e9 32 fe ff ff       	jmp    95fc <rotate_shape+0x1bc>
    97ca:	c5 7a 11 5d 84       	vmovss DWORD PTR [rbp-0x7c],xmm11
    97cf:	c5 7a 11 65 88       	vmovss DWORD PTR [rbp-0x78],xmm12
    97d4:	c5 7a 11 6d 8c       	vmovss DWORD PTR [rbp-0x74],xmm13
    97d9:	e8 b2 91 ff ff       	call   2990 <sqrtf@plt>
    97de:	c5 7a 10 5d 84       	vmovss xmm11,DWORD PTR [rbp-0x7c]
    97e3:	c5 7a 10 65 88       	vmovss xmm12,DWORD PTR [rbp-0x78]
    97e8:	c5 e8 57 d2          	vxorps xmm2,xmm2,xmm2
    97ec:	c5 7a 10 6d 8c       	vmovss xmm13,DWORD PTR [rbp-0x74]
    97f1:	e9 bf fd ff ff       	jmp    95b5 <rotate_shape+0x175>
    97f6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    97fd:	00 00 00 

0000000000009800 <set_texcture>:
    9800:	f3 0f 1e fa          	endbr64 
    9804:	83 fe 26             	cmp    esi,0x26
    9807:	74 17                	je     9820 <set_texcture+0x20>
    9809:	83 fe 27             	cmp    esi,0x27
    980c:	74 0a                	je     9818 <set_texcture+0x18>
    980e:	83 fe 28             	cmp    esi,0x28
    9811:	74 1d                	je     9830 <set_texcture+0x30>
    9813:	c3                   	ret    
    9814:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    9818:	c7 47 50 01 00 00 00 	mov    DWORD PTR [rdi+0x50],0x1
    981f:	c3                   	ret    
    9820:	c7 47 50 00 00 00 00 	mov    DWORD PTR [rdi+0x50],0x0
    9827:	c3                   	ret    
    9828:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    982f:	00 
    9830:	c7 47 50 02 00 00 00 	mov    DWORD PTR [rdi+0x50],0x2
    9837:	c3                   	ret    
    9838:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    983f:	00 

0000000000009840 <get_local_basis>:
    9840:	f3 0f 1e fa          	endbr64 
    9844:	41 54                	push   r12
    9846:	c5 e8 57 d2          	vxorps xmm2,xmm2,xmm2
    984a:	49 89 fc             	mov    r12,rdi
    984d:	48 83 ec 30          	sub    rsp,0x30
    9851:	c5 f9 d6 4c 24 08    	vmovq  QWORD PTR [rsp+0x8],xmm1
    9857:	c5 fa 10 0d 49 89 00 	vmovss xmm1,DWORD PTR [rip+0x8949]        # 121a8 <_IO_stdin_used+0x1a8>
    985e:	00 
    985f:	c5 f9 d6 04 24       	vmovq  QWORD PTR [rsp],xmm0
    9864:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    9868:	e8 f3 36 00 00       	call   cf60 <get_vector3>
    986d:	c5 fa 7e 14 24       	vmovq  xmm2,QWORD PTR [rsp]
    9872:	c5 fa 7e 5c 24 08    	vmovq  xmm3,QWORD PTR [rsp+0x8]
    9878:	c5 f9 d6 44 24 10    	vmovq  QWORD PTR [rsp+0x10],xmm0
    987e:	c5 f9 d6 4c 24 18    	vmovq  QWORD PTR [rsp+0x18],xmm1
    9884:	e8 f7 36 00 00       	call   cf80 <is_uneqaul_vector3>
    9889:	c5 fa 10 15 1b 89 00 	vmovss xmm2,DWORD PTR [rip+0x891b]        # 121ac <_IO_stdin_used+0x1ac>
    9890:	00 
    9891:	84 c0                	test   al,al
    9893:	0f 84 9f 00 00 00    	je     9938 <get_local_basis+0xf8>
    9899:	c5 f9 ef c0          	vpxor  xmm0,xmm0,xmm0
    989d:	c5 fa 7e 4c 24 08    	vmovq  xmm1,QWORD PTR [rsp+0x8]
    98a3:	c5 f9 7f 44 24 20    	vmovdqa XMMWORD PTR [rsp+0x20],xmm0
    98a9:	c5 fa 7e 04 24       	vmovq  xmm0,QWORD PTR [rsp]
    98ae:	c5 fa 7e 5c 24 28    	vmovq  xmm3,QWORD PTR [rsp+0x28]
    98b4:	c7 44 24 24 00 00 80 	mov    DWORD PTR [rsp+0x24],0xbf800000
    98bb:	bf 
    98bc:	c5 fa 7e 54 24 20    	vmovq  xmm2,QWORD PTR [rsp+0x20]
    98c2:	e8 b9 36 00 00       	call   cf80 <is_uneqaul_vector3>
    98c7:	84 c0                	test   al,al
    98c9:	74 65                	je     9930 <get_local_basis+0xf0>
    98cb:	c5 fa 7e 44 24 10    	vmovq  xmm0,QWORD PTR [rsp+0x10]
    98d1:	c5 fa 7e 4c 24 18    	vmovq  xmm1,QWORD PTR [rsp+0x18]
    98d7:	c5 fa 7e 14 24       	vmovq  xmm2,QWORD PTR [rsp]
    98dc:	c5 fa 7e 5c 24 08    	vmovq  xmm3,QWORD PTR [rsp+0x8]
    98e2:	e8 f9 37 00 00       	call   d0e0 <cross_product3x3>
    98e7:	c4 c1 79 d6 04 24    	vmovq  QWORD PTR [r12],xmm0
    98ed:	c5 f9 6f d0          	vmovdqa xmm2,xmm0
    98f1:	c5 f9 6f d9          	vmovdqa xmm3,xmm1
    98f5:	c5 fa 7e 04 24       	vmovq  xmm0,QWORD PTR [rsp]
    98fa:	c4 c1 79 d6 4c 24 08 	vmovq  QWORD PTR [r12+0x8],xmm1
    9901:	c5 fa 7e 4c 24 08    	vmovq  xmm1,QWORD PTR [rsp+0x8]
    9907:	e8 d4 37 00 00       	call   d0e0 <cross_product3x3>
    990c:	c5 f9 6f 24 24       	vmovdqa xmm4,XMMWORD PTR [rsp]
    9911:	4c 89 e0             	mov    rax,r12
    9914:	c4 c1 79 d6 44 24 10 	vmovq  QWORD PTR [r12+0x10],xmm0
    991b:	c4 c1 79 d6 4c 24 18 	vmovq  QWORD PTR [r12+0x18],xmm1
    9922:	c4 c1 79 7f 64 24 20 	vmovdqa XMMWORD PTR [r12+0x20],xmm4
    9929:	48 83 c4 30          	add    rsp,0x30
    992d:	41 5c                	pop    r12
    992f:	c3                   	ret    
    9930:	c5 fa 10 15 70 88 00 	vmovss xmm2,DWORD PTR [rip+0x8870]        # 121a8 <_IO_stdin_used+0x1a8>
    9937:	00 
    9938:	c5 f0 57 c9          	vxorps xmm1,xmm1,xmm1
    993c:	c5 f8 28 c1          	vmovaps xmm0,xmm1
    9940:	e8 1b 36 00 00       	call   cf60 <get_vector3>
    9945:	c5 f9 d6 44 24 10    	vmovq  QWORD PTR [rsp+0x10],xmm0
    994b:	c5 f9 d6 4c 24 18    	vmovq  QWORD PTR [rsp+0x18],xmm1
    9951:	e9 75 ff ff ff       	jmp    98cb <get_local_basis+0x8b>
    9956:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    995d:	00 00 00 

0000000000009960 <destroy_shapes>:
    9960:	f3 0f 1e fa          	endbr64 
    9964:	55                   	push   rbp
    9965:	48 89 fd             	mov    rbp,rdi
    9968:	53                   	push   rbx
    9969:	48 83 ec 08          	sub    rsp,0x8
    996d:	48 83 7f 08 00       	cmp    QWORD PTR [rdi+0x8],0x0
    9972:	74 28                	je     999c <destroy_shapes+0x3c>
    9974:	31 db                	xor    ebx,ebx
    9976:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    997d:	00 00 00 
    9980:	48 89 de             	mov    rsi,rbx
    9983:	48 89 ef             	mov    rdi,rbp
    9986:	48 83 c3 01          	add    rbx,0x1
    998a:	ff 55 48             	call   QWORD PTR [rbp+0x48]
    998d:	48 8b 00             	mov    rax,QWORD PTR [rax]
    9990:	48 89 c7             	mov    rdi,rax
    9993:	ff 50 70             	call   QWORD PTR [rax+0x70]
    9996:	48 39 5d 08          	cmp    QWORD PTR [rbp+0x8],rbx
    999a:	77 e4                	ja     9980 <destroy_shapes+0x20>
    999c:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
    99a0:	e8 2b 8d ff ff       	call   26d0 <free@plt>
    99a5:	48 c7 45 00 00 00 00 	mov    QWORD PTR [rbp+0x0],0x0
    99ac:	00 
    99ad:	48 83 c4 08          	add    rsp,0x8
    99b1:	5b                   	pop    rbx
    99b2:	5d                   	pop    rbp
    99b3:	c3                   	ret    
    99b4:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    99bb:	00 00 00 
    99be:	66 90                	xchg   ax,ax

00000000000099c0 <delete_sphere>:
    99c0:	f3 0f 1e fa          	endbr64 
    99c4:	e9 07 8d ff ff       	jmp    26d0 <free@plt>
    99c9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000099d0 <get_uv_coordinate_in_sphere>:
    99d0:	f3 0f 1e fa          	endbr64 
    99d4:	48 83 ec 28          	sub    rsp,0x28
    99d8:	c5 f9 d6 44 24 10    	vmovq  QWORD PTR [rsp+0x10],xmm0
    99de:	c5 fa 10 64 24 14    	vmovss xmm4,DWORD PTR [rsp+0x14]
    99e4:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    99e8:	c5 da 5c 77 04       	vsubss xmm6,xmm4,DWORD PTR [rdi+0x4]
    99ed:	c5 f9 d6 4c 24 18    	vmovq  QWORD PTR [rsp+0x18],xmm1
    99f3:	c5 fa 10 4c 24 10    	vmovss xmm1,DWORD PTR [rsp+0x10]
    99f9:	c5 f2 5c 3f          	vsubss xmm7,xmm1,DWORD PTR [rdi]
    99fd:	c5 fa 10 5c 24 18    	vmovss xmm3,DWORD PTR [rsp+0x18]
    9a03:	c5 e2 5c 6f 08       	vsubss xmm5,xmm3,DWORD PTR [rdi+0x8]
    9a08:	c5 ca 59 d6          	vmulss xmm2,xmm6,xmm6
    9a0c:	c4 e2 41 b9 d7       	vfmadd231ss xmm2,xmm7,xmm7
    9a11:	c4 e2 51 b9 d5       	vfmadd231ss xmm2,xmm5,xmm5
    9a16:	c5 f8 2e c2          	vucomiss xmm0,xmm2
    9a1a:	0f 87 87 00 00 00    	ja     9aa7 <get_uv_coordinate_in_sphere+0xd7>
    9a20:	c5 ea 51 d2          	vsqrtss xmm2,xmm2,xmm2
    9a24:	c5 c2 5e ca          	vdivss xmm1,xmm7,xmm2
    9a28:	c5 fa 11 74 24 0c    	vmovss DWORD PTR [rsp+0xc],xmm6
    9a2e:	c5 fa 11 54 24 08    	vmovss DWORD PTR [rsp+0x8],xmm2
    9a34:	c5 52 5e c2          	vdivss xmm8,xmm5,xmm2
    9a38:	c5 b8 57 05 c0 86 00 	vxorps xmm0,xmm8,XMMWORD PTR [rip+0x86c0]        # 12100 <_IO_stdin_used+0x100>
    9a3f:	00 
    9a40:	e8 6b 8c ff ff       	call   26b0 <atan2f@plt>
    9a45:	c5 7a 10 4c 24 08    	vmovss xmm9,DWORD PTR [rsp+0x8]
    9a4b:	c5 7a 10 54 24 0c    	vmovss xmm10,DWORD PTR [rsp+0xc]
    9a51:	c5 fa 11 44 24 04    	vmovss DWORD PTR [rsp+0x4],xmm0
    9a57:	c4 c1 2a 5e c1       	vdivss xmm0,xmm10,xmm9
    9a5c:	e8 2f 8c ff ff       	call   2690 <acosf@plt>
    9a61:	c5 7a 10 1d 53 87 00 	vmovss xmm11,DWORD PTR [rip+0x8753]        # 121bc <_IO_stdin_used+0x1bc>
    9a68:	00 
    9a69:	c5 7a 10 35 8f 87 00 	vmovss xmm14,DWORD PTR [rip+0x878f]        # 12200 <_IO_stdin_used+0x200>
    9a70:	00 
    9a71:	c5 22 58 64 24 04    	vaddss xmm12,xmm11,DWORD PTR [rsp+0x4]
    9a77:	c5 1a 5e 2d 7d 87 00 	vdivss xmm13,xmm12,DWORD PTR [rip+0x877d]        # 121fc <_IO_stdin_used+0x1fc>
    9a7e:	00 
    9a7f:	48 83 c4 28          	add    rsp,0x28
    9a83:	c4 c1 7a 5e cb       	vdivss xmm1,xmm0,xmm11
    9a88:	c4 41 12 59 fe       	vmulss xmm15,xmm13,xmm14
    9a8d:	c4 c1 7a 2c c7       	vcvttss2si eax,xmm15
    9a92:	89 c0                	mov    eax,eax
    9a94:	c4 c1 72 59 e6       	vmulss xmm4,xmm1,xmm14
    9a99:	c5 fa 2c d4          	vcvttss2si edx,xmm4
    9a9d:	48 c1 e2 20          	shl    rdx,0x20
    9aa1:	48 09 d0             	or     rax,rdx
    9aa4:	31 d2                	xor    edx,edx
    9aa6:	c3                   	ret    
    9aa7:	c5 f8 28 c2          	vmovaps xmm0,xmm2
    9aab:	c5 fa 11 6c 24 0c    	vmovss DWORD PTR [rsp+0xc],xmm5
    9ab1:	c5 fa 11 74 24 08    	vmovss DWORD PTR [rsp+0x8],xmm6
    9ab7:	c5 fa 11 7c 24 04    	vmovss DWORD PTR [rsp+0x4],xmm7
    9abd:	e8 ce 8e ff ff       	call   2990 <sqrtf@plt>
    9ac2:	c5 fa 10 6c 24 0c    	vmovss xmm5,DWORD PTR [rsp+0xc]
    9ac8:	c5 fa 10 74 24 08    	vmovss xmm6,DWORD PTR [rsp+0x8]
    9ace:	c5 fa 10 7c 24 04    	vmovss xmm7,DWORD PTR [rsp+0x4]
    9ad4:	c5 f8 28 d0          	vmovaps xmm2,xmm0
    9ad8:	e9 47 ff ff ff       	jmp    9a24 <get_uv_coordinate_in_sphere+0x54>
    9add:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000009ae0 <set_hit_record_by_sphere>:
    9ae0:	f3 0f 1e fa          	endbr64 
    9ae4:	41 54                	push   r12
    9ae6:	c5 d8 57 e4          	vxorps xmm4,xmm4,xmm4
    9aea:	55                   	push   rbp
    9aeb:	48 89 fd             	mov    rbp,rdi
    9aee:	53                   	push   rbx
    9aef:	48 89 f3             	mov    rbx,rsi
    9af2:	48 81 ec 50 01 00 00 	sub    rsp,0x150
    9af9:	c5 fa 11 47 30       	vmovss DWORD PTR [rdi+0x30],xmm0
    9afe:	c5 f8 c6 c0 00       	vshufps xmm0,xmm0,xmm0,0x0
    9b03:	c5 f8 28 ac 24 70 01 	vmovaps xmm5,XMMWORD PTR [rsp+0x170]
    9b0a:	00 00 
    9b0c:	c4 e2 51 98 84 24 80 	vfmadd132ps xmm0,xmm5,XMMWORD PTR [rsp+0x180]
    9b13:	01 00 00 
    9b16:	c5 fa 5c 1e          	vsubss xmm3,xmm0,DWORD PTR [rsi]
    9b1a:	c5 f8 c6 d0 55       	vshufps xmm2,xmm0,xmm0,0x55
    9b1f:	c5 ea 5c 7e 04       	vsubss xmm7,xmm2,DWORD PTR [rsi+0x4]
    9b24:	c5 f8 15 c8          	vunpckhps xmm1,xmm0,xmm0
    9b28:	c5 f8 29 07          	vmovaps XMMWORD PTR [rdi],xmm0
    9b2c:	c5 f2 5c 76 08       	vsubss xmm6,xmm1,DWORD PTR [rsi+0x8]
    9b31:	c5 c2 59 c7          	vmulss xmm0,xmm7,xmm7
    9b35:	c4 e2 61 b9 c3       	vfmadd231ss xmm0,xmm3,xmm3
    9b3a:	c4 e2 49 b9 c6       	vfmadd231ss xmm0,xmm6,xmm6
    9b3f:	c5 f8 2e e0          	vucomiss xmm4,xmm0
    9b43:	0f 87 60 04 00 00    	ja     9fa9 <set_hit_record_by_sphere+0x4c9>
    9b49:	c5 fa 51 c0          	vsqrtss xmm0,xmm0,xmm0
    9b4d:	c5 79 6f 6b 50       	vmovdqa xmm13,XMMWORD PTR [rbx+0x50]
    9b52:	c5 79 6f 1b          	vmovdqa xmm11,XMMWORD PTR [rbx]
    9b56:	c5 e2 5e e0          	vdivss xmm4,xmm3,xmm0
    9b5a:	c5 79 6f 63 10       	vmovdqa xmm12,XMMWORD PTR [rbx+0x10]
    9b5f:	c5 79 6f 53 20       	vmovdqa xmm10,XMMWORD PTR [rbx+0x20]
    9b64:	c5 79 6f 4b 30       	vmovdqa xmm9,XMMWORD PTR [rbx+0x30]
    9b69:	c5 79 6f 43 40       	vmovdqa xmm8,XMMWORD PTR [rbx+0x40]
    9b6e:	c5 79 7e e8          	vmovd  eax,xmm13
    9b72:	c5 79 7f 9c 24 c0 00 	vmovdqa XMMWORD PTR [rsp+0xc0],xmm11
    9b79:	00 00 
    9b7b:	c5 79 6f 73 60       	vmovdqa xmm14,XMMWORD PTR [rbx+0x60]
    9b80:	c5 79 6f 7b 70       	vmovdqa xmm15,XMMWORD PTR [rbx+0x70]
    9b85:	c5 79 7f a4 24 d0 00 	vmovdqa XMMWORD PTR [rsp+0xd0],xmm12
    9b8c:	00 00 
    9b8e:	c5 f9 6f ab 80 00 00 	vmovdqa xmm5,XMMWORD PTR [rbx+0x80]
    9b95:	00 
    9b96:	c5 f9 6f 4d 00       	vmovdqa xmm1,XMMWORD PTR [rbp+0x0]
    9b9b:	c5 79 7f 94 24 e0 00 	vmovdqa XMMWORD PTR [rsp+0xe0],xmm10
    9ba2:	00 00 
    9ba4:	c5 79 7f 8c 24 f0 00 	vmovdqa XMMWORD PTR [rsp+0xf0],xmm9
    9bab:	00 00 
    9bad:	c5 79 7f 84 24 00 01 	vmovdqa XMMWORD PTR [rsp+0x100],xmm8
    9bb4:	00 00 
    9bb6:	c5 79 7f ac 24 10 01 	vmovdqa XMMWORD PTR [rsp+0x110],xmm13
    9bbd:	00 00 
    9bbf:	c5 79 7f b4 24 20 01 	vmovdqa XMMWORD PTR [rsp+0x120],xmm14
    9bc6:	00 00 
    9bc8:	c5 79 7f bc 24 30 01 	vmovdqa XMMWORD PTR [rsp+0x130],xmm15
    9bcf:	00 00 
    9bd1:	c5 f9 7f ac 24 40 01 	vmovdqa XMMWORD PTR [rsp+0x140],xmm5
    9bd8:	00 00 
    9bda:	c5 f9 7f 4c 24 30    	vmovdqa XMMWORD PTR [rsp+0x30],xmm1
    9be0:	c5 c2 5e d0          	vdivss xmm2,xmm7,xmm0
    9be4:	c5 ca 5e c0          	vdivss xmm0,xmm6,xmm0
    9be8:	83 f8 01             	cmp    eax,0x1
    9beb:	76 6d                	jbe    9c5a <set_hit_record_by_sphere+0x17a>
    9bed:	c5 fa 11 44 24 0c    	vmovss DWORD PTR [rsp+0xc],xmm0
    9bf3:	c5 fa 11 54 24 08    	vmovss DWORD PTR [rsp+0x8],xmm2
    9bf9:	c5 fa 11 24 24       	vmovss DWORD PTR [rsp],xmm4
    9bfe:	83 f8 02             	cmp    eax,0x2
    9c01:	0f 84 31 01 00 00    	je     9d38 <set_hit_record_by_sphere+0x258>
    9c07:	48 8d 35 7a 84 00 00 	lea    rsi,[rip+0x847a]        # 12088 <_IO_stdin_used+0x88>
    9c0e:	31 ff                	xor    edi,edi
    9c10:	e8 3b 2c 00 00       	call   c850 <ft_assert>
    9c15:	c5 79 6f 1b          	vmovdqa xmm11,XMMWORD PTR [rbx]
    9c19:	c5 79 6f 63 10       	vmovdqa xmm12,XMMWORD PTR [rbx+0x10]
    9c1e:	c5 79 6f 53 20       	vmovdqa xmm10,XMMWORD PTR [rbx+0x20]
    9c23:	c5 79 6f 4b 30       	vmovdqa xmm9,XMMWORD PTR [rbx+0x30]
    9c28:	c5 79 6f 43 40       	vmovdqa xmm8,XMMWORD PTR [rbx+0x40]
    9c2d:	c5 79 6f 6b 50       	vmovdqa xmm13,XMMWORD PTR [rbx+0x50]
    9c32:	c5 79 6f 73 60       	vmovdqa xmm14,XMMWORD PTR [rbx+0x60]
    9c37:	c5 79 6f 7b 70       	vmovdqa xmm15,XMMWORD PTR [rbx+0x70]
    9c3c:	c5 f9 6f ab 80 00 00 	vmovdqa xmm5,XMMWORD PTR [rbx+0x80]
    9c43:	00 
    9c44:	c5 f9 6f 4d 00       	vmovdqa xmm1,XMMWORD PTR [rbp+0x0]
    9c49:	c5 fa 10 44 24 0c    	vmovss xmm0,DWORD PTR [rsp+0xc]
    9c4f:	c5 fa 10 54 24 08    	vmovss xmm2,DWORD PTR [rsp+0x8]
    9c55:	c5 fa 10 24 24       	vmovss xmm4,DWORD PTR [rsp]
    9c5a:	8b 53 50             	mov    edx,DWORD PTR [rbx+0x50]
    9c5d:	c5 fa 7e 73 10       	vmovq  xmm6,QWORD PTR [rbx+0x10]
    9c62:	c5 fa 11 65 10       	vmovss DWORD PTR [rbp+0x10],xmm4
    9c67:	44 8b 63 18          	mov    r12d,DWORD PTR [rbx+0x18]
    9c6b:	c5 fa 11 55 14       	vmovss DWORD PTR [rbp+0x14],xmm2
    9c70:	c5 fa 11 45 18       	vmovss DWORD PTR [rbp+0x18],xmm0
    9c75:	c5 79 7f 5c 24 30    	vmovdqa XMMWORD PTR [rsp+0x30],xmm11
    9c7b:	c5 79 7f 64 24 40    	vmovdqa XMMWORD PTR [rsp+0x40],xmm12
    9c81:	c5 79 7f 54 24 50    	vmovdqa XMMWORD PTR [rsp+0x50],xmm10
    9c87:	c5 79 7f 4c 24 60    	vmovdqa XMMWORD PTR [rsp+0x60],xmm9
    9c8d:	c5 79 7f 44 24 70    	vmovdqa XMMWORD PTR [rsp+0x70],xmm8
    9c93:	c5 79 7f ac 24 80 00 	vmovdqa XMMWORD PTR [rsp+0x80],xmm13
    9c9a:	00 00 
    9c9c:	c5 79 7f b4 24 90 00 	vmovdqa XMMWORD PTR [rsp+0x90],xmm14
    9ca3:	00 00 
    9ca5:	c5 79 7f bc 24 a0 00 	vmovdqa XMMWORD PTR [rsp+0xa0],xmm15
    9cac:	00 00 
    9cae:	c5 f9 7f ac 24 b0 00 	vmovdqa XMMWORD PTR [rsp+0xb0],xmm5
    9cb5:	00 00 
    9cb7:	c5 f9 7f 4c 24 10    	vmovdqa XMMWORD PTR [rsp+0x10],xmm1
    9cbd:	85 d2                	test   edx,edx
    9cbf:	74 2a                	je     9ceb <set_hit_record_by_sphere+0x20b>
    9cc1:	83 fa 01             	cmp    edx,0x1
    9cc4:	0f 84 a6 01 00 00    	je     9e70 <set_hit_record_by_sphere+0x390>
    9cca:	83 fa 02             	cmp    edx,0x2
    9ccd:	0f 84 cd 00 00 00    	je     9da0 <set_hit_record_by_sphere+0x2c0>
    9cd3:	48 8d 35 d6 83 00 00 	lea    rsi,[rip+0x83d6]        # 120b0 <_IO_stdin_used+0xb0>
    9cda:	31 ff                	xor    edi,edi
    9cdc:	c5 f9 d6 34 24       	vmovq  QWORD PTR [rsp],xmm6
    9ce1:	e8 6a 2b 00 00       	call   c850 <ft_assert>
    9ce6:	c5 fa 7e 34 24       	vmovq  xmm6,QWORD PTR [rsp]
    9ceb:	44 89 64 24 48       	mov    DWORD PTR [rsp+0x48],r12d
    9cf0:	c5 f9 d6 74 24 40    	vmovq  QWORD PTR [rsp+0x40],xmm6
    9cf6:	c5 79 6f 74 24 40    	vmovdqa xmm14,XMMWORD PTR [rsp+0x40]
    9cfc:	c5 79 7f b4 24 c0 00 	vmovdqa XMMWORD PTR [rsp+0xc0],xmm14
    9d03:	00 00 
    9d05:	44 89 a4 24 c8 00 00 	mov    DWORD PTR [rsp+0xc8],r12d
    9d0c:	00 
    9d0d:	c5 f9 d6 b4 24 c0 00 	vmovq  QWORD PTR [rsp+0xc0],xmm6
    9d14:	00 00 
    9d16:	c5 79 6f bc 24 c0 00 	vmovdqa xmm15,XMMWORD PTR [rsp+0xc0]
    9d1d:	00 00 
    9d1f:	48 89 5d 38          	mov    QWORD PTR [rbp+0x38],rbx
    9d23:	c5 79 7f 7d 20       	vmovdqa XMMWORD PTR [rbp+0x20],xmm15
    9d28:	48 81 c4 50 01 00 00 	add    rsp,0x150
    9d2f:	5b                   	pop    rbx
    9d30:	5d                   	pop    rbp
    9d31:	41 5c                	pop    r12
    9d33:	c3                   	ret    
    9d34:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    9d38:	c5 fa 7e 44 24 30    	vmovq  xmm0,QWORD PTR [rsp+0x30]
    9d3e:	c5 fa 7e 4c 24 38    	vmovq  xmm1,QWORD PTR [rsp+0x38]
    9d44:	48 8d bc 24 c0 00 00 	lea    rdi,[rsp+0xc0]
    9d4b:	00 
    9d4c:	ff 94 24 28 01 00 00 	call   QWORD PTR [rsp+0x128]
    9d53:	c5 79 6f 1b          	vmovdqa xmm11,XMMWORD PTR [rbx]
    9d57:	c5 79 6f 63 10       	vmovdqa xmm12,XMMWORD PTR [rbx+0x10]
    9d5c:	c5 79 6f 53 20       	vmovdqa xmm10,XMMWORD PTR [rbx+0x20]
    9d61:	c5 79 6f 4b 30       	vmovdqa xmm9,XMMWORD PTR [rbx+0x30]
    9d66:	c5 79 6f 43 40       	vmovdqa xmm8,XMMWORD PTR [rbx+0x40]
    9d6b:	c5 79 6f 6b 50       	vmovdqa xmm13,XMMWORD PTR [rbx+0x50]
    9d70:	c5 79 6f 73 60       	vmovdqa xmm14,XMMWORD PTR [rbx+0x60]
    9d75:	c5 79 6f 7b 70       	vmovdqa xmm15,XMMWORD PTR [rbx+0x70]
    9d7a:	c5 f9 6f ab 80 00 00 	vmovdqa xmm5,XMMWORD PTR [rbx+0x80]
    9d81:	00 
    9d82:	c5 f9 6f 4d 00       	vmovdqa xmm1,XMMWORD PTR [rbp+0x0]
    9d87:	c5 fa 10 24 24       	vmovss xmm4,DWORD PTR [rsp]
    9d8c:	c5 fa 10 54 24 08    	vmovss xmm2,DWORD PTR [rsp+0x8]
    9d92:	c5 fa 10 44 24 0c    	vmovss xmm0,DWORD PTR [rsp+0xc]
    9d98:	e9 bd fe ff ff       	jmp    9c5a <set_hit_record_by_sphere+0x17a>
    9d9d:	0f 1f 00             	nop    DWORD PTR [rax]
    9da0:	44 89 64 24 48       	mov    DWORD PTR [rsp+0x48],r12d
    9da5:	c5 f9 6f c1          	vmovdqa xmm0,xmm1
    9da9:	48 8d bc 24 c0 00 00 	lea    rdi,[rsp+0xc0]
    9db0:	00 
    9db1:	c7 84 24 80 00 00 00 	mov    DWORD PTR [rsp+0x80],0x2
    9db8:	02 00 00 00 
    9dbc:	c5 f9 6f 9c 24 80 00 	vmovdqa xmm3,XMMWORD PTR [rsp+0x80]
    9dc3:	00 00 
    9dc5:	c5 f9 d6 74 24 40    	vmovq  QWORD PTR [rsp+0x40],xmm6
    9dcb:	c5 f9 6f 7c 24 40    	vmovdqa xmm7,XMMWORD PTR [rsp+0x40]
    9dd1:	c5 f9 7f 4c 24 20    	vmovdqa XMMWORD PTR [rsp+0x20],xmm1
    9dd7:	c5 fa 7e 4c 24 28    	vmovq  xmm1,QWORD PTR [rsp+0x28]
    9ddd:	c5 79 7f 9c 24 c0 00 	vmovdqa XMMWORD PTR [rsp+0xc0],xmm11
    9de4:	00 00 
    9de6:	c5 f9 7f bc 24 d0 00 	vmovdqa XMMWORD PTR [rsp+0xd0],xmm7
    9ded:	00 00 
    9def:	c5 79 7f 94 24 e0 00 	vmovdqa XMMWORD PTR [rsp+0xe0],xmm10
    9df6:	00 00 
    9df8:	c5 79 7f 8c 24 f0 00 	vmovdqa XMMWORD PTR [rsp+0xf0],xmm9
    9dff:	00 00 
    9e01:	c5 79 7f 84 24 00 01 	vmovdqa XMMWORD PTR [rsp+0x100],xmm8
    9e08:	00 00 
    9e0a:	c5 f9 7f 9c 24 10 01 	vmovdqa XMMWORD PTR [rsp+0x110],xmm3
    9e11:	00 00 
    9e13:	c5 79 7f b4 24 20 01 	vmovdqa XMMWORD PTR [rsp+0x120],xmm14
    9e1a:	00 00 
    9e1c:	c5 79 7f bc 24 30 01 	vmovdqa XMMWORD PTR [rsp+0x130],xmm15
    9e23:	00 00 
    9e25:	c5 f9 7f ac 24 40 01 	vmovdqa XMMWORD PTR [rsp+0x140],xmm5
    9e2c:	00 00 
    9e2e:	ff 94 24 28 01 00 00 	call   QWORD PTR [rsp+0x128]
    9e35:	48 89 c1             	mov    rcx,rax
    9e38:	48 c1 f9 20          	sar    rcx,0x20
    9e3c:	3d 9f 00 00 00       	cmp    eax,0x9f
    9e41:	7e 0c                	jle    9e4f <set_hit_record_by_sphere+0x36f>
    9e43:	81 f9 9f 00 00 00    	cmp    ecx,0x9f
    9e49:	0f 86 11 01 00 00    	jbe    9f60 <set_hit_record_by_sphere+0x480>
    9e4f:	48 8d 3d 47 82 00 00 	lea    rdi,[rip+0x8247]        # 1209d <_IO_stdin_used+0x9d>
    9e56:	45 31 e4             	xor    r12d,r12d
    9e59:	e8 22 87 ff ff       	call   2580 <puts@plt>
    9e5e:	c5 c9 ef f6          	vpxor  xmm6,xmm6,xmm6
    9e62:	e9 9e fe ff ff       	jmp    9d05 <set_hit_record_by_sphere+0x225>
    9e67:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    9e6e:	00 00 
    9e70:	44 89 64 24 48       	mov    DWORD PTR [rsp+0x48],r12d
    9e75:	c5 f9 6f c1          	vmovdqa xmm0,xmm1
    9e79:	48 8d bc 24 c0 00 00 	lea    rdi,[rsp+0xc0]
    9e80:	00 
    9e81:	c7 84 24 80 00 00 00 	mov    DWORD PTR [rsp+0x80],0x1
    9e88:	01 00 00 00 
    9e8c:	c5 f9 d6 74 24 40    	vmovq  QWORD PTR [rsp+0x40],xmm6
    9e92:	c5 79 6f 6c 24 40    	vmovdqa xmm13,XMMWORD PTR [rsp+0x40]
    9e98:	c5 79 7f 8c 24 f0 00 	vmovdqa XMMWORD PTR [rsp+0xf0],xmm9
    9e9f:	00 00 
    9ea1:	c5 79 6f 8c 24 80 00 	vmovdqa xmm9,XMMWORD PTR [rsp+0x80]
    9ea8:	00 00 
    9eaa:	c5 f9 7f 4c 24 20    	vmovdqa XMMWORD PTR [rsp+0x20],xmm1
    9eb0:	c5 fa 7e 4c 24 28    	vmovq  xmm1,QWORD PTR [rsp+0x28]
    9eb6:	c5 79 7f 9c 24 c0 00 	vmovdqa XMMWORD PTR [rsp+0xc0],xmm11
    9ebd:	00 00 
    9ebf:	c5 79 7f ac 24 d0 00 	vmovdqa XMMWORD PTR [rsp+0xd0],xmm13
    9ec6:	00 00 
    9ec8:	c5 79 7f 94 24 e0 00 	vmovdqa XMMWORD PTR [rsp+0xe0],xmm10
    9ecf:	00 00 
    9ed1:	c5 79 7f 84 24 00 01 	vmovdqa XMMWORD PTR [rsp+0x100],xmm8
    9ed8:	00 00 
    9eda:	c5 79 7f 8c 24 10 01 	vmovdqa XMMWORD PTR [rsp+0x110],xmm9
    9ee1:	00 00 
    9ee3:	c5 79 7f b4 24 20 01 	vmovdqa XMMWORD PTR [rsp+0x120],xmm14
    9eea:	00 00 
    9eec:	c5 79 7f bc 24 30 01 	vmovdqa XMMWORD PTR [rsp+0x130],xmm15
    9ef3:	00 00 
    9ef5:	c5 f9 7f ac 24 40 01 	vmovdqa XMMWORD PTR [rsp+0x140],xmm5
    9efc:	00 00 
    9efe:	ff 94 24 28 01 00 00 	call   QWORD PTR [rsp+0x128]
    9f05:	49 89 c4             	mov    r12,rax
    9f08:	49 c1 fc 20          	sar    r12,0x20
    9f0c:	45 85 e4             	test   r12d,r12d
    9f0f:	41 8d 54 24 0f       	lea    edx,[r12+0xf]
    9f14:	41 0f 49 d4          	cmovns edx,r12d
    9f18:	83 e2 10             	and    edx,0x10
    9f1b:	75 2b                	jne    9f48 <set_hit_record_by_sphere+0x468>
    9f1d:	85 c0                	test   eax,eax
    9f1f:	8d 70 0f             	lea    esi,[rax+0xf]
    9f22:	0f 48 c6             	cmovs  eax,esi
    9f25:	c1 f8 04             	sar    eax,0x4
    9f28:	83 e0 01             	and    eax,0x1
    9f2b:	83 f8 01             	cmp    eax,0x1
    9f2e:	19 c0                	sbb    eax,eax
    9f30:	44 0f b6 e0          	movzx  r12d,al
    9f34:	c4 41 79 6e c4       	vmovd  xmm8,r12d
    9f39:	c4 c1 79 70 f0 e0    	vpshufd xmm6,xmm8,0xe0
    9f3f:	e9 c1 fd ff ff       	jmp    9d05 <set_hit_record_by_sphere+0x225>
    9f44:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    9f48:	85 c0                	test   eax,eax
    9f4a:	8d 48 0f             	lea    ecx,[rax+0xf]
    9f4d:	0f 49 c8             	cmovns ecx,eax
    9f50:	c1 e1 1b             	shl    ecx,0x1b
    9f53:	c1 f9 1f             	sar    ecx,0x1f
    9f56:	44 0f b6 e1          	movzx  r12d,cl
    9f5a:	eb d8                	jmp    9f34 <set_hit_record_by_sphere+0x454>
    9f5c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    9f60:	48 8b bc 24 18 01 00 	mov    rdi,QWORD PTR [rsp+0x118]
    9f67:	00 
    9f68:	8d 34 89             	lea    esi,[rcx+rcx*4]
    9f6b:	c5 7a 7e 15 ad 81 00 	vmovq  xmm10,QWORD PTR [rip+0x81ad]        # 12120 <_IO_stdin_used+0x120>
    9f72:	00 
    9f73:	c1 e6 05             	shl    esi,0x5
    9f76:	4c 8b 47 30          	mov    r8,QWORD PTR [rdi+0x30]
    9f7a:	01 f0                	add    eax,esi
    9f7c:	48 98                	cdqe   
    9f7e:	45 8b 0c 80          	mov    r9d,DWORD PTR [r8+rax*4]
    9f82:	45 89 ca             	mov    r10d,r9d
    9f85:	45 89 cb             	mov    r11d,r9d
    9f88:	45 0f b6 e1          	movzx  r12d,r9b
    9f8c:	41 c1 fa 10          	sar    r10d,0x10
    9f90:	41 c1 fb 08          	sar    r11d,0x8
    9f94:	c4 41 79 6e da       	vmovd  xmm11,r10d
    9f99:	c4 43 21 22 e3 01    	vpinsrd xmm12,xmm11,r11d,0x1
    9f9f:	c4 c1 19 db f2       	vpand  xmm6,xmm12,xmm10
    9fa4:	e9 5c fd ff ff       	jmp    9d05 <set_hit_record_by_sphere+0x225>
    9fa9:	c5 fa 11 74 24 0c    	vmovss DWORD PTR [rsp+0xc],xmm6
    9faf:	c5 fa 11 7c 24 08    	vmovss DWORD PTR [rsp+0x8],xmm7
    9fb5:	c5 fa 11 1c 24       	vmovss DWORD PTR [rsp],xmm3
    9fba:	e8 d1 89 ff ff       	call   2990 <sqrtf@plt>
    9fbf:	c5 fa 10 74 24 0c    	vmovss xmm6,DWORD PTR [rsp+0xc]
    9fc5:	c5 fa 10 7c 24 08    	vmovss xmm7,DWORD PTR [rsp+0x8]
    9fcb:	c5 fa 10 1c 24       	vmovss xmm3,DWORD PTR [rsp]
    9fd0:	e9 78 fb ff ff       	jmp    9b4d <set_hit_record_by_sphere+0x6d>
    9fd5:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    9fdc:	00 00 00 00 

0000000000009fe0 <is_hit_sphere>:
    9fe0:	f3 0f 1e fa          	endbr64 
    9fe4:	55                   	push   rbp
    9fe5:	48 89 fd             	mov    rbp,rdi
    9fe8:	48 83 ec 20          	sub    rsp,0x20
    9fec:	c5 7a 10 25 80 80 00 	vmovss xmm12,DWORD PTR [rip+0x8080]        # 12074 <_IO_stdin_used+0x74>
    9ff3:	00 
    9ff4:	c5 fa 10 64 24 34    	vmovss xmm4,DWORD PTR [rsp+0x34]
    9ffa:	c5 5a 5c 47 04       	vsubss xmm8,xmm4,DWORD PTR [rdi+0x4]
    9fff:	c5 fa 10 74 24 44    	vmovss xmm6,DWORD PTR [rsp+0x44]
    a005:	c5 fa 10 54 24 30    	vmovss xmm2,DWORD PTR [rsp+0x30]
    a00b:	c5 ea 5c 3f          	vsubss xmm7,xmm2,DWORD PTR [rdi]
    a00f:	c5 fa 10 6c 24 40    	vmovss xmm5,DWORD PTR [rsp+0x40]
    a015:	c5 3a 59 d6          	vmulss xmm10,xmm8,xmm6
    a019:	c5 fa 10 44 24 38    	vmovss xmm0,DWORD PTR [rsp+0x38]
    a01f:	c5 7a 5c 4f 08       	vsubss xmm9,xmm0,DWORD PTR [rdi+0x8]
    a024:	c5 ca 59 de          	vmulss xmm3,xmm6,xmm6
    a028:	c5 fa 10 4c 24 48    	vmovss xmm1,DWORD PTR [rsp+0x48]
    a02e:	c4 41 3a 59 d8       	vmulss xmm11,xmm8,xmm8
    a033:	c5 1a 59 af 90 00 00 	vmulss xmm13,xmm12,DWORD PTR [rdi+0x90]
    a03a:	00 
    a03b:	c4 e2 51 b9 dd       	vfmadd231ss xmm3,xmm5,xmm5
    a040:	c4 e2 29 99 ef       	vfmadd132ss xmm5,xmm10,xmm7
    a045:	c4 e2 21 99 ff       	vfmadd132ss xmm7,xmm11,xmm7
    a04a:	c4 e2 71 b9 d9       	vfmadd231ss xmm3,xmm1,xmm1
    a04f:	c4 c2 51 99 c9       	vfmadd132ss xmm1,xmm5,xmm9
    a054:	c5 62 59 35 84 80 00 	vmulss xmm14,xmm3,DWORD PTR [rip+0x8084]        # 120e0 <_IO_stdin_used+0xe0>
    a05b:	00 
    a05c:	c4 42 41 99 c9       	vfmadd132ss xmm9,xmm7,xmm9
    a061:	c5 f2 58 f1          	vaddss xmm6,xmm1,xmm1
    a065:	c4 42 11 bd cd       	vfnmadd231ss xmm9,xmm13,xmm13
    a06a:	c4 41 0a 59 c1       	vmulss xmm8,xmm14,xmm9
    a06f:	c4 41 30 57 c9       	vxorps xmm9,xmm9,xmm9
    a074:	c4 62 49 bb c6       	vfmsub231ss xmm8,xmm6,xmm6
    a079:	c4 41 78 2f c8       	vcomiss xmm9,xmm8
    a07e:	73 70                	jae    a0f0 <is_hit_sphere+0x110>
    a080:	c4 41 78 2e c8       	vucomiss xmm9,xmm8
    a085:	c5 48 57 3d 73 80 00 	vxorps xmm15,xmm6,XMMWORD PTR [rip+0x8073]        # 12100 <_IO_stdin_used+0x100>
    a08c:	00 
    a08d:	48 89 f7             	mov    rdi,rsi
    a090:	77 66                	ja     a0f8 <is_hit_sphere+0x118>
    a092:	c4 41 3a 51 c0       	vsqrtss xmm8,xmm8,xmm8
    a097:	c5 e2 58 eb          	vaddss xmm5,xmm3,xmm3
    a09b:	c4 c1 02 5c c0       	vsubss xmm0,xmm15,xmm8
    a0a0:	c5 fa 5e c5          	vdivss xmm0,xmm0,xmm5
    a0a4:	c5 78 2f c8          	vcomiss xmm9,xmm0
    a0a8:	73 07                	jae    a0b1 <is_hit_sphere+0xd1>
    a0aa:	c5 f8 2f 46 30       	vcomiss xmm0,DWORD PTR [rsi+0x30]
    a0af:	76 15                	jbe    a0c6 <is_hit_sphere+0xe6>
    a0b1:	c5 ba 5c ce          	vsubss xmm1,xmm8,xmm6
    a0b5:	c5 f2 5e c5          	vdivss xmm0,xmm1,xmm5
    a0b9:	c5 78 2f c8          	vcomiss xmm9,xmm0
    a0bd:	73 31                	jae    a0f0 <is_hit_sphere+0x110>
    a0bf:	c5 f8 2f 47 30       	vcomiss xmm0,DWORD PTR [rdi+0x30]
    a0c4:	77 2a                	ja     a0f0 <is_hit_sphere+0x110>
    a0c6:	ff 74 24 48          	push   QWORD PTR [rsp+0x48]
    a0ca:	48 89 ee             	mov    rsi,rbp
    a0cd:	ff 74 24 48          	push   QWORD PTR [rsp+0x48]
    a0d1:	ff 74 24 48          	push   QWORD PTR [rsp+0x48]
    a0d5:	ff 74 24 48          	push   QWORD PTR [rsp+0x48]
    a0d9:	e8 02 fa ff ff       	call   9ae0 <set_hit_record_by_sphere>
    a0de:	48 83 c4 20          	add    rsp,0x20
    a0e2:	b8 01 00 00 00       	mov    eax,0x1
    a0e7:	48 83 c4 20          	add    rsp,0x20
    a0eb:	5d                   	pop    rbp
    a0ec:	c3                   	ret    
    a0ed:	0f 1f 00             	nop    DWORD PTR [rax]
    a0f0:	48 83 c4 20          	add    rsp,0x20
    a0f4:	31 c0                	xor    eax,eax
    a0f6:	5d                   	pop    rbp
    a0f7:	c3                   	ret    
    a0f8:	c5 78 29 c0          	vmovaps xmm0,xmm8
    a0fc:	c5 fa 11 74 24 10    	vmovss DWORD PTR [rsp+0x10],xmm6
    a102:	c5 7a 11 44 24 04    	vmovss DWORD PTR [rsp+0x4],xmm8
    a108:	48 89 74 24 18       	mov    QWORD PTR [rsp+0x18],rsi
    a10d:	c5 7a 11 7c 24 14    	vmovss DWORD PTR [rsp+0x14],xmm15
    a113:	c5 fa 11 5c 24 08    	vmovss DWORD PTR [rsp+0x8],xmm3
    a119:	e8 72 88 ff ff       	call   2990 <sqrtf@plt>
    a11e:	c5 fa 10 54 24 08    	vmovss xmm2,DWORD PTR [rsp+0x8]
    a124:	c4 41 30 57 c9       	vxorps xmm9,xmm9,xmm9
    a129:	c5 fa 10 7c 24 14    	vmovss xmm7,DWORD PTR [rsp+0x14]
    a12f:	c5 7a 10 44 24 04    	vmovss xmm8,DWORD PTR [rsp+0x4]
    a135:	c5 fa 10 74 24 10    	vmovss xmm6,DWORD PTR [rsp+0x10]
    a13b:	c5 ea 58 ea          	vaddss xmm5,xmm2,xmm2
    a13f:	c5 c2 5c e0          	vsubss xmm4,xmm7,xmm0
    a143:	48 8b 7c 24 18       	mov    rdi,QWORD PTR [rsp+0x18]
    a148:	c5 da 5e c5          	vdivss xmm0,xmm4,xmm5
    a14c:	c5 78 2f c8          	vcomiss xmm9,xmm0
    a150:	73 12                	jae    a164 <is_hit_sphere+0x184>
    a152:	c5 f8 2f 47 30       	vcomiss xmm0,DWORD PTR [rdi+0x30]
    a157:	0f 86 69 ff ff ff    	jbe    a0c6 <is_hit_sphere+0xe6>
    a15d:	c4 41 78 2e c8       	vucomiss xmm9,xmm8
    a162:	76 39                	jbe    a19d <is_hit_sphere+0x1bd>
    a164:	c5 78 29 c0          	vmovaps xmm0,xmm8
    a168:	48 89 7c 24 08       	mov    QWORD PTR [rsp+0x8],rdi
    a16d:	c5 fa 11 6c 24 10    	vmovss DWORD PTR [rsp+0x10],xmm5
    a173:	c5 fa 11 74 24 04    	vmovss DWORD PTR [rsp+0x4],xmm6
    a179:	e8 12 88 ff ff       	call   2990 <sqrtf@plt>
    a17e:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
    a183:	c5 fa 10 6c 24 10    	vmovss xmm5,DWORD PTR [rsp+0x10]
    a189:	c4 41 30 57 c9       	vxorps xmm9,xmm9,xmm9
    a18e:	c5 fa 10 74 24 04    	vmovss xmm6,DWORD PTR [rsp+0x4]
    a194:	c5 78 28 c0          	vmovaps xmm8,xmm0
    a198:	e9 14 ff ff ff       	jmp    a0b1 <is_hit_sphere+0xd1>
    a19d:	c4 41 3a 51 c0       	vsqrtss xmm8,xmm8,xmm8
    a1a2:	e9 0a ff ff ff       	jmp    a0b1 <is_hit_sphere+0xd1>
    a1a7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    a1ae:	00 00 

000000000000a1b0 <copy_construction_to_sphere>:
    a1b0:	f3 0f 1e fa          	endbr64 
    a1b4:	55                   	push   rbp
    a1b5:	bf a0 00 00 00       	mov    edi,0xa0
    a1ba:	48 89 e5             	mov    rbp,rsp
    a1bd:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    a1c1:	e8 4a 84 ff ff       	call   2610 <malloc@plt>
    a1c6:	c5 f9 6f 55 10       	vmovdqa xmm2,XMMWORD PTR [rbp+0x10]
    a1cb:	c5 f9 6f 5d 20       	vmovdqa xmm3,XMMWORD PTR [rbp+0x20]
    a1d0:	48 8d 0d e9 f7 ff ff 	lea    rcx,[rip+0xfffffffffffff7e9]        # 99c0 <delete_sphere>
    a1d7:	c4 e1 f9 6e c9       	vmovq  xmm1,rcx
    a1dc:	c5 f9 6f 65 30       	vmovdqa xmm4,XMMWORD PTR [rbp+0x30]
    a1e1:	c5 f9 6f 6d 40       	vmovdqa xmm5,XMMWORD PTR [rbp+0x40]
    a1e6:	48 8d 35 f3 fd ff ff 	lea    rsi,[rip+0xfffffffffffffdf3]        # 9fe0 <is_hit_sphere>
    a1ed:	48 8d 3d dc f7 ff ff 	lea    rdi,[rip+0xfffffffffffff7dc]        # 99d0 <get_uv_coordinate_in_sphere>
    a1f4:	c4 61 f9 6e ce       	vmovq  xmm9,rsi
    a1f9:	c4 63 f1 22 05 ad cd 	vpinsrq xmm8,xmm1,QWORD PTR [rip+0xcdad],0x1        # 16fb0 <_GLOBAL_OFFSET_TABLE_+0x288>
    a200:	00 00 01 
    a203:	c5 f9 6f 75 50       	vmovdqa xmm6,XMMWORD PTR [rbp+0x50]
    a208:	c5 f9 6f 7d 60       	vmovdqa xmm7,XMMWORD PTR [rbp+0x60]
    a20d:	c5 f9 6f 85 90 00 00 	vmovdqa xmm0,XMMWORD PTR [rbp+0x90]
    a214:	00 
    a215:	c4 63 b1 22 d7 01    	vpinsrq xmm10,xmm9,rdi,0x1
    a21b:	c5 f9 7f 10          	vmovdqa XMMWORD PTR [rax],xmm2
    a21f:	48 8d 15 4a 00 00 00 	lea    rdx,[rip+0x4a]        # a270 <update_scale_diameter_sphere>
    a226:	c4 43 2d 38 d8 01    	vinserti128 ymm11,ymm10,xmm8,0x1
    a22c:	c5 f9 7f 58 10       	vmovdqa XMMWORD PTR [rax+0x10],xmm3
    a231:	c5 7a 10 a5 a0 00 00 	vmovss xmm12,DWORD PTR [rbp+0xa0]
    a238:	00 
    a239:	c5 f9 7f 80 80 00 00 	vmovdqa XMMWORD PTR [rax+0x80],xmm0
    a240:	00 
    a241:	48 89 90 80 00 00 00 	mov    QWORD PTR [rax+0x80],rdx
    a248:	c5 f9 7f 60 20       	vmovdqa XMMWORD PTR [rax+0x20],xmm4
    a24d:	c5 f9 7f 68 30       	vmovdqa XMMWORD PTR [rax+0x30],xmm5
    a252:	c5 f9 7f 70 40       	vmovdqa XMMWORD PTR [rax+0x40],xmm6
    a257:	c5 f9 7f 78 50       	vmovdqa XMMWORD PTR [rax+0x50],xmm7
    a25c:	c5 7e 7f 58 60       	vmovdqu YMMWORD PTR [rax+0x60],ymm11
    a261:	c5 7a 11 a0 90 00 00 	vmovss DWORD PTR [rax+0x90],xmm12
    a268:	00 
    a269:	c5 f8 77             	vzeroupper 
    a26c:	c9                   	leave  
    a26d:	c3                   	ret    
    a26e:	66 90                	xchg   ax,ax

000000000000a270 <update_scale_diameter_sphere>:
    a270:	f3 0f 1e fa          	endbr64 
    a274:	53                   	push   rbx
    a275:	48 89 fb             	mov    rbx,rdi
    a278:	83 fe 08             	cmp    esi,0x8
    a27b:	74 33                	je     a2b0 <update_scale_diameter_sphere+0x40>
    a27d:	83 fe 09             	cmp    esi,0x9
    a280:	74 06                	je     a288 <update_scale_diameter_sphere+0x18>
    a282:	5b                   	pop    rbx
    a283:	c3                   	ret    
    a284:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    a288:	c5 fa 10 87 90 00 00 	vmovss xmm0,DWORD PTR [rdi+0x90]
    a28f:	00 
    a290:	c5 fa 10 0d dc 7d 00 	vmovss xmm1,DWORD PTR [rip+0x7ddc]        # 12074 <_IO_stdin_used+0x74>
    a297:	00 
    a298:	c5 fa 5c c1          	vsubss xmm0,xmm0,xmm1
    a29c:	e8 cf 83 ff ff       	call   2670 <fmaxf@plt>
    a2a1:	c5 fa 11 83 90 00 00 	vmovss DWORD PTR [rbx+0x90],xmm0
    a2a8:	00 
    a2a9:	5b                   	pop    rbx
    a2aa:	c3                   	ret    
    a2ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    a2b0:	c5 fa 10 0d bc 7d 00 	vmovss xmm1,DWORD PTR [rip+0x7dbc]        # 12074 <_IO_stdin_used+0x74>
    a2b7:	00 
    a2b8:	c5 f2 58 97 90 00 00 	vaddss xmm2,xmm1,DWORD PTR [rdi+0x90]
    a2bf:	00 
    a2c0:	5b                   	pop    rbx
    a2c1:	c5 fa 11 97 90 00 00 	vmovss DWORD PTR [rdi+0x90],xmm2
    a2c8:	00 
    a2c9:	c3                   	ret    
    a2ca:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

000000000000a2d0 <update_scale_height_sphere>:
    a2d0:	f3 0f 1e fa          	endbr64 
    a2d4:	c3                   	ret    
    a2d5:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    a2dc:	00 00 00 
    a2df:	90                   	nop

000000000000a2e0 <init_world>:
    a2e0:	f3 0f 1e fa          	endbr64 
    a2e4:	53                   	push   rbx
    a2e5:	c5 f9 ef c0          	vpxor  xmm0,xmm0,xmm0
    a2e9:	48 89 fb             	mov    rbx,rdi
    a2ec:	be 08 00 00 00       	mov    esi,0x8
    a2f1:	c6 87 80 00 00 00 00 	mov    BYTE PTR [rdi+0x80],0x0
    a2f8:	48 8d bf d8 00 00 00 	lea    rdi,[rdi+0xd8]
    a2ff:	c6 87 78 ff ff ff 00 	mov    BYTE PTR [rdi-0x88],0x0
    a306:	c5 fa 7f 47 50       	vmovdqu XMMWORD PTR [rdi+0x50],xmm0
    a30b:	e8 20 2a 00 00       	call   cd30 <init_array_list>
    a310:	48 8d bb 88 00 00 00 	lea    rdi,[rbx+0x88]
    a317:	be 30 00 00 00       	mov    esi,0x30
    a31c:	e8 0f 2a 00 00       	call   cd30 <init_array_list>
    a321:	b8 01 00 00 00       	mov    eax,0x1
    a326:	5b                   	pop    rbx
    a327:	c3                   	ret    
    a328:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    a32f:	00 

000000000000a330 <destroy_world>:
    a330:	f3 0f 1e fa          	endbr64 
    a334:	53                   	push   rbx
    a335:	48 89 fb             	mov    rbx,rdi
    a338:	48 8d bf d8 00 00 00 	lea    rdi,[rdi+0xd8]
    a33f:	e8 1c f6 ff ff       	call   9960 <destroy_shapes>
    a344:	48 8b 83 c0 00 00 00 	mov    rax,QWORD PTR [rbx+0xc0]
    a34b:	48 8d bb 88 00 00 00 	lea    rdi,[rbx+0x88]
    a352:	5b                   	pop    rbx
    a353:	48 8d 35 a6 25 00 00 	lea    rsi,[rip+0x25a6]        # c900 <do_nothing>
    a35a:	ff e0                	jmp    rax
    a35c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000a360 <try_add_ambient_light_to_world>:
    a360:	f3 0f 1e fa          	endbr64 
    a364:	55                   	push   rbp
    a365:	48 89 f5             	mov    rbp,rsi
    a368:	53                   	push   rbx
    a369:	48 89 fb             	mov    rbx,rdi
    a36c:	48 83 ec 08          	sub    rsp,0x8
    a370:	e8 3b 1f 00 00       	call   c2b0 <get_count_to_words>
    a375:	48 83 f8 03          	cmp    rax,0x3
    a379:	74 0d                	je     a388 <try_add_ambient_light_to_world+0x28>
    a37b:	48 83 c4 08          	add    rsp,0x8
    a37f:	31 c0                	xor    eax,eax
    a381:	5b                   	pop    rbx
    a382:	5d                   	pop    rbp
    a383:	c3                   	ret    
    a384:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    a388:	48 8b 7b 10          	mov    rdi,QWORD PTR [rbx+0x10]
    a38c:	be 2c 00 00 00       	mov    esi,0x2c
    a391:	e8 5a 1e 00 00       	call   c1f0 <get_count_words>
    a396:	48 83 f8 03          	cmp    rax,0x3
    a39a:	75 df                	jne    a37b <try_add_ambient_light_to_world+0x1b>
    a39c:	80 bd 80 00 00 00 00 	cmp    BYTE PTR [rbp+0x80],0x0
    a3a3:	75 d6                	jne    a37b <try_add_ambient_light_to_world+0x1b>
    a3a5:	48 8b 7b 08          	mov    rdi,QWORD PTR [rbx+0x8]
    a3a9:	48 8d 75 60          	lea    rsi,[rbp+0x60]
    a3ad:	e8 5e 25 00 00       	call   c910 <try_atof>
    a3b2:	84 c0                	test   al,al
    a3b4:	74 c5                	je     a37b <try_add_ambient_light_to_world+0x1b>
    a3b6:	c5 fa 10 45 60       	vmovss xmm0,DWORD PTR [rbp+0x60]
    a3bb:	e8 80 b6 ff ff       	call   5a40 <is_invalid_ratio_in_range>
    a3c0:	84 c0                	test   al,al
    a3c2:	75 b7                	jne    a37b <try_add_ambient_light_to_world+0x1b>
    a3c4:	48 8b 7b 10          	mov    rdi,QWORD PTR [rbx+0x10]
    a3c8:	48 8d 75 70          	lea    rsi,[rbp+0x70]
    a3cc:	e8 5f b5 ff ff       	call   5930 <try_parse_color>
    a3d1:	84 c0                	test   al,al
    a3d3:	74 a6                	je     a37b <try_add_ambient_light_to_world+0x1b>
    a3d5:	c6 85 80 00 00 00 01 	mov    BYTE PTR [rbp+0x80],0x1
    a3dc:	48 83 c4 08          	add    rsp,0x8
    a3e0:	5b                   	pop    rbx
    a3e1:	5d                   	pop    rbp
    a3e2:	c3                   	ret    
    a3e3:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    a3ea:	00 00 00 00 
    a3ee:	66 90                	xchg   ax,ax

000000000000a3f0 <try_add_camera_to_world>:
    a3f0:	f3 0f 1e fa          	endbr64 
    a3f4:	41 54                	push   r12
    a3f6:	49 89 d4             	mov    r12,rdx
    a3f9:	55                   	push   rbp
    a3fa:	48 89 f5             	mov    rbp,rsi
    a3fd:	53                   	push   rbx
    a3fe:	48 89 fb             	mov    rbx,rdi
    a401:	48 83 ec 10          	sub    rsp,0x10
    a405:	e8 a6 1e 00 00       	call   c2b0 <get_count_to_words>
    a40a:	48 83 f8 04          	cmp    rax,0x4
    a40e:	74 10                	je     a420 <try_add_camera_to_world+0x30>
    a410:	31 c0                	xor    eax,eax
    a412:	48 83 c4 10          	add    rsp,0x10
    a416:	5b                   	pop    rbx
    a417:	5d                   	pop    rbp
    a418:	41 5c                	pop    r12
    a41a:	c3                   	ret    
    a41b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    a420:	48 8b 7b 08          	mov    rdi,QWORD PTR [rbx+0x8]
    a424:	be 2c 00 00 00       	mov    esi,0x2c
    a429:	e8 c2 1d 00 00       	call   c1f0 <get_count_words>
    a42e:	48 83 f8 03          	cmp    rax,0x3
    a432:	75 dc                	jne    a410 <try_add_camera_to_world+0x20>
    a434:	48 8b 7b 10          	mov    rdi,QWORD PTR [rbx+0x10]
    a438:	be 2c 00 00 00       	mov    esi,0x2c
    a43d:	e8 ae 1d 00 00       	call   c1f0 <get_count_words>
    a442:	48 83 f8 03          	cmp    rax,0x3
    a446:	75 c8                	jne    a410 <try_add_camera_to_world+0x20>
    a448:	80 7d 50 00          	cmp    BYTE PTR [rbp+0x50],0x0
    a44c:	75 c2                	jne    a410 <try_add_camera_to_world+0x20>
    a44e:	48 8b 7b 08          	mov    rdi,QWORD PTR [rbx+0x8]
    a452:	48 89 ee             	mov    rsi,rbp
    a455:	e8 66 b4 ff ff       	call   58c0 <try_parse_vector3>
    a45a:	84 c0                	test   al,al
    a45c:	74 b2                	je     a410 <try_add_camera_to_world+0x20>
    a45e:	48 8b 7b 10          	mov    rdi,QWORD PTR [rbx+0x10]
    a462:	48 8d 75 30          	lea    rsi,[rbp+0x30]
    a466:	e8 55 b4 ff ff       	call   58c0 <try_parse_vector3>
    a46b:	84 c0                	test   al,al
    a46d:	74 a1                	je     a410 <try_add_camera_to_world+0x20>
    a46f:	48 8b 7b 18          	mov    rdi,QWORD PTR [rbx+0x18]
    a473:	48 8d 75 40          	lea    rsi,[rbp+0x40]
    a477:	e8 94 24 00 00       	call   c910 <try_atof>
    a47c:	84 c0                	test   al,al
    a47e:	88 44 24 0f          	mov    BYTE PTR [rsp+0xf],al
    a482:	74 8c                	je     a410 <try_add_camera_to_world+0x20>
    a484:	c5 fa 10 45 40       	vmovss xmm0,DWORD PTR [rbp+0x40]
    a489:	c5 f8 2f 05 2f 7d 00 	vcomiss xmm0,DWORD PTR [rip+0x7d2f]        # 121c0 <_IO_stdin_used+0x1c0>
    a490:	00 
    a491:	0f 87 79 ff ff ff    	ja     a410 <try_add_camera_to_world+0x20>
    a497:	c5 f0 57 c9          	vxorps xmm1,xmm1,xmm1
    a49b:	c5 f8 2f c8          	vcomiss xmm1,xmm0
    a49f:	0f 87 6b ff ff ff    	ja     a410 <try_add_camera_to_world+0x20>
    a4a5:	4c 89 e6             	mov    rsi,r12
    a4a8:	48 89 ef             	mov    rdi,rbp
    a4ab:	e8 70 8b ff ff       	call   3020 <init_camera>
    a4b0:	0f b6 44 24 0f       	movzx  eax,BYTE PTR [rsp+0xf]
    a4b5:	e9 58 ff ff ff       	jmp    a412 <try_add_camera_to_world+0x22>
    a4ba:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

000000000000a4c0 <try_add_light_to_world>:
    a4c0:	f3 0f 1e fa          	endbr64 
    a4c4:	41 55                	push   r13
    a4c6:	41 54                	push   r12
    a4c8:	55                   	push   rbp
    a4c9:	48 89 f5             	mov    rbp,rsi
    a4cc:	53                   	push   rbx
    a4cd:	48 89 fb             	mov    rbx,rdi
    a4d0:	48 83 ec 38          	sub    rsp,0x38
    a4d4:	e8 d7 1d 00 00       	call   c2b0 <get_count_to_words>
    a4d9:	48 83 f8 04          	cmp    rax,0x4
    a4dd:	74 11                	je     a4f0 <try_add_light_to_world+0x30>
    a4df:	48 83 c4 38          	add    rsp,0x38
    a4e3:	45 31 e4             	xor    r12d,r12d
    a4e6:	5b                   	pop    rbx
    a4e7:	44 89 e0             	mov    eax,r12d
    a4ea:	5d                   	pop    rbp
    a4eb:	41 5c                	pop    r12
    a4ed:	41 5d                	pop    r13
    a4ef:	c3                   	ret    
    a4f0:	48 8b 7b 08          	mov    rdi,QWORD PTR [rbx+0x8]
    a4f4:	be 2c 00 00 00       	mov    esi,0x2c
    a4f9:	e8 f2 1c 00 00       	call   c1f0 <get_count_words>
    a4fe:	48 83 f8 03          	cmp    rax,0x3
    a502:	75 db                	jne    a4df <try_add_light_to_world+0x1f>
    a504:	48 8b 7b 18          	mov    rdi,QWORD PTR [rbx+0x18]
    a508:	be 2c 00 00 00       	mov    esi,0x2c
    a50d:	e8 de 1c 00 00       	call   c1f0 <get_count_words>
    a512:	48 83 f8 03          	cmp    rax,0x3
    a516:	75 c7                	jne    a4df <try_add_light_to_world+0x1f>
    a518:	49 89 e5             	mov    r13,rsp
    a51b:	48 8b 7b 08          	mov    rdi,QWORD PTR [rbx+0x8]
    a51f:	4c 89 ee             	mov    rsi,r13
    a522:	e8 99 b3 ff ff       	call   58c0 <try_parse_vector3>
    a527:	84 c0                	test   al,al
    a529:	74 b4                	je     a4df <try_add_light_to_world+0x1f>
    a52b:	48 8b 7b 10          	mov    rdi,QWORD PTR [rbx+0x10]
    a52f:	48 8d 74 24 10       	lea    rsi,[rsp+0x10]
    a534:	e8 d7 23 00 00       	call   c910 <try_atof>
    a539:	84 c0                	test   al,al
    a53b:	74 a2                	je     a4df <try_add_light_to_world+0x1f>
    a53d:	c5 fa 10 44 24 10    	vmovss xmm0,DWORD PTR [rsp+0x10]
    a543:	e8 f8 b4 ff ff       	call   5a40 <is_invalid_ratio_in_range>
    a548:	84 c0                	test   al,al
    a54a:	75 93                	jne    a4df <try_add_light_to_world+0x1f>
    a54c:	48 8b 7b 18          	mov    rdi,QWORD PTR [rbx+0x18]
    a550:	48 8d 74 24 20       	lea    rsi,[rsp+0x20]
    a555:	e8 d6 b3 ff ff       	call   5930 <try_parse_color>
    a55a:	41 89 c4             	mov    r12d,eax
    a55d:	84 c0                	test   al,al
    a55f:	0f 84 7a ff ff ff    	je     a4df <try_add_light_to_world+0x1f>
    a565:	48 8d bd 88 00 00 00 	lea    rdi,[rbp+0x88]
    a56c:	4c 89 ee             	mov    rsi,r13
    a56f:	ff 95 b0 00 00 00    	call   QWORD PTR [rbp+0xb0]
    a575:	48 83 c4 38          	add    rsp,0x38
    a579:	44 89 e0             	mov    eax,r12d
    a57c:	5b                   	pop    rbx
    a57d:	5d                   	pop    rbp
    a57e:	41 5c                	pop    r12
    a580:	41 5d                	pop    r13
    a582:	c3                   	ret    
    a583:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    a58a:	00 00 00 
    a58d:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000a590 <convert_colors>:
    a590:	f3 0f 1e fa          	endbr64 
    a594:	48 89 f8             	mov    rax,rdi
    a597:	c1 e7 10             	shl    edi,0x10
    a59a:	48 c1 e8 20          	shr    rax,0x20
    a59e:	c1 e0 08             	shl    eax,0x8
    a5a1:	01 c7                	add    edi,eax
    a5a3:	8d 04 37             	lea    eax,[rdi+rsi*1]
    a5a6:	c3                   	ret    
    a5a7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    a5ae:	00 00 

000000000000a5b0 <convert_color_to_ivec3>:
    a5b0:	f3 0f 1e fa          	endbr64 
    a5b4:	55                   	push   rbp
    a5b5:	89 fa                	mov    edx,edi
    a5b7:	89 f8                	mov    eax,edi
    a5b9:	c1 fa 10             	sar    edx,0x10
    a5bc:	0f b6 cc             	movzx  ecx,ah
    a5bf:	25 ff 00 00 00       	and    eax,0xff
    a5c4:	81 e2 ff 00 00 00    	and    edx,0xff
    a5ca:	48 89 e5             	mov    rbp,rsp
    a5cd:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    a5d1:	89 54 24 f0          	mov    DWORD PTR [rsp-0x10],edx
    a5d5:	89 44 24 f8          	mov    DWORD PTR [rsp-0x8],eax
    a5d9:	48 8b 54 24 f8       	mov    rdx,QWORD PTR [rsp-0x8]
    a5de:	89 4c 24 f4          	mov    DWORD PTR [rsp-0xc],ecx
    a5e2:	48 8b 44 24 f0       	mov    rax,QWORD PTR [rsp-0x10]
    a5e7:	c9                   	leave  
    a5e8:	c3                   	ret    
    a5e9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

000000000000a5f0 <add_color>:
    a5f0:	f3 0f 1e fa          	endbr64 
    a5f4:	55                   	push   rbp
    a5f5:	48 89 f8             	mov    rax,rdi
    a5f8:	48 c1 e8 20          	shr    rax,0x20
    a5fc:	48 89 e5             	mov    rbp,rsp
    a5ff:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    a603:	48 89 54 24 d0       	mov    QWORD PTR [rsp-0x30],rdx
    a608:	ba ff 00 00 00       	mov    edx,0xff
    a60d:	03 7c 24 d0          	add    edi,DWORD PTR [rsp-0x30]
    a611:	48 89 4c 24 d8       	mov    QWORD PTR [rsp-0x28],rcx
    a616:	03 74 24 d8          	add    esi,DWORD PTR [rsp-0x28]
    a61a:	39 d7                	cmp    edi,edx
    a61c:	c5 f9 6f 05 ec 7b 00 	vmovdqa xmm0,XMMWORD PTR [rip+0x7bec]        # 12210 <_IO_stdin_used+0x210>
    a623:	00 
    a624:	0f 4f fa             	cmovg  edi,edx
    a627:	03 44 24 d4          	add    eax,DWORD PTR [rsp-0x2c]
    a62b:	c5 f9 6e ce          	vmovd  xmm1,esi
    a62f:	39 d0                	cmp    eax,edx
    a631:	c4 e2 71 39 d8       	vpminsd xmm3,xmm1,xmm0
    a636:	0f 4f c2             	cmovg  eax,edx
    a639:	c5 f9 6e d7          	vmovd  xmm2,edi
    a63d:	c5 f9 7e 5c 24 f8    	vmovd  DWORD PTR [rsp-0x8],xmm3
    a643:	48 8b 54 24 f8       	mov    rdx,QWORD PTR [rsp-0x8]
    a648:	c4 e3 69 22 e0 01    	vpinsrd xmm4,xmm2,eax,0x1
    a64e:	c5 f9 d6 64 24 f0    	vmovq  QWORD PTR [rsp-0x10],xmm4
    a654:	48 8b 44 24 f0       	mov    rax,QWORD PTR [rsp-0x10]
    a659:	c9                   	leave  
    a65a:	c3                   	ret    
    a65b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a660 <load_ambient_color>:
    a660:	f3 0f 1e fa          	endbr64 
    a664:	55                   	push   rbp
    a665:	48 89 e5             	mov    rbp,rsp
    a668:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    a66c:	c7 44 24 ec 00 00 00 	mov    DWORD PTR [rsp-0x14],0x0
    a673:	00 
    a674:	8b 75 24             	mov    esi,DWORD PTR [rbp+0x24]
    a677:	0f af 75 54          	imul   esi,DWORD PTR [rbp+0x54]
    a67b:	8b 55 20             	mov    edx,DWORD PTR [rbp+0x20]
    a67e:	0f af 55 50          	imul   edx,DWORD PTR [rbp+0x50]
    a682:	c5 fa 10 05 3a 7b 00 	vmovss xmm0,DWORD PTR [rip+0x7b3a]        # 121c4 <_IO_stdin_used+0x1c4>
    a689:	00 
    a68a:	c5 fa 59 4d 10       	vmulss xmm1,xmm0,DWORD PTR [rbp+0x10]
    a68f:	48 63 fe             	movsxd rdi,esi
    a692:	44 8b 55 28          	mov    r10d,DWORD PTR [rbp+0x28]
    a696:	44 0f af 55 58       	imul   r10d,DWORD PTR [rbp+0x58]
    a69b:	48 69 ff 81 80 80 80 	imul   rdi,rdi,0xffffffff80808081
    a6a2:	48 63 c2             	movsxd rax,edx
    a6a5:	48 69 c8 81 80 80 80 	imul   rcx,rax,0xffffffff80808081
    a6ac:	4d 63 da             	movsxd r11,r10d
    a6af:	48 c1 ef 20          	shr    rdi,0x20
    a6b3:	01 f7                	add    edi,esi
    a6b5:	48 c1 e9 20          	shr    rcx,0x20
    a6b9:	c1 fe 1f             	sar    esi,0x1f
    a6bc:	c1 ff 07             	sar    edi,0x7
    a6bf:	01 d1                	add    ecx,edx
    a6c1:	c1 f9 07             	sar    ecx,0x7
    a6c4:	29 f7                	sub    edi,esi
    a6c6:	c1 fa 1f             	sar    edx,0x1f
    a6c9:	c5 fa 2c f1          	vcvttss2si esi,xmm1
    a6cd:	29 d1                	sub    ecx,edx
    a6cf:	41 89 f9             	mov    r9d,edi
    a6d2:	41 89 c8             	mov    r8d,ecx
    a6d5:	49 69 d3 81 80 80 80 	imul   rdx,r11,0xffffffff80808081
    a6dc:	44 0f af c6          	imul   r8d,esi
    a6e0:	48 c1 ea 20          	shr    rdx,0x20
    a6e4:	44 0f af ce          	imul   r9d,esi
    a6e8:	44 01 d2             	add    edx,r10d
    a6eb:	41 c1 fa 1f          	sar    r10d,0x1f
    a6ef:	c1 fa 07             	sar    edx,0x7
    a6f2:	49 63 c0             	movsxd rax,r8d
    a6f5:	44 29 d2             	sub    edx,r10d
    a6f8:	48 69 f8 81 80 80 80 	imul   rdi,rax,0xffffffff80808081
    a6ff:	49 63 c9             	movsxd rcx,r9d
    a702:	48 c1 ef 20          	shr    rdi,0x20
    a706:	44 01 c7             	add    edi,r8d
    a709:	41 c1 f8 1f          	sar    r8d,0x1f
    a70d:	c1 ff 07             	sar    edi,0x7
    a710:	44 29 c7             	sub    edi,r8d
    a713:	4c 69 c1 81 80 80 80 	imul   r8,rcx,0xffffffff80808081
    a71a:	c5 f9 6e d7          	vmovd  xmm2,edi
    a71e:	49 c1 e8 20          	shr    r8,0x20
    a722:	45 01 c8             	add    r8d,r9d
    a725:	0f af f2             	imul   esi,edx
    a728:	41 c1 f9 1f          	sar    r9d,0x1f
    a72c:	41 c1 f8 07          	sar    r8d,0x7
    a730:	45 29 c8             	sub    r8d,r9d
    a733:	4c 63 ce             	movsxd r9,esi
    a736:	c4 c3 69 22 d8 01    	vpinsrd xmm3,xmm2,r8d,0x1
    a73c:	4d 69 d1 81 80 80 80 	imul   r10,r9,0xffffffff80808081
    a743:	c5 f9 d6 5c 24 e0    	vmovq  QWORD PTR [rsp-0x20],xmm3
    a749:	48 8b 44 24 e0       	mov    rax,QWORD PTR [rsp-0x20]
    a74e:	49 c1 ea 20          	shr    r10,0x20
    a752:	41 01 f2             	add    r10d,esi
    a755:	c1 fe 1f             	sar    esi,0x1f
    a758:	41 c1 fa 07          	sar    r10d,0x7
    a75c:	41 29 f2             	sub    r10d,esi
    a75f:	44 89 54 24 e8       	mov    DWORD PTR [rsp-0x18],r10d
    a764:	48 8b 54 24 e8       	mov    rdx,QWORD PTR [rsp-0x18]
    a769:	c9                   	leave  
    a76a:	c3                   	ret    
    a76b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a770 <load_diffuse_color>:
    a770:	f3 0f 1e fa          	endbr64 
    a774:	4c 8d 54 24 08       	lea    r10,[rsp+0x8]
    a779:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    a77d:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    a781:	41 ff 72 f8          	push   QWORD PTR [r10-0x8]
    a785:	55                   	push   rbp
    a786:	48 89 e5             	mov    rbp,rsp
    a789:	41 52                	push   r10
    a78b:	53                   	push   rbx
    a78c:	4c 89 d3             	mov    rbx,r10
    a78f:	48 83 c4 80          	add    rsp,0xffffffffffffff80
    a793:	c4 c1 7a 10 6a 04    	vmovss xmm5,DWORD PTR [r10+0x4]
    a799:	c4 c1 52 5c 72 34    	vsubss xmm6,xmm5,DWORD PTR [r10+0x34]
    a79f:	c4 c1 7a 10 22       	vmovss xmm4,DWORD PTR [r10]
    a7a4:	c4 c1 5a 5c 7a 30    	vsubss xmm7,xmm4,DWORD PTR [r10+0x30]
    a7aa:	c4 c1 7a 10 5a 08    	vmovss xmm3,DWORD PTR [r10+0x8]
    a7b0:	c4 c1 62 5c 52 38    	vsubss xmm2,xmm3,DWORD PTR [r10+0x38]
    a7b6:	c5 ca 59 ce          	vmulss xmm1,xmm6,xmm6
    a7ba:	c4 e2 41 b9 cf       	vfmadd231ss xmm1,xmm7,xmm7
    a7bf:	c4 e2 69 b9 ca       	vfmadd231ss xmm1,xmm2,xmm2
    a7c4:	c5 f8 2e c1          	vucomiss xmm0,xmm1
    a7c8:	0f 87 12 01 00 00    	ja     a8e0 <load_diffuse_color+0x170>
    a7ce:	c5 f2 51 c9          	vsqrtss xmm1,xmm1,xmm1
    a7d2:	c5 4a 5e c9          	vdivss xmm9,xmm6,xmm1
    a7d6:	c5 42 5e c1          	vdivss xmm8,xmm7,xmm1
    a7da:	c5 32 59 53 44       	vmulss xmm10,xmm9,DWORD PTR [rbx+0x44]
    a7df:	c5 ea 5e c1          	vdivss xmm0,xmm2,xmm1
    a7e3:	c4 62 29 99 43 40    	vfmadd132ss xmm8,xmm10,DWORD PTR [rbx+0x40]
    a7e9:	c5 f0 57 c9          	vxorps xmm1,xmm1,xmm1
    a7ed:	c4 e2 39 99 43 48    	vfmadd132ss xmm0,xmm8,DWORD PTR [rbx+0x48]
    a7f3:	e8 78 7e ff ff       	call   2670 <fmaxf@plt>
    a7f8:	c4 41 10 57 ed       	vxorps xmm13,xmm13,xmm13
    a7fd:	c5 7a 10 63 10       	vmovss xmm12,DWORD PTR [rbx+0x10]
    a802:	c7 45 dc 00 00 00 00 	mov    DWORD PTR [rbp-0x24],0x0
    a809:	c5 12 2a 73 20       	vcvtsi2ss xmm14,xmm13,DWORD PTR [rbx+0x20]
    a80e:	c5 78 28 d8          	vmovaps xmm11,xmm0
    a812:	c5 92 2a 5b 24       	vcvtsi2ss xmm3,xmm13,DWORD PTR [rbx+0x24]
    a817:	c5 92 2a 73 28       	vcvtsi2ss xmm6,xmm13,DWORD PTR [rbx+0x28]
    a81c:	c5 0a 59 f8          	vmulss xmm15,xmm14,xmm0
    a820:	c5 e2 59 c0          	vmulss xmm0,xmm3,xmm0
    a824:	c4 c1 4a 59 fb       	vmulss xmm7,xmm6,xmm11
    a829:	c4 c1 7a 2c c7       	vcvttss2si eax,xmm15
    a82e:	c5 fa 2c c8          	vcvttss2si ecx,xmm0
    a832:	c5 fa 2c ff          	vcvttss2si edi,xmm7
    a836:	c5 92 2a e0          	vcvtsi2ss xmm4,xmm13,eax
    a83a:	c5 92 2a c9          	vcvtsi2ss xmm1,xmm13,ecx
    a83e:	c5 12 2a c7          	vcvtsi2ss xmm8,xmm13,edi
    a842:	c4 c1 5a 59 ec       	vmulss xmm5,xmm4,xmm12
    a847:	c4 c1 72 59 d4       	vmulss xmm2,xmm1,xmm12
    a84c:	c4 41 3a 59 cc       	vmulss xmm9,xmm8,xmm12
    a851:	c5 fa 2c d5          	vcvttss2si edx,xmm5
    a855:	0f af 53 50          	imul   edx,DWORD PTR [rbx+0x50]
    a859:	c5 fa 2c f2          	vcvttss2si esi,xmm2
    a85d:	0f af 73 54          	imul   esi,DWORD PTR [rbx+0x54]
    a861:	4c 63 ca             	movsxd r9,edx
    a864:	c4 41 7a 2c c1       	vcvttss2si r8d,xmm9
    a869:	4d 69 d9 81 80 80 80 	imul   r11,r9,0xffffffff80808081
    a870:	44 0f af 43 58       	imul   r8d,DWORD PTR [rbx+0x58]
    a875:	4c 63 d6             	movsxd r10,esi
    a878:	49 69 c2 81 80 80 80 	imul   rax,r10,0xffffffff80808081
    a87f:	49 c1 eb 20          	shr    r11,0x20
    a883:	41 01 d3             	add    r11d,edx
    a886:	49 63 d8             	movsxd rbx,r8d
    a889:	c1 fa 1f             	sar    edx,0x1f
    a88c:	41 c1 fb 07          	sar    r11d,0x7
    a890:	48 c1 e8 20          	shr    rax,0x20
    a894:	41 29 d3             	sub    r11d,edx
    a897:	48 69 d3 81 80 80 80 	imul   rdx,rbx,0xffffffff80808081
    a89e:	01 f0                	add    eax,esi
    a8a0:	c1 fe 1f             	sar    esi,0x1f
    a8a3:	c1 f8 07             	sar    eax,0x7
    a8a6:	c4 41 79 6e d3       	vmovd  xmm10,r11d
    a8ab:	29 f0                	sub    eax,esi
    a8ad:	48 c1 ea 20          	shr    rdx,0x20
    a8b1:	c4 63 29 22 d8 01    	vpinsrd xmm11,xmm10,eax,0x1
    a8b7:	44 01 c2             	add    edx,r8d
    a8ba:	41 c1 f8 1f          	sar    r8d,0x1f
    a8be:	c5 79 d6 5d d0       	vmovq  QWORD PTR [rbp-0x30],xmm11
    a8c3:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    a8c7:	c1 fa 07             	sar    edx,0x7
    a8ca:	44 29 c2             	sub    edx,r8d
    a8cd:	89 55 d8             	mov    DWORD PTR [rbp-0x28],edx
    a8d0:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    a8d4:	48 83 ec 80          	sub    rsp,0xffffffffffffff80
    a8d8:	5b                   	pop    rbx
    a8d9:	59                   	pop    rcx
    a8da:	5d                   	pop    rbp
    a8db:	48 8d 61 f8          	lea    rsp,[rcx-0x8]
    a8df:	c3                   	ret    
    a8e0:	c5 f8 28 c1          	vmovaps xmm0,xmm1
    a8e4:	c5 fa 11 55 84       	vmovss DWORD PTR [rbp-0x7c],xmm2
    a8e9:	c5 fa 11 75 88       	vmovss DWORD PTR [rbp-0x78],xmm6
    a8ee:	c5 fa 11 7d 8c       	vmovss DWORD PTR [rbp-0x74],xmm7
    a8f3:	e8 98 80 ff ff       	call   2990 <sqrtf@plt>
    a8f8:	c5 fa 10 55 84       	vmovss xmm2,DWORD PTR [rbp-0x7c]
    a8fd:	c5 fa 10 75 88       	vmovss xmm6,DWORD PTR [rbp-0x78]
    a902:	c5 fa 10 7d 8c       	vmovss xmm7,DWORD PTR [rbp-0x74]
    a907:	c5 f8 28 c8          	vmovaps xmm1,xmm0
    a90b:	e9 c2 fe ff ff       	jmp    a7d2 <load_diffuse_color+0x62>

000000000000a910 <get_reflection_vector3>:
    a910:	f3 0f 1e fa          	endbr64 
    a914:	4c 8d 54 24 08       	lea    r10,[rsp+0x8]
    a919:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    a91d:	c5 d0 57 ed          	vxorps xmm5,xmm5,xmm5
    a921:	41 ff 72 f8          	push   QWORD PTR [r10-0x8]
    a925:	55                   	push   rbp
    a926:	48 89 e5             	mov    rbp,rsp
    a929:	41 52                	push   r10
    a92b:	48 83 ec 68          	sub    rsp,0x68
    a92f:	c5 f9 d6 45 d0       	vmovq  QWORD PTR [rbp-0x30],xmm0
    a934:	c5 fa 10 55 d4       	vmovss xmm2,DWORD PTR [rbp-0x2c]
    a939:	c4 c1 6a 5c 7a 04    	vsubss xmm7,xmm2,DWORD PTR [r10+0x4]
    a93f:	c5 fa 10 5d d0       	vmovss xmm3,DWORD PTR [rbp-0x30]
    a944:	c4 c1 62 5c 32       	vsubss xmm6,xmm3,DWORD PTR [r10]
    a949:	c5 f9 d6 4d d8       	vmovq  QWORD PTR [rbp-0x28],xmm1
    a94e:	c5 fa 10 4d d8       	vmovss xmm1,DWORD PTR [rbp-0x28]
    a953:	c4 c1 72 5c 62 08    	vsubss xmm4,xmm1,DWORD PTR [r10+0x8]
    a959:	c5 c2 59 c7          	vmulss xmm0,xmm7,xmm7
    a95d:	c4 e2 49 b9 c6       	vfmadd231ss xmm0,xmm6,xmm6
    a962:	c4 e2 59 b9 c4       	vfmadd231ss xmm0,xmm4,xmm4
    a967:	c5 f8 2e e8          	vucomiss xmm5,xmm0
    a96b:	0f 87 87 00 00 00    	ja     a9f8 <get_reflection_vector3+0xe8>
    a971:	c5 fa 51 c0          	vsqrtss xmm0,xmm0,xmm0
    a975:	c5 42 5e c8          	vdivss xmm9,xmm7,xmm0
    a979:	c4 41 7a 10 72 14    	vmovss xmm14,DWORD PTR [r10+0x14]
    a97f:	c4 41 7a 10 7a 10    	vmovss xmm15,DWORD PTR [r10+0x10]
    a985:	c4 41 7a 10 52 18    	vmovss xmm10,DWORD PTR [r10+0x18]
    a98b:	c5 4a 5e c0          	vdivss xmm8,xmm6,xmm0
    a98f:	c4 41 0a 59 d9       	vmulss xmm11,xmm14,xmm9
    a994:	c5 da 5e c0          	vdivss xmm0,xmm4,xmm0
    a998:	c4 42 01 b9 d8       	vfmadd231ss xmm11,xmm15,xmm8
    a99d:	c4 62 29 b9 d8       	vfmadd231ss xmm11,xmm10,xmm0
    a9a2:	c4 41 22 58 eb       	vaddss xmm13,xmm11,xmm11
    a9a7:	c4 42 31 9b f5       	vfmsub132ss xmm14,xmm9,xmm13
    a9ac:	c4 42 39 9b fd       	vfmsub132ss xmm15,xmm8,xmm13
    a9b1:	c4 42 79 9b ea       	vfmsub132ss xmm13,xmm0,xmm10
    a9b6:	c4 41 0a 59 e6       	vmulss xmm12,xmm14,xmm14
    a9bb:	c4 42 01 b9 e7       	vfmadd231ss xmm12,xmm15,xmm15
    a9c0:	c4 42 11 b9 e5       	vfmadd231ss xmm12,xmm13,xmm13
    a9c5:	c4 c1 78 2e ec       	vucomiss xmm5,xmm12
    a9ca:	77 60                	ja     aa2c <get_reflection_vector3+0x11c>
    a9cc:	c4 41 1a 51 e4       	vsqrtss xmm12,xmm12,xmm12
    a9d1:	c4 c1 12 5e cc       	vdivss xmm1,xmm13,xmm12
    a9d6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a9da:	c4 c1 02 5e dc       	vdivss xmm3,xmm15,xmm12
    a9df:	c5 fa 11 4d e8       	vmovss DWORD PTR [rbp-0x18],xmm1
    a9e4:	c5 fa 7e 4d e8       	vmovq  xmm1,QWORD PTR [rbp-0x18]
    a9e9:	c9                   	leave  
    a9ea:	48 8d 60 f8          	lea    rsp,[rax-0x8]
    a9ee:	c4 c1 0a 5e d4       	vdivss xmm2,xmm14,xmm12
    a9f3:	c5 e0 14 c2          	vunpcklps xmm0,xmm3,xmm2
    a9f7:	c3                   	ret    
    a9f8:	4c 89 55 98          	mov    QWORD PTR [rbp-0x68],r10
    a9fc:	c5 fa 11 65 a4       	vmovss DWORD PTR [rbp-0x5c],xmm4
    aa01:	c5 fa 11 7d a8       	vmovss DWORD PTR [rbp-0x58],xmm7
    aa06:	c5 fa 11 75 ac       	vmovss DWORD PTR [rbp-0x54],xmm6
    aa0b:	e8 80 7f ff ff       	call   2990 <sqrtf@plt>
    aa10:	4c 8b 55 98          	mov    r10,QWORD PTR [rbp-0x68]
    aa14:	c5 fa 10 65 a4       	vmovss xmm4,DWORD PTR [rbp-0x5c]
    aa19:	c5 d0 57 ed          	vxorps xmm5,xmm5,xmm5
    aa1d:	c5 fa 10 7d a8       	vmovss xmm7,DWORD PTR [rbp-0x58]
    aa22:	c5 fa 10 75 ac       	vmovss xmm6,DWORD PTR [rbp-0x54]
    aa27:	e9 49 ff ff ff       	jmp    a975 <get_reflection_vector3+0x65>
    aa2c:	c5 78 29 e0          	vmovaps xmm0,xmm12
    aa30:	c5 7a 11 6d a4       	vmovss DWORD PTR [rbp-0x5c],xmm13
    aa35:	c5 7a 11 75 a8       	vmovss DWORD PTR [rbp-0x58],xmm14
    aa3a:	c5 7a 11 7d ac       	vmovss DWORD PTR [rbp-0x54],xmm15
    aa3f:	e8 4c 7f ff ff       	call   2990 <sqrtf@plt>
    aa44:	c5 7a 10 6d a4       	vmovss xmm13,DWORD PTR [rbp-0x5c]
    aa49:	c5 7a 10 75 a8       	vmovss xmm14,DWORD PTR [rbp-0x58]
    aa4e:	c5 7a 10 7d ac       	vmovss xmm15,DWORD PTR [rbp-0x54]
    aa53:	c5 78 28 e0          	vmovaps xmm12,xmm0
    aa57:	e9 75 ff ff ff       	jmp    a9d1 <get_reflection_vector3+0xc1>
    aa5c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000aa60 <load_specular_color>:
    aa60:	f3 0f 1e fa          	endbr64 
    aa64:	4c 8d 54 24 08       	lea    r10,[rsp+0x8]
    aa69:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    aa6d:	c5 d0 57 ed          	vxorps xmm5,xmm5,xmm5
    aa71:	41 ff 72 f8          	push   QWORD PTR [r10-0x8]
    aa75:	55                   	push   rbp
    aa76:	48 89 e5             	mov    rbp,rsp
    aa79:	41 52                	push   r10
    aa7b:	53                   	push   rbx
    aa7c:	4c 89 d3             	mov    rbx,r10
    aa7f:	48 81 ec a0 00 00 00 	sub    rsp,0xa0
    aa86:	c5 f9 d6 45 c0       	vmovq  QWORD PTR [rbp-0x40],xmm0
    aa8b:	c5 fa 10 65 c4       	vmovss xmm4,DWORD PTR [rbp-0x3c]
    aa90:	c4 41 7a 10 4a 30    	vmovss xmm9,DWORD PTR [r10+0x30]
    aa96:	c5 f9 d6 4d c8       	vmovq  QWORD PTR [rbp-0x38],xmm1
    aa9b:	c4 c1 7a 10 4a 34    	vmovss xmm1,DWORD PTR [r10+0x34]
    aaa1:	c5 fa 10 5d c0       	vmovss xmm3,DWORD PTR [rbp-0x40]
    aaa6:	c4 41 7a 10 5a 38    	vmovss xmm11,DWORD PTR [r10+0x38]
    aaac:	c5 fa 10 55 c8       	vmovss xmm2,DWORD PTR [rbp-0x38]
    aab1:	c5 da 5c f9          	vsubss xmm7,xmm4,xmm1
    aab5:	c4 41 62 5c c1       	vsubss xmm8,xmm3,xmm9
    aaba:	c4 c1 6a 5c f3       	vsubss xmm6,xmm2,xmm11
    aabf:	c5 c2 59 c7          	vmulss xmm0,xmm7,xmm7
    aac3:	c4 c2 39 b9 c0       	vfmadd231ss xmm0,xmm8,xmm8
    aac8:	c4 e2 49 b9 c6       	vfmadd231ss xmm0,xmm6,xmm6
    aacd:	c5 f8 2e e8          	vucomiss xmm5,xmm0
    aad1:	0f 87 49 01 00 00    	ja     ac20 <load_specular_color+0x1c0>
    aad7:	c5 fa 51 c0          	vsqrtss xmm0,xmm0,xmm0
    aadb:	c5 ba 5e d8          	vdivss xmm3,xmm8,xmm0
    aadf:	c5 7a 10 13          	vmovss xmm10,DWORD PTR [rbx]
    aae3:	c5 7a 10 63 08       	vmovss xmm12,DWORD PTR [rbx+0x8]
    aae8:	c5 7a 10 6b 48       	vmovss xmm13,DWORD PTR [rbx+0x48]
    aaed:	c4 41 2a 5c c1       	vsubss xmm8,xmm10,xmm9
    aaf2:	c4 41 1a 5c f3       	vsubss xmm14,xmm12,xmm11
    aaf7:	c5 c2 5e e0          	vdivss xmm4,xmm7,xmm0
    aafb:	c5 fa 10 7b 40       	vmovss xmm7,DWORD PTR [rbx+0x40]
    ab00:	c5 ca 5e d0          	vdivss xmm2,xmm6,xmm0
    ab04:	c5 fa 10 43 04       	vmovss xmm0,DWORD PTR [rbx+0x4]
    ab09:	c5 fa 10 73 44       	vmovss xmm6,DWORD PTR [rbx+0x44]
    ab0e:	c5 7a 5c f9          	vsubss xmm15,xmm0,xmm1
    ab12:	c4 c1 02 59 c7       	vmulss xmm0,xmm15,xmm15
    ab17:	c4 c2 39 b9 c0       	vfmadd231ss xmm0,xmm8,xmm8
    ab1c:	c4 c2 09 b9 c6       	vfmadd231ss xmm0,xmm14,xmm14
    ab21:	c5 f8 2e e8          	vucomiss xmm5,xmm0
    ab25:	0f 87 9d 01 00 00    	ja     acc8 <load_specular_color+0x268>
    ab2b:	c5 fa 51 c0          	vsqrtss xmm0,xmm0,xmm0
    ab2f:	c5 02 5e c8          	vdivss xmm9,xmm15,xmm0
    ab33:	c5 3a 5e d8          	vdivss xmm11,xmm8,xmm0
    ab37:	c4 c1 4a 59 c9       	vmulss xmm1,xmm6,xmm9
    ab3c:	c5 0a 5e d0          	vdivss xmm10,xmm14,xmm0
    ab40:	c4 c2 41 b9 cb       	vfmadd231ss xmm1,xmm7,xmm11
    ab45:	c4 c2 11 b9 ca       	vfmadd231ss xmm1,xmm13,xmm10
    ab4a:	c5 72 58 e1          	vaddss xmm12,xmm1,xmm1
    ab4e:	c4 c2 31 9b f4       	vfmsub132ss xmm6,xmm9,xmm12
    ab53:	c4 c2 21 9b fc       	vfmsub132ss xmm7,xmm11,xmm12
    ab58:	c4 42 29 9b e5       	vfmsub132ss xmm12,xmm10,xmm13
    ab5d:	c5 ca 59 c6          	vmulss xmm0,xmm6,xmm6
    ab61:	c4 e2 41 b9 c7       	vfmadd231ss xmm0,xmm7,xmm7
    ab66:	c4 c2 19 b9 c4       	vfmadd231ss xmm0,xmm12,xmm12
    ab6b:	c5 f8 2e e8          	vucomiss xmm5,xmm0
    ab6f:	0f 87 01 01 00 00    	ja     ac76 <load_specular_color+0x216>
    ab75:	c5 fa 51 c0          	vsqrtss xmm0,xmm0,xmm0
    ab79:	c5 9a 5e e8          	vdivss xmm5,xmm12,xmm0
    ab7d:	c5 f0 57 c9          	vxorps xmm1,xmm1,xmm1
    ab81:	c5 42 5e e8          	vdivss xmm13,xmm7,xmm0
    ab85:	c5 ca 5e c0          	vdivss xmm0,xmm6,xmm0
    ab89:	c5 7a 59 f4          	vmulss xmm14,xmm0,xmm4
    ab8d:	c4 c2 09 99 dd       	vfmadd132ss xmm3,xmm14,xmm13
    ab92:	c4 e2 61 99 d5       	vfmadd132ss xmm2,xmm3,xmm5
    ab97:	c5 f8 28 c2          	vmovaps xmm0,xmm2
    ab9b:	e8 d0 7a ff ff       	call   2670 <fmaxf@plt>
    aba0:	c5 fa 10 0d 20 76 00 	vmovss xmm1,DWORD PTR [rip+0x7620]        # 121c8 <_IO_stdin_used+0x1c8>
    aba7:	00 
    aba8:	e8 53 79 ff ff       	call   2500 <powf@plt>
    abad:	c4 41 38 57 c0       	vxorps xmm8,xmm8,xmm8
    abb2:	c5 fa 7e 4b 20       	vmovq  xmm1,QWORD PTR [rbx+0x20]
    abb7:	c5 7a 10 53 10       	vmovss xmm10,DWORD PTR [rbx+0x10]
    abbc:	c5 3a 2a 5b 28       	vcvtsi2ss xmm11,xmm8,DWORD PTR [rbx+0x28]
    abc1:	c5 fa 12 e0          	vmovsldup xmm4,xmm0
    abc5:	c7 45 dc 00 00 00 00 	mov    DWORD PTR [rbp-0x24],0x0
    abcc:	c5 f8 5b d1          	vcvtdq2ps xmm2,xmm1
    abd0:	c4 c1 7a 12 fa       	vmovsldup xmm7,xmm10
    abd5:	c5 22 59 c8          	vmulss xmm9,xmm11,xmm0
    abd9:	c5 e8 59 dc          	vmulps xmm3,xmm2,xmm4
    abdd:	c4 c1 7a 2c c1       	vcvttss2si eax,xmm9
    abe2:	c5 7a 5b e3          	vcvttps2dq xmm12,xmm3
    abe6:	c4 c1 78 5b f4       	vcvtdq2ps xmm6,xmm12
    abeb:	c5 c8 59 ef          	vmulps xmm5,xmm6,xmm7
    abef:	c5 ba 2a c0          	vcvtsi2ss xmm0,xmm8,eax
    abf3:	c5 7a 5b ed          	vcvttps2dq xmm13,xmm5
    abf7:	c5 79 d6 6d d0       	vmovq  QWORD PTR [rbp-0x30],xmm13
    abfc:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    ac00:	c4 41 7a 59 f2       	vmulss xmm14,xmm0,xmm10
    ac05:	c4 c1 7a 2c d6       	vcvttss2si edx,xmm14
    ac0a:	89 55 d8             	mov    DWORD PTR [rbp-0x28],edx
    ac0d:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    ac11:	48 81 c4 a0 00 00 00 	add    rsp,0xa0
    ac18:	5b                   	pop    rbx
    ac19:	59                   	pop    rcx
    ac1a:	5d                   	pop    rbp
    ac1b:	48 8d 61 f8          	lea    rsp,[rcx-0x8]
    ac1f:	c3                   	ret    
    ac20:	c5 7a 11 9d 78 ff ff 	vmovss DWORD PTR [rbp-0x88],xmm11
    ac27:	ff 
    ac28:	c5 fa 11 8d 7c ff ff 	vmovss DWORD PTR [rbp-0x84],xmm1
    ac2f:	ff 
    ac30:	c5 fa 11 75 80       	vmovss DWORD PTR [rbp-0x80],xmm6
    ac35:	c5 fa 11 7d 84       	vmovss DWORD PTR [rbp-0x7c],xmm7
    ac3a:	c5 7a 11 45 88       	vmovss DWORD PTR [rbp-0x78],xmm8
    ac3f:	c5 7a 11 4d 8c       	vmovss DWORD PTR [rbp-0x74],xmm9
    ac44:	e8 47 7d ff ff       	call   2990 <sqrtf@plt>
    ac49:	c5 fa 10 75 80       	vmovss xmm6,DWORD PTR [rbp-0x80]
    ac4e:	c5 fa 10 7d 84       	vmovss xmm7,DWORD PTR [rbp-0x7c]
    ac53:	c5 d0 57 ed          	vxorps xmm5,xmm5,xmm5
    ac57:	c5 7a 10 9d 78 ff ff 	vmovss xmm11,DWORD PTR [rbp-0x88]
    ac5e:	ff 
    ac5f:	c5 fa 10 8d 7c ff ff 	vmovss xmm1,DWORD PTR [rbp-0x84]
    ac66:	ff 
    ac67:	c5 7a 10 45 88       	vmovss xmm8,DWORD PTR [rbp-0x78]
    ac6c:	c5 7a 10 4d 8c       	vmovss xmm9,DWORD PTR [rbp-0x74]
    ac71:	e9 65 fe ff ff       	jmp    aadb <load_specular_color+0x7b>
    ac76:	c5 fa 11 95 78 ff ff 	vmovss DWORD PTR [rbp-0x88],xmm2
    ac7d:	ff 
    ac7e:	c5 fa 11 a5 7c ff ff 	vmovss DWORD PTR [rbp-0x84],xmm4
    ac85:	ff 
    ac86:	c5 fa 11 5d 80       	vmovss DWORD PTR [rbp-0x80],xmm3
    ac8b:	c5 7a 11 65 84       	vmovss DWORD PTR [rbp-0x7c],xmm12
    ac90:	c5 fa 11 75 88       	vmovss DWORD PTR [rbp-0x78],xmm6
    ac95:	c5 fa 11 7d 8c       	vmovss DWORD PTR [rbp-0x74],xmm7
    ac9a:	e8 f1 7c ff ff       	call   2990 <sqrtf@plt>
    ac9f:	c5 fa 10 5d 80       	vmovss xmm3,DWORD PTR [rbp-0x80]
    aca4:	c5 7a 10 65 84       	vmovss xmm12,DWORD PTR [rbp-0x7c]
    aca9:	c5 fa 10 95 78 ff ff 	vmovss xmm2,DWORD PTR [rbp-0x88]
    acb0:	ff 
    acb1:	c5 fa 10 a5 7c ff ff 	vmovss xmm4,DWORD PTR [rbp-0x84]
    acb8:	ff 
    acb9:	c5 fa 10 75 88       	vmovss xmm6,DWORD PTR [rbp-0x78]
    acbe:	c5 fa 10 7d 8c       	vmovss xmm7,DWORD PTR [rbp-0x74]
    acc3:	e9 b1 fe ff ff       	jmp    ab79 <load_specular_color+0x119>
    acc8:	c5 fa 11 95 6c ff ff 	vmovss DWORD PTR [rbp-0x94],xmm2
    accf:	ff 
    acd0:	c5 fa 11 a5 70 ff ff 	vmovss DWORD PTR [rbp-0x90],xmm4
    acd7:	ff 
    acd8:	c5 fa 11 9d 74 ff ff 	vmovss DWORD PTR [rbp-0x8c],xmm3
    acdf:	ff 
    ace0:	c5 7a 11 ad 78 ff ff 	vmovss DWORD PTR [rbp-0x88],xmm13
    ace7:	ff 
    ace8:	c5 fa 11 b5 7c ff ff 	vmovss DWORD PTR [rbp-0x84],xmm6
    acef:	ff 
    acf0:	c5 fa 11 7d 80       	vmovss DWORD PTR [rbp-0x80],xmm7
    acf5:	c5 7a 11 75 84       	vmovss DWORD PTR [rbp-0x7c],xmm14
    acfa:	c5 7a 11 7d 88       	vmovss DWORD PTR [rbp-0x78],xmm15
    acff:	c5 7a 11 45 8c       	vmovss DWORD PTR [rbp-0x74],xmm8
    ad04:	e8 87 7c ff ff       	call   2990 <sqrtf@plt>
    ad09:	c5 fa 10 95 6c ff ff 	vmovss xmm2,DWORD PTR [rbp-0x94]
    ad10:	ff 
    ad11:	c5 fa 10 a5 70 ff ff 	vmovss xmm4,DWORD PTR [rbp-0x90]
    ad18:	ff 
    ad19:	c5 d0 57 ed          	vxorps xmm5,xmm5,xmm5
    ad1d:	c5 fa 10 9d 74 ff ff 	vmovss xmm3,DWORD PTR [rbp-0x8c]
    ad24:	ff 
    ad25:	c5 7a 10 ad 78 ff ff 	vmovss xmm13,DWORD PTR [rbp-0x88]
    ad2c:	ff 
    ad2d:	c5 fa 10 b5 7c ff ff 	vmovss xmm6,DWORD PTR [rbp-0x84]
    ad34:	ff 
    ad35:	c5 fa 10 7d 80       	vmovss xmm7,DWORD PTR [rbp-0x80]
    ad3a:	c5 7a 10 75 84       	vmovss xmm14,DWORD PTR [rbp-0x7c]
    ad3f:	c5 7a 10 7d 88       	vmovss xmm15,DWORD PTR [rbp-0x78]
    ad44:	c5 7a 10 45 8c       	vmovss xmm8,DWORD PTR [rbp-0x74]
    ad49:	e9 e1 fd ff ff       	jmp    ab2f <load_specular_color+0xcf>
    ad4e:	66 90                	xchg   ax,ax

000000000000ad50 <move_light>:
    ad50:	f3 0f 1e fa          	endbr64 
    ad54:	83 ee 12             	sub    esi,0x12
    ad57:	83 fe 05             	cmp    esi,0x5
    ad5a:	77 26                	ja     ad82 <move_light+0x32>
    ad5c:	48 8d 15 bd 74 00 00 	lea    rdx,[rip+0x74bd]        # 12220 <_IO_stdin_used+0x220>
    ad63:	48 63 04 b2          	movsxd rax,DWORD PTR [rdx+rsi*4]
    ad67:	48 01 d0             	add    rax,rdx
    ad6a:	3e ff e0             	notrack jmp rax
    ad6d:	0f 1f 00             	nop    DWORD PTR [rax]
    ad70:	c5 7a 10 57 08       	vmovss xmm10,DWORD PTR [rdi+0x8]
    ad75:	c5 2a 5c 1d 2b 74 00 	vsubss xmm11,xmm10,DWORD PTR [rip+0x742b]        # 121a8 <_IO_stdin_used+0x1a8>
    ad7c:	00 
    ad7d:	c5 7a 11 5f 08       	vmovss DWORD PTR [rdi+0x8],xmm11
    ad82:	c3                   	ret    
    ad83:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    ad88:	c5 fa 10 05 18 74 00 	vmovss xmm0,DWORD PTR [rip+0x7418]        # 121a8 <_IO_stdin_used+0x1a8>
    ad8f:	00 
    ad90:	c5 fa 58 4f 08       	vaddss xmm1,xmm0,DWORD PTR [rdi+0x8]
    ad95:	c5 fa 11 4f 08       	vmovss DWORD PTR [rdi+0x8],xmm1
    ad9a:	c3                   	ret    
    ad9b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    ada0:	c5 7a 10 05 00 74 00 	vmovss xmm8,DWORD PTR [rip+0x7400]        # 121a8 <_IO_stdin_used+0x1a8>
    ada7:	00 
    ada8:	c5 3a 58 4f 04       	vaddss xmm9,xmm8,DWORD PTR [rdi+0x4]
    adad:	c5 7a 11 4f 04       	vmovss DWORD PTR [rdi+0x4],xmm9
    adb2:	c3                   	ret    
    adb3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    adb8:	c5 fa 10 77 04       	vmovss xmm6,DWORD PTR [rdi+0x4]
    adbd:	c5 ca 5c 3d e3 73 00 	vsubss xmm7,xmm6,DWORD PTR [rip+0x73e3]        # 121a8 <_IO_stdin_used+0x1a8>
    adc4:	00 
    adc5:	c5 fa 11 7f 04       	vmovss DWORD PTR [rdi+0x4],xmm7
    adca:	c3                   	ret    
    adcb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    add0:	c5 fa 10 27          	vmovss xmm4,DWORD PTR [rdi]
    add4:	c5 da 5c 2d cc 73 00 	vsubss xmm5,xmm4,DWORD PTR [rip+0x73cc]        # 121a8 <_IO_stdin_used+0x1a8>
    addb:	00 
    addc:	c5 fa 11 2f          	vmovss DWORD PTR [rdi],xmm5
    ade0:	c3                   	ret    
    ade1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    ade8:	c5 fa 10 15 b8 73 00 	vmovss xmm2,DWORD PTR [rip+0x73b8]        # 121a8 <_IO_stdin_used+0x1a8>
    adef:	00 
    adf0:	c5 ea 58 1f          	vaddss xmm3,xmm2,DWORD PTR [rdi]
    adf4:	c5 fa 11 1f          	vmovss DWORD PTR [rdi],xmm3
    adf8:	c3                   	ret    
    adf9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

000000000000ae00 <get_rotation_quaternion>:
    ae00:	f3 0f 1e fa          	endbr64 
    ae04:	4c 8d 54 24 08       	lea    r10,[rsp+0x8]
    ae09:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    ae0d:	41 ff 72 f8          	push   QWORD PTR [r10-0x8]
    ae11:	55                   	push   rbp
    ae12:	48 89 e5             	mov    rbp,rsp
    ae15:	41 52                	push   r10
    ae17:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
    ae1b:	48 8d 75 d0          	lea    rsi,[rbp-0x30]
    ae1f:	48 83 ec 48          	sub    rsp,0x48
    ae23:	c5 f9 d6 45 e0       	vmovq  QWORD PTR [rbp-0x20],xmm0
    ae28:	c5 ea 59 05 44 72 00 	vmulss xmm0,xmm2,DWORD PTR [rip+0x7244]        # 12074 <_IO_stdin_used+0x74>
    ae2f:	00 
    ae30:	c5 f9 d6 4d e8       	vmovq  QWORD PTR [rbp-0x18],xmm1
    ae35:	c5 fa 59 0d 7f 73 00 	vmulss xmm1,xmm0,DWORD PTR [rip+0x737f]        # 121bc <_IO_stdin_used+0x1bc>
    ae3c:	00 
    ae3d:	c5 f2 5e 15 7b 73 00 	vdivss xmm2,xmm1,DWORD PTR [rip+0x737b]        # 121c0 <_IO_stdin_used+0x1c0>
    ae44:	00 
    ae45:	c5 ea 5a c2          	vcvtss2sd xmm0,xmm2,xmm2
    ae49:	e8 92 79 ff ff       	call   27e0 <sincos@plt>
    ae4e:	c5 e0 57 db          	vxorps xmm3,xmm3,xmm3
    ae52:	c5 fb 10 65 d8       	vmovsd xmm4,QWORD PTR [rbp-0x28]
    ae57:	c5 e2 5a 6d e0       	vcvtss2sd xmm5,xmm3,DWORD PTR [rbp-0x20]
    ae5c:	c5 e2 5a 7d e4       	vcvtss2sd xmm7,xmm3,DWORD PTR [rbp-0x1c]
    ae61:	c5 62 5a 4d e8       	vcvtss2sd xmm9,xmm3,DWORD PTR [rbp-0x18]
    ae66:	c5 7b 10 65 d0       	vmovsd xmm12,QWORD PTR [rbp-0x30]
    ae6b:	c5 d3 59 f4          	vmulsd xmm6,xmm5,xmm4
    ae6f:	c5 43 59 c4          	vmulsd xmm8,xmm7,xmm4
    ae73:	c5 33 59 d4          	vmulsd xmm10,xmm9,xmm4
    ae77:	c5 19 14 ee          	vunpcklpd xmm13,xmm12,xmm6
    ae7b:	c4 41 39 14 da       	vunpcklpd xmm11,xmm8,xmm10
    ae80:	c4 43 15 18 f3 01    	vinsertf128 ymm14,ymm13,xmm11,0x1
    ae86:	c4 41 7d 5a fe       	vcvtpd2ps xmm15,ymm14
    ae8b:	c5 78 29 7d c0       	vmovaps XMMWORD PTR [rbp-0x40],xmm15
    ae90:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    ae94:	c5 fa 7e 45 c0       	vmovq  xmm0,QWORD PTR [rbp-0x40]
    ae99:	c4 e1 f9 6e c8       	vmovq  xmm1,rax
    ae9e:	c5 f8 77             	vzeroupper 
    aea1:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    aea5:	c9                   	leave  
    aea6:	48 8d 62 f8          	lea    rsp,[rdx-0x8]
    aeaa:	c3                   	ret    
    aeab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000aeb0 <hamilton_product>:
    aeb0:	f3 0f 1e fa          	endbr64 
    aeb4:	c5 f9 d6 54 24 d8    	vmovq  QWORD PTR [rsp-0x28],xmm2
    aeba:	c5 f9 d6 5c 24 e0    	vmovq  QWORD PTR [rsp-0x20],xmm3
    aec0:	c4 e3 79 04 64 24 d8 	vpermilps xmm4,XMMWORD PTR [rsp-0x28],0xb1
    aec7:	b1 
    aec8:	c5 f8 28 74 24 d8    	vmovaps xmm6,XMMWORD PTR [rsp-0x28]
    aece:	c5 f9 d6 44 24 e8    	vmovq  QWORD PTR [rsp-0x18],xmm0
    aed4:	c4 63 79 04 44 24 d8 	vpermilps xmm8,XMMWORD PTR [rsp-0x28],0x4e
    aedb:	4e 
    aedc:	c4 63 79 04 5c 24 d8 	vpermilps xmm11,XMMWORD PTR [rsp-0x28],0x1b
    aee3:	1b 
    aee4:	c5 f9 d6 4c 24 f0    	vmovq  QWORD PTR [rsp-0x10],xmm1
    aeea:	c4 e2 79 18 44 24 ec 	vbroadcastss xmm0,DWORD PTR [rsp-0x14]
    aef1:	c4 e2 79 18 54 24 e8 	vbroadcastss xmm2,DWORD PTR [rsp-0x18]
    aef8:	c4 e2 79 18 4c 24 f0 	vbroadcastss xmm1,DWORD PTR [rsp-0x10]
    aeff:	c4 e2 79 18 5c 24 f4 	vbroadcastss xmm3,DWORD PTR [rsp-0xc]
    af06:	c5 f8 59 ec          	vmulps xmm5,xmm0,xmm4
    af0a:	c5 78 28 c9          	vmovaps xmm9,xmm1
    af0e:	c5 78 28 e3          	vmovaps xmm12,xmm3
    af12:	c4 e2 51 98 f2       	vfmadd132ps xmm6,xmm5,xmm2
    af17:	c4 e2 69 ba 6c 24 d8 	vfmsub231ps xmm5,xmm2,XMMWORD PTR [rsp-0x28]
    af1e:	c4 e3 51 0c fe 0a    	vblendps xmm7,xmm5,xmm6,0xa
    af24:	c4 c2 41 9c c8       	vfnmadd132ps xmm1,xmm7,xmm8
    af29:	c4 42 41 98 c8       	vfmadd132ps xmm9,xmm7,xmm8
    af2e:	c4 43 71 0c d1 06    	vblendps xmm10,xmm1,xmm9,0x6
    af34:	c4 42 29 98 e3       	vfmadd132ps xmm12,xmm10,xmm11
    af39:	c4 c2 29 9c db       	vfnmadd132ps xmm3,xmm10,xmm11
    af3e:	c4 41 60 c6 ec e4    	vshufps xmm13,xmm3,xmm12,0xe4
    af44:	c5 78 29 6c 24 d8    	vmovaps XMMWORD PTR [rsp-0x28],xmm13
    af4a:	48 8b 44 24 e0       	mov    rax,QWORD PTR [rsp-0x20]
    af4f:	c5 fa 7e 44 24 d8    	vmovq  xmm0,QWORD PTR [rsp-0x28]
    af55:	c4 e1 f9 6e c8       	vmovq  xmm1,rax
    af5a:	c3                   	ret    
    af5b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000af60 <convert_matrix>:
    af60:	f3 0f 1e fa          	endbr64 
    af64:	c4 e1 f9 7e ca       	vmovq  rdx,xmm1
    af69:	c5 f9 6f e0          	vmovdqa xmm4,xmm0
    af6d:	c4 e1 f9 7e c1       	vmovq  rcx,xmm0
    af72:	c5 7a 10 05 be 72 00 	vmovss xmm8,DWORD PTR [rip+0x72be]        # 12238 <_IO_stdin_used+0x238>
    af79:	00 
    af7a:	c5 f9 6e d2          	vmovd  xmm2,edx
    af7e:	48 c1 ea 20          	shr    rdx,0x20
    af82:	c5 fa 10 3d 1e 72 00 	vmovss xmm7,DWORD PTR [rip+0x721e]        # 121a8 <_IO_stdin_used+0x1a8>
    af89:	00 
    af8a:	48 89 f8             	mov    rax,rdi
    af8d:	c5 5a 59 d2          	vmulss xmm10,xmm4,xmm2
    af91:	c5 f9 6e c2          	vmovd  xmm0,edx
    af95:	48 c1 e9 20          	shr    rcx,0x20
    af99:	c5 78 28 da          	vmovaps xmm11,xmm2
    af9d:	c5 da 59 d8          	vmulss xmm3,xmm4,xmm0
    afa1:	c5 f9 6e c9          	vmovd  xmm1,ecx
    afa5:	c5 f9 6e f1          	vmovd  xmm6,ecx
    afa9:	c5 fa 59 e8          	vmulss xmm5,xmm0,xmm0
    afad:	c5 79 6e e9          	vmovd  xmm13,ecx
    afb1:	c5 72 59 f1          	vmulss xmm14,xmm1,xmm1
    afb5:	c5 da 59 e1          	vmulss xmm4,xmm4,xmm1
    afb9:	c4 62 29 99 e8       	vfmadd132ss xmm13,xmm10,xmm0
    afbe:	c4 e2 61 9b f2       	vfmsub132ss xmm6,xmm3,xmm2
    afc3:	c4 e2 71 b9 da       	vfmadd231ss xmm3,xmm1,xmm2
    afc8:	c4 62 51 99 da       	vfmadd132ss xmm11,xmm5,xmm2
    afcd:	c4 e2 29 9b c8       	vfmsub132ss xmm1,xmm10,xmm0
    afd2:	c4 41 52 58 fe       	vaddss xmm15,xmm5,xmm14
    afd7:	c5 e2 58 eb          	vaddss xmm5,xmm3,xmm3
    afdb:	c5 f8 28 da          	vmovaps xmm3,xmm2
    afdf:	c5 4a 58 ce          	vaddss xmm9,xmm6,xmm6
    afe3:	c4 e2 59 9b d8       	vfmsub132ss xmm3,xmm4,xmm0
    afe8:	c4 e2 59 99 c2       	vfmadd132ss xmm0,xmm4,xmm2
    afed:	c5 f2 58 c9          	vaddss xmm1,xmm1,xmm1
    aff1:	c4 e2 09 99 d2       	vfmadd132ss xmm2,xmm14,xmm2
    aff6:	c4 42 41 9d d8       	vfnmadd132ss xmm11,xmm7,xmm8
    affb:	c4 42 41 9d f8       	vfnmadd132ss xmm15,xmm7,xmm8
    b000:	c5 fa 11 4f 20       	vmovss DWORD PTR [rdi+0x20],xmm1
    b005:	c5 fa 58 c0          	vaddss xmm0,xmm0,xmm0
    b009:	c4 c2 41 9d d0       	vfnmadd132ss xmm2,xmm7,xmm8
    b00e:	c4 41 12 58 c5       	vaddss xmm8,xmm13,xmm13
    b013:	c5 e2 58 fb          	vaddss xmm7,xmm3,xmm3
    b017:	c4 41 20 14 e1       	vunpcklps xmm12,xmm11,xmm9
    b01c:	c4 41 50 14 df       	vunpcklps xmm11,xmm5,xmm15
    b021:	c5 78 13 27          	vmovlps QWORD PTR [rdi],xmm12
    b025:	c5 7a 11 47 08       	vmovss DWORD PTR [rdi+0x8],xmm8
    b02a:	c5 78 13 5f 10       	vmovlps QWORD PTR [rdi+0x10],xmm11
    b02f:	c5 fa 11 7f 18       	vmovss DWORD PTR [rdi+0x18],xmm7
    b034:	c5 fa 11 47 24       	vmovss DWORD PTR [rdi+0x24],xmm0
    b039:	c5 fa 11 57 28       	vmovss DWORD PTR [rdi+0x28],xmm2
    b03e:	c3                   	ret    
    b03f:	90                   	nop

000000000000b040 <convert_quaternion>:
    b040:	f3 0f 1e fa          	endbr64 
    b044:	48 83 ec 38          	sub    rsp,0x38
    b048:	c4 41 30 57 c9       	vxorps xmm9,xmm9,xmm9
    b04d:	c5 7a 10 54 24 40    	vmovss xmm10,DWORD PTR [rsp+0x40]
    b053:	c5 fa 10 54 24 54    	vmovss xmm2,DWORD PTR [rsp+0x54]
    b059:	c5 fa 10 4c 24 68    	vmovss xmm1,DWORD PTR [rsp+0x68]
    b05f:	c5 fa 10 6c 24 44    	vmovss xmm5,DWORD PTR [rsp+0x44]
    b065:	c5 aa 58 c2          	vaddss xmm0,xmm10,xmm2
    b069:	c5 fa 10 64 24 48    	vmovss xmm4,DWORD PTR [rsp+0x48]
    b06f:	c5 7a 10 44 24 50    	vmovss xmm8,DWORD PTR [rsp+0x50]
    b075:	c5 fa 10 5c 24 58    	vmovss xmm3,DWORD PTR [rsp+0x58]
    b07b:	c5 fa 10 7c 24 60    	vmovss xmm7,DWORD PTR [rsp+0x60]
    b081:	c5 fa 10 74 24 64    	vmovss xmm6,DWORD PTR [rsp+0x64]
    b087:	c5 7a 58 d9          	vaddss xmm11,xmm0,xmm1
    b08b:	c4 41 78 2f d9       	vcomiss xmm11,xmm9
    b090:	0f 87 fa 00 00 00    	ja     b190 <convert_quaternion+0x150>
    b096:	c5 78 2f d2          	vcomiss xmm10,xmm2
    b09a:	76 0a                	jbe    b0a6 <convert_quaternion+0x66>
    b09c:	c5 78 2f d1          	vcomiss xmm10,xmm1
    b0a0:	0f 87 42 01 00 00    	ja     b1e8 <convert_quaternion+0x1a8>
    b0a6:	c5 f8 2f d1          	vcomiss xmm2,xmm1
    b0aa:	0f 87 88 00 00 00    	ja     b138 <convert_quaternion+0xf8>
    b0b0:	c5 72 58 25 f0 70 00 	vaddss xmm12,xmm1,DWORD PTR [rip+0x70f0]        # 121a8 <_IO_stdin_used+0x1a8>
    b0b7:	00 
    b0b8:	c4 41 1a 5c ea       	vsubss xmm13,xmm12,xmm10
    b0bd:	c5 92 5c c2          	vsubss xmm0,xmm13,xmm2
    b0c1:	c5 78 2e c8          	vucomiss xmm9,xmm0
    b0c5:	0f 87 d7 01 00 00    	ja     b2a2 <convert_quaternion+0x262>
    b0cb:	c5 fa 51 c0          	vsqrtss xmm0,xmm0,xmm0
    b0cf:	c5 7a 58 f0          	vaddss xmm14,xmm0,xmm0
    b0d3:	c4 41 52 5c f8       	vsubss xmm15,xmm5,xmm8
    b0d8:	c5 8a 59 05 54 6f 00 	vmulss xmm0,xmm14,DWORD PTR [rip+0x6f54]        # 12034 <_IO_stdin_used+0x34>
    b0df:	00 
    b0e0:	c5 da 58 d7          	vaddss xmm2,xmm4,xmm7
    b0e4:	c5 e2 58 ce          	vaddss xmm1,xmm3,xmm6
    b0e8:	c4 41 02 5e d6       	vdivss xmm10,xmm15,xmm14
    b0ed:	c4 41 6a 5e de       	vdivss xmm11,xmm2,xmm14
    b0f2:	c4 41 72 5e ce       	vdivss xmm9,xmm1,xmm14
    b0f7:	c5 fa 10 25 01 70 00 	vmovss xmm4,DWORD PTR [rip+0x7001]        # 12100 <_IO_stdin_used+0x100>
    b0fe:	00 
    b0ff:	c5 20 57 dc          	vxorps xmm11,xmm11,xmm4
    b103:	c5 b0 57 dc          	vxorps xmm3,xmm9,xmm4
    b107:	c5 f8 57 ec          	vxorps xmm5,xmm0,xmm4
    b10b:	c5 e0 14 c5          	vunpcklps xmm0,xmm3,xmm5
    b10f:	c4 41 28 14 d3       	vunpcklps xmm10,xmm10,xmm11
    b114:	c5 28 16 e8          	vmovlhps xmm13,xmm10,xmm0
    b118:	c5 78 29 2c 24       	vmovaps XMMWORD PTR [rsp],xmm13
    b11d:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
    b122:	c5 fa 7e 04 24       	vmovq  xmm0,QWORD PTR [rsp]
    b127:	48 83 c4 38          	add    rsp,0x38
    b12b:	c4 e1 f9 6e c8       	vmovq  xmm1,rax
    b130:	c3                   	ret    
    b131:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    b138:	c5 6a 58 25 68 70 00 	vaddss xmm12,xmm2,DWORD PTR [rip+0x7068]        # 121a8 <_IO_stdin_used+0x1a8>
    b13f:	00 
    b140:	c4 41 1a 5c ea       	vsubss xmm13,xmm12,xmm10
    b145:	c5 12 5c f1          	vsubss xmm14,xmm13,xmm1
    b149:	c4 41 78 2e ce       	vucomiss xmm9,xmm14
    b14e:	0f 87 f6 00 00 00    	ja     b24a <convert_quaternion+0x20a>
    b154:	c4 41 0a 51 f6       	vsqrtss xmm14,xmm14,xmm14
    b159:	c4 41 0a 58 fe       	vaddss xmm15,xmm14,xmm14
    b15e:	c5 c2 5c fc          	vsubss xmm7,xmm7,xmm4
    b162:	c5 02 59 0d ca 6e 00 	vmulss xmm9,xmm15,DWORD PTR [rip+0x6eca]        # 12034 <_IO_stdin_used+0x34>
    b169:	00 
    b16a:	c4 41 52 58 c0       	vaddss xmm8,xmm5,xmm8
    b16f:	c5 e2 58 f6          	vaddss xmm6,xmm3,xmm6
    b173:	c4 41 42 5e d7       	vdivss xmm10,xmm7,xmm15
    b178:	c4 41 3a 5e df       	vdivss xmm11,xmm8,xmm15
    b17d:	c4 c1 4a 5e c7       	vdivss xmm0,xmm6,xmm15
    b182:	e9 70 ff ff ff       	jmp    b0f7 <convert_quaternion+0xb7>
    b187:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    b18e:	00 00 
    b190:	c5 a2 58 05 10 70 00 	vaddss xmm0,xmm11,DWORD PTR [rip+0x7010]        # 121a8 <_IO_stdin_used+0x1a8>
    b197:	00 
    b198:	c5 78 2e c8          	vucomiss xmm9,xmm0
    b19c:	0f 87 50 01 00 00    	ja     b2f2 <convert_quaternion+0x2b2>
    b1a2:	c5 7a 51 d8          	vsqrtss xmm11,xmm0,xmm0
    b1a6:	c4 c1 22 58 cb       	vaddss xmm1,xmm11,xmm11
    b1ab:	c4 c1 52 5c e8       	vsubss xmm5,xmm5,xmm8
    b1b0:	c5 fa 10 15 48 6f 00 	vmovss xmm2,DWORD PTR [rip+0x6f48]        # 12100 <_IO_stdin_used+0x100>
    b1b7:	00 
    b1b8:	c5 e2 5c f6          	vsubss xmm6,xmm3,xmm6
    b1bc:	c5 c2 5c e4          	vsubss xmm4,xmm7,xmm4
    b1c0:	c5 72 59 15 6c 6e 00 	vmulss xmm10,xmm1,DWORD PTR [rip+0x6e6c]        # 12034 <_IO_stdin_used+0x34>
    b1c7:	00 
    b1c8:	c5 52 5e c9          	vdivss xmm9,xmm5,xmm1
    b1cc:	c5 ca 5e d9          	vdivss xmm3,xmm6,xmm1
    b1d0:	c5 b0 57 ea          	vxorps xmm5,xmm9,xmm2
    b1d4:	c5 5a 5e e1          	vdivss xmm12,xmm4,xmm1
    b1d8:	c5 60 57 da          	vxorps xmm11,xmm3,xmm2
    b1dc:	c5 98 57 da          	vxorps xmm3,xmm12,xmm2
    b1e0:	e9 26 ff ff ff       	jmp    b10b <convert_quaternion+0xcb>
    b1e5:	0f 1f 00             	nop    DWORD PTR [rax]
    b1e8:	c5 2a 58 15 b8 6f 00 	vaddss xmm10,xmm10,DWORD PTR [rip+0x6fb8]        # 121a8 <_IO_stdin_used+0x1a8>
    b1ef:	00 
    b1f0:	c5 aa 5c d2          	vsubss xmm2,xmm10,xmm2
    b1f4:	c5 ea 5c c9          	vsubss xmm1,xmm2,xmm1
    b1f8:	c5 78 2e c9          	vucomiss xmm9,xmm1
    b1fc:	0f 87 44 01 00 00    	ja     b346 <convert_quaternion+0x306>
    b202:	c5 f2 51 c9          	vsqrtss xmm1,xmm1,xmm1
    b206:	c5 72 58 e1          	vaddss xmm12,xmm1,xmm1
    b20a:	c4 41 52 58 f0       	vaddss xmm14,xmm5,xmm8
    b20f:	c5 9a 59 05 1d 6e 00 	vmulss xmm0,xmm12,DWORD PTR [rip+0x6e1d]        # 12034 <_IO_stdin_used+0x34>
    b216:	00 
    b217:	c5 da 58 ff          	vaddss xmm7,xmm4,xmm7
    b21b:	c5 62 5c ce          	vsubss xmm9,xmm3,xmm6
    b21f:	c5 7a 10 2d d9 6e 00 	vmovss xmm13,DWORD PTR [rip+0x6ed9]        # 12100 <_IO_stdin_used+0x100>
    b226:	00 
    b227:	c4 41 0a 5e fc       	vdivss xmm15,xmm14,xmm12
    b22c:	c4 41 78 57 dd       	vxorps xmm11,xmm0,xmm13
    b231:	c4 41 42 5e c4       	vdivss xmm8,xmm7,xmm12
    b236:	c4 c1 00 57 dd       	vxorps xmm3,xmm15,xmm13
    b23b:	c4 41 32 5e d4       	vdivss xmm10,xmm9,xmm12
    b240:	c4 c1 38 57 ed       	vxorps xmm5,xmm8,xmm13
    b245:	e9 c1 fe ff ff       	jmp    b10b <convert_quaternion+0xcb>
    b24a:	c5 78 29 f0          	vmovaps xmm0,xmm14
    b24e:	c5 fa 11 74 24 2c    	vmovss DWORD PTR [rsp+0x2c],xmm6
    b254:	c5 fa 11 7c 24 28    	vmovss DWORD PTR [rsp+0x28],xmm7
    b25a:	c5 fa 11 5c 24 24    	vmovss DWORD PTR [rsp+0x24],xmm3
    b260:	c5 7a 11 44 24 20    	vmovss DWORD PTR [rsp+0x20],xmm8
    b266:	c5 fa 11 64 24 1c    	vmovss DWORD PTR [rsp+0x1c],xmm4
    b26c:	c5 fa 11 2c 24       	vmovss DWORD PTR [rsp],xmm5
    b271:	e8 1a 77 ff ff       	call   2990 <sqrtf@plt>
    b276:	c5 fa 10 74 24 2c    	vmovss xmm6,DWORD PTR [rsp+0x2c]
    b27c:	c5 fa 10 2c 24       	vmovss xmm5,DWORD PTR [rsp]
    b281:	c5 fa 10 7c 24 28    	vmovss xmm7,DWORD PTR [rsp+0x28]
    b287:	c5 fa 10 5c 24 24    	vmovss xmm3,DWORD PTR [rsp+0x24]
    b28d:	c5 78 28 f0          	vmovaps xmm14,xmm0
    b291:	c5 7a 10 44 24 20    	vmovss xmm8,DWORD PTR [rsp+0x20]
    b297:	c5 fa 10 64 24 1c    	vmovss xmm4,DWORD PTR [rsp+0x1c]
    b29d:	e9 b7 fe ff ff       	jmp    b159 <convert_quaternion+0x119>
    b2a2:	c5 fa 11 74 24 2c    	vmovss DWORD PTR [rsp+0x2c],xmm6
    b2a8:	c5 fa 11 7c 24 28    	vmovss DWORD PTR [rsp+0x28],xmm7
    b2ae:	c5 fa 11 5c 24 24    	vmovss DWORD PTR [rsp+0x24],xmm3
    b2b4:	c5 7a 11 44 24 20    	vmovss DWORD PTR [rsp+0x20],xmm8
    b2ba:	c5 fa 11 64 24 1c    	vmovss DWORD PTR [rsp+0x1c],xmm4
    b2c0:	c5 fa 11 2c 24       	vmovss DWORD PTR [rsp],xmm5
    b2c5:	e8 c6 76 ff ff       	call   2990 <sqrtf@plt>
    b2ca:	c5 fa 10 74 24 2c    	vmovss xmm6,DWORD PTR [rsp+0x2c]
    b2d0:	c5 fa 10 2c 24       	vmovss xmm5,DWORD PTR [rsp]
    b2d5:	c5 fa 10 7c 24 28    	vmovss xmm7,DWORD PTR [rsp+0x28]
    b2db:	c5 fa 10 5c 24 24    	vmovss xmm3,DWORD PTR [rsp+0x24]
    b2e1:	c5 7a 10 44 24 20    	vmovss xmm8,DWORD PTR [rsp+0x20]
    b2e7:	c5 fa 10 64 24 1c    	vmovss xmm4,DWORD PTR [rsp+0x1c]
    b2ed:	e9 dd fd ff ff       	jmp    b0cf <convert_quaternion+0x8f>
    b2f2:	c5 fa 11 74 24 2c    	vmovss DWORD PTR [rsp+0x2c],xmm6
    b2f8:	c5 fa 11 7c 24 28    	vmovss DWORD PTR [rsp+0x28],xmm7
    b2fe:	c5 fa 11 5c 24 24    	vmovss DWORD PTR [rsp+0x24],xmm3
    b304:	c5 7a 11 44 24 20    	vmovss DWORD PTR [rsp+0x20],xmm8
    b30a:	c5 fa 11 64 24 1c    	vmovss DWORD PTR [rsp+0x1c],xmm4
    b310:	c5 fa 11 2c 24       	vmovss DWORD PTR [rsp],xmm5
    b315:	e8 76 76 ff ff       	call   2990 <sqrtf@plt>
    b31a:	c5 fa 10 74 24 2c    	vmovss xmm6,DWORD PTR [rsp+0x2c]
    b320:	c5 fa 10 2c 24       	vmovss xmm5,DWORD PTR [rsp]
    b325:	c5 fa 10 7c 24 28    	vmovss xmm7,DWORD PTR [rsp+0x28]
    b32b:	c5 fa 10 5c 24 24    	vmovss xmm3,DWORD PTR [rsp+0x24]
    b331:	c5 78 28 d8          	vmovaps xmm11,xmm0
    b335:	c5 7a 10 44 24 20    	vmovss xmm8,DWORD PTR [rsp+0x20]
    b33b:	c5 fa 10 64 24 1c    	vmovss xmm4,DWORD PTR [rsp+0x1c]
    b341:	e9 60 fe ff ff       	jmp    b1a6 <convert_quaternion+0x166>
    b346:	c5 f8 28 c1          	vmovaps xmm0,xmm1
    b34a:	c5 fa 11 74 24 2c    	vmovss DWORD PTR [rsp+0x2c],xmm6
    b350:	c5 fa 11 7c 24 28    	vmovss DWORD PTR [rsp+0x28],xmm7
    b356:	c5 fa 11 5c 24 24    	vmovss DWORD PTR [rsp+0x24],xmm3
    b35c:	c5 7a 11 44 24 20    	vmovss DWORD PTR [rsp+0x20],xmm8
    b362:	c5 fa 11 64 24 1c    	vmovss DWORD PTR [rsp+0x1c],xmm4
    b368:	c5 fa 11 2c 24       	vmovss DWORD PTR [rsp],xmm5
    b36d:	e8 1e 76 ff ff       	call   2990 <sqrtf@plt>
    b372:	c5 fa 10 74 24 2c    	vmovss xmm6,DWORD PTR [rsp+0x2c]
    b378:	c5 fa 10 2c 24       	vmovss xmm5,DWORD PTR [rsp]
    b37d:	c5 fa 10 7c 24 28    	vmovss xmm7,DWORD PTR [rsp+0x28]
    b383:	c5 fa 10 5c 24 24    	vmovss xmm3,DWORD PTR [rsp+0x24]
    b389:	c5 f8 28 c8          	vmovaps xmm1,xmm0
    b38d:	c5 7a 10 44 24 20    	vmovss xmm8,DWORD PTR [rsp+0x20]
    b393:	c5 fa 10 64 24 1c    	vmovss xmm4,DWORD PTR [rsp+0x1c]
    b399:	e9 68 fe ff ff       	jmp    b206 <convert_quaternion+0x1c6>
    b39e:	66 90                	xchg   ax,ax

000000000000b3a0 <convert_quaternion_extension>:
    b3a0:	f3 0f 1e fa          	endbr64 
    b3a4:	48 83 ec 38          	sub    rsp,0x38
    b3a8:	c5 fa 10 54 24 54    	vmovss xmm2,DWORD PTR [rsp+0x54]
    b3ae:	c5 fa 10 4c 24 68    	vmovss xmm1,DWORD PTR [rsp+0x68]
    b3b4:	c5 7a 10 4c 24 40    	vmovss xmm9,DWORD PTR [rsp+0x40]
    b3ba:	c5 fa 10 6c 24 44    	vmovss xmm5,DWORD PTR [rsp+0x44]
    b3c0:	c5 f8 2f d1          	vcomiss xmm2,xmm1
    b3c4:	c5 fa 10 5c 24 48    	vmovss xmm3,DWORD PTR [rsp+0x48]
    b3ca:	c5 7a 10 44 24 50    	vmovss xmm8,DWORD PTR [rsp+0x50]
    b3d0:	c5 fa 10 64 24 58    	vmovss xmm4,DWORD PTR [rsp+0x58]
    b3d6:	c5 fa 10 7c 24 60    	vmovss xmm7,DWORD PTR [rsp+0x60]
    b3dc:	c5 fa 10 74 24 64    	vmovss xmm6,DWORD PTR [rsp+0x64]
    b3e2:	76 54                	jbe    b438 <convert_quaternion_extension+0x98>
    b3e4:	c5 ea 58 05 bc 6d 00 	vaddss xmm0,xmm2,DWORD PTR [rip+0x6dbc]        # 121a8 <_IO_stdin_used+0x1a8>
    b3eb:	00 
    b3ec:	c4 41 18 57 e4       	vxorps xmm12,xmm12,xmm12
    b3f1:	c4 41 7a 5c d9       	vsubss xmm11,xmm0,xmm9
    b3f6:	c5 22 5c e9          	vsubss xmm13,xmm11,xmm1
    b3fa:	c4 41 78 2e e5       	vucomiss xmm12,xmm13
    b3ff:	0f 87 a5 00 00 00    	ja     b4aa <convert_quaternion_extension+0x10a>
    b405:	c4 41 12 51 ed       	vsqrtss xmm13,xmm13,xmm13
    b40a:	c4 41 12 58 fd       	vaddss xmm15,xmm13,xmm13
    b40f:	c5 c2 5c fb          	vsubss xmm7,xmm7,xmm3
    b413:	c5 02 59 15 19 6c 00 	vmulss xmm10,xmm15,DWORD PTR [rip+0x6c19]        # 12034 <_IO_stdin_used+0x34>
    b41a:	00 
    b41b:	c4 41 52 58 c0       	vaddss xmm8,xmm5,xmm8
    b420:	c5 da 58 f6          	vaddss xmm6,xmm4,xmm6
    b424:	c4 41 42 5e f7       	vdivss xmm14,xmm7,xmm15
    b429:	c4 41 3a 5e cf       	vdivss xmm9,xmm8,xmm15
    b42e:	c4 c1 4a 5e cf       	vdivss xmm1,xmm6,xmm15
    b433:	eb 4f                	jmp    b484 <convert_quaternion_extension+0xe4>
    b435:	0f 1f 00             	nop    DWORD PTR [rax]
    b438:	c5 f2 58 05 68 6d 00 	vaddss xmm0,xmm1,DWORD PTR [rip+0x6d68]        # 121a8 <_IO_stdin_used+0x1a8>
    b43f:	00 
    b440:	c4 41 20 57 db       	vxorps xmm11,xmm11,xmm11
    b445:	c4 41 7a 5c d1       	vsubss xmm10,xmm0,xmm9
    b44a:	c5 aa 5c c2          	vsubss xmm0,xmm10,xmm2
    b44e:	c5 78 2e d8          	vucomiss xmm11,xmm0
    b452:	0f 87 aa 00 00 00    	ja     b502 <convert_quaternion_extension+0x162>
    b458:	c5 fa 51 c0          	vsqrtss xmm0,xmm0,xmm0
    b45c:	c5 7a 58 e0          	vaddss xmm12,xmm0,xmm0
    b460:	c4 41 52 5c e8       	vsubss xmm13,xmm5,xmm8
    b465:	c5 9a 59 0d c7 6b 00 	vmulss xmm1,xmm12,DWORD PTR [rip+0x6bc7]        # 12034 <_IO_stdin_used+0x34>
    b46c:	00 
    b46d:	c5 62 58 ff          	vaddss xmm15,xmm3,xmm7
    b471:	c5 da 58 d6          	vaddss xmm2,xmm4,xmm6
    b475:	c4 41 12 5e f4       	vdivss xmm14,xmm13,xmm12
    b47a:	c4 41 02 5e cc       	vdivss xmm9,xmm15,xmm12
    b47f:	c4 41 6a 5e d4       	vdivss xmm10,xmm2,xmm12
    b484:	c5 a8 14 e1          	vunpcklps xmm4,xmm10,xmm1
    b488:	c4 c1 08 14 d9       	vunpcklps xmm3,xmm14,xmm9
    b48d:	c5 e0 16 ec          	vmovlhps xmm5,xmm3,xmm4
    b491:	c5 f8 29 2c 24       	vmovaps XMMWORD PTR [rsp],xmm5
    b496:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
    b49b:	c5 fa 7e 04 24       	vmovq  xmm0,QWORD PTR [rsp]
    b4a0:	48 83 c4 38          	add    rsp,0x38
    b4a4:	c4 e1 f9 6e c8       	vmovq  xmm1,rax
    b4a9:	c3                   	ret    
    b4aa:	c5 78 29 e8          	vmovaps xmm0,xmm13
    b4ae:	c5 fa 11 74 24 2c    	vmovss DWORD PTR [rsp+0x2c],xmm6
    b4b4:	c5 fa 11 7c 24 28    	vmovss DWORD PTR [rsp+0x28],xmm7
    b4ba:	c5 fa 11 64 24 24    	vmovss DWORD PTR [rsp+0x24],xmm4
    b4c0:	c5 7a 11 44 24 20    	vmovss DWORD PTR [rsp+0x20],xmm8
    b4c6:	c5 fa 11 5c 24 1c    	vmovss DWORD PTR [rsp+0x1c],xmm3
    b4cc:	c5 fa 11 2c 24       	vmovss DWORD PTR [rsp],xmm5
    b4d1:	e8 ba 74 ff ff       	call   2990 <sqrtf@plt>
    b4d6:	c5 fa 10 74 24 2c    	vmovss xmm6,DWORD PTR [rsp+0x2c]
    b4dc:	c5 fa 10 2c 24       	vmovss xmm5,DWORD PTR [rsp]
    b4e1:	c5 fa 10 7c 24 28    	vmovss xmm7,DWORD PTR [rsp+0x28]
    b4e7:	c5 fa 10 64 24 24    	vmovss xmm4,DWORD PTR [rsp+0x24]
    b4ed:	c5 78 28 e8          	vmovaps xmm13,xmm0
    b4f1:	c5 7a 10 44 24 20    	vmovss xmm8,DWORD PTR [rsp+0x20]
    b4f7:	c5 fa 10 5c 24 1c    	vmovss xmm3,DWORD PTR [rsp+0x1c]
    b4fd:	e9 08 ff ff ff       	jmp    b40a <convert_quaternion_extension+0x6a>
    b502:	c5 fa 11 74 24 2c    	vmovss DWORD PTR [rsp+0x2c],xmm6
    b508:	c5 fa 11 7c 24 28    	vmovss DWORD PTR [rsp+0x28],xmm7
    b50e:	c5 fa 11 64 24 24    	vmovss DWORD PTR [rsp+0x24],xmm4
    b514:	c5 7a 11 44 24 20    	vmovss DWORD PTR [rsp+0x20],xmm8
    b51a:	c5 fa 11 5c 24 1c    	vmovss DWORD PTR [rsp+0x1c],xmm3
    b520:	c5 fa 11 2c 24       	vmovss DWORD PTR [rsp],xmm5
    b525:	e8 66 74 ff ff       	call   2990 <sqrtf@plt>
    b52a:	c5 fa 10 74 24 2c    	vmovss xmm6,DWORD PTR [rsp+0x2c]
    b530:	c5 fa 10 2c 24       	vmovss xmm5,DWORD PTR [rsp]
    b535:	c5 fa 10 7c 24 28    	vmovss xmm7,DWORD PTR [rsp+0x28]
    b53b:	c5 fa 10 64 24 24    	vmovss xmm4,DWORD PTR [rsp+0x24]
    b541:	c5 7a 10 44 24 20    	vmovss xmm8,DWORD PTR [rsp+0x20]
    b547:	c5 fa 10 5c 24 1c    	vmovss xmm3,DWORD PTR [rsp+0x1c]
    b54d:	e9 0a ff ff ff       	jmp    b45c <convert_quaternion_extension+0xbc>
    b552:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    b559:	00 00 00 00 
    b55d:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000b560 <get_quaternion_conjugate>:
    b560:	f3 0f 1e fa          	endbr64 
    b564:	c4 e1 f9 7e c0       	vmovq  rax,xmm0
    b569:	c4 e1 f9 7e ca       	vmovq  rdx,xmm1
    b56e:	c5 fa 10 1d 8a 6b 00 	vmovss xmm3,DWORD PTR [rip+0x6b8a]        # 12100 <_IO_stdin_used+0x100>
    b575:	00 
    b576:	48 c1 e8 20          	shr    rax,0x20
    b57a:	48 c1 ea 20          	shr    rdx,0x20
    b57e:	c5 f9 7e c1          	vmovd  ecx,xmm0
    b582:	c5 f0 57 d3          	vxorps xmm2,xmm1,xmm3
    b586:	c5 f9 6e e0          	vmovd  xmm4,eax
    b58a:	c5 f9 6e ea          	vmovd  xmm5,edx
    b58e:	c5 79 6e c1          	vmovd  xmm8,ecx
    b592:	c5 d8 57 c3          	vxorps xmm0,xmm4,xmm3
    b596:	c5 d0 57 f3          	vxorps xmm6,xmm5,xmm3
    b59a:	c5 38 14 c8          	vunpcklps xmm9,xmm8,xmm0
    b59e:	c5 e8 14 fe          	vunpcklps xmm7,xmm2,xmm6
    b5a2:	c5 30 16 d7          	vmovlhps xmm10,xmm9,xmm7
    b5a6:	c5 78 29 54 24 e8    	vmovaps XMMWORD PTR [rsp-0x18],xmm10
    b5ac:	48 8b 74 24 f0       	mov    rsi,QWORD PTR [rsp-0x10]
    b5b1:	c5 fa 7e 44 24 e8    	vmovq  xmm0,QWORD PTR [rsp-0x18]
    b5b7:	c4 e1 f9 6e ce       	vmovq  xmm1,rsi
    b5bc:	c3                   	ret    
    b5bd:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000b5c0 <try_move_shape>:
    b5c0:	f3 0f 1e fa          	endbr64 
    b5c4:	83 ee 61             	sub    esi,0x61
    b5c7:	83 fe 19             	cmp    esi,0x19
    b5ca:	77 24                	ja     b5f0 <try_move_shape+0x30>
    b5cc:	48 8d 0d 69 6c 00 00 	lea    rcx,[rip+0x6c69]        # 1223c <_IO_stdin_used+0x23c>
    b5d3:	55                   	push   rbp
    b5d4:	48 89 f8             	mov    rax,rdi
    b5d7:	48 63 14 b1          	movsxd rdx,DWORD PTR [rcx+rsi*4]
    b5db:	48 01 ca             	add    rdx,rcx
    b5de:	3e ff e2             	notrack jmp rdx
    b5e1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    b5e8:	31 c0                	xor    eax,eax
    b5ea:	5d                   	pop    rbp
    b5eb:	c3                   	ret    
    b5ec:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    b5f0:	31 c0                	xor    eax,eax
    b5f2:	c3                   	ret    
    b5f3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    b5f8:	bd 0d 00 00 00       	mov    ebp,0xd
    b5fd:	48 8b b0 28 01 00 00 	mov    rsi,QWORD PTR [rax+0x128]
    b604:	48 8d b8 d8 00 00 00 	lea    rdi,[rax+0xd8]
    b60b:	ff 90 20 01 00 00    	call   QWORD PTR [rax+0x120]
    b611:	89 ee                	mov    esi,ebp
    b613:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    b616:	e8 a5 dd ff ff       	call   93c0 <move_shape>
    b61b:	b8 01 00 00 00       	mov    eax,0x1
    b620:	5d                   	pop    rbp
    b621:	c3                   	ret    
    b622:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    b628:	bd 0e 00 00 00       	mov    ebp,0xe
    b62d:	eb ce                	jmp    b5fd <try_move_shape+0x3d>
    b62f:	90                   	nop
    b630:	bd 0f 00 00 00       	mov    ebp,0xf
    b635:	eb c6                	jmp    b5fd <try_move_shape+0x3d>
    b637:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    b63e:	00 00 
    b640:	bd 0c 00 00 00       	mov    ebp,0xc
    b645:	eb b6                	jmp    b5fd <try_move_shape+0x3d>
    b647:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    b64e:	00 00 
    b650:	bd 10 00 00 00       	mov    ebp,0x10
    b655:	eb a6                	jmp    b5fd <try_move_shape+0x3d>
    b657:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    b65e:	00 00 
    b660:	bd 11 00 00 00       	mov    ebp,0x11
    b665:	eb 96                	jmp    b5fd <try_move_shape+0x3d>
    b667:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    b66e:	00 00 

000000000000b670 <try_rotate_shape>:
    b670:	f3 0f 1e fa          	endbr64 
    b674:	83 ee 62             	sub    esi,0x62
    b677:	83 fe 14             	cmp    esi,0x14
    b67a:	0f 87 90 00 00 00    	ja     b710 <try_rotate_shape+0xa0>
    b680:	48 8d 0d 1d 6c 00 00 	lea    rcx,[rip+0x6c1d]        # 122a4 <_IO_stdin_used+0x2a4>
    b687:	55                   	push   rbp
    b688:	48 89 f8             	mov    rax,rdi
    b68b:	48 63 14 b1          	movsxd rdx,DWORD PTR [rcx+rsi*4]
    b68f:	48 01 ca             	add    rdx,rcx
    b692:	3e ff e2             	notrack jmp rdx
    b695:	0f 1f 00             	nop    DWORD PTR [rax]
    b698:	31 c0                	xor    eax,eax
    b69a:	5d                   	pop    rbp
    b69b:	c3                   	ret    
    b69c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    b6a0:	bd 04 00 00 00       	mov    ebp,0x4
    b6a5:	48 8b b0 28 01 00 00 	mov    rsi,QWORD PTR [rax+0x128]
    b6ac:	48 8d b8 d8 00 00 00 	lea    rdi,[rax+0xd8]
    b6b3:	ff 90 20 01 00 00    	call   QWORD PTR [rax+0x120]
    b6b9:	89 ee                	mov    esi,ebp
    b6bb:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    b6be:	e8 7d dd ff ff       	call   9440 <rotate_shape>
    b6c3:	b8 01 00 00 00       	mov    eax,0x1
    b6c8:	5d                   	pop    rbp
    b6c9:	c3                   	ret    
    b6ca:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    b6d0:	bd 02 00 00 00       	mov    ebp,0x2
    b6d5:	eb ce                	jmp    b6a5 <try_rotate_shape+0x35>
    b6d7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    b6de:	00 00 
    b6e0:	bd 03 00 00 00       	mov    ebp,0x3
    b6e5:	eb be                	jmp    b6a5 <try_rotate_shape+0x35>
    b6e7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    b6ee:	00 00 
    b6f0:	bd 05 00 00 00       	mov    ebp,0x5
    b6f5:	eb ae                	jmp    b6a5 <try_rotate_shape+0x35>
    b6f7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    b6fe:	00 00 
    b700:	bd 07 00 00 00       	mov    ebp,0x7
    b705:	eb 9e                	jmp    b6a5 <try_rotate_shape+0x35>
    b707:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    b70e:	00 00 
    b710:	31 c0                	xor    eax,eax
    b712:	c3                   	ret    
    b713:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    b718:	bd 06 00 00 00       	mov    ebp,0x6
    b71d:	eb 86                	jmp    b6a5 <try_rotate_shape+0x35>
    b71f:	90                   	nop

000000000000b720 <try_update_shape_scale>:
    b720:	f3 0f 1e fa          	endbr64 
    b724:	55                   	push   rbp
    b725:	48 89 f8             	mov    rax,rdi
    b728:	53                   	push   rbx
    b729:	48 83 ec 08          	sub    rsp,0x8
    b72d:	83 fe 6b             	cmp    esi,0x6b
    b730:	74 7e                	je     b7b0 <try_update_shape_scale+0x90>
    b732:	7f 54                	jg     b788 <try_update_shape_scale+0x68>
    b734:	83 fe 69             	cmp    esi,0x69
    b737:	74 67                	je     b7a0 <try_update_shape_scale+0x80>
    b739:	83 fe 6a             	cmp    esi,0x6a
    b73c:	75 79                	jne    b7b7 <try_update_shape_scale+0x97>
    b73e:	bd 09 00 00 00       	mov    ebp,0x9
    b743:	48 8b b0 28 01 00 00 	mov    rsi,QWORD PTR [rax+0x128]
    b74a:	48 8d b8 d8 00 00 00 	lea    rdi,[rax+0xd8]
    b751:	ff 90 20 01 00 00    	call   QWORD PTR [rax+0x120]
    b757:	89 ee                	mov    esi,ebp
    b759:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    b75c:	48 89 c3             	mov    rbx,rax
    b75f:	48 89 d7             	mov    rdi,rdx
    b762:	ff 92 80 00 00 00    	call   QWORD PTR [rdx+0x80]
    b768:	48 8b 0b             	mov    rcx,QWORD PTR [rbx]
    b76b:	89 ee                	mov    esi,ebp
    b76d:	48 89 cf             	mov    rdi,rcx
    b770:	ff 51 78             	call   QWORD PTR [rcx+0x78]
    b773:	41 b8 01 00 00 00    	mov    r8d,0x1
    b779:	48 83 c4 08          	add    rsp,0x8
    b77d:	44 89 c0             	mov    eax,r8d
    b780:	5b                   	pop    rbx
    b781:	5d                   	pop    rbp
    b782:	c3                   	ret    
    b783:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    b788:	45 31 c0             	xor    r8d,r8d
    b78b:	bd 08 00 00 00       	mov    ebp,0x8
    b790:	83 fe 75             	cmp    esi,0x75
    b793:	74 ae                	je     b743 <try_update_shape_scale+0x23>
    b795:	48 83 c4 08          	add    rsp,0x8
    b799:	44 89 c0             	mov    eax,r8d
    b79c:	5b                   	pop    rbx
    b79d:	5d                   	pop    rbp
    b79e:	c3                   	ret    
    b79f:	90                   	nop
    b7a0:	bd 0a 00 00 00       	mov    ebp,0xa
    b7a5:	eb 9c                	jmp    b743 <try_update_shape_scale+0x23>
    b7a7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    b7ae:	00 00 
    b7b0:	bd 0b 00 00 00       	mov    ebp,0xb
    b7b5:	eb 8c                	jmp    b743 <try_update_shape_scale+0x23>
    b7b7:	45 31 c0             	xor    r8d,r8d
    b7ba:	eb bd                	jmp    b779 <try_update_shape_scale+0x59>
    b7bc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000b7c0 <try_change_shape>:
    b7c0:	f3 0f 1e fa          	endbr64 
    b7c4:	55                   	push   rbp
    b7c5:	53                   	push   rbx
    b7c6:	48 89 fb             	mov    rbx,rdi
    b7c9:	48 83 ec 08          	sub    rsp,0x8
    b7cd:	83 fe 2c             	cmp    esi,0x2c
    b7d0:	74 0e                	je     b7e0 <try_change_shape+0x20>
    b7d2:	31 c0                	xor    eax,eax
    b7d4:	83 fe 2e             	cmp    esi,0x2e
    b7d7:	74 57                	je     b830 <try_change_shape+0x70>
    b7d9:	48 83 c4 08          	add    rsp,0x8
    b7dd:	5b                   	pop    rbx
    b7de:	5d                   	pop    rbp
    b7df:	c3                   	ret    
    b7e0:	48 8b 8f 28 01 00 00 	mov    rcx,QWORD PTR [rdi+0x128]
    b7e7:	48 85 c9             	test   rcx,rcx
    b7ea:	74 1c                	je     b808 <try_change_shape+0x48>
    b7ec:	48 83 e9 01          	sub    rcx,0x1
    b7f0:	b8 01 00 00 00       	mov    eax,0x1
    b7f5:	48 89 8f 28 01 00 00 	mov    QWORD PTR [rdi+0x128],rcx
    b7fc:	48 83 c4 08          	add    rsp,0x8
    b800:	5b                   	pop    rbx
    b801:	5d                   	pop    rbp
    b802:	c3                   	ret    
    b803:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    b808:	48 8d bf d8 00 00 00 	lea    rdi,[rdi+0xd8]
    b80f:	e8 fc 15 00 00       	call   ce10 <get_count_in_list>
    b814:	48 83 e8 01          	sub    rax,0x1
    b818:	48 89 83 28 01 00 00 	mov    QWORD PTR [rbx+0x128],rax
    b81f:	b8 01 00 00 00       	mov    eax,0x1
    b824:	eb b3                	jmp    b7d9 <try_change_shape+0x19>
    b826:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    b82d:	00 00 00 
    b830:	48 8b 87 28 01 00 00 	mov    rax,QWORD PTR [rdi+0x128]
    b837:	48 8d bf d8 00 00 00 	lea    rdi,[rdi+0xd8]
    b83e:	48 8d 68 01          	lea    rbp,[rax+0x1]
    b842:	e8 c9 15 00 00       	call   ce10 <get_count_in_list>
    b847:	31 d2                	xor    edx,edx
    b849:	49 89 c0             	mov    r8,rax
    b84c:	48 89 e8             	mov    rax,rbp
    b84f:	49 f7 f0             	div    r8
    b852:	b8 01 00 00 00       	mov    eax,0x1
    b857:	48 89 93 28 01 00 00 	mov    QWORD PTR [rbx+0x128],rdx
    b85e:	e9 76 ff ff ff       	jmp    b7d9 <try_change_shape+0x19>
    b863:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    b86a:	00 00 00 00 
    b86e:	66 90                	xchg   ax,ax

000000000000b870 <try_change_texture>:
    b870:	f3 0f 1e fa          	endbr64 
    b874:	8d 56 cf             	lea    edx,[rsi-0x31]
    b877:	83 fa 02             	cmp    edx,0x2
    b87a:	77 2c                	ja     b8a8 <try_change_texture+0x38>
    b87c:	48 89 f8             	mov    rax,rdi
    b87f:	53                   	push   rbx
    b880:	48 8d bf d8 00 00 00 	lea    rdi,[rdi+0xd8]
    b887:	89 f3                	mov    ebx,esi
    b889:	48 8b 77 50          	mov    rsi,QWORD PTR [rdi+0x50]
    b88d:	ff 90 20 01 00 00    	call   QWORD PTR [rax+0x120]
    b893:	8d 73 f5             	lea    esi,[rbx-0xb]
    b896:	48 8b 38             	mov    rdi,QWORD PTR [rax]
    b899:	e8 62 df ff ff       	call   9800 <set_texcture>
    b89e:	b8 01 00 00 00       	mov    eax,0x1
    b8a3:	5b                   	pop    rbx
    b8a4:	c3                   	ret    
    b8a5:	0f 1f 00             	nop    DWORD PTR [rax]
    b8a8:	31 c0                	xor    eax,eax
    b8aa:	c3                   	ret    
    b8ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000b8b0 <try_move_camera>:
    b8b0:	f3 0f 1e fa          	endbr64 
    b8b4:	81 fe 54 ff 00 00    	cmp    esi,0xff54
    b8ba:	0f 84 80 00 00 00    	je     b940 <try_move_camera+0x90>
    b8c0:	7f 2e                	jg     b8f0 <try_move_camera+0x40>
    b8c2:	81 fe 52 ff 00 00    	cmp    esi,0xff52
    b8c8:	74 66                	je     b930 <try_move_camera+0x80>
    b8ca:	41 b8 1d 00 00 00    	mov    r8d,0x1d
    b8d0:	81 fe 53 ff 00 00    	cmp    esi,0xff53
    b8d6:	75 38                	jne    b910 <try_move_camera+0x60>
    b8d8:	48 83 ec 08          	sub    rsp,0x8
    b8dc:	44 89 c6             	mov    esi,r8d
    b8df:	e8 9c 78 ff ff       	call   3180 <move_camera>
    b8e4:	b8 01 00 00 00       	mov    eax,0x1
    b8e9:	48 83 c4 08          	add    rsp,0x8
    b8ed:	c3                   	ret    
    b8ee:	66 90                	xchg   ax,ax
    b8f0:	81 fe e2 ff 00 00    	cmp    esi,0xffe2
    b8f6:	74 30                	je     b928 <try_move_camera+0x78>
    b8f8:	81 fe e4 ff 00 00    	cmp    esi,0xffe4
    b8fe:	75 1e                	jne    b91e <try_move_camera+0x6e>
    b900:	41 b8 1b 00 00 00    	mov    r8d,0x1b
    b906:	eb d0                	jmp    b8d8 <try_move_camera+0x28>
    b908:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    b90f:	00 
    b910:	41 b8 1c 00 00 00    	mov    r8d,0x1c
    b916:	81 fe 51 ff 00 00    	cmp    esi,0xff51
    b91c:	74 ba                	je     b8d8 <try_move_camera+0x28>
    b91e:	31 c0                	xor    eax,eax
    b920:	c3                   	ret    
    b921:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    b928:	41 b8 1a 00 00 00    	mov    r8d,0x1a
    b92e:	eb a8                	jmp    b8d8 <try_move_camera+0x28>
    b930:	41 b8 1e 00 00 00    	mov    r8d,0x1e
    b936:	eb a0                	jmp    b8d8 <try_move_camera+0x28>
    b938:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    b93f:	00 
    b940:	41 b8 1f 00 00 00    	mov    r8d,0x1f
    b946:	eb 90                	jmp    b8d8 <try_move_camera+0x28>
    b948:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    b94f:	00 

000000000000b950 <try_rotate_camera>:
    b950:	f3 0f 1e fa          	endbr64 
    b954:	81 ee 96 ff 00 00    	sub    esi,0xff96
    b95a:	83 fe 07             	cmp    esi,0x7
    b95d:	77 31                	ja     b990 <try_rotate_camera+0x40>
    b95f:	48 8d 15 92 69 00 00 	lea    rdx,[rip+0x6992]        # 122f8 <_IO_stdin_used+0x2f8>
    b966:	48 63 04 b2          	movsxd rax,DWORD PTR [rdx+rsi*4]
    b96a:	48 01 d0             	add    rax,rdx
    b96d:	3e ff e0             	notrack jmp rax
    b970:	be 21 00 00 00       	mov    esi,0x21
    b975:	48 83 ec 08          	sub    rsp,0x8
    b979:	e8 82 78 ff ff       	call   3200 <rotate_camera>
    b97e:	b8 01 00 00 00       	mov    eax,0x1
    b983:	48 83 c4 08          	add    rsp,0x8
    b987:	c3                   	ret    
    b988:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    b98f:	00 
    b990:	31 c0                	xor    eax,eax
    b992:	c3                   	ret    
    b993:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    b998:	be 25 00 00 00       	mov    esi,0x25
    b99d:	eb d6                	jmp    b975 <try_rotate_camera+0x25>
    b99f:	90                   	nop
    b9a0:	be 20 00 00 00       	mov    esi,0x20
    b9a5:	eb ce                	jmp    b975 <try_rotate_camera+0x25>
    b9a7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    b9ae:	00 00 
    b9b0:	be 23 00 00 00       	mov    esi,0x23
    b9b5:	eb be                	jmp    b975 <try_rotate_camera+0x25>
    b9b7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    b9be:	00 00 
    b9c0:	be 22 00 00 00       	mov    esi,0x22
    b9c5:	eb ae                	jmp    b975 <try_rotate_camera+0x25>
    b9c7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    b9ce:	00 00 
    b9d0:	be 24 00 00 00       	mov    esi,0x24
    b9d5:	eb 9e                	jmp    b975 <try_rotate_camera+0x25>
    b9d7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    b9de:	00 00 

000000000000b9e0 <try_move_light>:
    b9e0:	f3 0f 1e fa          	endbr64 
    b9e4:	55                   	push   rbp
    b9e5:	81 fe 56 ff 00 00    	cmp    esi,0xff56
    b9eb:	0f 84 8f 00 00 00    	je     ba80 <try_move_light+0xa0>
    b9f1:	7f 4d                	jg     ba40 <try_move_light+0x60>
    b9f3:	81 fe 08 ff 00 00    	cmp    esi,0xff08
    b9f9:	74 75                	je     ba70 <try_move_light+0x90>
    b9fb:	bd 16 00 00 00       	mov    ebp,0x16
    ba00:	81 fe 50 ff 00 00    	cmp    esi,0xff50
    ba06:	75 28                	jne    ba30 <try_move_light+0x50>
    ba08:	48 8b b7 30 01 00 00 	mov    rsi,QWORD PTR [rdi+0x130]
    ba0f:	48 81 c7 88 00 00 00 	add    rdi,0x88
    ba16:	e8 c5 13 00 00       	call   cde0 <get_element_or_null_in_list>
    ba1b:	89 ee                	mov    esi,ebp
    ba1d:	48 89 c7             	mov    rdi,rax
    ba20:	e8 2b f3 ff ff       	call   ad50 <move_light>
    ba25:	b8 01 00 00 00       	mov    eax,0x1
    ba2a:	5d                   	pop    rbp
    ba2b:	c3                   	ret    
    ba2c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    ba30:	bd 13 00 00 00       	mov    ebp,0x13
    ba35:	83 fe 5c             	cmp    esi,0x5c
    ba38:	74 ce                	je     ba08 <try_move_light+0x28>
    ba3a:	31 c0                	xor    eax,eax
    ba3c:	5d                   	pop    rbp
    ba3d:	c3                   	ret    
    ba3e:	66 90                	xchg   ax,ax
    ba40:	81 fe 57 ff 00 00    	cmp    esi,0xff57
    ba46:	74 18                	je     ba60 <try_move_light+0x80>
    ba48:	81 fe ff ff 00 00    	cmp    esi,0xffff
    ba4e:	75 ea                	jne    ba3a <try_move_light+0x5a>
    ba50:	bd 14 00 00 00       	mov    ebp,0x14
    ba55:	eb b1                	jmp    ba08 <try_move_light+0x28>
    ba57:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    ba5e:	00 00 
    ba60:	bd 17 00 00 00       	mov    ebp,0x17
    ba65:	eb a1                	jmp    ba08 <try_move_light+0x28>
    ba67:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    ba6e:	00 00 
    ba70:	bd 12 00 00 00       	mov    ebp,0x12
    ba75:	eb 91                	jmp    ba08 <try_move_light+0x28>
    ba77:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    ba7e:	00 00 
    ba80:	bd 15 00 00 00       	mov    ebp,0x15
    ba85:	eb 81                	jmp    ba08 <try_move_light+0x28>
    ba87:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    ba8e:	00 00 

000000000000ba90 <try_change_light>:
    ba90:	f3 0f 1e fa          	endbr64 
    ba94:	55                   	push   rbp
    ba95:	53                   	push   rbx
    ba96:	48 89 fb             	mov    rbx,rdi
    ba99:	48 83 ec 08          	sub    rsp,0x8
    ba9d:	83 fe 3d             	cmp    esi,0x3d
    baa0:	74 0e                	je     bab0 <try_change_light+0x20>
    baa2:	31 c0                	xor    eax,eax
    baa4:	83 fe 2d             	cmp    esi,0x2d
    baa7:	74 57                	je     bb00 <try_change_light+0x70>
    baa9:	48 83 c4 08          	add    rsp,0x8
    baad:	5b                   	pop    rbx
    baae:	5d                   	pop    rbp
    baaf:	c3                   	ret    
    bab0:	48 8b 8f 30 01 00 00 	mov    rcx,QWORD PTR [rdi+0x130]
    bab7:	48 85 c9             	test   rcx,rcx
    baba:	74 1c                	je     bad8 <try_change_light+0x48>
    babc:	48 83 e9 01          	sub    rcx,0x1
    bac0:	b8 01 00 00 00       	mov    eax,0x1
    bac5:	48 89 8f 30 01 00 00 	mov    QWORD PTR [rdi+0x130],rcx
    bacc:	48 83 c4 08          	add    rsp,0x8
    bad0:	5b                   	pop    rbx
    bad1:	5d                   	pop    rbp
    bad2:	c3                   	ret    
    bad3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    bad8:	48 8d bf 88 00 00 00 	lea    rdi,[rdi+0x88]
    badf:	e8 2c 13 00 00       	call   ce10 <get_count_in_list>
    bae4:	48 83 e8 01          	sub    rax,0x1
    bae8:	48 89 83 30 01 00 00 	mov    QWORD PTR [rbx+0x130],rax
    baef:	b8 01 00 00 00       	mov    eax,0x1
    baf4:	eb b3                	jmp    baa9 <try_change_light+0x19>
    baf6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    bafd:	00 00 00 
    bb00:	48 8b 87 30 01 00 00 	mov    rax,QWORD PTR [rdi+0x130]
    bb07:	48 8d bf 88 00 00 00 	lea    rdi,[rdi+0x88]
    bb0e:	48 8d 68 01          	lea    rbp,[rax+0x1]
    bb12:	e8 f9 12 00 00       	call   ce10 <get_count_in_list>
    bb17:	31 d2                	xor    edx,edx
    bb19:	49 89 c0             	mov    r8,rax
    bb1c:	48 89 e8             	mov    rax,rbp
    bb1f:	49 f7 f0             	div    r8
    bb22:	b8 01 00 00 00       	mov    eax,0x1
    bb27:	48 89 93 30 01 00 00 	mov    QWORD PTR [rbx+0x130],rdx
    bb2e:	e9 76 ff ff ff       	jmp    baa9 <try_change_light+0x19>
    bb33:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    bb3a:	00 00 00 
    bb3d:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000bb40 <ft_strlen>:
    bb40:	f3 0f 1e fa          	endbr64 
    bb44:	31 c0                	xor    eax,eax
    bb46:	80 3f 00             	cmp    BYTE PTR [rdi],0x0
    bb49:	74 15                	je     bb60 <ft_strlen+0x20>
    bb4b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    bb50:	48 83 c0 01          	add    rax,0x1
    bb54:	80 3c 07 00          	cmp    BYTE PTR [rdi+rax*1],0x0
    bb58:	75 f6                	jne    bb50 <ft_strlen+0x10>
    bb5a:	c3                   	ret    
    bb5b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    bb60:	c3                   	ret    
    bb61:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    bb68:	00 00 00 
    bb6b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000bb70 <ft_strcmp>:
    bb70:	f3 0f 1e fa          	endbr64 
    bb74:	0f b6 17             	movzx  edx,BYTE PTR [rdi]
    bb77:	0f be 0e             	movsx  ecx,BYTE PTR [rsi]
    bb7a:	b8 01 00 00 00       	mov    eax,0x1
    bb7f:	38 d1                	cmp    cl,dl
    bb81:	74 16                	je     bb99 <ft_strcmp+0x29>
    bb83:	eb 23                	jmp    bba8 <ft_strcmp+0x38>
    bb85:	0f 1f 00             	nop    DWORD PTR [rax]
    bb88:	0f b6 14 07          	movzx  edx,BYTE PTR [rdi+rax*1]
    bb8c:	48 83 c0 01          	add    rax,0x1
    bb90:	0f be 4c 06 ff       	movsx  ecx,BYTE PTR [rsi+rax*1-0x1]
    bb95:	38 ca                	cmp    dl,cl
    bb97:	75 0f                	jne    bba8 <ft_strcmp+0x38>
    bb99:	84 d2                	test   dl,dl
    bb9b:	75 eb                	jne    bb88 <ft_strcmp+0x18>
    bb9d:	31 c0                	xor    eax,eax
    bb9f:	29 c8                	sub    eax,ecx
    bba1:	c3                   	ret    
    bba2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    bba8:	0f be c2             	movsx  eax,dl
    bbab:	29 c8                	sub    eax,ecx
    bbad:	c3                   	ret    
    bbae:	66 90                	xchg   ax,ax

000000000000bbb0 <ft_strncmp>:
    bbb0:	f3 0f 1e fa          	endbr64 
    bbb4:	49 89 f9             	mov    r9,rdi
    bbb7:	31 c0                	xor    eax,eax
    bbb9:	48 89 d7             	mov    rdi,rdx
    bbbc:	48 85 d2             	test   rdx,rdx
    bbbf:	0f 84 ed 01 00 00    	je     bdb2 <ft_strncmp+0x202>
    bbc5:	41 0f b6 01          	movzx  eax,BYTE PTR [r9]
    bbc9:	0f b6 16             	movzx  edx,BYTE PTR [rsi]
    bbcc:	b9 01 00 00 00       	mov    ecx,0x1
    bbd1:	38 c2                	cmp    dl,al
    bbd3:	0f 85 d7 01 00 00    	jne    bdb0 <ft_strncmp+0x200>
    bbd9:	4c 8d 47 ff          	lea    r8,[rdi-0x1]
    bbdd:	41 83 e0 07          	and    r8d,0x7
    bbe1:	0f 84 00 01 00 00    	je     bce7 <ft_strncmp+0x137>
    bbe7:	84 d2                	test   dl,dl
    bbe9:	0f 84 c9 01 00 00    	je     bdb8 <ft_strncmp+0x208>
    bbef:	b9 02 00 00 00       	mov    ecx,0x2
    bbf4:	41 0f b6 44 09 ff    	movzx  eax,BYTE PTR [r9+rcx*1-0x1]
    bbfa:	0f b6 54 0e ff       	movzx  edx,BYTE PTR [rsi+rcx*1-0x1]
    bbff:	38 d0                	cmp    al,dl
    bc01:	0f 85 a9 01 00 00    	jne    bdb0 <ft_strncmp+0x200>
    bc07:	49 83 f8 01          	cmp    r8,0x1
    bc0b:	0f 84 d6 00 00 00    	je     bce7 <ft_strncmp+0x137>
    bc11:	49 83 f8 02          	cmp    r8,0x2
    bc15:	0f 84 ad 00 00 00    	je     bcc8 <ft_strncmp+0x118>
    bc1b:	49 83 f8 03          	cmp    r8,0x3
    bc1f:	0f 84 86 00 00 00    	je     bcab <ft_strncmp+0xfb>
    bc25:	49 83 f8 04          	cmp    r8,0x4
    bc29:	74 63                	je     bc8e <ft_strncmp+0xde>
    bc2b:	49 83 f8 05          	cmp    r8,0x5
    bc2f:	74 40                	je     bc71 <ft_strncmp+0xc1>
    bc31:	49 83 f8 06          	cmp    r8,0x6
    bc35:	74 1d                	je     bc54 <ft_strncmp+0xa4>
    bc37:	84 c0                	test   al,al
    bc39:	0f 84 79 01 00 00    	je     bdb8 <ft_strncmp+0x208>
    bc3f:	41 0f b6 04 09       	movzx  eax,BYTE PTR [r9+rcx*1]
    bc44:	0f b6 14 0e          	movzx  edx,BYTE PTR [rsi+rcx*1]
    bc48:	48 83 c1 01          	add    rcx,0x1
    bc4c:	38 d0                	cmp    al,dl
    bc4e:	0f 85 5c 01 00 00    	jne    bdb0 <ft_strncmp+0x200>
    bc54:	84 c0                	test   al,al
    bc56:	0f 84 5c 01 00 00    	je     bdb8 <ft_strncmp+0x208>
    bc5c:	41 0f b6 04 09       	movzx  eax,BYTE PTR [r9+rcx*1]
    bc61:	0f b6 14 0e          	movzx  edx,BYTE PTR [rsi+rcx*1]
    bc65:	48 83 c1 01          	add    rcx,0x1
    bc69:	38 d0                	cmp    al,dl
    bc6b:	0f 85 3f 01 00 00    	jne    bdb0 <ft_strncmp+0x200>
    bc71:	84 c0                	test   al,al
    bc73:	0f 84 3f 01 00 00    	je     bdb8 <ft_strncmp+0x208>
    bc79:	41 0f b6 04 09       	movzx  eax,BYTE PTR [r9+rcx*1]
    bc7e:	0f b6 14 0e          	movzx  edx,BYTE PTR [rsi+rcx*1]
    bc82:	48 83 c1 01          	add    rcx,0x1
    bc86:	38 d0                	cmp    al,dl
    bc88:	0f 85 22 01 00 00    	jne    bdb0 <ft_strncmp+0x200>
    bc8e:	84 c0                	test   al,al
    bc90:	0f 84 22 01 00 00    	je     bdb8 <ft_strncmp+0x208>
    bc96:	41 0f b6 04 09       	movzx  eax,BYTE PTR [r9+rcx*1]
    bc9b:	0f b6 14 0e          	movzx  edx,BYTE PTR [rsi+rcx*1]
    bc9f:	48 83 c1 01          	add    rcx,0x1
    bca3:	38 d0                	cmp    al,dl
    bca5:	0f 85 05 01 00 00    	jne    bdb0 <ft_strncmp+0x200>
    bcab:	84 c0                	test   al,al
    bcad:	0f 84 05 01 00 00    	je     bdb8 <ft_strncmp+0x208>
    bcb3:	41 0f b6 04 09       	movzx  eax,BYTE PTR [r9+rcx*1]
    bcb8:	0f b6 14 0e          	movzx  edx,BYTE PTR [rsi+rcx*1]
    bcbc:	48 83 c1 01          	add    rcx,0x1
    bcc0:	38 d0                	cmp    al,dl
    bcc2:	0f 85 e8 00 00 00    	jne    bdb0 <ft_strncmp+0x200>
    bcc8:	84 c0                	test   al,al
    bcca:	0f 84 e8 00 00 00    	je     bdb8 <ft_strncmp+0x208>
    bcd0:	48 83 c1 01          	add    rcx,0x1
    bcd4:	41 0f b6 44 09 ff    	movzx  eax,BYTE PTR [r9+rcx*1-0x1]
    bcda:	0f b6 54 0e ff       	movzx  edx,BYTE PTR [rsi+rcx*1-0x1]
    bcdf:	38 d0                	cmp    al,dl
    bce1:	0f 85 c9 00 00 00    	jne    bdb0 <ft_strncmp+0x200>
    bce7:	84 c0                	test   al,al
    bce9:	0f 84 c9 00 00 00    	je     bdb8 <ft_strncmp+0x208>
    bcef:	48 39 cf             	cmp    rdi,rcx
    bcf2:	0f 84 b8 00 00 00    	je     bdb0 <ft_strncmp+0x200>
    bcf8:	4c 8d 51 01          	lea    r10,[rcx+0x1]
    bcfc:	43 0f b6 44 11 ff    	movzx  eax,BYTE PTR [r9+r10*1-0x1]
    bd02:	42 0f b6 54 16 ff    	movzx  edx,BYTE PTR [rsi+r10*1-0x1]
    bd08:	38 d0                	cmp    al,dl
    bd0a:	0f 85 a0 00 00 00    	jne    bdb0 <ft_strncmp+0x200>
    bd10:	84 d2                	test   dl,dl
    bd12:	0f 84 a0 00 00 00    	je     bdb8 <ft_strncmp+0x208>
    bd18:	41 0f b6 44 09 01    	movzx  eax,BYTE PTR [r9+rcx*1+0x1]
    bd1e:	0f b6 54 0e 01       	movzx  edx,BYTE PTR [rsi+rcx*1+0x1]
    bd23:	38 d0                	cmp    al,dl
    bd25:	0f 85 85 00 00 00    	jne    bdb0 <ft_strncmp+0x200>
    bd2b:	84 d2                	test   dl,dl
    bd2d:	0f 84 85 00 00 00    	je     bdb8 <ft_strncmp+0x208>
    bd33:	41 0f b6 44 09 02    	movzx  eax,BYTE PTR [r9+rcx*1+0x2]
    bd39:	0f b6 54 0e 02       	movzx  edx,BYTE PTR [rsi+rcx*1+0x2]
    bd3e:	38 d0                	cmp    al,dl
    bd40:	75 6e                	jne    bdb0 <ft_strncmp+0x200>
    bd42:	84 d2                	test   dl,dl
    bd44:	74 72                	je     bdb8 <ft_strncmp+0x208>
    bd46:	41 0f b6 44 09 03    	movzx  eax,BYTE PTR [r9+rcx*1+0x3]
    bd4c:	0f b6 54 0e 03       	movzx  edx,BYTE PTR [rsi+rcx*1+0x3]
    bd51:	38 d0                	cmp    al,dl
    bd53:	75 5b                	jne    bdb0 <ft_strncmp+0x200>
    bd55:	84 d2                	test   dl,dl
    bd57:	74 5f                	je     bdb8 <ft_strncmp+0x208>
    bd59:	43 0f b6 44 11 03    	movzx  eax,BYTE PTR [r9+r10*1+0x3]
    bd5f:	42 0f b6 54 16 03    	movzx  edx,BYTE PTR [rsi+r10*1+0x3]
    bd65:	38 d0                	cmp    al,dl
    bd67:	75 47                	jne    bdb0 <ft_strncmp+0x200>
    bd69:	84 c0                	test   al,al
    bd6b:	74 4b                	je     bdb8 <ft_strncmp+0x208>
    bd6d:	43 0f b6 44 11 04    	movzx  eax,BYTE PTR [r9+r10*1+0x4]
    bd73:	42 0f b6 54 16 04    	movzx  edx,BYTE PTR [rsi+r10*1+0x4]
    bd79:	38 d0                	cmp    al,dl
    bd7b:	75 33                	jne    bdb0 <ft_strncmp+0x200>
    bd7d:	84 c0                	test   al,al
    bd7f:	74 37                	je     bdb8 <ft_strncmp+0x208>
    bd81:	43 0f b6 44 11 05    	movzx  eax,BYTE PTR [r9+r10*1+0x5]
    bd87:	42 0f b6 54 16 05    	movzx  edx,BYTE PTR [rsi+r10*1+0x5]
    bd8d:	38 d0                	cmp    al,dl
    bd8f:	75 1f                	jne    bdb0 <ft_strncmp+0x200>
    bd91:	84 c0                	test   al,al
    bd93:	74 23                	je     bdb8 <ft_strncmp+0x208>
    bd95:	49 8d 4a 07          	lea    rcx,[r10+0x7]
    bd99:	41 0f b6 44 09 ff    	movzx  eax,BYTE PTR [r9+rcx*1-0x1]
    bd9f:	0f b6 54 0e ff       	movzx  edx,BYTE PTR [rsi+rcx*1-0x1]
    bda4:	38 d0                	cmp    al,dl
    bda6:	0f 84 3b ff ff ff    	je     bce7 <ft_strncmp+0x137>
    bdac:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    bdb0:	29 d0                	sub    eax,edx
    bdb2:	c3                   	ret    
    bdb3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    bdb8:	31 c0                	xor    eax,eax
    bdba:	29 d0                	sub    eax,edx
    bdbc:	eb f4                	jmp    bdb2 <ft_strncmp+0x202>
    bdbe:	66 90                	xchg   ax,ax

000000000000bdc0 <ft_atoi>:
    bdc0:	f3 0f 1e fa          	endbr64 
    bdc4:	eb 0e                	jmp    bdd4 <ft_atoi+0x14>
    bdc6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    bdcd:	00 00 00 
    bdd0:	48 83 c7 01          	add    rdi,0x1
    bdd4:	0f b6 07             	movzx  eax,BYTE PTR [rdi]
    bdd7:	8d 50 f7             	lea    edx,[rax-0x9]
    bdda:	80 fa 04             	cmp    dl,0x4
    bddd:	76 f1                	jbe    bdd0 <ft_atoi+0x10>
    bddf:	3c 20                	cmp    al,0x20
    bde1:	74 ed                	je     bdd0 <ft_atoi+0x10>
    bde3:	3c 2b                	cmp    al,0x2b
    bde5:	74 69                	je     be50 <ft_atoi+0x90>
    bde7:	3c 2d                	cmp    al,0x2d
    bde9:	74 45                	je     be30 <ft_atoi+0x70>
    bdeb:	8d 48 d0             	lea    ecx,[rax-0x30]
    bdee:	80 f9 09             	cmp    cl,0x9
    bdf1:	77 54                	ja     be47 <ft_atoi+0x87>
    bdf3:	be 01 00 00 00       	mov    esi,0x1
    bdf8:	45 31 db             	xor    r11d,r11d
    bdfb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    be00:	83 e8 30             	sub    eax,0x30
    be03:	4f 8d 14 9b          	lea    r10,[r11+r11*4]
    be07:	48 83 c7 01          	add    rdi,0x1
    be0b:	48 0f be c0          	movsx  rax,al
    be0f:	4e 8d 1c 50          	lea    r11,[rax+r10*2]
    be13:	0f b6 07             	movzx  eax,BYTE PTR [rdi]
    be16:	8d 50 d0             	lea    edx,[rax-0x30]
    be19:	80 fa 09             	cmp    dl,0x9
    be1c:	76 e2                	jbe    be00 <ft_atoi+0x40>
    be1e:	4c 89 d8             	mov    rax,r11
    be21:	48 f7 d8             	neg    rax
    be24:	83 fe ff             	cmp    esi,0xffffffff
    be27:	41 0f 45 c3          	cmovne eax,r11d
    be2b:	c3                   	ret    
    be2c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    be30:	0f b6 47 01          	movzx  eax,BYTE PTR [rdi+0x1]
    be34:	be ff ff ff ff       	mov    esi,0xffffffff
    be39:	48 83 c7 01          	add    rdi,0x1
    be3d:	44 8d 40 d0          	lea    r8d,[rax-0x30]
    be41:	41 80 f8 09          	cmp    r8b,0x9
    be45:	76 b1                	jbe    bdf8 <ft_atoi+0x38>
    be47:	31 c0                	xor    eax,eax
    be49:	c3                   	ret    
    be4a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    be50:	0f b6 47 01          	movzx  eax,BYTE PTR [rdi+0x1]
    be54:	be 01 00 00 00       	mov    esi,0x1
    be59:	48 83 c7 01          	add    rdi,0x1
    be5d:	44 8d 48 d0          	lea    r9d,[rax-0x30]
    be61:	41 80 f9 09          	cmp    r9b,0x9
    be65:	76 91                	jbe    bdf8 <ft_atoi+0x38>
    be67:	eb de                	jmp    be47 <ft_atoi+0x87>
    be69:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

000000000000be70 <ft_atol>:
    be70:	f3 0f 1e fa          	endbr64 
    be74:	eb 0e                	jmp    be84 <ft_atol+0x14>
    be76:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    be7d:	00 00 00 
    be80:	48 83 c7 01          	add    rdi,0x1
    be84:	0f b6 07             	movzx  eax,BYTE PTR [rdi]
    be87:	8d 50 f7             	lea    edx,[rax-0x9]
    be8a:	80 fa 04             	cmp    dl,0x4
    be8d:	76 f1                	jbe    be80 <ft_atol+0x10>
    be8f:	3c 20                	cmp    al,0x20
    be91:	74 ed                	je     be80 <ft_atol+0x10>
    be93:	3c 2b                	cmp    al,0x2b
    be95:	74 69                	je     bf00 <ft_atol+0x90>
    be97:	3c 2d                	cmp    al,0x2d
    be99:	74 45                	je     bee0 <ft_atol+0x70>
    be9b:	8d 48 d0             	lea    ecx,[rax-0x30]
    be9e:	80 f9 09             	cmp    cl,0x9
    bea1:	77 54                	ja     bef7 <ft_atol+0x87>
    bea3:	be 01 00 00 00       	mov    esi,0x1
    bea8:	45 31 db             	xor    r11d,r11d
    beab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    beb0:	83 e8 30             	sub    eax,0x30
    beb3:	4f 8d 14 9b          	lea    r10,[r11+r11*4]
    beb7:	48 83 c7 01          	add    rdi,0x1
    bebb:	48 0f be c0          	movsx  rax,al
    bebf:	4e 8d 1c 50          	lea    r11,[rax+r10*2]
    bec3:	0f b6 07             	movzx  eax,BYTE PTR [rdi]
    bec6:	8d 50 d0             	lea    edx,[rax-0x30]
    bec9:	80 fa 09             	cmp    dl,0x9
    becc:	76 e2                	jbe    beb0 <ft_atol+0x40>
    bece:	4c 89 d8             	mov    rax,r11
    bed1:	48 f7 d8             	neg    rax
    bed4:	83 fe ff             	cmp    esi,0xffffffff
    bed7:	49 0f 45 c3          	cmovne rax,r11
    bedb:	c3                   	ret    
    bedc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    bee0:	0f b6 47 01          	movzx  eax,BYTE PTR [rdi+0x1]
    bee4:	be ff ff ff ff       	mov    esi,0xffffffff
    bee9:	48 83 c7 01          	add    rdi,0x1
    beed:	44 8d 40 d0          	lea    r8d,[rax-0x30]
    bef1:	41 80 f8 09          	cmp    r8b,0x9
    bef5:	76 b1                	jbe    bea8 <ft_atol+0x38>
    bef7:	31 c0                	xor    eax,eax
    bef9:	c3                   	ret    
    befa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    bf00:	0f b6 47 01          	movzx  eax,BYTE PTR [rdi+0x1]
    bf04:	be 01 00 00 00       	mov    esi,0x1
    bf09:	48 83 c7 01          	add    rdi,0x1
    bf0d:	44 8d 48 d0          	lea    r9d,[rax-0x30]
    bf11:	41 80 f9 09          	cmp    r9b,0x9
    bf15:	76 91                	jbe    bea8 <ft_atol+0x38>
    bf17:	eb de                	jmp    bef7 <ft_atol+0x87>
    bf19:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

000000000000bf20 <try_atoi>:
    bf20:	f3 0f 1e fa          	endbr64 
    bf24:	41 54                	push   r12
    bf26:	49 89 f4             	mov    r12,rsi
    bf29:	55                   	push   rbp
    bf2a:	53                   	push   rbx
    bf2b:	0f b6 2f             	movzx  ebp,BYTE PTR [rdi]
    bf2e:	48 89 fb             	mov    rbx,rdi
    bf31:	c7 06 00 00 00 00    	mov    DWORD PTR [rsi],0x0
    bf37:	0f b6 07             	movzx  eax,BYTE PTR [rdi]
    bf3a:	8d 50 d5             	lea    edx,[rax-0x2b]
    bf3d:	81 e2 fd 00 00 00    	and    edx,0xfd
    bf43:	75 08                	jne    bf4d <try_atoi+0x2d>
    bf45:	0f b6 47 01          	movzx  eax,BYTE PTR [rdi+0x1]
    bf49:	48 83 c3 01          	add    rbx,0x1
    bf4d:	3c 30                	cmp    al,0x30
    bf4f:	75 10                	jne    bf61 <try_atoi+0x41>
    bf51:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    bf58:	48 83 c3 01          	add    rbx,0x1
    bf5c:	80 3b 30             	cmp    BYTE PTR [rbx],0x30
    bf5f:	74 f7                	je     bf58 <try_atoi+0x38>
    bf61:	48 89 df             	mov    rdi,rbx
    bf64:	e8 d7 fb ff ff       	call   bb40 <ft_strlen>
    bf69:	49 89 c0             	mov    r8,rax
    bf6c:	31 c0                	xor    eax,eax
    bf6e:	49 83 f8 0b          	cmp    r8,0xb
    bf72:	76 0c                	jbe    bf80 <try_atoi+0x60>
    bf74:	5b                   	pop    rbx
    bf75:	5d                   	pop    rbp
    bf76:	41 5c                	pop    r12
    bf78:	c3                   	ret    
    bf79:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    bf80:	0f b6 0b             	movzx  ecx,BYTE PTR [rbx]
    bf83:	8d 71 f7             	lea    esi,[rcx-0x9]
    bf86:	89 cf                	mov    edi,ecx
    bf88:	40 80 fe 04          	cmp    sil,0x4
    bf8c:	76 09                	jbe    bf97 <try_atoi+0x77>
    bf8e:	80 f9 20             	cmp    cl,0x20
    bf91:	0f 85 f6 00 00 00    	jne    c08d <try_atoi+0x16d>
    bf97:	49 89 d9             	mov    r9,rbx
    bf9a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    bfa0:	41 0f b6 41 01       	movzx  eax,BYTE PTR [r9+0x1]
    bfa5:	49 83 c1 01          	add    r9,0x1
    bfa9:	44 8d 50 f7          	lea    r10d,[rax-0x9]
    bfad:	89 c7                	mov    edi,eax
    bfaf:	41 80 fa 04          	cmp    r10b,0x4
    bfb3:	76 eb                	jbe    bfa0 <try_atoi+0x80>
    bfb5:	3c 20                	cmp    al,0x20
    bfb7:	74 e7                	je     bfa0 <try_atoi+0x80>
    bfb9:	3c 2b                	cmp    al,0x2b
    bfbb:	0f 84 9f 00 00 00    	je     c060 <try_atoi+0x140>
    bfc1:	41 bb 01 00 00 00    	mov    r11d,0x1
    bfc7:	3c 2d                	cmp    al,0x2d
    bfc9:	75 0e                	jne    bfd9 <try_atoi+0xb9>
    bfcb:	41 0f b6 41 01       	movzx  eax,BYTE PTR [r9+0x1]
    bfd0:	45 31 db             	xor    r11d,r11d
    bfd3:	49 83 c1 01          	add    r9,0x1
    bfd7:	89 c7                	mov    edi,eax
    bfd9:	83 ef 30             	sub    edi,0x30
    bfdc:	40 80 ff 09          	cmp    dil,0x9
    bfe0:	77 66                	ja     c048 <try_atoi+0x128>
    bfe2:	45 31 c0             	xor    r8d,r8d
    bfe5:	0f 1f 00             	nop    DWORD PTR [rax]
    bfe8:	83 e8 30             	sub    eax,0x30
    bfeb:	4b 8d 14 80          	lea    rdx,[r8+r8*4]
    bfef:	49 83 c1 01          	add    r9,0x1
    bff3:	48 0f be c0          	movsx  rax,al
    bff7:	4c 8d 04 50          	lea    r8,[rax+rdx*2]
    bffb:	41 0f b6 01          	movzx  eax,BYTE PTR [r9]
    bfff:	8d 70 d0             	lea    esi,[rax-0x30]
    c002:	40 80 fe 09          	cmp    sil,0x9
    c006:	76 e0                	jbe    bfe8 <try_atoi+0xc8>
    c008:	49 81 f8 ff ff ff 7f 	cmp    r8,0x7fffffff
    c00f:	7e 37                	jle    c048 <try_atoi+0x128>
    c011:	31 c0                	xor    eax,eax
    c013:	45 84 db             	test   r11b,r11b
    c016:	74 30                	je     c048 <try_atoi+0x128>
    c018:	5b                   	pop    rbx
    c019:	5d                   	pop    rbp
    c01a:	41 5c                	pop    r12
    c01c:	c3                   	ret    
    c01d:	0f 1f 00             	nop    DWORD PTR [rax]
    c020:	0f be f9             	movsx  edi,cl
    c023:	e8 28 11 00 00       	call   d150 <ft_isdigit>
    c028:	85 c0                	test   eax,eax
    c02a:	74 54                	je     c080 <try_atoi+0x160>
    c02c:	41 8b 0c 24          	mov    ecx,DWORD PTR [r12]
    c030:	44 0f be 13          	movsx  r10d,BYTE PTR [rbx]
    c034:	48 83 c3 01          	add    rbx,0x1
    c038:	44 8d 0c 89          	lea    r9d,[rcx+rcx*4]
    c03c:	43 8d 7c 4a d0       	lea    edi,[r10+r9*2-0x30]
    c041:	41 89 3c 24          	mov    DWORD PTR [r12],edi
    c045:	0f b6 0b             	movzx  ecx,BYTE PTR [rbx]
    c048:	84 c9                	test   cl,cl
    c04a:	75 d4                	jne    c020 <try_atoi+0x100>
    c04c:	40 80 fd 2d          	cmp    bpl,0x2d
    c050:	75 04                	jne    c056 <try_atoi+0x136>
    c052:	41 f7 1c 24          	neg    DWORD PTR [r12]
    c056:	5b                   	pop    rbx
    c057:	b8 01 00 00 00       	mov    eax,0x1
    c05c:	5d                   	pop    rbp
    c05d:	41 5c                	pop    r12
    c05f:	c3                   	ret    
    c060:	41 0f b6 41 01       	movzx  eax,BYTE PTR [r9+0x1]
    c065:	41 bb 01 00 00 00    	mov    r11d,0x1
    c06b:	49 83 c1 01          	add    r9,0x1
    c06f:	89 c7                	mov    edi,eax
    c071:	e9 63 ff ff ff       	jmp    bfd9 <try_atoi+0xb9>
    c076:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    c07d:	00 00 00 
    c080:	5b                   	pop    rbx
    c081:	5d                   	pop    rbp
    c082:	41 c7 04 24 00 00 00 	mov    DWORD PTR [r12],0x0
    c089:	00 
    c08a:	41 5c                	pop    r12
    c08c:	c3                   	ret    
    c08d:	89 c8                	mov    eax,ecx
    c08f:	49 89 d9             	mov    r9,rbx
    c092:	e9 22 ff ff ff       	jmp    bfb9 <try_atoi+0x99>
    c097:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    c09e:	00 00 

000000000000c0a0 <ft_split>:
    c0a0:	f3 0f 1e fa          	endbr64 
    c0a4:	41 57                	push   r15
    c0a6:	41 89 f7             	mov    r15d,esi
    c0a9:	41 56                	push   r14
    c0ab:	41 55                	push   r13
    c0ad:	41 54                	push   r12
    c0af:	55                   	push   rbp
    c0b0:	48 89 fd             	mov    rbp,rdi
    c0b3:	53                   	push   rbx
    c0b4:	48 83 ec 08          	sub    rsp,0x8
    c0b8:	0f b6 07             	movzx  eax,BYTE PTR [rdi]
    c0bb:	84 c0                	test   al,al
    c0bd:	0f 84 e3 00 00 00    	je     c1a6 <ft_split+0x106>
    c0c3:	48 89 fa             	mov    rdx,rdi
    c0c6:	31 f6                	xor    esi,esi
    c0c8:	b9 01 00 00 00       	mov    ecx,0x1
    c0cd:	eb 0f                	jmp    c0de <ft_split+0x3e>
    c0cf:	90                   	nop
    c0d0:	31 c9                	xor    ecx,ecx
    c0d2:	0f b6 42 01          	movzx  eax,BYTE PTR [rdx+0x1]
    c0d6:	48 83 c2 01          	add    rdx,0x1
    c0da:	84 c0                	test   al,al
    c0dc:	74 1e                	je     c0fc <ft_split+0x5c>
    c0de:	41 38 c7             	cmp    r15b,al
    c0e1:	75 ed                	jne    c0d0 <ft_split+0x30>
    c0e3:	85 c9                	test   ecx,ecx
    c0e5:	75 eb                	jne    c0d2 <ft_split+0x32>
    c0e7:	0f b6 42 01          	movzx  eax,BYTE PTR [rdx+0x1]
    c0eb:	48 83 c2 01          	add    rdx,0x1
    c0ef:	48 83 c6 01          	add    rsi,0x1
    c0f3:	b9 01 00 00 00       	mov    ecx,0x1
    c0f8:	84 c0                	test   al,al
    c0fa:	75 e2                	jne    c0de <ft_split+0x3e>
    c0fc:	83 f9 01             	cmp    ecx,0x1
    c0ff:	48 83 d6 01          	adc    rsi,0x1
    c103:	bf 08 00 00 00       	mov    edi,0x8
    c108:	e8 83 1a 00 00       	call   db90 <ft_calloc>
    c10d:	44 0f b6 4d 00       	movzx  r9d,BYTE PTR [rbp+0x0]
    c112:	49 89 c5             	mov    r13,rax
    c115:	45 84 c9             	test   r9b,r9b
    c118:	74 71                	je     c18b <ft_split+0xeb>
    c11a:	45 31 e4             	xor    r12d,r12d
    c11d:	48 85 c0             	test   rax,rax
    c120:	74 69                	je     c18b <ft_split+0xeb>
    c122:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    c128:	31 db                	xor    ebx,ebx
    c12a:	45 38 cf             	cmp    r15b,r9b
    c12d:	75 0e                	jne    c13d <ft_split+0x9d>
    c12f:	eb 6f                	jmp    c1a0 <ft_split+0x100>
    c131:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    c138:	40 84 ff             	test   dil,dil
    c13b:	74 11                	je     c14e <ft_split+0xae>
    c13d:	48 89 de             	mov    rsi,rbx
    c140:	48 83 c3 01          	add    rbx,0x1
    c144:	0f b6 7c 1d 00       	movzx  edi,BYTE PTR [rbp+rbx*1+0x0]
    c149:	41 38 ff             	cmp    r15b,dil
    c14c:	75 ea                	jne    c138 <ft_split+0x98>
    c14e:	48 85 db             	test   rbx,rbx
    c151:	74 4d                	je     c1a0 <ft_split+0x100>
    c153:	4c 8d 76 02          	lea    r14,[rsi+0x2]
    c157:	4c 89 f7             	mov    rdi,r14
    c15a:	e8 b1 64 ff ff       	call   2610 <malloc@plt>
    c15f:	4d 63 c4             	movsxd r8,r12d
    c162:	4b 89 44 c5 00       	mov    QWORD PTR [r13+r8*8+0x0],rax
    c167:	48 89 c7             	mov    rdi,rax
    c16a:	48 85 c0             	test   rax,rax
    c16d:	74 41                	je     c1b0 <ft_split+0x110>
    c16f:	48 89 ee             	mov    rsi,rbp
    c172:	4c 89 f2             	mov    rdx,r14
    c175:	41 83 c4 01          	add    r12d,0x1
    c179:	48 01 dd             	add    rbp,rbx
    c17c:	e8 3f 18 00 00       	call   d9c0 <ft_strlcpy>
    c181:	44 0f b6 4d 00       	movzx  r9d,BYTE PTR [rbp+0x0]
    c186:	45 84 c9             	test   r9b,r9b
    c189:	75 9d                	jne    c128 <ft_split+0x88>
    c18b:	48 83 c4 08          	add    rsp,0x8
    c18f:	4c 89 e8             	mov    rax,r13
    c192:	5b                   	pop    rbx
    c193:	5d                   	pop    rbp
    c194:	41 5c                	pop    r12
    c196:	41 5d                	pop    r13
    c198:	41 5e                	pop    r14
    c19a:	41 5f                	pop    r15
    c19c:	c3                   	ret    
    c19d:	0f 1f 00             	nop    DWORD PTR [rax]
    c1a0:	48 83 c5 01          	add    rbp,0x1
    c1a4:	eb db                	jmp    c181 <ft_split+0xe1>
    c1a6:	be 01 00 00 00       	mov    esi,0x1
    c1ab:	e9 53 ff ff ff       	jmp    c103 <ft_split+0x63>
    c1b0:	49 8b 7d 00          	mov    rdi,QWORD PTR [r13+0x0]
    c1b4:	4c 89 eb             	mov    rbx,r13
    c1b7:	48 85 ff             	test   rdi,rdi
    c1ba:	74 19                	je     c1d5 <ft_split+0x135>
    c1bc:	e8 0f 65 ff ff       	call   26d0 <free@plt>
    c1c1:	48 83 c3 08          	add    rbx,0x8
    c1c5:	48 c7 43 f8 00 00 00 	mov    QWORD PTR [rbx-0x8],0x0
    c1cc:	00 
    c1cd:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    c1d0:	48 85 ff             	test   rdi,rdi
    c1d3:	75 e7                	jne    c1bc <ft_split+0x11c>
    c1d5:	4c 89 ef             	mov    rdi,r13
    c1d8:	45 31 ed             	xor    r13d,r13d
    c1db:	e8 f0 64 ff ff       	call   26d0 <free@plt>
    c1e0:	eb a9                	jmp    c18b <ft_split+0xeb>
    c1e2:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    c1e9:	00 00 00 00 
    c1ed:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000c1f0 <get_count_words>:
    c1f0:	f3 0f 1e fa          	endbr64 
    c1f4:	0f b6 17             	movzx  edx,BYTE PTR [rdi]
    c1f7:	84 d2                	test   dl,dl
    c1f9:	74 45                	je     c240 <get_count_words+0x50>
    c1fb:	b9 01 00 00 00       	mov    ecx,0x1
    c200:	31 c0                	xor    eax,eax
    c202:	eb 12                	jmp    c216 <get_count_words+0x26>
    c204:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    c208:	31 c9                	xor    ecx,ecx
    c20a:	0f b6 57 01          	movzx  edx,BYTE PTR [rdi+0x1]
    c20e:	48 83 c7 01          	add    rdi,0x1
    c212:	84 d2                	test   dl,dl
    c214:	74 1e                	je     c234 <get_count_words+0x44>
    c216:	40 38 d6             	cmp    sil,dl
    c219:	75 ed                	jne    c208 <get_count_words+0x18>
    c21b:	85 c9                	test   ecx,ecx
    c21d:	75 eb                	jne    c20a <get_count_words+0x1a>
    c21f:	0f b6 57 01          	movzx  edx,BYTE PTR [rdi+0x1]
    c223:	48 83 c7 01          	add    rdi,0x1
    c227:	48 83 c0 01          	add    rax,0x1
    c22b:	b9 01 00 00 00       	mov    ecx,0x1
    c230:	84 d2                	test   dl,dl
    c232:	75 e2                	jne    c216 <get_count_words+0x26>
    c234:	83 f9 01             	cmp    ecx,0x1
    c237:	48 83 d0 00          	adc    rax,0x0
    c23b:	c3                   	ret    
    c23c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    c240:	31 c0                	xor    eax,eax
    c242:	c3                   	ret    
    c243:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    c24a:	00 00 00 00 
    c24e:	66 90                	xchg   ax,ax

000000000000c250 <clear_words>:
    c250:	f3 0f 1e fa          	endbr64 
    c254:	48 85 ff             	test   rdi,rdi
    c257:	74 47                	je     c2a0 <clear_words+0x50>
    c259:	55                   	push   rbp
    c25a:	48 89 fd             	mov    rbp,rdi
    c25d:	53                   	push   rbx
    c25e:	48 83 ec 08          	sub    rsp,0x8
    c262:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
    c265:	48 85 ff             	test   rdi,rdi
    c268:	74 1f                	je     c289 <clear_words+0x39>
    c26a:	48 89 eb             	mov    rbx,rbp
    c26d:	0f 1f 00             	nop    DWORD PTR [rax]
    c270:	e8 5b 64 ff ff       	call   26d0 <free@plt>
    c275:	48 83 c3 08          	add    rbx,0x8
    c279:	48 c7 43 f8 00 00 00 	mov    QWORD PTR [rbx-0x8],0x0
    c280:	00 
    c281:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
    c284:	48 85 ff             	test   rdi,rdi
    c287:	75 e7                	jne    c270 <clear_words+0x20>
    c289:	48 83 c4 08          	add    rsp,0x8
    c28d:	48 89 ef             	mov    rdi,rbp
    c290:	5b                   	pop    rbx
    c291:	5d                   	pop    rbp
    c292:	e9 39 64 ff ff       	jmp    26d0 <free@plt>
    c297:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    c29e:	00 00 
    c2a0:	c3                   	ret    
    c2a1:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    c2a8:	00 00 00 00 
    c2ac:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000c2b0 <get_count_to_words>:
    c2b0:	f3 0f 1e fa          	endbr64 
    c2b4:	31 c0                	xor    eax,eax
    c2b6:	48 83 3f 00          	cmp    QWORD PTR [rdi],0x0
    c2ba:	74 14                	je     c2d0 <get_count_to_words+0x20>
    c2bc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    c2c0:	48 83 c0 01          	add    rax,0x1
    c2c4:	48 83 3c c7 00       	cmp    QWORD PTR [rdi+rax*8],0x0
    c2c9:	75 f5                	jne    c2c0 <get_count_to_words+0x10>
    c2cb:	c3                   	ret    
    c2cc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    c2d0:	c3                   	ret    
    c2d1:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    c2d8:	00 00 00 
    c2db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000c2e0 <read_line_in_file_malloc>:
    c2e0:	f3 0f 1e fa          	endbr64 
    c2e4:	41 54                	push   r12
    c2e6:	be 01 00 00 00       	mov    esi,0x1
    c2eb:	55                   	push   rbp
    c2ec:	89 fd                	mov    ebp,edi
    c2ee:	bf 01 04 00 00       	mov    edi,0x401
    c2f3:	48 83 ec 08          	sub    rsp,0x8
    c2f7:	e8 24 65 ff ff       	call   2820 <calloc@plt>
    c2fc:	ba 00 04 00 00       	mov    edx,0x400
    c301:	89 ef                	mov    edi,ebp
    c303:	48 89 c6             	mov    rsi,rax
    c306:	49 89 c4             	mov    r12,rax
    c309:	e8 e2 62 ff ff       	call   25f0 <read@plt>
    c30e:	48 85 c0             	test   rax,rax
    c311:	7e 0b                	jle    c31e <read_line_in_file_malloc+0x3e>
    c313:	48 83 c4 08          	add    rsp,0x8
    c317:	4c 89 e0             	mov    rax,r12
    c31a:	5d                   	pop    rbp
    c31b:	41 5c                	pop    r12
    c31d:	c3                   	ret    
    c31e:	4c 89 e7             	mov    rdi,r12
    c321:	45 31 e4             	xor    r12d,r12d
    c324:	e8 a7 63 ff ff       	call   26d0 <free@plt>
    c329:	eb e8                	jmp    c313 <read_line_in_file_malloc+0x33>
    c32b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000c330 <join_buffer_in_table_malloc>:
    c330:	f3 0f 1e fa          	endbr64 
    c334:	41 56                	push   r14
    c336:	41 55                	push   r13
    c338:	41 54                	push   r12
    c33a:	41 89 f4             	mov    r12d,esi
    c33d:	55                   	push   rbp
    c33e:	48 89 fd             	mov    rbp,rdi
    c341:	89 f7                	mov    edi,esi
    c343:	53                   	push   rbx
    c344:	e8 97 ff ff ff       	call   c2e0 <read_line_in_file_malloc>
    c349:	49 89 c5             	mov    r13,rax
    c34c:	31 c0                	xor    eax,eax
    c34e:	4d 85 ed             	test   r13,r13
    c351:	0f 84 b1 00 00 00    	je     c408 <join_buffer_in_table_malloc+0xd8>
    c357:	44 89 e6             	mov    esi,r12d
    c35a:	48 89 ef             	mov    rdi,rbp
    c35d:	e8 6e 02 00 00       	call   c5d0 <get_value_or_null>
    c362:	48 89 c7             	mov    rdi,rax
    c365:	48 89 c3             	mov    rbx,rax
    c368:	e8 d3 f7 ff ff       	call   bb40 <ft_strlen>
    c36d:	4c 89 ef             	mov    rdi,r13
    c370:	49 89 c6             	mov    r14,rax
    c373:	e8 c8 f7 ff ff       	call   bb40 <ft_strlen>
    c378:	49 8d 7c 06 01       	lea    rdi,[r14+rax*1+0x1]
    c37d:	e8 8e 62 ff ff       	call   2610 <malloc@plt>
    c382:	0f b6 13             	movzx  edx,BYTE PTR [rbx]
    c385:	49 89 c6             	mov    r14,rax
    c388:	84 d2                	test   dl,dl
    c38a:	0f 84 88 00 00 00    	je     c418 <join_buffer_in_table_malloc+0xe8>
    c390:	b8 01 00 00 00       	mov    eax,0x1
    c395:	0f 1f 00             	nop    DWORD PTR [rax]
    c398:	41 88 54 06 ff       	mov    BYTE PTR [r14+rax*1-0x1],dl
    c39d:	48 63 f0             	movsxd rsi,eax
    c3a0:	48 89 c1             	mov    rcx,rax
    c3a3:	48 83 c0 01          	add    rax,0x1
    c3a7:	0f b6 54 03 ff       	movzx  edx,BYTE PTR [rbx+rax*1-0x1]
    c3ac:	84 d2                	test   dl,dl
    c3ae:	75 e8                	jne    c398 <join_buffer_in_table_malloc+0x68>
    c3b0:	4c 01 f1             	add    rcx,r14
    c3b3:	45 0f b6 45 00       	movzx  r8d,BYTE PTR [r13+0x0]
    c3b8:	45 84 c0             	test   r8b,r8b
    c3bb:	74 2d                	je     c3ea <join_buffer_in_table_malloc+0xba>
    c3bd:	8d 46 01             	lea    eax,[rsi+0x1]
    c3c0:	4c 89 ef             	mov    rdi,r13
    c3c3:	48 98                	cdqe   
    c3c5:	48 29 f7             	sub    rdi,rsi
    c3c8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    c3cf:	00 
    c3d0:	45 88 44 06 ff       	mov    BYTE PTR [r14+rax*1-0x1],r8b
    c3d5:	48 63 c8             	movsxd rcx,eax
    c3d8:	48 83 c0 01          	add    rax,0x1
    c3dc:	44 0f b6 44 07 ff    	movzx  r8d,BYTE PTR [rdi+rax*1-0x1]
    c3e2:	45 84 c0             	test   r8b,r8b
    c3e5:	75 e9                	jne    c3d0 <join_buffer_in_table_malloc+0xa0>
    c3e7:	4c 01 f1             	add    rcx,r14
    c3ea:	c6 01 00             	mov    BYTE PTR [rcx],0x0
    c3ed:	4c 89 ef             	mov    rdi,r13
    c3f0:	e8 db 62 ff ff       	call   26d0 <free@plt>
    c3f5:	4c 89 f2             	mov    rdx,r14
    c3f8:	44 89 e6             	mov    esi,r12d
    c3fb:	48 89 ef             	mov    rdi,rbp
    c3fe:	e8 1d 02 00 00       	call   c620 <update_key>
    c403:	b8 01 00 00 00       	mov    eax,0x1
    c408:	5b                   	pop    rbx
    c409:	5d                   	pop    rbp
    c40a:	41 5c                	pop    r12
    c40c:	41 5d                	pop    r13
    c40e:	41 5e                	pop    r14
    c410:	c3                   	ret    
    c411:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    c418:	48 89 c1             	mov    rcx,rax
    c41b:	31 f6                	xor    esi,esi
    c41d:	eb 94                	jmp    c3b3 <join_buffer_in_table_malloc+0x83>
    c41f:	90                   	nop

000000000000c420 <find_next_line_malloc>:
    c420:	f3 0f 1e fa          	endbr64 
    c424:	41 56                	push   r14
    c426:	41 55                	push   r13
    c428:	41 89 f5             	mov    r13d,esi
    c42b:	41 54                	push   r12
    c42d:	49 89 fc             	mov    r12,rdi
    c430:	55                   	push   rbp
    c431:	53                   	push   rbx
    c432:	e8 99 01 00 00       	call   c5d0 <get_value_or_null>
    c437:	48 89 c5             	mov    rbp,rax
    c43a:	48 85 c0             	test   rax,rax
    c43d:	0f 84 b0 00 00 00    	je     c4f3 <find_next_line_malloc+0xd3>
    c443:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    c448:	0f b6 55 00          	movzx  edx,BYTE PTR [rbp+0x0]
    c44c:	84 d2                	test   dl,dl
    c44e:	74 70                	je     c4c0 <find_next_line_malloc+0xa0>
    c450:	b8 01 00 00 00       	mov    eax,0x1
    c455:	80 fa 0a             	cmp    dl,0xa
    c458:	74 66                	je     c4c0 <find_next_line_malloc+0xa0>
    c45a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    c460:	0f b6 54 05 00       	movzx  edx,BYTE PTR [rbp+rax*1+0x0]
    c465:	89 c1                	mov    ecx,eax
    c467:	48 89 c3             	mov    rbx,rax
    c46a:	48 83 c0 01          	add    rax,0x1
    c46e:	84 d2                	test   dl,dl
    c470:	74 56                	je     c4c8 <find_next_line_malloc+0xa8>
    c472:	80 fa 0a             	cmp    dl,0xa
    c475:	75 e9                	jne    c460 <find_next_line_malloc+0x40>
    c477:	83 c1 01             	add    ecx,0x1
    c47a:	48 89 ef             	mov    rdi,rbp
    c47d:	48 63 f1             	movsxd rsi,ecx
    c480:	e8 ab 17 00 00       	call   dc30 <ft_strndup_malloc>
    c485:	48 89 ef             	mov    rdi,rbp
    c488:	49 89 c6             	mov    r14,rax
    c48b:	e8 b0 f6 ff ff       	call   bb40 <ft_strlen>
    c490:	48 8d 7c 1d 01       	lea    rdi,[rbp+rbx*1+0x1]
    c495:	48 29 d8             	sub    rax,rbx
    c498:	48 8d 70 ff          	lea    rsi,[rax-0x1]
    c49c:	e8 8f 17 00 00       	call   dc30 <ft_strndup_malloc>
    c4a1:	44 89 ee             	mov    esi,r13d
    c4a4:	4c 89 e7             	mov    rdi,r12
    c4a7:	48 89 c2             	mov    rdx,rax
    c4aa:	e8 71 01 00 00       	call   c620 <update_key>
    c4af:	5b                   	pop    rbx
    c4b0:	4c 89 f0             	mov    rax,r14
    c4b3:	5d                   	pop    rbp
    c4b4:	41 5c                	pop    r12
    c4b6:	41 5d                	pop    r13
    c4b8:	41 5e                	pop    r14
    c4ba:	c3                   	ret    
    c4bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    c4c0:	31 c9                	xor    ecx,ecx
    c4c2:	31 db                	xor    ebx,ebx
    c4c4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    c4c8:	80 fa 0a             	cmp    dl,0xa
    c4cb:	74 aa                	je     c477 <find_next_line_malloc+0x57>
    c4cd:	44 89 ee             	mov    esi,r13d
    c4d0:	4c 89 e7             	mov    rdi,r12
    c4d3:	e8 58 fe ff ff       	call   c330 <join_buffer_in_table_malloc>
    c4d8:	84 c0                	test   al,al
    c4da:	74 19                	je     c4f5 <find_next_line_malloc+0xd5>
    c4dc:	44 89 ee             	mov    esi,r13d
    c4df:	4c 89 e7             	mov    rdi,r12
    c4e2:	e8 e9 00 00 00       	call   c5d0 <get_value_or_null>
    c4e7:	48 89 c5             	mov    rbp,rax
    c4ea:	48 85 c0             	test   rax,rax
    c4ed:	0f 85 55 ff ff ff    	jne    c448 <find_next_line_malloc+0x28>
    c4f3:	31 ed                	xor    ebp,ebp
    c4f5:	48 89 ef             	mov    rdi,rbp
    c4f8:	e8 43 f6 ff ff       	call   bb40 <ft_strlen>
    c4fd:	48 89 ef             	mov    rdi,rbp
    c500:	48 89 c6             	mov    rsi,rax
    c503:	e8 28 17 00 00       	call   dc30 <ft_strndup_malloc>
    c508:	44 89 ee             	mov    esi,r13d
    c50b:	4c 89 e7             	mov    rdi,r12
    c50e:	49 89 c6             	mov    r14,rax
    c511:	e8 0a 02 00 00       	call   c720 <remove_key>
    c516:	5b                   	pop    rbx
    c517:	4c 89 f0             	mov    rax,r14
    c51a:	5d                   	pop    rbp
    c51b:	41 5c                	pop    r12
    c51d:	41 5d                	pop    r13
    c51f:	41 5e                	pop    r14
    c521:	c3                   	ret    
    c522:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    c529:	00 00 00 00 
    c52d:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000c530 <get_next_line>:
    c530:	f3 0f 1e fa          	endbr64 
    c534:	41 55                	push   r13
    c536:	4c 8d 2d 23 ac 00 00 	lea    r13,[rip+0xac23]        # 17160 <table.0>
    c53d:	89 fe                	mov    esi,edi
    c53f:	41 54                	push   r12
    c541:	55                   	push   rbp
    c542:	89 fd                	mov    ebp,edi
    c544:	4c 89 ef             	mov    rdi,r13
    c547:	e8 84 00 00 00       	call   c5d0 <get_value_or_null>
    c54c:	48 85 c0             	test   rax,rax
    c54f:	74 37                	je     c588 <get_next_line+0x58>
    c551:	89 ee                	mov    esi,ebp
    c553:	4c 89 ef             	mov    rdi,r13
    c556:	e8 c5 fe ff ff       	call   c420 <find_next_line_malloc>
    c55b:	4c 89 ef             	mov    rdi,r13
    c55e:	89 ee                	mov    esi,ebp
    c560:	49 89 c4             	mov    r12,rax
    c563:	e8 68 00 00 00       	call   c5d0 <get_value_or_null>
    c568:	48 89 c7             	mov    rdi,rax
    c56b:	48 85 c0             	test   rax,rax
    c56e:	74 0a                	je     c57a <get_next_line+0x4a>
    c570:	e8 cb f5 ff ff       	call   bb40 <ft_strlen>
    c575:	48 85 c0             	test   rax,rax
    c578:	74 36                	je     c5b0 <get_next_line+0x80>
    c57a:	4c 89 e0             	mov    rax,r12
    c57d:	5d                   	pop    rbp
    c57e:	41 5c                	pop    r12
    c580:	41 5d                	pop    r13
    c582:	c3                   	ret    
    c583:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    c588:	89 ef                	mov    edi,ebp
    c58a:	e8 51 fd ff ff       	call   c2e0 <read_line_in_file_malloc>
    c58f:	49 89 c4             	mov    r12,rax
    c592:	48 85 c0             	test   rax,rax
    c595:	74 e3                	je     c57a <get_next_line+0x4a>
    c597:	48 89 c2             	mov    rdx,rax
    c59a:	89 ee                	mov    esi,ebp
    c59c:	4c 89 ef             	mov    rdi,r13
    c59f:	e8 7c 00 00 00       	call   c620 <update_key>
    c5a4:	eb ab                	jmp    c551 <get_next_line+0x21>
    c5a6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    c5ad:	00 00 00 
    c5b0:	89 ee                	mov    esi,ebp
    c5b2:	4c 89 ef             	mov    rdi,r13
    c5b5:	e8 66 01 00 00       	call   c720 <remove_key>
    c5ba:	4c 89 e0             	mov    rax,r12
    c5bd:	5d                   	pop    rbp
    c5be:	41 5c                	pop    r12
    c5c0:	41 5d                	pop    r13
    c5c2:	c3                   	ret    
    c5c3:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    c5ca:	00 00 00 
    c5cd:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000c5d0 <get_value_or_null>:
    c5d0:	f3 0f 1e fa          	endbr64 
    c5d4:	48 63 c6             	movsxd rax,esi
    c5d7:	89 f2                	mov    edx,esi
    c5d9:	41 89 f1             	mov    r9d,esi
    c5dc:	48 69 c8 6b 4c a4 07 	imul   rcx,rax,0x7a44c6b
    c5e3:	c1 fa 1f             	sar    edx,0x1f
    c5e6:	48 c1 f9 21          	sar    rcx,0x21
    c5ea:	29 d1                	sub    ecx,edx
    c5ec:	44 6b c1 43          	imul   r8d,ecx,0x43
    c5f0:	45 29 c1             	sub    r9d,r8d
    c5f3:	4d 63 d1             	movsxd r10,r9d
    c5f6:	4a 8b 04 d7          	mov    rax,QWORD PTR [rdi+r10*8]
    c5fa:	48 85 c0             	test   rax,rax
    c5fd:	75 12                	jne    c611 <get_value_or_null+0x41>
    c5ff:	eb 19                	jmp    c61a <get_value_or_null+0x4a>
    c601:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    c608:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    c60c:	48 85 c0             	test   rax,rax
    c60f:	74 08                	je     c619 <get_value_or_null+0x49>
    c611:	39 30                	cmp    DWORD PTR [rax],esi
    c613:	75 f3                	jne    c608 <get_value_or_null+0x38>
    c615:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    c619:	c3                   	ret    
    c61a:	c3                   	ret    
    c61b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000c620 <update_key>:
    c620:	f3 0f 1e fa          	endbr64 
    c624:	48 63 c6             	movsxd rax,esi
    c627:	41 56                	push   r14
    c629:	49 89 d6             	mov    r14,rdx
    c62c:	48 69 c8 6b 4c a4 07 	imul   rcx,rax,0x7a44c6b
    c633:	89 c2                	mov    edx,eax
    c635:	41 55                	push   r13
    c637:	41 89 c5             	mov    r13d,eax
    c63a:	c1 fa 1f             	sar    edx,0x1f
    c63d:	41 54                	push   r12
    c63f:	49 89 c4             	mov    r12,rax
    c642:	55                   	push   rbp
    c643:	48 c1 f9 21          	sar    rcx,0x21
    c647:	53                   	push   rbx
    c648:	29 d1                	sub    ecx,edx
    c64a:	6b d9 43             	imul   ebx,ecx,0x43
    c64d:	41 29 dd             	sub    r13d,ebx
    c650:	4d 63 ed             	movsxd r13,r13d
    c653:	4a 8b 2c ef          	mov    rbp,QWORD PTR [rdi+r13*8]
    c657:	48 85 ed             	test   rbp,rbp
    c65a:	0f 84 7e 00 00 00    	je     c6de <update_key+0xbe>
    c660:	49 89 ed             	mov    r13,rbp
    c663:	eb 0c                	jmp    c671 <update_key+0x51>
    c665:	0f 1f 00             	nop    DWORD PTR [rax]
    c668:	4d 8b 6d 10          	mov    r13,QWORD PTR [r13+0x10]
    c66c:	4d 85 ed             	test   r13,r13
    c66f:	74 27                	je     c698 <update_key+0x78>
    c671:	45 39 65 00          	cmp    DWORD PTR [r13+0x0],r12d
    c675:	75 f1                	jne    c668 <update_key+0x48>
    c677:	49 8b 7d 08          	mov    rdi,QWORD PTR [r13+0x8]
    c67b:	e8 50 60 ff ff       	call   26d0 <free@plt>
    c680:	4d 89 75 08          	mov    QWORD PTR [r13+0x8],r14
    c684:	b8 01 00 00 00       	mov    eax,0x1
    c689:	5b                   	pop    rbx
    c68a:	5d                   	pop    rbp
    c68b:	41 5c                	pop    r12
    c68d:	41 5d                	pop    r13
    c68f:	41 5e                	pop    r14
    c691:	c3                   	ret    
    c692:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    c698:	bf 18 00 00 00       	mov    edi,0x18
    c69d:	e8 6e 5f ff ff       	call   2610 <malloc@plt>
    c6a2:	48 85 c0             	test   rax,rax
    c6a5:	74 66                	je     c70d <update_key+0xed>
    c6a7:	44 89 20             	mov    DWORD PTR [rax],r12d
    c6aa:	4c 89 70 08          	mov    QWORD PTR [rax+0x8],r14
    c6ae:	48 c7 40 10 00 00 00 	mov    QWORD PTR [rax+0x10],0x0
    c6b5:	00 
    c6b6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    c6bd:	00 00 00 
    c6c0:	48 89 ee             	mov    rsi,rbp
    c6c3:	48 8b 6d 10          	mov    rbp,QWORD PTR [rbp+0x10]
    c6c7:	48 85 ed             	test   rbp,rbp
    c6ca:	75 f4                	jne    c6c0 <update_key+0xa0>
    c6cc:	48 89 46 10          	mov    QWORD PTR [rsi+0x10],rax
    c6d0:	b8 01 00 00 00       	mov    eax,0x1
    c6d5:	5b                   	pop    rbx
    c6d6:	5d                   	pop    rbp
    c6d7:	41 5c                	pop    r12
    c6d9:	41 5d                	pop    r13
    c6db:	41 5e                	pop    r14
    c6dd:	c3                   	ret    
    c6de:	48 89 fb             	mov    rbx,rdi
    c6e1:	bf 18 00 00 00       	mov    edi,0x18
    c6e6:	e8 25 5f ff ff       	call   2610 <malloc@plt>
    c6eb:	48 85 c0             	test   rax,rax
    c6ee:	74 1d                	je     c70d <update_key+0xed>
    c6f0:	44 89 20             	mov    DWORD PTR [rax],r12d
    c6f3:	4c 89 70 08          	mov    QWORD PTR [rax+0x8],r14
    c6f7:	48 c7 40 10 00 00 00 	mov    QWORD PTR [rax+0x10],0x0
    c6fe:	00 
    c6ff:	4a 89 04 eb          	mov    QWORD PTR [rbx+r13*8],rax
    c703:	b8 01 00 00 00       	mov    eax,0x1
    c708:	e9 7c ff ff ff       	jmp    c689 <update_key+0x69>
    c70d:	31 c0                	xor    eax,eax
    c70f:	e9 75 ff ff ff       	jmp    c689 <update_key+0x69>
    c714:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    c71b:	00 00 00 00 
    c71f:	90                   	nop

000000000000c720 <remove_key>:
    c720:	f3 0f 1e fa          	endbr64 
    c724:	48 63 c6             	movsxd rax,esi
    c727:	89 f2                	mov    edx,esi
    c729:	41 55                	push   r13
    c72b:	41 89 f5             	mov    r13d,esi
    c72e:	48 69 c8 6b 4c a4 07 	imul   rcx,rax,0x7a44c6b
    c735:	c1 fa 1f             	sar    edx,0x1f
    c738:	41 54                	push   r12
    c73a:	55                   	push   rbp
    c73b:	53                   	push   rbx
    c73c:	48 c1 f9 21          	sar    rcx,0x21
    c740:	29 d1                	sub    ecx,edx
    c742:	6b d9 43             	imul   ebx,ecx,0x43
    c745:	48 83 ec 08          	sub    rsp,0x8
    c749:	41 29 dd             	sub    r13d,ebx
    c74c:	4d 63 ed             	movsxd r13,r13d
    c74f:	4a 8b 2c ef          	mov    rbp,QWORD PTR [rdi+r13*8]
    c753:	48 85 ed             	test   rbp,rbp
    c756:	74 56                	je     c7ae <remove_key+0x8e>
    c758:	49 89 fc             	mov    r12,rdi
    c75b:	31 db                	xor    ebx,ebx
    c75d:	eb 10                	jmp    c76f <remove_key+0x4f>
    c75f:	90                   	nop
    c760:	48 8b 45 10          	mov    rax,QWORD PTR [rbp+0x10]
    c764:	48 89 eb             	mov    rbx,rbp
    c767:	48 85 c0             	test   rax,rax
    c76a:	74 2b                	je     c797 <remove_key+0x77>
    c76c:	48 89 c5             	mov    rbp,rax
    c76f:	39 75 00             	cmp    DWORD PTR [rbp+0x0],esi
    c772:	75 ec                	jne    c760 <remove_key+0x40>
    c774:	48 8b 7d 08          	mov    rdi,QWORD PTR [rbp+0x8]
    c778:	e8 53 5f ff ff       	call   26d0 <free@plt>
    c77d:	48 8b 75 10          	mov    rsi,QWORD PTR [rbp+0x10]
    c781:	48 85 db             	test   rbx,rbx
    c784:	74 22                	je     c7a8 <remove_key+0x88>
    c786:	48 89 73 10          	mov    QWORD PTR [rbx+0x10],rsi
    c78a:	48 89 ef             	mov    rdi,rbp
    c78d:	e8 3e 5f ff ff       	call   26d0 <free@plt>
    c792:	b8 01 00 00 00       	mov    eax,0x1
    c797:	48 83 c4 08          	add    rsp,0x8
    c79b:	5b                   	pop    rbx
    c79c:	5d                   	pop    rbp
    c79d:	41 5c                	pop    r12
    c79f:	41 5d                	pop    r13
    c7a1:	c3                   	ret    
    c7a2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    c7a8:	4b 89 34 ec          	mov    QWORD PTR [r12+r13*8],rsi
    c7ac:	eb dc                	jmp    c78a <remove_key+0x6a>
    c7ae:	31 c0                	xor    eax,eax
    c7b0:	eb e5                	jmp    c797 <remove_key+0x77>
    c7b2:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    c7b9:	00 00 00 00 
    c7bd:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000c7c0 <add_last_node_malloc>:
    c7c0:	f3 0f 1e fa          	endbr64 
    c7c4:	41 54                	push   r12
    c7c6:	49 89 d4             	mov    r12,rdx
    c7c9:	55                   	push   rbp
    c7ca:	48 89 fd             	mov    rbp,rdi
    c7cd:	bf 18 00 00 00       	mov    edi,0x18
    c7d2:	53                   	push   rbx
    c7d3:	89 f3                	mov    ebx,esi
    c7d5:	e8 36 5e ff ff       	call   2610 <malloc@plt>
    c7da:	48 85 c0             	test   rax,rax
    c7dd:	74 68                	je     c847 <add_last_node_malloc+0x87>
    c7df:	48 63 d3             	movsxd rdx,ebx
    c7e2:	89 d9                	mov    ecx,ebx
    c7e4:	89 18                	mov    DWORD PTR [rax],ebx
    c7e6:	48 69 f2 6b 4c a4 07 	imul   rsi,rdx,0x7a44c6b
    c7ed:	c1 f9 1f             	sar    ecx,0x1f
    c7f0:	4c 89 60 08          	mov    QWORD PTR [rax+0x8],r12
    c7f4:	48 c7 40 10 00 00 00 	mov    QWORD PTR [rax+0x10],0x0
    c7fb:	00 
    c7fc:	48 c1 fe 21          	sar    rsi,0x21
    c800:	29 ce                	sub    esi,ecx
    c802:	6b fe 43             	imul   edi,esi,0x43
    c805:	29 fb                	sub    ebx,edi
    c807:	4c 63 c3             	movsxd r8,ebx
    c80a:	4e 8b 54 c5 00       	mov    r10,QWORD PTR [rbp+r8*8+0x0]
    c80f:	4d 85 d2             	test   r10,r10
    c812:	74 24                	je     c838 <add_last_node_malloc+0x78>
    c814:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    c818:	4d 89 d1             	mov    r9,r10
    c81b:	4d 8b 52 10          	mov    r10,QWORD PTR [r10+0x10]
    c81f:	4d 85 d2             	test   r10,r10
    c822:	75 f4                	jne    c818 <add_last_node_malloc+0x58>
    c824:	49 89 41 10          	mov    QWORD PTR [r9+0x10],rax
    c828:	b8 01 00 00 00       	mov    eax,0x1
    c82d:	5b                   	pop    rbx
    c82e:	5d                   	pop    rbp
    c82f:	41 5c                	pop    r12
    c831:	c3                   	ret    
    c832:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    c838:	4a 89 44 c5 00       	mov    QWORD PTR [rbp+r8*8+0x0],rax
    c83d:	5b                   	pop    rbx
    c83e:	b8 01 00 00 00       	mov    eax,0x1
    c843:	5d                   	pop    rbp
    c844:	41 5c                	pop    r12
    c846:	c3                   	ret    
    c847:	31 c0                	xor    eax,eax
    c849:	eb e2                	jmp    c82d <add_last_node_malloc+0x6d>
    c84b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000c850 <ft_assert>:
    c850:	f3 0f 1e fa          	endbr64 
    c854:	41 89 f8             	mov    r8d,edi
    c857:	48 89 f7             	mov    rdi,rsi
    c85a:	45 84 c0             	test   r8b,r8b
    c85d:	74 01                	je     c860 <ft_assert+0x10>
    c85f:	c3                   	ret    
    c860:	be 02 00 00 00       	mov    esi,0x2
    c865:	e9 16 1c 00 00       	jmp    e480 <ft_putendl_fd>
    c86a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

000000000000c870 <exit_by_error>:
    c870:	f3 0f 1e fa          	endbr64 
    c874:	41 54                	push   r12
    c876:	49 89 fc             	mov    r12,rdi
    c879:	48 8d 3d 98 5a 00 00 	lea    rdi,[rip+0x5a98]        # 12318 <_IO_stdin_used+0x318>
    c880:	55                   	push   rbp
    c881:	48 89 f5             	mov    rbp,rsi
    c884:	48 83 ec 08          	sub    rsp,0x8
    c888:	e8 23 60 ff ff       	call   28b0 <perror@plt>
    c88d:	be 02 00 00 00       	mov    esi,0x2
    c892:	4c 89 e7             	mov    rdi,r12
    c895:	e8 b6 1b 00 00       	call   e450 <ft_putstr_fd>
    c89a:	be 02 00 00 00       	mov    esi,0x2
    c89f:	48 8d 3d 77 5a 00 00 	lea    rdi,[rip+0x5a77]        # 1231d <_IO_stdin_used+0x31d>
    c8a6:	e8 a5 1b 00 00       	call   e450 <ft_putstr_fd>
    c8ab:	48 89 ef             	mov    rdi,rbp
    c8ae:	be 02 00 00 00       	mov    esi,0x2
    c8b3:	e8 c8 1b 00 00       	call   e480 <ft_putendl_fd>
    c8b8:	bf 01 00 00 00       	mov    edi,0x1
    c8bd:	e8 de 5c ff ff       	call   25a0 <exit@plt>
    c8c2:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    c8c9:	00 00 00 00 
    c8cd:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000c8d0 <exit_by_exception>:
    c8d0:	f3 0f 1e fa          	endbr64 
    c8d4:	50                   	push   rax
    c8d5:	58                   	pop    rax
    c8d6:	31 c0                	xor    eax,eax
    c8d8:	48 89 f2             	mov    rdx,rsi
    c8db:	48 83 ec 08          	sub    rsp,0x8
    c8df:	48 89 fe             	mov    rsi,rdi
    c8e2:	48 8d 3d 37 5a 00 00 	lea    rdi,[rip+0x5a37]        # 12320 <_IO_stdin_used+0x320>
    c8e9:	e8 22 1e 00 00       	call   e710 <ft_printf>
    c8ee:	31 ff                	xor    edi,edi
    c8f0:	e8 ab 5c ff ff       	call   25a0 <exit@plt>
    c8f5:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    c8fc:	00 00 00 
    c8ff:	90                   	nop

000000000000c900 <do_nothing>:
    c900:	f3 0f 1e fa          	endbr64 
    c904:	c3                   	ret    
    c905:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    c90c:	00 00 00 
    c90f:	90                   	nop

000000000000c910 <try_atof>:
    c910:	f3 0f 1e fa          	endbr64 
    c914:	41 57                	push   r15
    c916:	41 56                	push   r14
    c918:	41 55                	push   r13
    c91a:	41 54                	push   r12
    c91c:	49 89 fc             	mov    r12,rdi
    c91f:	55                   	push   rbp
    c920:	53                   	push   rbx
    c921:	48 89 f3             	mov    rbx,rsi
    c924:	48 83 ec 18          	sub    rsp,0x18
    c928:	c7 06 00 00 00 00    	mov    DWORD PTR [rsi],0x0
    c92e:	be 2e 00 00 00       	mov    esi,0x2e
    c933:	e8 78 1b 00 00       	call   e4b0 <indexof>
    c938:	83 f8 ff             	cmp    eax,0xffffffff
    c93b:	0f 84 bf 00 00 00    	je     ca00 <try_atof+0xf0>
    c941:	48 63 e8             	movsxd rbp,eax
    c944:	4c 89 e7             	mov    rdi,r12
    c947:	48 89 ee             	mov    rsi,rbp
    c94a:	e8 e1 12 00 00       	call   dc30 <ft_strndup_malloc>
    c94f:	49 8d 7c 2c 01       	lea    rdi,[r12+rbp*1+0x1]
    c954:	49 89 c5             	mov    r13,rax
    c957:	e8 94 12 00 00       	call   dbf0 <ft_strdup>
    c95c:	4c 89 ef             	mov    rdi,r13
    c95f:	48 8d 74 24 0c       	lea    rsi,[rsp+0xc]
    c964:	48 89 c5             	mov    rbp,rax
    c967:	e8 b4 f5 ff ff       	call   bf20 <try_atoi>
    c96c:	48 89 ef             	mov    rdi,rbp
    c96f:	41 89 c4             	mov    r12d,eax
    c972:	e8 c9 f1 ff ff       	call   bb40 <ft_strlen>
    c977:	48 83 f8 0a          	cmp    rax,0xa
    c97b:	76 2b                	jbe    c9a8 <try_atof+0x98>
    c97d:	4c 89 ef             	mov    rdi,r13
    c980:	45 31 e4             	xor    r12d,r12d
    c983:	e8 48 5d ff ff       	call   26d0 <free@plt>
    c988:	48 89 ef             	mov    rdi,rbp
    c98b:	e8 40 5d ff ff       	call   26d0 <free@plt>
    c990:	48 83 c4 18          	add    rsp,0x18
    c994:	44 89 e0             	mov    eax,r12d
    c997:	5b                   	pop    rbx
    c998:	5d                   	pop    rbp
    c999:	41 5c                	pop    r12
    c99b:	41 5d                	pop    r13
    c99d:	41 5e                	pop    r14
    c99f:	41 5f                	pop    r15
    c9a1:	c3                   	ret    
    c9a2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    c9a8:	48 89 ef             	mov    rdi,rbp
    c9ab:	e8 c0 f4 ff ff       	call   be70 <ft_atol>
    c9b0:	48 3d ff ff ff 7f    	cmp    rax,0x7fffffff
    c9b6:	7f c5                	jg     c97d <try_atof+0x6d>
    c9b8:	0f be 7d 00          	movsx  edi,BYTE PTR [rbp+0x0]
    c9bc:	40 84 ff             	test   dil,dil
    c9bf:	0f 84 2c 01 00 00    	je     caf1 <try_atof+0x1e1>
    c9c5:	49 89 ee             	mov    r14,rbp
    c9c8:	45 31 ff             	xor    r15d,r15d
    c9cb:	eb 22                	jmp    c9ef <try_atof+0xdf>
    c9cd:	0f 1f 00             	nop    DWORD PTR [rax]
    c9d0:	41 0f be 06          	movsx  eax,BYTE PTR [r14]
    c9d4:	41 0f be 7e 01       	movsx  edi,BYTE PTR [r14+0x1]
    c9d9:	43 8d 14 bf          	lea    edx,[r15+r15*4]
    c9dd:	49 83 c6 01          	add    r14,0x1
    c9e1:	44 8d 7c 50 d0       	lea    r15d,[rax+rdx*2-0x30]
    c9e6:	40 84 ff             	test   dil,dil
    c9e9:	0f 84 09 01 00 00    	je     caf8 <try_atof+0x1e8>
    c9ef:	e8 5c 07 00 00       	call   d150 <ft_isdigit>
    c9f4:	85 c0                	test   eax,eax
    c9f6:	75 d8                	jne    c9d0 <try_atof+0xc0>
    c9f8:	eb 83                	jmp    c97d <try_atof+0x6d>
    c9fa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    ca00:	4c 89 e7             	mov    rdi,r12
    ca03:	48 8d 74 24 0c       	lea    rsi,[rsp+0xc]
    ca08:	45 31 ff             	xor    r15d,r15d
    ca0b:	e8 10 f5 ff ff       	call   bf20 <try_atoi>
    ca10:	41 89 c4             	mov    r12d,eax
    ca13:	45 84 e4             	test   r12b,r12b
    ca16:	0f 84 74 ff ff ff    	je     c990 <try_atof+0x80>
    ca1c:	49 63 ff             	movsxd rdi,r15d
    ca1f:	e8 dc 19 00 00       	call   e400 <get_digit>
    ca24:	c5 e8 57 d2          	vxorps xmm2,xmm2,xmm2
    ca28:	c4 c1 6a 2a c7       	vcvtsi2ss xmm0,xmm2,r15d
    ca2d:	89 c6                	mov    esi,eax
    ca2f:	85 c0                	test   eax,eax
    ca31:	0f 8e 8d 00 00 00    	jle    cac4 <try_atof+0x1b4>
    ca37:	89 c1                	mov    ecx,eax
    ca39:	c5 fa 10 0d f7 58 00 	vmovss xmm1,DWORD PTR [rip+0x58f7]        # 12338 <_IO_stdin_used+0x338>
    ca40:	00 
    ca41:	31 ff                	xor    edi,edi
    ca43:	83 e1 07             	and    ecx,0x7
    ca46:	74 55                	je     ca9d <try_atof+0x18d>
    ca48:	83 f9 01             	cmp    ecx,0x1
    ca4b:	74 45                	je     ca92 <try_atof+0x182>
    ca4d:	83 f9 02             	cmp    ecx,0x2
    ca50:	74 39                	je     ca8b <try_atof+0x17b>
    ca52:	83 f9 03             	cmp    ecx,0x3
    ca55:	74 2d                	je     ca84 <try_atof+0x174>
    ca57:	83 f9 04             	cmp    ecx,0x4
    ca5a:	74 21                	je     ca7d <try_atof+0x16d>
    ca5c:	83 f9 05             	cmp    ecx,0x5
    ca5f:	74 15                	je     ca76 <try_atof+0x166>
    ca61:	83 f9 06             	cmp    ecx,0x6
    ca64:	74 09                	je     ca6f <try_atof+0x15f>
    ca66:	c5 fa 5e c1          	vdivss xmm0,xmm0,xmm1
    ca6a:	bf 01 00 00 00       	mov    edi,0x1
    ca6f:	83 c7 01             	add    edi,0x1
    ca72:	c5 fa 5e c1          	vdivss xmm0,xmm0,xmm1
    ca76:	83 c7 01             	add    edi,0x1
    ca79:	c5 fa 5e c1          	vdivss xmm0,xmm0,xmm1
    ca7d:	83 c7 01             	add    edi,0x1
    ca80:	c5 fa 5e c1          	vdivss xmm0,xmm0,xmm1
    ca84:	83 c7 01             	add    edi,0x1
    ca87:	c5 fa 5e c1          	vdivss xmm0,xmm0,xmm1
    ca8b:	83 c7 01             	add    edi,0x1
    ca8e:	c5 fa 5e c1          	vdivss xmm0,xmm0,xmm1
    ca92:	83 c7 01             	add    edi,0x1
    ca95:	c5 fa 5e c1          	vdivss xmm0,xmm0,xmm1
    ca99:	39 fe                	cmp    esi,edi
    ca9b:	74 27                	je     cac4 <try_atof+0x1b4>
    ca9d:	83 c7 08             	add    edi,0x8
    caa0:	c5 fa 5e d9          	vdivss xmm3,xmm0,xmm1
    caa4:	c5 e2 5e e1          	vdivss xmm4,xmm3,xmm1
    caa8:	c5 da 5e e9          	vdivss xmm5,xmm4,xmm1
    caac:	c5 d2 5e f1          	vdivss xmm6,xmm5,xmm1
    cab0:	c5 ca 5e f9          	vdivss xmm7,xmm6,xmm1
    cab4:	c5 42 5e c1          	vdivss xmm8,xmm7,xmm1
    cab8:	c5 3a 5e c9          	vdivss xmm9,xmm8,xmm1
    cabc:	c5 b2 5e c1          	vdivss xmm0,xmm9,xmm1
    cac0:	39 fe                	cmp    esi,edi
    cac2:	75 d9                	jne    ca9d <try_atof+0x18d>
    cac4:	c5 6a 2a 54 24 0c    	vcvtsi2ss xmm10,xmm2,DWORD PTR [rsp+0xc]
    caca:	c4 41 20 57 db       	vxorps xmm11,xmm11,xmm11
    cacf:	c5 78 57 2d 29 56 00 	vxorps xmm13,xmm0,XMMWORD PTR [rip+0x5629]        # 12100 <_IO_stdin_used+0x100>
    cad6:	00 
    cad7:	c4 41 2a c2 f3 01    	vcmpltss xmm14,xmm10,xmm11
    cadd:	c4 43 79 4a fd e0    	vblendvps xmm15,xmm0,xmm13,xmm14
    cae3:	c4 c1 2a 58 d7       	vaddss xmm2,xmm10,xmm15
    cae8:	c5 fa 11 13          	vmovss DWORD PTR [rbx],xmm2
    caec:	e9 9f fe ff ff       	jmp    c990 <try_atof+0x80>
    caf1:	45 31 ff             	xor    r15d,r15d
    caf4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    caf8:	4c 89 ef             	mov    rdi,r13
    cafb:	e8 d0 5b ff ff       	call   26d0 <free@plt>
    cb00:	48 89 ef             	mov    rdi,rbp
    cb03:	e8 c8 5b ff ff       	call   26d0 <free@plt>
    cb08:	e9 06 ff ff ff       	jmp    ca13 <try_atof+0x103>
    cb0d:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000cb10 <do_foreach>:
    cb10:	f3 0f 1e fa          	endbr64 
    cb14:	41 55                	push   r13
    cb16:	41 54                	push   r12
    cb18:	55                   	push   rbp
    cb19:	53                   	push   rbx
    cb1a:	48 83 ec 08          	sub    rsp,0x8
    cb1e:	48 83 7f 08 00       	cmp    QWORD PTR [rdi+0x8],0x0
    cb23:	4c 8b 2f             	mov    r13,QWORD PTR [rdi]
    cb26:	74 20                	je     cb48 <do_foreach+0x38>
    cb28:	48 89 fd             	mov    rbp,rdi
    cb2b:	49 89 f4             	mov    r12,rsi
    cb2e:	31 db                	xor    ebx,ebx
    cb30:	48 8b 7d 18          	mov    rdi,QWORD PTR [rbp+0x18]
    cb34:	48 0f af fb          	imul   rdi,rbx
    cb38:	48 83 c3 01          	add    rbx,0x1
    cb3c:	4c 01 ef             	add    rdi,r13
    cb3f:	41 ff d4             	call   r12
    cb42:	48 39 5d 08          	cmp    QWORD PTR [rbp+0x8],rbx
    cb46:	77 e8                	ja     cb30 <do_foreach+0x20>
    cb48:	48 83 c4 08          	add    rsp,0x8
    cb4c:	5b                   	pop    rbx
    cb4d:	5d                   	pop    rbp
    cb4e:	41 5c                	pop    r12
    cb50:	41 5d                	pop    r13
    cb52:	c3                   	ret    
    cb53:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    cb5a:	00 00 00 00 
    cb5e:	66 90                	xchg   ax,ax

000000000000cb60 <add_in_list>:
    cb60:	f3 0f 1e fa          	endbr64 
    cb64:	55                   	push   rbp
    cb65:	48 89 f5             	mov    rbp,rsi
    cb68:	53                   	push   rbx
    cb69:	48 89 fb             	mov    rbx,rdi
    cb6c:	48 83 ec 08          	sub    rsp,0x8
    cb70:	48 8b 77 08          	mov    rsi,QWORD PTR [rdi+0x8]
    cb74:	48 8b 57 18          	mov    rdx,QWORD PTR [rdi+0x18]
    cb78:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
    cb7b:	48 3b 73 10          	cmp    rsi,QWORD PTR [rbx+0x10]
    cb7f:	74 1f                	je     cba0 <add_in_list+0x40>
    cb81:	48 0f af f2          	imul   rsi,rdx
    cb85:	48 01 f7             	add    rdi,rsi
    cb88:	48 89 ee             	mov    rsi,rbp
    cb8b:	e8 e0 05 00 00       	call   d170 <ft_memcpy>
    cb90:	48 83 43 08 01       	add    QWORD PTR [rbx+0x8],0x1
    cb95:	48 83 c4 08          	add    rsp,0x8
    cb99:	5b                   	pop    rbx
    cb9a:	5d                   	pop    rbp
    cb9b:	c3                   	ret    
    cb9c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    cba0:	48 0f af f2          	imul   rsi,rdx
    cba4:	48 8d 14 36          	lea    rdx,[rsi+rsi*1]
    cba8:	e8 23 1e 00 00       	call   e9d0 <ft_realloc>
    cbad:	48 d1 63 10          	shl    QWORD PTR [rbx+0x10],1
    cbb1:	48 89 03             	mov    QWORD PTR [rbx],rax
    cbb4:	48 89 c7             	mov    rdi,rax
    cbb7:	48 85 c0             	test   rax,rax
    cbba:	74 d9                	je     cb95 <add_in_list+0x35>
    cbbc:	48 8b 73 08          	mov    rsi,QWORD PTR [rbx+0x8]
    cbc0:	48 8b 53 18          	mov    rdx,QWORD PTR [rbx+0x18]
    cbc4:	eb bb                	jmp    cb81 <add_in_list+0x21>
    cbc6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    cbcd:	00 00 00 

000000000000cbd0 <destroy_list>:
    cbd0:	f3 0f 1e fa          	endbr64 
    cbd4:	41 55                	push   r13
    cbd6:	41 54                	push   r12
    cbd8:	55                   	push   rbp
    cbd9:	48 89 fd             	mov    rbp,rdi
    cbdc:	53                   	push   rbx
    cbdd:	48 83 ec 08          	sub    rsp,0x8
    cbe1:	48 83 7f 08 00       	cmp    QWORD PTR [rdi+0x8],0x0
    cbe6:	4c 8b 2f             	mov    r13,QWORD PTR [rdi]
    cbe9:	74 21                	je     cc0c <destroy_list+0x3c>
    cbeb:	49 89 f4             	mov    r12,rsi
    cbee:	31 db                	xor    ebx,ebx
    cbf0:	48 8b 7d 18          	mov    rdi,QWORD PTR [rbp+0x18]
    cbf4:	48 0f af fb          	imul   rdi,rbx
    cbf8:	48 83 c3 01          	add    rbx,0x1
    cbfc:	4c 01 ef             	add    rdi,r13
    cbff:	41 ff d4             	call   r12
    cc02:	48 3b 5d 08          	cmp    rbx,QWORD PTR [rbp+0x8]
    cc06:	72 e8                	jb     cbf0 <destroy_list+0x20>
    cc08:	4c 8b 6d 00          	mov    r13,QWORD PTR [rbp+0x0]
    cc0c:	4c 89 ef             	mov    rdi,r13
    cc0f:	e8 bc 5a ff ff       	call   26d0 <free@plt>
    cc14:	48 c7 45 00 00 00 00 	mov    QWORD PTR [rbp+0x0],0x0
    cc1b:	00 
    cc1c:	48 83 c4 08          	add    rsp,0x8
    cc20:	5b                   	pop    rbx
    cc21:	5d                   	pop    rbp
    cc22:	41 5c                	pop    r12
    cc24:	41 5d                	pop    r13
    cc26:	c3                   	ret    
    cc27:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    cc2e:	00 00 

000000000000cc30 <clear_in_list>:
    cc30:	f3 0f 1e fa          	endbr64 
    cc34:	55                   	push   rbp
    cc35:	48 8d 05 d4 fe ff ff 	lea    rax,[rip+0xfffffffffffffed4]        # cb10 <do_foreach>
    cc3c:	48 8d 15 1d ff ff ff 	lea    rdx,[rip+0xffffffffffffff1d]        # cb60 <add_in_list>
    cc43:	48 8d 0d 86 ff ff ff 	lea    rcx,[rip+0xffffffffffffff86]        # cbd0 <destroy_list>
    cc4a:	c4 e1 f9 6e d8       	vmovq  xmm3,rax
    cc4f:	48 89 e5             	mov    rbp,rsp
    cc52:	41 56                	push   r14
    cc54:	49 89 fe             	mov    r14,rdi
    cc57:	41 55                	push   r13
    cc59:	41 54                	push   r12
    cc5b:	53                   	push   rbx
    cc5c:	48 8d 1d cd ff ff ff 	lea    rbx,[rip+0xffffffffffffffcd]        # cc30 <clear_in_list>
    cc63:	c4 e1 f9 6e c3       	vmovq  xmm0,rbx
    cc68:	c4 e3 f9 22 e9 01    	vpinsrq xmm5,xmm0,rcx,0x1
    cc6e:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    cc72:	48 83 ec 40          	sub    rsp,0x40
    cc76:	c5 fa 7e 25 7a a3 00 	vmovq  xmm4,QWORD PTR [rip+0xa37a]        # 16ff8 <_GLOBAL_OFFSET_TABLE_+0x2d0>
    cc7d:	00 
    cc7e:	48 83 7f 08 00       	cmp    QWORD PTR [rdi+0x8],0x0
    cc83:	c4 e3 e1 22 15 5b a3 	vpinsrq xmm2,xmm3,QWORD PTR [rip+0xa35b],0x1        # 16fe8 <_GLOBAL_OFFSET_TABLE_+0x2c0>
    cc8a:	00 00 01 
    cc8d:	4c 8b 2f             	mov    r13,QWORD PTR [rdi]
    cc90:	c4 e3 d9 22 ca 01    	vpinsrq xmm1,xmm4,rdx,0x1
    cc96:	c4 e3 75 38 f5 01    	vinserti128 ymm6,ymm1,xmm5,0x1
    cc9c:	c5 f9 7f 54 24 10    	vmovdqa XMMWORD PTR [rsp+0x10],xmm2
    cca2:	c5 fd 7f 74 24 20    	vmovdqa YMMWORD PTR [rsp+0x20],ymm6
    cca8:	74 7e                	je     cd28 <clear_in_list+0xf8>
    ccaa:	49 89 f4             	mov    r12,rsi
    ccad:	31 db                	xor    ebx,ebx
    ccaf:	c5 f8 77             	vzeroupper 
    ccb2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    ccb8:	49 8b 7e 18          	mov    rdi,QWORD PTR [r14+0x18]
    ccbc:	48 0f af fb          	imul   rdi,rbx
    ccc0:	48 83 c3 01          	add    rbx,0x1
    ccc4:	4c 01 ef             	add    rdi,r13
    ccc7:	41 ff d4             	call   r12
    ccca:	49 3b 5e 08          	cmp    rbx,QWORD PTR [r14+0x8]
    ccce:	72 e8                	jb     ccb8 <clear_in_list+0x88>
    ccd0:	4d 8b 2e             	mov    r13,QWORD PTR [r14]
    ccd3:	4c 89 ef             	mov    rdi,r13
    ccd6:	e8 f5 59 ff ff       	call   26d0 <free@plt>
    ccdb:	49 8b 7e 18          	mov    rdi,QWORD PTR [r14+0x18]
    ccdf:	be 0a 00 00 00       	mov    esi,0xa
    cce4:	c5 f9 6f 3d 54 56 00 	vmovdqa xmm7,XMMWORD PTR [rip+0x5654]        # 12340 <_IO_stdin_used+0x340>
    cceb:	00 
    ccec:	c4 c1 7a 7f 7e 08    	vmovdqu XMMWORD PTR [r14+0x8],xmm7
    ccf2:	e8 99 0e 00 00       	call   db90 <ft_calloc>
    ccf7:	c5 7d 6f 44 24 20    	vmovdqa ymm8,YMMWORD PTR [rsp+0x20]
    ccfd:	c5 79 6f 4c 24 10    	vmovdqa xmm9,XMMWORD PTR [rsp+0x10]
    cd03:	49 89 06             	mov    QWORD PTR [r14],rax
    cd06:	c4 41 7e 7f 46 20    	vmovdqu YMMWORD PTR [r14+0x20],ymm8
    cd0c:	c4 41 7a 7f 4e 40    	vmovdqu XMMWORD PTR [r14+0x40],xmm9
    cd12:	c5 f8 77             	vzeroupper 
    cd15:	48 8d 65 e0          	lea    rsp,[rbp-0x20]
    cd19:	5b                   	pop    rbx
    cd1a:	41 5c                	pop    r12
    cd1c:	41 5d                	pop    r13
    cd1e:	41 5e                	pop    r14
    cd20:	5d                   	pop    rbp
    cd21:	c3                   	ret    
    cd22:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    cd28:	c5 f8 77             	vzeroupper 
    cd2b:	eb a6                	jmp    ccd3 <clear_in_list+0xa3>
    cd2d:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000cd30 <init_array_list>:
    cd30:	f3 0f 1e fa          	endbr64 
    cd34:	55                   	push   rbp
    cd35:	48 8d 05 d4 fd ff ff 	lea    rax,[rip+0xfffffffffffffdd4]        # cb10 <do_foreach>
    cd3c:	48 8d 15 1d fe ff ff 	lea    rdx,[rip+0xfffffffffffffe1d]        # cb60 <add_in_list>
    cd43:	48 8d 0d 86 fe ff ff 	lea    rcx,[rip+0xfffffffffffffe86]        # cbd0 <destroy_list>
    cd4a:	c4 e1 f9 6e c8       	vmovq  xmm1,rax
    cd4f:	48 89 e5             	mov    rbp,rsp
    cd52:	53                   	push   rbx
    cd53:	48 89 fb             	mov    rbx,rdi
    cd56:	48 89 f7             	mov    rdi,rsi
    cd59:	48 8d 35 d0 fe ff ff 	lea    rsi,[rip+0xfffffffffffffed0]        # cc30 <clear_in_list>
    cd60:	c4 e1 f9 6e d6       	vmovq  xmm2,rsi
    cd65:	be 0a 00 00 00       	mov    esi,0xa
    cd6a:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    cd6e:	c4 e3 e9 22 e9 01    	vpinsrq xmm5,xmm2,rcx,0x1
    cd74:	48 83 ec 40          	sub    rsp,0x40
    cd78:	c5 fa 7e 1d 78 a2 00 	vmovq  xmm3,QWORD PTR [rip+0xa278]        # 16ff8 <_GLOBAL_OFFSET_TABLE_+0x2d0>
    cd7f:	00 
    cd80:	c5 f9 6f 3d b8 55 00 	vmovdqa xmm7,XMMWORD PTR [rip+0x55b8]        # 12340 <_IO_stdin_used+0x340>
    cd87:	00 
    cd88:	48 89 7b 18          	mov    QWORD PTR [rbx+0x18],rdi
    cd8c:	c4 e3 f1 22 05 52 a2 	vpinsrq xmm0,xmm1,QWORD PTR [rip+0xa252],0x1        # 16fe8 <_GLOBAL_OFFSET_TABLE_+0x2c0>
    cd93:	00 00 01 
    cd96:	c4 e3 e1 22 e2 01    	vpinsrq xmm4,xmm3,rdx,0x1
    cd9c:	c5 fa 7f 7b 08       	vmovdqu XMMWORD PTR [rbx+0x8],xmm7
    cda1:	c4 e3 5d 38 f5 01    	vinserti128 ymm6,ymm4,xmm5,0x1
    cda7:	c5 f9 7f 44 24 10    	vmovdqa XMMWORD PTR [rsp+0x10],xmm0
    cdad:	c5 fd 7f 74 24 20    	vmovdqa YMMWORD PTR [rsp+0x20],ymm6
    cdb3:	c5 f8 77             	vzeroupper 
    cdb6:	e8 d5 0d 00 00       	call   db90 <ft_calloc>
    cdbb:	c5 7d 6f 44 24 20    	vmovdqa ymm8,YMMWORD PTR [rsp+0x20]
    cdc1:	c5 79 6f 4c 24 10    	vmovdqa xmm9,XMMWORD PTR [rsp+0x10]
    cdc7:	48 89 03             	mov    QWORD PTR [rbx],rax
    cdca:	c5 7e 7f 43 20       	vmovdqu YMMWORD PTR [rbx+0x20],ymm8
    cdcf:	c5 7a 7f 4b 40       	vmovdqu XMMWORD PTR [rbx+0x40],xmm9
    cdd4:	c5 f8 77             	vzeroupper 
    cdd7:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    cddb:	c9                   	leave  
    cddc:	c3                   	ret    
    cddd:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000cde0 <get_element_or_null_in_list>:
    cde0:	f3 0f 1e fa          	endbr64 
    cde4:	48 39 77 08          	cmp    QWORD PTR [rdi+0x8],rsi
    cde8:	76 16                	jbe    ce00 <get_element_or_null_in_list+0x20>
    cdea:	48 0f af 77 18       	imul   rsi,QWORD PTR [rdi+0x18]
    cdef:	48 8b 07             	mov    rax,QWORD PTR [rdi]
    cdf2:	48 01 f0             	add    rax,rsi
    cdf5:	c3                   	ret    
    cdf6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    cdfd:	00 00 00 
    ce00:	31 c0                	xor    eax,eax
    ce02:	c3                   	ret    
    ce03:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    ce0a:	00 00 00 00 
    ce0e:	66 90                	xchg   ax,ax

000000000000ce10 <get_count_in_list>:
    ce10:	f3 0f 1e fa          	endbr64 
    ce14:	48 8b 47 08          	mov    rax,QWORD PTR [rdi+0x8]
    ce18:	c3                   	ret    
    ce19:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

000000000000ce20 <get_length_squared>:
    ce20:	f3 0f 1e fa          	endbr64 
    ce24:	c5 f9 d6 44 24 e8    	vmovq  QWORD PTR [rsp-0x18],xmm0
    ce2a:	c5 fa 10 54 24 ec    	vmovss xmm2,DWORD PTR [rsp-0x14]
    ce30:	c5 f9 d6 4c 24 f0    	vmovq  QWORD PTR [rsp-0x10],xmm1
    ce36:	c5 fa 10 4c 24 e8    	vmovss xmm1,DWORD PTR [rsp-0x18]
    ce3c:	c5 fa 10 44 24 f0    	vmovss xmm0,DWORD PTR [rsp-0x10]
    ce42:	c5 ea 59 da          	vmulss xmm3,xmm2,xmm2
    ce46:	c4 e2 61 99 c9       	vfmadd132ss xmm1,xmm3,xmm1
    ce4b:	c4 e2 71 99 c0       	vfmadd132ss xmm0,xmm1,xmm0
    ce50:	c3                   	ret    
    ce51:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    ce58:	00 00 00 00 
    ce5c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000ce60 <get_length_in_vector3>:
    ce60:	f3 0f 1e fa          	endbr64 
    ce64:	c5 f9 d6 44 24 e8    	vmovq  QWORD PTR [rsp-0x18],xmm0
    ce6a:	c5 fa 10 54 24 ec    	vmovss xmm2,DWORD PTR [rsp-0x14]
    ce70:	c5 d8 57 e4          	vxorps xmm4,xmm4,xmm4
    ce74:	c5 f9 d6 4c 24 f0    	vmovq  QWORD PTR [rsp-0x10],xmm1
    ce7a:	c5 fa 10 4c 24 e8    	vmovss xmm1,DWORD PTR [rsp-0x18]
    ce80:	c5 fa 10 44 24 f0    	vmovss xmm0,DWORD PTR [rsp-0x10]
    ce86:	c5 ea 59 da          	vmulss xmm3,xmm2,xmm2
    ce8a:	c4 e2 61 99 c9       	vfmadd132ss xmm1,xmm3,xmm1
    ce8f:	c4 e2 71 99 c0       	vfmadd132ss xmm0,xmm1,xmm0
    ce94:	c5 f8 2e e0          	vucomiss xmm4,xmm0
    ce98:	77 05                	ja     ce9f <get_length_in_vector3+0x3f>
    ce9a:	c5 fa 51 c0          	vsqrtss xmm0,xmm0,xmm0
    ce9e:	c3                   	ret    
    ce9f:	e9 ec 5a ff ff       	jmp    2990 <sqrtf@plt>
    cea4:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    ceab:	00 00 00 00 
    ceaf:	90                   	nop

000000000000ceb0 <normalize_vector3>:
    ceb0:	f3 0f 1e fa          	endbr64 
    ceb4:	4c 8d 54 24 08       	lea    r10,[rsp+0x8]
    ceb9:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    cebd:	41 ff 72 f8          	push   QWORD PTR [r10-0x8]
    cec1:	55                   	push   rbp
    cec2:	48 89 e5             	mov    rbp,rsp
    cec5:	41 52                	push   r10
    cec7:	48 83 ec 68          	sub    rsp,0x68
    cecb:	c5 f9 d6 45 d0       	vmovq  QWORD PTR [rbp-0x30],xmm0
    ced0:	c5 fa 10 65 d4       	vmovss xmm4,DWORD PTR [rbp-0x2c]
    ced5:	c5 fa 10 55 d0       	vmovss xmm2,DWORD PTR [rbp-0x30]
    ceda:	c5 f9 d6 4d d8       	vmovq  QWORD PTR [rbp-0x28],xmm1
    cedf:	c5 fa 10 5d d8       	vmovss xmm3,DWORD PTR [rbp-0x28]
    cee4:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    cee8:	c5 da 59 cc          	vmulss xmm1,xmm4,xmm4
    ceec:	c4 e2 69 b9 ca       	vfmadd231ss xmm1,xmm2,xmm2
    cef1:	c4 e2 61 b9 cb       	vfmadd231ss xmm1,xmm3,xmm3
    cef6:	c5 f8 2e c1          	vucomiss xmm0,xmm1
    cefa:	77 28                	ja     cf24 <normalize_vector3+0x74>
    cefc:	c5 f2 51 c9          	vsqrtss xmm1,xmm1,xmm1
    cf00:	c5 ea 5e e9          	vdivss xmm5,xmm2,xmm1
    cf04:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    cf08:	c5 da 5e f1          	vdivss xmm6,xmm4,xmm1
    cf0c:	c5 e2 5e f9          	vdivss xmm7,xmm3,xmm1
    cf10:	c5 d0 14 c6          	vunpcklps xmm0,xmm5,xmm6
    cf14:	c5 fa 11 7d e8       	vmovss DWORD PTR [rbp-0x18],xmm7
    cf19:	c5 fa 7e 4d e8       	vmovq  xmm1,QWORD PTR [rbp-0x18]
    cf1e:	c9                   	leave  
    cf1f:	48 8d 60 f8          	lea    rsp,[rax-0x8]
    cf23:	c3                   	ret    
    cf24:	c5 f8 28 c1          	vmovaps xmm0,xmm1
    cf28:	c5 fa 11 55 a4       	vmovss DWORD PTR [rbp-0x5c],xmm2
    cf2d:	c5 fa 11 65 a8       	vmovss DWORD PTR [rbp-0x58],xmm4
    cf32:	c5 fa 11 5d ac       	vmovss DWORD PTR [rbp-0x54],xmm3
    cf37:	e8 54 5a ff ff       	call   2990 <sqrtf@plt>
    cf3c:	c5 fa 10 55 a4       	vmovss xmm2,DWORD PTR [rbp-0x5c]
    cf41:	c5 fa 10 65 a8       	vmovss xmm4,DWORD PTR [rbp-0x58]
    cf46:	c5 fa 10 5d ac       	vmovss xmm3,DWORD PTR [rbp-0x54]
    cf4b:	c5 f8 28 c8          	vmovaps xmm1,xmm0
    cf4f:	eb af                	jmp    cf00 <normalize_vector3+0x50>
    cf51:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    cf58:	00 00 00 00 
    cf5c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000cf60 <get_vector3>:
    cf60:	f3 0f 1e fa          	endbr64 
    cf64:	55                   	push   rbp
    cf65:	c5 f8 14 c1          	vunpcklps xmm0,xmm0,xmm1
    cf69:	48 89 e5             	mov    rbp,rsp
    cf6c:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    cf70:	c5 fa 11 54 24 f8    	vmovss DWORD PTR [rsp-0x8],xmm2
    cf76:	c5 fa 7e 4c 24 f8    	vmovq  xmm1,QWORD PTR [rsp-0x8]
    cf7c:	c9                   	leave  
    cf7d:	c3                   	ret    
    cf7e:	66 90                	xchg   ax,ax

000000000000cf80 <is_uneqaul_vector3>:
    cf80:	f3 0f 1e fa          	endbr64 
    cf84:	c5 f9 d6 44 24 e8    	vmovq  QWORD PTR [rsp-0x18],xmm0
    cf8a:	c5 fa 10 44 24 e8    	vmovss xmm0,DWORD PTR [rsp-0x18]
    cf90:	b8 01 00 00 00       	mov    eax,0x1
    cf95:	c5 f9 d6 54 24 d8    	vmovq  QWORD PTR [rsp-0x28],xmm2
    cf9b:	c5 fa 5c 54 24 d8    	vsubss xmm2,xmm0,DWORD PTR [rsp-0x28]
    cfa1:	c5 f9 d6 4c 24 f0    	vmovq  QWORD PTR [rsp-0x10],xmm1
    cfa7:	c5 fa 10 0d 61 51 00 	vmovss xmm1,DWORD PTR [rip+0x5161]        # 12110 <_IO_stdin_used+0x110>
    cfae:	00 
    cfaf:	c5 f9 d6 5c 24 e0    	vmovq  QWORD PTR [rsp-0x20],xmm3
    cfb5:	c5 e8 54 d9          	vandps xmm3,xmm2,xmm1
    cfb9:	c5 f8 2f 1d ef 51 00 	vcomiss xmm3,DWORD PTR [rip+0x51ef]        # 121b0 <_IO_stdin_used+0x1b0>
    cfc0:	00 
    cfc1:	73 1a                	jae    cfdd <is_uneqaul_vector3+0x5d>
    cfc3:	c5 fa 10 64 24 ec    	vmovss xmm4,DWORD PTR [rsp-0x14]
    cfc9:	c5 da 5c 6c 24 dc    	vsubss xmm5,xmm4,DWORD PTR [rsp-0x24]
    cfcf:	c5 d0 54 f1          	vandps xmm6,xmm5,xmm1
    cfd3:	c5 f8 2f 35 d5 51 00 	vcomiss xmm6,DWORD PTR [rip+0x51d5]        # 121b0 <_IO_stdin_used+0x1b0>
    cfda:	00 
    cfdb:	72 03                	jb     cfe0 <is_uneqaul_vector3+0x60>
    cfdd:	c3                   	ret    
    cfde:	66 90                	xchg   ax,ax
    cfe0:	c5 fa 10 7c 24 f0    	vmovss xmm7,DWORD PTR [rsp-0x10]
    cfe6:	c5 42 5c 44 24 e0    	vsubss xmm8,xmm7,DWORD PTR [rsp-0x20]
    cfec:	c5 38 54 c9          	vandps xmm9,xmm8,xmm1
    cff0:	c5 78 2f 0d b8 51 00 	vcomiss xmm9,DWORD PTR [rip+0x51b8]        # 121b0 <_IO_stdin_used+0x1b0>
    cff7:	00 
    cff8:	0f 93 c0             	setae  al
    cffb:	c3                   	ret    
    cffc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000d000 <print_vector3>:
    d000:	f3 0f 1e fa          	endbr64 
    d004:	c5 e0 57 db          	vxorps xmm3,xmm3,xmm3
    d008:	c5 f9 d6 44 24 e8    	vmovq  QWORD PTR [rsp-0x18],xmm0
    d00e:	48 89 fa             	mov    rdx,rdi
    d011:	48 8d 35 38 53 00 00 	lea    rsi,[rip+0x5338]        # 12350 <_IO_stdin_used+0x350>
    d018:	c5 f9 d6 4c 24 f0    	vmovq  QWORD PTR [rsp-0x10],xmm1
    d01e:	bf 01 00 00 00       	mov    edi,0x1
    d023:	b8 03 00 00 00       	mov    eax,0x3
    d028:	c5 e2 5a 44 24 e8    	vcvtss2sd xmm0,xmm3,DWORD PTR [rsp-0x18]
    d02e:	c5 e2 5a 54 24 f0    	vcvtss2sd xmm2,xmm3,DWORD PTR [rsp-0x10]
    d034:	c5 e2 5a 4c 24 ec    	vcvtss2sd xmm1,xmm3,DWORD PTR [rsp-0x14]
    d03a:	e9 71 55 ff ff       	jmp    25b0 <__printf_chk@plt>
    d03f:	90                   	nop

000000000000d040 <dot_product3x3>:
    d040:	f3 0f 1e fa          	endbr64 
    d044:	c5 f9 d6 44 24 e8    	vmovq  QWORD PTR [rsp-0x18],xmm0
    d04a:	c5 fa 10 44 24 ec    	vmovss xmm0,DWORD PTR [rsp-0x14]
    d050:	c5 fa 10 64 24 e8    	vmovss xmm4,DWORD PTR [rsp-0x18]
    d056:	c5 f9 d6 54 24 d8    	vmovq  QWORD PTR [rsp-0x28],xmm2
    d05c:	c5 fa 59 44 24 dc    	vmulss xmm0,xmm0,DWORD PTR [rsp-0x24]
    d062:	c4 e2 59 b9 44 24 d8 	vfmadd231ss xmm0,xmm4,DWORD PTR [rsp-0x28]
    d069:	c5 f9 d6 4c 24 f0    	vmovq  QWORD PTR [rsp-0x10],xmm1
    d06f:	c5 fa 10 6c 24 f0    	vmovss xmm5,DWORD PTR [rsp-0x10]
    d075:	c5 f9 d6 5c 24 e0    	vmovq  QWORD PTR [rsp-0x20],xmm3
    d07b:	c4 e2 51 b9 44 24 e0 	vfmadd231ss xmm0,xmm5,DWORD PTR [rsp-0x20]
    d082:	c3                   	ret    
    d083:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    d08a:	00 00 00 00 
    d08e:	66 90                	xchg   ax,ax

000000000000d090 <dot_product4x4>:
    d090:	f3 0f 1e fa          	endbr64 
    d094:	c5 f9 d6 44 24 d8    	vmovq  QWORD PTR [rsp-0x28],xmm0
    d09a:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    d09e:	c5 f9 d6 54 24 e8    	vmovq  QWORD PTR [rsp-0x18],xmm2
    d0a4:	c5 f9 d6 5c 24 f0    	vmovq  QWORD PTR [rsp-0x10],xmm3
    d0aa:	c5 f8 28 64 24 e8    	vmovaps xmm4,XMMWORD PTR [rsp-0x18]
    d0b0:	c5 f9 d6 4c 24 e0    	vmovq  QWORD PTR [rsp-0x20],xmm1
    d0b6:	c5 d8 59 4c 24 d8    	vmulps xmm1,xmm4,XMMWORD PTR [rsp-0x28]
    d0bc:	c5 fa 58 d9          	vaddss xmm3,xmm0,xmm1
    d0c0:	c5 f0 c6 d1 55       	vshufps xmm2,xmm1,xmm1,0x55
    d0c5:	c5 f0 15 f1          	vunpckhps xmm6,xmm1,xmm1
    d0c9:	c5 70 c6 c1 ff       	vshufps xmm8,xmm1,xmm1,0xff
    d0ce:	c5 e2 58 ea          	vaddss xmm5,xmm3,xmm2
    d0d2:	c5 d2 58 fe          	vaddss xmm7,xmm5,xmm6
    d0d6:	c4 c1 42 58 c0       	vaddss xmm0,xmm7,xmm8
    d0db:	c3                   	ret    
    d0dc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000d0e0 <cross_product3x3>:
    d0e0:	f3 0f 1e fa          	endbr64 
    d0e4:	55                   	push   rbp
    d0e5:	48 89 e5             	mov    rbp,rsp
    d0e8:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    d0ec:	c5 f9 d6 44 24 e0    	vmovq  QWORD PTR [rsp-0x20],xmm0
    d0f2:	c5 f9 d6 54 24 d0    	vmovq  QWORD PTR [rsp-0x30],xmm2
    d0f8:	c5 fa 10 6c 24 d0    	vmovss xmm5,DWORD PTR [rsp-0x30]
    d0fe:	c5 fa 10 54 24 e0    	vmovss xmm2,DWORD PTR [rsp-0x20]
    d104:	c5 f9 d6 4c 24 e8    	vmovq  QWORD PTR [rsp-0x18],xmm1
    d10a:	c5 fa 7e 4c 24 e4    	vmovq  xmm1,QWORD PTR [rsp-0x1c]
    d110:	c5 fa 10 7c 24 e8    	vmovss xmm7,DWORD PTR [rsp-0x18]
    d116:	c5 f9 d6 5c 24 d8    	vmovq  QWORD PTR [rsp-0x28],xmm3
    d11c:	c5 fa 7e 64 24 d4    	vmovq  xmm4,QWORD PTR [rsp-0x2c]
    d122:	c5 fa 10 74 24 d8    	vmovss xmm6,DWORD PTR [rsp-0x28]
    d128:	c5 72 59 d5          	vmulss xmm10,xmm1,xmm5
    d12c:	c5 c0 14 c2          	vunpcklps xmm0,xmm7,xmm2
    d130:	c5 c8 14 dd          	vunpcklps xmm3,xmm6,xmm5
    d134:	c5 60 59 c1          	vmulps xmm8,xmm3,xmm1
    d138:	c4 e2 29 9b d4       	vfmsub132ss xmm2,xmm10,xmm4
    d13d:	c4 e2 39 9c c4       	vfnmadd132ps xmm0,xmm8,xmm4
    d142:	c5 fa 11 54 24 f8    	vmovss DWORD PTR [rsp-0x8],xmm2
    d148:	c5 fa 7e 4c 24 f8    	vmovq  xmm1,QWORD PTR [rsp-0x8]
    d14e:	c9                   	leave  
    d14f:	c3                   	ret    

000000000000d150 <ft_isdigit>:
    d150:	f3 0f 1e fa          	endbr64 
    d154:	83 ef 30             	sub    edi,0x30
    d157:	31 c0                	xor    eax,eax
    d159:	83 ff 09             	cmp    edi,0x9
    d15c:	0f 96 c0             	setbe  al
    d15f:	c1 e0 0b             	shl    eax,0xb
    d162:	c3                   	ret    
    d163:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    d16a:	00 00 00 
    d16d:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000d170 <ft_memcpy>:
    d170:	f3 0f 1e fa          	endbr64 
    d174:	48 89 f1             	mov    rcx,rsi
    d177:	48 89 f8             	mov    rax,rdi
    d17a:	48 89 d6             	mov    rsi,rdx
    d17d:	48 85 d2             	test   rdx,rdx
    d180:	0f 84 03 03 00 00    	je     d489 <ft_memcpy+0x319>
    d186:	48 8d 52 ff          	lea    rdx,[rdx-0x1]
    d18a:	48 39 cf             	cmp    rdi,rcx
    d18d:	0f 88 fd 02 00 00    	js     d490 <ft_memcpy+0x320>
    d193:	4c 8d 0c 17          	lea    r9,[rdi+rdx*1]
    d197:	4c 8d 54 31 fe       	lea    r10,[rcx+rsi*1-0x2]
    d19c:	4d 29 d1             	sub    r9,r10
    d19f:	49 83 c1 1e          	add    r9,0x1e
    d1a3:	49 83 f9 1e          	cmp    r9,0x1e
    d1a7:	0f 86 f3 05 00 00    	jbe    d7a0 <ft_memcpy+0x630>
    d1ad:	48 83 fa 0e          	cmp    rdx,0xe
    d1b1:	0f 86 e9 05 00 00    	jbe    d7a0 <ft_memcpy+0x630>
    d1b7:	48 83 fa 1e          	cmp    rdx,0x1e
    d1bb:	0f 86 78 01 00 00    	jbe    d339 <ft_memcpy+0x1c9>
    d1c1:	49 89 f0             	mov    r8,rsi
    d1c4:	4c 8d 4e e0          	lea    r9,[rsi-0x20]
    d1c8:	49 83 e0 e0          	and    r8,0xffffffffffffffe0
    d1cc:	4e 8d 14 09          	lea    r10,[rcx+r9*1]
    d1d0:	49 01 f9             	add    r9,rdi
    d1d3:	31 ff                	xor    edi,edi
    d1d5:	4d 89 c3             	mov    r11,r8
    d1d8:	49 83 e8 20          	sub    r8,0x20
    d1dc:	49 c1 e8 05          	shr    r8,0x5
    d1e0:	49 f7 db             	neg    r11
    d1e3:	49 83 c0 01          	add    r8,0x1
    d1e7:	41 83 e0 07          	and    r8d,0x7
    d1eb:	0f 84 91 00 00 00    	je     d282 <ft_memcpy+0x112>
    d1f1:	49 83 f8 01          	cmp    r8,0x1
    d1f5:	74 72                	je     d269 <ft_memcpy+0xf9>
    d1f7:	49 83 f8 02          	cmp    r8,0x2
    d1fb:	74 5c                	je     d259 <ft_memcpy+0xe9>
    d1fd:	49 83 f8 03          	cmp    r8,0x3
    d201:	74 46                	je     d249 <ft_memcpy+0xd9>
    d203:	49 83 f8 04          	cmp    r8,0x4
    d207:	74 30                	je     d239 <ft_memcpy+0xc9>
    d209:	49 83 f8 05          	cmp    r8,0x5
    d20d:	74 1a                	je     d229 <ft_memcpy+0xb9>
    d20f:	49 83 f8 06          	cmp    r8,0x6
    d213:	0f 85 6d 07 00 00    	jne    d986 <ft_memcpy+0x816>
    d219:	c4 c1 7e 6f 34 3a    	vmovdqu ymm6,YMMWORD PTR [r10+rdi*1]
    d21f:	c4 c1 7e 7f 34 39    	vmovdqu YMMWORD PTR [r9+rdi*1],ymm6
    d225:	48 83 ef 20          	sub    rdi,0x20
    d229:	c4 c1 7e 6f 14 3a    	vmovdqu ymm2,YMMWORD PTR [r10+rdi*1]
    d22f:	c4 c1 7e 7f 14 39    	vmovdqu YMMWORD PTR [r9+rdi*1],ymm2
    d235:	48 83 ef 20          	sub    rdi,0x20
    d239:	c4 c1 7e 6f 04 3a    	vmovdqu ymm0,YMMWORD PTR [r10+rdi*1]
    d23f:	c4 c1 7e 7f 04 39    	vmovdqu YMMWORD PTR [r9+rdi*1],ymm0
    d245:	48 83 ef 20          	sub    rdi,0x20
    d249:	c4 c1 7e 6f 24 3a    	vmovdqu ymm4,YMMWORD PTR [r10+rdi*1]
    d24f:	c4 c1 7e 7f 24 39    	vmovdqu YMMWORD PTR [r9+rdi*1],ymm4
    d255:	48 83 ef 20          	sub    rdi,0x20
    d259:	c4 c1 7e 6f 0c 3a    	vmovdqu ymm1,YMMWORD PTR [r10+rdi*1]
    d25f:	c4 c1 7e 7f 0c 39    	vmovdqu YMMWORD PTR [r9+rdi*1],ymm1
    d265:	48 83 ef 20          	sub    rdi,0x20
    d269:	c4 c1 7e 6f 2c 3a    	vmovdqu ymm5,YMMWORD PTR [r10+rdi*1]
    d26f:	c4 c1 7e 7f 2c 39    	vmovdqu YMMWORD PTR [r9+rdi*1],ymm5
    d275:	48 83 ef 20          	sub    rdi,0x20
    d279:	49 39 fb             	cmp    r11,rdi
    d27c:	0f 84 90 00 00 00    	je     d312 <ft_memcpy+0x1a2>
    d282:	c4 c1 7e 6f 3c 3a    	vmovdqu ymm7,YMMWORD PTR [r10+rdi*1]
    d288:	c4 c1 7e 7f 3c 39    	vmovdqu YMMWORD PTR [r9+rdi*1],ymm7
    d28e:	c4 41 7e 6f 44 3a e0 	vmovdqu ymm8,YMMWORD PTR [r10+rdi*1-0x20]
    d295:	c4 41 7e 7f 44 39 e0 	vmovdqu YMMWORD PTR [r9+rdi*1-0x20],ymm8
    d29c:	c4 41 7e 6f 4c 3a c0 	vmovdqu ymm9,YMMWORD PTR [r10+rdi*1-0x40]
    d2a3:	c4 41 7e 7f 4c 39 c0 	vmovdqu YMMWORD PTR [r9+rdi*1-0x40],ymm9
    d2aa:	c4 41 7e 6f 54 3a a0 	vmovdqu ymm10,YMMWORD PTR [r10+rdi*1-0x60]
    d2b1:	c4 41 7e 7f 54 39 a0 	vmovdqu YMMWORD PTR [r9+rdi*1-0x60],ymm10
    d2b8:	c4 41 7e 6f 5c 3a 80 	vmovdqu ymm11,YMMWORD PTR [r10+rdi*1-0x80]
    d2bf:	c4 41 7e 7f 5c 39 80 	vmovdqu YMMWORD PTR [r9+rdi*1-0x80],ymm11
    d2c6:	c4 41 7e 6f a4 3a 60 	vmovdqu ymm12,YMMWORD PTR [r10+rdi*1-0xa0]
    d2cd:	ff ff ff 
    d2d0:	c4 41 7e 7f a4 39 60 	vmovdqu YMMWORD PTR [r9+rdi*1-0xa0],ymm12
    d2d7:	ff ff ff 
    d2da:	c4 41 7e 6f ac 3a 40 	vmovdqu ymm13,YMMWORD PTR [r10+rdi*1-0xc0]
    d2e1:	ff ff ff 
    d2e4:	c4 41 7e 7f ac 39 40 	vmovdqu YMMWORD PTR [r9+rdi*1-0xc0],ymm13
    d2eb:	ff ff ff 
    d2ee:	c4 41 7e 6f b4 3a 20 	vmovdqu ymm14,YMMWORD PTR [r10+rdi*1-0xe0]
    d2f5:	ff ff ff 
    d2f8:	c4 41 7e 7f b4 39 20 	vmovdqu YMMWORD PTR [r9+rdi*1-0xe0],ymm14
    d2ff:	ff ff ff 
    d302:	48 81 ef 00 01 00 00 	sub    rdi,0x100
    d309:	49 39 fb             	cmp    r11,rdi
    d30c:	0f 85 70 ff ff ff    	jne    d282 <ft_memcpy+0x112>
    d312:	49 89 f1             	mov    r9,rsi
    d315:	49 83 e1 e0          	and    r9,0xffffffffffffffe0
    d319:	4c 29 ca             	sub    rdx,r9
    d31c:	4c 39 ce             	cmp    rsi,r9
    d31f:	0f 84 61 01 00 00    	je     d486 <ft_memcpy+0x316>
    d325:	4c 29 ce             	sub    rsi,r9
    d328:	4c 8d 56 ff          	lea    r10,[rsi-0x1]
    d32c:	49 83 fa 0e          	cmp    r10,0xe
    d330:	0f 86 71 06 00 00    	jbe    d9a7 <ft_memcpy+0x837>
    d336:	c5 f8 77             	vzeroupper 
    d339:	c5 7a 6f 7c 31 f0    	vmovdqu xmm15,XMMWORD PTR [rcx+rsi*1-0x10]
    d33f:	49 89 f0             	mov    r8,rsi
    d342:	49 83 e0 f0          	and    r8,0xfffffffffffffff0
    d346:	c5 7a 7f 7c 30 f0    	vmovdqu XMMWORD PTR [rax+rsi*1-0x10],xmm15
    d34c:	4c 29 c2             	sub    rdx,r8
    d34f:	49 39 f0             	cmp    r8,rsi
    d352:	0f 84 31 01 00 00    	je     d489 <ft_memcpy+0x319>
    d358:	0f b6 34 11          	movzx  esi,BYTE PTR [rcx+rdx*1]
    d35c:	4c 8d 5a ff          	lea    r11,[rdx-0x1]
    d360:	40 88 34 10          	mov    BYTE PTR [rax+rdx*1],sil
    d364:	48 85 d2             	test   rdx,rdx
    d367:	0f 84 1c 01 00 00    	je     d489 <ft_memcpy+0x319>
    d36d:	0f b6 7c 11 ff       	movzx  edi,BYTE PTR [rcx+rdx*1-0x1]
    d372:	4c 8d 4a fe          	lea    r9,[rdx-0x2]
    d376:	40 88 7c 10 ff       	mov    BYTE PTR [rax+rdx*1-0x1],dil
    d37b:	4d 85 db             	test   r11,r11
    d37e:	0f 84 05 01 00 00    	je     d489 <ft_memcpy+0x319>
    d384:	44 0f b6 54 11 fe    	movzx  r10d,BYTE PTR [rcx+rdx*1-0x2]
    d38a:	4c 8d 42 fd          	lea    r8,[rdx-0x3]
    d38e:	44 88 54 10 fe       	mov    BYTE PTR [rax+rdx*1-0x2],r10b
    d393:	4d 85 c9             	test   r9,r9
    d396:	0f 84 ed 00 00 00    	je     d489 <ft_memcpy+0x319>
    d39c:	0f b6 74 11 fd       	movzx  esi,BYTE PTR [rcx+rdx*1-0x3]
    d3a1:	4c 8d 5a fc          	lea    r11,[rdx-0x4]
    d3a5:	40 88 74 10 fd       	mov    BYTE PTR [rax+rdx*1-0x3],sil
    d3aa:	4d 85 c0             	test   r8,r8
    d3ad:	0f 84 d6 00 00 00    	je     d489 <ft_memcpy+0x319>
    d3b3:	0f b6 7c 11 fc       	movzx  edi,BYTE PTR [rcx+rdx*1-0x4]
    d3b8:	4c 8d 4a fb          	lea    r9,[rdx-0x5]
    d3bc:	40 88 7c 10 fc       	mov    BYTE PTR [rax+rdx*1-0x4],dil
    d3c1:	4d 85 db             	test   r11,r11
    d3c4:	0f 84 bf 00 00 00    	je     d489 <ft_memcpy+0x319>
    d3ca:	44 0f b6 54 11 fb    	movzx  r10d,BYTE PTR [rcx+rdx*1-0x5]
    d3d0:	4c 8d 42 fa          	lea    r8,[rdx-0x6]
    d3d4:	44 88 54 10 fb       	mov    BYTE PTR [rax+rdx*1-0x5],r10b
    d3d9:	4d 85 c9             	test   r9,r9
    d3dc:	0f 84 a7 00 00 00    	je     d489 <ft_memcpy+0x319>
    d3e2:	0f b6 74 11 fa       	movzx  esi,BYTE PTR [rcx+rdx*1-0x6]
    d3e7:	4c 8d 5a f9          	lea    r11,[rdx-0x7]
    d3eb:	40 88 74 10 fa       	mov    BYTE PTR [rax+rdx*1-0x6],sil
    d3f0:	4d 85 c0             	test   r8,r8
    d3f3:	0f 84 90 00 00 00    	je     d489 <ft_memcpy+0x319>
    d3f9:	0f b6 7c 11 f9       	movzx  edi,BYTE PTR [rcx+rdx*1-0x7]
    d3fe:	4c 8d 4a f8          	lea    r9,[rdx-0x8]
    d402:	40 88 7c 10 f9       	mov    BYTE PTR [rax+rdx*1-0x7],dil
    d407:	4d 85 db             	test   r11,r11
    d40a:	74 7d                	je     d489 <ft_memcpy+0x319>
    d40c:	44 0f b6 54 11 f8    	movzx  r10d,BYTE PTR [rcx+rdx*1-0x8]
    d412:	4c 8d 42 f7          	lea    r8,[rdx-0x9]
    d416:	44 88 54 10 f8       	mov    BYTE PTR [rax+rdx*1-0x8],r10b
    d41b:	4d 85 c9             	test   r9,r9
    d41e:	74 69                	je     d489 <ft_memcpy+0x319>
    d420:	0f b6 74 11 f7       	movzx  esi,BYTE PTR [rcx+rdx*1-0x9]
    d425:	4c 8d 5a f6          	lea    r11,[rdx-0xa]
    d429:	40 88 74 10 f7       	mov    BYTE PTR [rax+rdx*1-0x9],sil
    d42e:	4d 85 c0             	test   r8,r8
    d431:	74 56                	je     d489 <ft_memcpy+0x319>
    d433:	0f b6 7c 11 f6       	movzx  edi,BYTE PTR [rcx+rdx*1-0xa]
    d438:	4c 8d 4a f5          	lea    r9,[rdx-0xb]
    d43c:	40 88 7c 10 f6       	mov    BYTE PTR [rax+rdx*1-0xa],dil
    d441:	4d 85 db             	test   r11,r11
    d444:	74 43                	je     d489 <ft_memcpy+0x319>
    d446:	44 0f b6 54 11 f5    	movzx  r10d,BYTE PTR [rcx+rdx*1-0xb]
    d44c:	4c 8d 42 f4          	lea    r8,[rdx-0xc]
    d450:	44 88 54 10 f5       	mov    BYTE PTR [rax+rdx*1-0xb],r10b
    d455:	4d 85 c9             	test   r9,r9
    d458:	74 2f                	je     d489 <ft_memcpy+0x319>
    d45a:	0f b6 74 11 f4       	movzx  esi,BYTE PTR [rcx+rdx*1-0xc]
    d45f:	4c 8d 5a f3          	lea    r11,[rdx-0xd]
    d463:	40 88 74 10 f4       	mov    BYTE PTR [rax+rdx*1-0xc],sil
    d468:	4d 85 c0             	test   r8,r8
    d46b:	74 1c                	je     d489 <ft_memcpy+0x319>
    d46d:	0f b6 7c 11 f3       	movzx  edi,BYTE PTR [rcx+rdx*1-0xd]
    d472:	40 88 7c 10 f3       	mov    BYTE PTR [rax+rdx*1-0xd],dil
    d477:	4d 85 db             	test   r11,r11
    d47a:	74 0d                	je     d489 <ft_memcpy+0x319>
    d47c:	0f b6 4c 11 f2       	movzx  ecx,BYTE PTR [rcx+rdx*1-0xe]
    d481:	88 4c 10 f2          	mov    BYTE PTR [rax+rdx*1-0xe],cl
    d485:	c3                   	ret    
    d486:	c5 f8 77             	vzeroupper 
    d489:	c3                   	ret    
    d48a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    d490:	4c 8d 41 01          	lea    r8,[rcx+0x1]
    d494:	4c 29 c7             	sub    rdi,r8
    d497:	48 83 ff 1e          	cmp    rdi,0x1e
    d49b:	0f 86 ef 03 00 00    	jbe    d890 <ft_memcpy+0x720>
    d4a1:	48 83 fa 0e          	cmp    rdx,0xe
    d4a5:	0f 86 e5 03 00 00    	jbe    d890 <ft_memcpy+0x720>
    d4ab:	48 83 fa 1e          	cmp    rdx,0x1e
    d4af:	0f 86 e7 04 00 00    	jbe    d99c <ft_memcpy+0x82c>
    d4b5:	49 89 f1             	mov    r9,rsi
    d4b8:	45 31 db             	xor    r11d,r11d
    d4bb:	49 83 e1 e0          	and    r9,0xffffffffffffffe0
    d4bf:	4d 8d 51 e0          	lea    r10,[r9-0x20]
    d4c3:	49 c1 ea 05          	shr    r10,0x5
    d4c7:	49 83 c2 01          	add    r10,0x1
    d4cb:	41 83 e2 07          	and    r10d,0x7
    d4cf:	0f 84 9b 00 00 00    	je     d570 <ft_memcpy+0x400>
    d4d5:	49 83 fa 01          	cmp    r10,0x1
    d4d9:	74 7c                	je     d557 <ft_memcpy+0x3e7>
    d4db:	49 83 fa 02          	cmp    r10,0x2
    d4df:	74 66                	je     d547 <ft_memcpy+0x3d7>
    d4e1:	49 83 fa 03          	cmp    r10,0x3
    d4e5:	74 50                	je     d537 <ft_memcpy+0x3c7>
    d4e7:	49 83 fa 04          	cmp    r10,0x4
    d4eb:	74 3a                	je     d527 <ft_memcpy+0x3b7>
    d4ed:	49 83 fa 05          	cmp    r10,0x5
    d4f1:	74 24                	je     d517 <ft_memcpy+0x3a7>
    d4f3:	49 83 fa 06          	cmp    r10,0x6
    d4f7:	74 0e                	je     d507 <ft_memcpy+0x397>
    d4f9:	c5 fe 6f 19          	vmovdqu ymm3,YMMWORD PTR [rcx]
    d4fd:	41 bb 20 00 00 00    	mov    r11d,0x20
    d503:	c5 fe 7f 18          	vmovdqu YMMWORD PTR [rax],ymm3
    d507:	c4 a1 7e 6f 34 19    	vmovdqu ymm6,YMMWORD PTR [rcx+r11*1]
    d50d:	c4 a1 7e 7f 34 18    	vmovdqu YMMWORD PTR [rax+r11*1],ymm6
    d513:	49 83 c3 20          	add    r11,0x20
    d517:	c4 a1 7e 6f 14 19    	vmovdqu ymm2,YMMWORD PTR [rcx+r11*1]
    d51d:	c4 a1 7e 7f 14 18    	vmovdqu YMMWORD PTR [rax+r11*1],ymm2
    d523:	49 83 c3 20          	add    r11,0x20
    d527:	c4 a1 7e 6f 04 19    	vmovdqu ymm0,YMMWORD PTR [rcx+r11*1]
    d52d:	c4 a1 7e 7f 04 18    	vmovdqu YMMWORD PTR [rax+r11*1],ymm0
    d533:	49 83 c3 20          	add    r11,0x20
    d537:	c4 a1 7e 6f 24 19    	vmovdqu ymm4,YMMWORD PTR [rcx+r11*1]
    d53d:	c4 a1 7e 7f 24 18    	vmovdqu YMMWORD PTR [rax+r11*1],ymm4
    d543:	49 83 c3 20          	add    r11,0x20
    d547:	c4 a1 7e 6f 0c 19    	vmovdqu ymm1,YMMWORD PTR [rcx+r11*1]
    d54d:	c4 a1 7e 7f 0c 18    	vmovdqu YMMWORD PTR [rax+r11*1],ymm1
    d553:	49 83 c3 20          	add    r11,0x20
    d557:	c4 a1 7e 6f 2c 19    	vmovdqu ymm5,YMMWORD PTR [rcx+r11*1]
    d55d:	c4 a1 7e 7f 2c 18    	vmovdqu YMMWORD PTR [rax+r11*1],ymm5
    d563:	49 83 c3 20          	add    r11,0x20
    d567:	4d 39 cb             	cmp    r11,r9
    d56a:	0f 84 96 00 00 00    	je     d606 <ft_memcpy+0x496>
    d570:	c4 a1 7e 6f 3c 19    	vmovdqu ymm7,YMMWORD PTR [rcx+r11*1]
    d576:	c4 a1 7e 7f 3c 18    	vmovdqu YMMWORD PTR [rax+r11*1],ymm7
    d57c:	c4 21 7e 6f 44 19 20 	vmovdqu ymm8,YMMWORD PTR [rcx+r11*1+0x20]
    d583:	c4 21 7e 7f 44 18 20 	vmovdqu YMMWORD PTR [rax+r11*1+0x20],ymm8
    d58a:	c4 21 7e 6f 4c 19 40 	vmovdqu ymm9,YMMWORD PTR [rcx+r11*1+0x40]
    d591:	c4 21 7e 7f 4c 18 40 	vmovdqu YMMWORD PTR [rax+r11*1+0x40],ymm9
    d598:	c4 21 7e 6f 54 19 60 	vmovdqu ymm10,YMMWORD PTR [rcx+r11*1+0x60]
    d59f:	c4 21 7e 7f 54 18 60 	vmovdqu YMMWORD PTR [rax+r11*1+0x60],ymm10
    d5a6:	c4 21 7e 6f 9c 19 80 	vmovdqu ymm11,YMMWORD PTR [rcx+r11*1+0x80]
    d5ad:	00 00 00 
    d5b0:	c4 21 7e 7f 9c 18 80 	vmovdqu YMMWORD PTR [rax+r11*1+0x80],ymm11
    d5b7:	00 00 00 
    d5ba:	c4 21 7e 6f a4 19 a0 	vmovdqu ymm12,YMMWORD PTR [rcx+r11*1+0xa0]
    d5c1:	00 00 00 
    d5c4:	c4 21 7e 7f a4 18 a0 	vmovdqu YMMWORD PTR [rax+r11*1+0xa0],ymm12
    d5cb:	00 00 00 
    d5ce:	c4 21 7e 6f ac 19 c0 	vmovdqu ymm13,YMMWORD PTR [rcx+r11*1+0xc0]
    d5d5:	00 00 00 
    d5d8:	c4 21 7e 7f ac 18 c0 	vmovdqu YMMWORD PTR [rax+r11*1+0xc0],ymm13
    d5df:	00 00 00 
    d5e2:	c4 21 7e 6f b4 19 e0 	vmovdqu ymm14,YMMWORD PTR [rcx+r11*1+0xe0]
    d5e9:	00 00 00 
    d5ec:	c4 21 7e 7f b4 18 e0 	vmovdqu YMMWORD PTR [rax+r11*1+0xe0],ymm14
    d5f3:	00 00 00 
    d5f6:	49 81 c3 00 01 00 00 	add    r11,0x100
    d5fd:	4d 39 cb             	cmp    r11,r9
    d600:	0f 85 6a ff ff ff    	jne    d570 <ft_memcpy+0x400>
    d606:	48 89 f2             	mov    rdx,rsi
    d609:	48 83 e2 e0          	and    rdx,0xffffffffffffffe0
    d60d:	40 f6 c6 1f          	test   sil,0x1f
    d611:	0f 84 6f fe ff ff    	je     d486 <ft_memcpy+0x316>
    d617:	48 89 f7             	mov    rdi,rsi
    d61a:	48 29 d7             	sub    rdi,rdx
    d61d:	4c 8d 47 ff          	lea    r8,[rdi-0x1]
    d621:	49 83 f8 0e          	cmp    r8,0xe
    d625:	0f 86 84 03 00 00    	jbe    d9af <ft_memcpy+0x83f>
    d62b:	c5 f8 77             	vzeroupper 
    d62e:	c5 7a 6f 3c 11       	vmovdqu xmm15,XMMWORD PTR [rcx+rdx*1]
    d633:	49 89 f9             	mov    r9,rdi
    d636:	49 83 e1 f0          	and    r9,0xfffffffffffffff0
    d63a:	c5 7a 7f 3c 10       	vmovdqu XMMWORD PTR [rax+rdx*1],xmm15
    d63f:	4c 01 ca             	add    rdx,r9
    d642:	4c 39 cf             	cmp    rdi,r9
    d645:	0f 84 3e fe ff ff    	je     d489 <ft_memcpy+0x319>
    d64b:	44 0f b6 14 11       	movzx  r10d,BYTE PTR [rcx+rdx*1]
    d650:	4c 8d 5a 01          	lea    r11,[rdx+0x1]
    d654:	44 88 14 10          	mov    BYTE PTR [rax+rdx*1],r10b
    d658:	4c 39 de             	cmp    rsi,r11
    d65b:	0f 86 28 fe ff ff    	jbe    d489 <ft_memcpy+0x319>
    d661:	0f b6 7c 11 01       	movzx  edi,BYTE PTR [rcx+rdx*1+0x1]
    d666:	4c 8d 42 02          	lea    r8,[rdx+0x2]
    d66a:	40 88 7c 10 01       	mov    BYTE PTR [rax+rdx*1+0x1],dil
    d66f:	4c 39 c6             	cmp    rsi,r8
    d672:	0f 86 11 fe ff ff    	jbe    d489 <ft_memcpy+0x319>
    d678:	44 0f b6 4c 11 02    	movzx  r9d,BYTE PTR [rcx+rdx*1+0x2]
    d67e:	4c 8d 52 03          	lea    r10,[rdx+0x3]
    d682:	44 88 4c 10 02       	mov    BYTE PTR [rax+rdx*1+0x2],r9b
    d687:	4c 39 d6             	cmp    rsi,r10
    d68a:	0f 86 f9 fd ff ff    	jbe    d489 <ft_memcpy+0x319>
    d690:	44 0f b6 5c 11 03    	movzx  r11d,BYTE PTR [rcx+rdx*1+0x3]
    d696:	48 8d 7a 04          	lea    rdi,[rdx+0x4]
    d69a:	44 88 5c 10 03       	mov    BYTE PTR [rax+rdx*1+0x3],r11b
    d69f:	48 39 fe             	cmp    rsi,rdi
    d6a2:	0f 86 e1 fd ff ff    	jbe    d489 <ft_memcpy+0x319>
    d6a8:	44 0f b6 44 11 04    	movzx  r8d,BYTE PTR [rcx+rdx*1+0x4]
    d6ae:	4c 8d 4a 05          	lea    r9,[rdx+0x5]
    d6b2:	44 88 44 10 04       	mov    BYTE PTR [rax+rdx*1+0x4],r8b
    d6b7:	4c 39 ce             	cmp    rsi,r9
    d6ba:	0f 86 c9 fd ff ff    	jbe    d489 <ft_memcpy+0x319>
    d6c0:	44 0f b6 54 11 05    	movzx  r10d,BYTE PTR [rcx+rdx*1+0x5]
    d6c6:	4c 8d 5a 06          	lea    r11,[rdx+0x6]
    d6ca:	44 88 54 10 05       	mov    BYTE PTR [rax+rdx*1+0x5],r10b
    d6cf:	4c 39 de             	cmp    rsi,r11
    d6d2:	0f 86 b1 fd ff ff    	jbe    d489 <ft_memcpy+0x319>
    d6d8:	0f b6 7c 11 06       	movzx  edi,BYTE PTR [rcx+rdx*1+0x6]
    d6dd:	4c 8d 42 07          	lea    r8,[rdx+0x7]
    d6e1:	40 88 7c 10 06       	mov    BYTE PTR [rax+rdx*1+0x6],dil
    d6e6:	4c 39 c6             	cmp    rsi,r8
    d6e9:	0f 86 9a fd ff ff    	jbe    d489 <ft_memcpy+0x319>
    d6ef:	44 0f b6 4c 11 07    	movzx  r9d,BYTE PTR [rcx+rdx*1+0x7]
    d6f5:	4c 8d 52 08          	lea    r10,[rdx+0x8]
    d6f9:	44 88 4c 10 07       	mov    BYTE PTR [rax+rdx*1+0x7],r9b
    d6fe:	4c 39 d6             	cmp    rsi,r10
    d701:	0f 86 82 fd ff ff    	jbe    d489 <ft_memcpy+0x319>
    d707:	44 0f b6 5c 11 08    	movzx  r11d,BYTE PTR [rcx+rdx*1+0x8]
    d70d:	48 8d 7a 09          	lea    rdi,[rdx+0x9]
    d711:	44 88 5c 10 08       	mov    BYTE PTR [rax+rdx*1+0x8],r11b
    d716:	48 39 fe             	cmp    rsi,rdi
    d719:	0f 86 6a fd ff ff    	jbe    d489 <ft_memcpy+0x319>
    d71f:	44 0f b6 44 11 09    	movzx  r8d,BYTE PTR [rcx+rdx*1+0x9]
    d725:	4c 8d 4a 0a          	lea    r9,[rdx+0xa]
    d729:	44 88 44 10 09       	mov    BYTE PTR [rax+rdx*1+0x9],r8b
    d72e:	4c 39 ce             	cmp    rsi,r9
    d731:	0f 86 52 fd ff ff    	jbe    d489 <ft_memcpy+0x319>
    d737:	44 0f b6 54 11 0a    	movzx  r10d,BYTE PTR [rcx+rdx*1+0xa]
    d73d:	4c 8d 5a 0b          	lea    r11,[rdx+0xb]
    d741:	44 88 54 10 0a       	mov    BYTE PTR [rax+rdx*1+0xa],r10b
    d746:	4c 39 de             	cmp    rsi,r11
    d749:	0f 86 3a fd ff ff    	jbe    d489 <ft_memcpy+0x319>
    d74f:	0f b6 7c 11 0b       	movzx  edi,BYTE PTR [rcx+rdx*1+0xb]
    d754:	4c 8d 42 0c          	lea    r8,[rdx+0xc]
    d758:	40 88 7c 10 0b       	mov    BYTE PTR [rax+rdx*1+0xb],dil
    d75d:	4c 39 c6             	cmp    rsi,r8
    d760:	0f 86 23 fd ff ff    	jbe    d489 <ft_memcpy+0x319>
    d766:	44 0f b6 4c 11 0c    	movzx  r9d,BYTE PTR [rcx+rdx*1+0xc]
    d76c:	4c 8d 52 0d          	lea    r10,[rdx+0xd]
    d770:	44 88 4c 10 0c       	mov    BYTE PTR [rax+rdx*1+0xc],r9b
    d775:	4c 39 d6             	cmp    rsi,r10
    d778:	0f 86 0b fd ff ff    	jbe    d489 <ft_memcpy+0x319>
    d77e:	44 0f b6 5c 11 0d    	movzx  r11d,BYTE PTR [rcx+rdx*1+0xd]
    d784:	48 8d 7a 0e          	lea    rdi,[rdx+0xe]
    d788:	44 88 5c 10 0d       	mov    BYTE PTR [rax+rdx*1+0xd],r11b
    d78d:	48 39 fe             	cmp    rsi,rdi
    d790:	0f 86 f3 fc ff ff    	jbe    d489 <ft_memcpy+0x319>
    d796:	0f b6 4c 11 0e       	movzx  ecx,BYTE PTR [rcx+rdx*1+0xe]
    d79b:	88 4c 10 0e          	mov    BYTE PTR [rax+rdx*1+0xe],cl
    d79f:	c3                   	ret    
    d7a0:	4c 8d 4a 01          	lea    r9,[rdx+0x1]
    d7a4:	41 83 e1 07          	and    r9d,0x7
    d7a8:	0f 84 83 00 00 00    	je     d831 <ft_memcpy+0x6c1>
    d7ae:	49 83 f9 01          	cmp    r9,0x1
    d7b2:	74 6a                	je     d81e <ft_memcpy+0x6ae>
    d7b4:	49 83 f9 02          	cmp    r9,0x2
    d7b8:	74 57                	je     d811 <ft_memcpy+0x6a1>
    d7ba:	49 83 f9 03          	cmp    r9,0x3
    d7be:	74 45                	je     d805 <ft_memcpy+0x695>
    d7c0:	49 83 f9 04          	cmp    r9,0x4
    d7c4:	74 32                	je     d7f8 <ft_memcpy+0x688>
    d7c6:	49 83 f9 05          	cmp    r9,0x5
    d7ca:	74 20                	je     d7ec <ft_memcpy+0x67c>
    d7cc:	49 83 f9 06          	cmp    r9,0x6
    d7d0:	74 0d                	je     d7df <ft_memcpy+0x66f>
    d7d2:	44 0f b6 14 11       	movzx  r10d,BYTE PTR [rcx+rdx*1]
    d7d7:	44 88 14 10          	mov    BYTE PTR [rax+rdx*1],r10b
    d7db:	48 83 ea 01          	sub    rdx,0x1
    d7df:	44 0f b6 04 11       	movzx  r8d,BYTE PTR [rcx+rdx*1]
    d7e4:	44 88 04 10          	mov    BYTE PTR [rax+rdx*1],r8b
    d7e8:	48 83 ea 01          	sub    rdx,0x1
    d7ec:	0f b6 34 11          	movzx  esi,BYTE PTR [rcx+rdx*1]
    d7f0:	40 88 34 10          	mov    BYTE PTR [rax+rdx*1],sil
    d7f4:	48 83 ea 01          	sub    rdx,0x1
    d7f8:	44 0f b6 1c 11       	movzx  r11d,BYTE PTR [rcx+rdx*1]
    d7fd:	44 88 1c 10          	mov    BYTE PTR [rax+rdx*1],r11b
    d801:	48 83 ea 01          	sub    rdx,0x1
    d805:	0f b6 3c 11          	movzx  edi,BYTE PTR [rcx+rdx*1]
    d809:	40 88 3c 10          	mov    BYTE PTR [rax+rdx*1],dil
    d80d:	48 83 ea 01          	sub    rdx,0x1
    d811:	44 0f b6 0c 11       	movzx  r9d,BYTE PTR [rcx+rdx*1]
    d816:	44 88 0c 10          	mov    BYTE PTR [rax+rdx*1],r9b
    d81a:	48 83 ea 01          	sub    rdx,0x1
    d81e:	44 0f b6 14 11       	movzx  r10d,BYTE PTR [rcx+rdx*1]
    d823:	44 88 14 10          	mov    BYTE PTR [rax+rdx*1],r10b
    d827:	48 83 ea 01          	sub    rdx,0x1
    d82b:	0f 82 75 01 00 00    	jb     d9a6 <ft_memcpy+0x836>
    d831:	44 0f b6 04 11       	movzx  r8d,BYTE PTR [rcx+rdx*1]
    d836:	44 88 04 10          	mov    BYTE PTR [rax+rdx*1],r8b
    d83a:	0f b6 74 11 ff       	movzx  esi,BYTE PTR [rcx+rdx*1-0x1]
    d83f:	40 88 74 10 ff       	mov    BYTE PTR [rax+rdx*1-0x1],sil
    d844:	44 0f b6 5c 11 fe    	movzx  r11d,BYTE PTR [rcx+rdx*1-0x2]
    d84a:	44 88 5c 10 fe       	mov    BYTE PTR [rax+rdx*1-0x2],r11b
    d84f:	0f b6 7c 11 fd       	movzx  edi,BYTE PTR [rcx+rdx*1-0x3]
    d854:	40 88 7c 10 fd       	mov    BYTE PTR [rax+rdx*1-0x3],dil
    d859:	44 0f b6 4c 11 fc    	movzx  r9d,BYTE PTR [rcx+rdx*1-0x4]
    d85f:	44 88 4c 10 fc       	mov    BYTE PTR [rax+rdx*1-0x4],r9b
    d864:	44 0f b6 54 11 fb    	movzx  r10d,BYTE PTR [rcx+rdx*1-0x5]
    d86a:	44 88 54 10 fb       	mov    BYTE PTR [rax+rdx*1-0x5],r10b
    d86f:	44 0f b6 44 11 fa    	movzx  r8d,BYTE PTR [rcx+rdx*1-0x6]
    d875:	44 88 44 10 fa       	mov    BYTE PTR [rax+rdx*1-0x6],r8b
    d87a:	0f b6 74 11 f9       	movzx  esi,BYTE PTR [rcx+rdx*1-0x7]
    d87f:	40 88 74 10 f9       	mov    BYTE PTR [rax+rdx*1-0x7],sil
    d884:	48 83 ea 08          	sub    rdx,0x8
    d888:	48 83 fa ff          	cmp    rdx,0xffffffffffffffff
    d88c:	75 a3                	jne    d831 <ft_memcpy+0x6c1>
    d88e:	c3                   	ret    
    d88f:	90                   	nop
    d890:	49 89 f0             	mov    r8,rsi
    d893:	45 31 c9             	xor    r9d,r9d
    d896:	41 83 e0 07          	and    r8d,0x7
    d89a:	0f 84 86 00 00 00    	je     d926 <ft_memcpy+0x7b6>
    d8a0:	49 83 f8 01          	cmp    r8,0x1
    d8a4:	74 6a                	je     d910 <ft_memcpy+0x7a0>
    d8a6:	49 83 f8 02          	cmp    r8,0x2
    d8aa:	74 57                	je     d903 <ft_memcpy+0x793>
    d8ac:	49 83 f8 03          	cmp    r8,0x3
    d8b0:	74 44                	je     d8f6 <ft_memcpy+0x786>
    d8b2:	49 83 f8 04          	cmp    r8,0x4
    d8b6:	74 31                	je     d8e9 <ft_memcpy+0x779>
    d8b8:	49 83 f8 05          	cmp    r8,0x5
    d8bc:	74 1e                	je     d8dc <ft_memcpy+0x76c>
    d8be:	49 83 f8 06          	cmp    r8,0x6
    d8c2:	74 0b                	je     d8cf <ft_memcpy+0x75f>
    d8c4:	0f b6 11             	movzx  edx,BYTE PTR [rcx]
    d8c7:	41 b9 01 00 00 00    	mov    r9d,0x1
    d8cd:	88 10                	mov    BYTE PTR [rax],dl
    d8cf:	46 0f b6 14 09       	movzx  r10d,BYTE PTR [rcx+r9*1]
    d8d4:	46 88 14 08          	mov    BYTE PTR [rax+r9*1],r10b
    d8d8:	49 83 c1 01          	add    r9,0x1
    d8dc:	46 0f b6 1c 09       	movzx  r11d,BYTE PTR [rcx+r9*1]
    d8e1:	46 88 1c 08          	mov    BYTE PTR [rax+r9*1],r11b
    d8e5:	49 83 c1 01          	add    r9,0x1
    d8e9:	42 0f b6 3c 09       	movzx  edi,BYTE PTR [rcx+r9*1]
    d8ee:	42 88 3c 08          	mov    BYTE PTR [rax+r9*1],dil
    d8f2:	49 83 c1 01          	add    r9,0x1
    d8f6:	46 0f b6 04 09       	movzx  r8d,BYTE PTR [rcx+r9*1]
    d8fb:	46 88 04 08          	mov    BYTE PTR [rax+r9*1],r8b
    d8ff:	49 83 c1 01          	add    r9,0x1
    d903:	42 0f b6 14 09       	movzx  edx,BYTE PTR [rcx+r9*1]
    d908:	42 88 14 08          	mov    BYTE PTR [rax+r9*1],dl
    d90c:	49 83 c1 01          	add    r9,0x1
    d910:	46 0f b6 14 09       	movzx  r10d,BYTE PTR [rcx+r9*1]
    d915:	46 88 14 08          	mov    BYTE PTR [rax+r9*1],r10b
    d919:	49 83 c1 01          	add    r9,0x1
    d91d:	4c 39 ce             	cmp    rsi,r9
    d920:	0f 84 91 00 00 00    	je     d9b7 <ft_memcpy+0x847>
    d926:	46 0f b6 1c 09       	movzx  r11d,BYTE PTR [rcx+r9*1]
    d92b:	46 88 1c 08          	mov    BYTE PTR [rax+r9*1],r11b
    d92f:	42 0f b6 7c 09 01    	movzx  edi,BYTE PTR [rcx+r9*1+0x1]
    d935:	42 88 7c 08 01       	mov    BYTE PTR [rax+r9*1+0x1],dil
    d93a:	46 0f b6 44 09 02    	movzx  r8d,BYTE PTR [rcx+r9*1+0x2]
    d940:	46 88 44 08 02       	mov    BYTE PTR [rax+r9*1+0x2],r8b
    d945:	42 0f b6 54 09 03    	movzx  edx,BYTE PTR [rcx+r9*1+0x3]
    d94b:	42 88 54 08 03       	mov    BYTE PTR [rax+r9*1+0x3],dl
    d950:	46 0f b6 54 09 04    	movzx  r10d,BYTE PTR [rcx+r9*1+0x4]
    d956:	46 88 54 08 04       	mov    BYTE PTR [rax+r9*1+0x4],r10b
    d95b:	46 0f b6 5c 09 05    	movzx  r11d,BYTE PTR [rcx+r9*1+0x5]
    d961:	46 88 5c 08 05       	mov    BYTE PTR [rax+r9*1+0x5],r11b
    d966:	42 0f b6 7c 09 06    	movzx  edi,BYTE PTR [rcx+r9*1+0x6]
    d96c:	42 88 7c 08 06       	mov    BYTE PTR [rax+r9*1+0x6],dil
    d971:	46 0f b6 44 09 07    	movzx  r8d,BYTE PTR [rcx+r9*1+0x7]
    d977:	46 88 44 08 07       	mov    BYTE PTR [rax+r9*1+0x7],r8b
    d97c:	49 83 c1 08          	add    r9,0x8
    d980:	4c 39 ce             	cmp    rsi,r9
    d983:	75 a1                	jne    d926 <ft_memcpy+0x7b6>
    d985:	c3                   	ret    
    d986:	c4 c1 7e 6f 1a       	vmovdqu ymm3,YMMWORD PTR [r10]
    d98b:	48 c7 c7 e0 ff ff ff 	mov    rdi,0xffffffffffffffe0
    d992:	c4 c1 7e 7f 19       	vmovdqu YMMWORD PTR [r9],ymm3
    d997:	e9 7d f8 ff ff       	jmp    d219 <ft_memcpy+0xa9>
    d99c:	48 89 f7             	mov    rdi,rsi
    d99f:	31 d2                	xor    edx,edx
    d9a1:	e9 88 fc ff ff       	jmp    d62e <ft_memcpy+0x4be>
    d9a6:	c3                   	ret    
    d9a7:	c5 f8 77             	vzeroupper 
    d9aa:	e9 a9 f9 ff ff       	jmp    d358 <ft_memcpy+0x1e8>
    d9af:	c5 f8 77             	vzeroupper 
    d9b2:	e9 94 fc ff ff       	jmp    d64b <ft_memcpy+0x4db>
    d9b7:	c3                   	ret    
    d9b8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    d9bf:	00 

000000000000d9c0 <ft_strlcpy>:
    d9c0:	f3 0f 1e fa          	endbr64 
    d9c4:	41 54                	push   r12
    d9c6:	49 89 d4             	mov    r12,rdx
    d9c9:	55                   	push   rbp
    d9ca:	48 89 f5             	mov    rbp,rsi
    d9cd:	53                   	push   rbx
    d9ce:	48 89 fb             	mov    rbx,rdi
    d9d1:	48 89 f7             	mov    rdi,rsi
    d9d4:	e8 67 e1 ff ff       	call   bb40 <ft_strlen>
    d9d9:	49 89 c0             	mov    r8,rax
    d9dc:	4d 85 e4             	test   r12,r12
    d9df:	0f 84 9e 01 00 00    	je     db83 <ft_strlcpy+0x1c3>
    d9e5:	49 83 fc 01          	cmp    r12,0x1
    d9e9:	0f 84 91 01 00 00    	je     db80 <ft_strlcpy+0x1c0>
    d9ef:	4a 8d 54 23 ff       	lea    rdx,[rbx+r12*1-0x1]
    d9f4:	48 89 d0             	mov    rax,rdx
    d9f7:	48 29 d8             	sub    rax,rbx
    d9fa:	83 e0 07             	and    eax,0x7
    d9fd:	0f 84 e0 00 00 00    	je     dae3 <ft_strlcpy+0x123>
    da03:	48 83 f8 01          	cmp    rax,0x1
    da07:	0f 84 b3 00 00 00    	je     dac0 <ft_strlcpy+0x100>
    da0d:	48 83 f8 02          	cmp    rax,0x2
    da11:	0f 84 90 00 00 00    	je     daa7 <ft_strlcpy+0xe7>
    da17:	48 83 f8 03          	cmp    rax,0x3
    da1b:	74 71                	je     da8e <ft_strlcpy+0xce>
    da1d:	48 83 f8 04          	cmp    rax,0x4
    da21:	74 52                	je     da75 <ft_strlcpy+0xb5>
    da23:	48 83 f8 05          	cmp    rax,0x5
    da27:	74 34                	je     da5d <ft_strlcpy+0x9d>
    da29:	48 83 f8 06          	cmp    rax,0x6
    da2d:	74 16                	je     da45 <ft_strlcpy+0x85>
    da2f:	0f b6 4d 00          	movzx  ecx,BYTE PTR [rbp+0x0]
    da33:	84 c9                	test   cl,cl
    da35:	0f 84 45 01 00 00    	je     db80 <ft_strlcpy+0x1c0>
    da3b:	88 0b                	mov    BYTE PTR [rbx],cl
    da3d:	48 83 c3 01          	add    rbx,0x1
    da41:	48 83 c5 01          	add    rbp,0x1
    da45:	0f b6 75 00          	movzx  esi,BYTE PTR [rbp+0x0]
    da49:	40 84 f6             	test   sil,sil
    da4c:	0f 84 2e 01 00 00    	je     db80 <ft_strlcpy+0x1c0>
    da52:	40 88 33             	mov    BYTE PTR [rbx],sil
    da55:	48 83 c3 01          	add    rbx,0x1
    da59:	48 83 c5 01          	add    rbp,0x1
    da5d:	0f b6 7d 00          	movzx  edi,BYTE PTR [rbp+0x0]
    da61:	40 84 ff             	test   dil,dil
    da64:	0f 84 16 01 00 00    	je     db80 <ft_strlcpy+0x1c0>
    da6a:	40 88 3b             	mov    BYTE PTR [rbx],dil
    da6d:	48 83 c3 01          	add    rbx,0x1
    da71:	48 83 c5 01          	add    rbp,0x1
    da75:	44 0f b6 4d 00       	movzx  r9d,BYTE PTR [rbp+0x0]
    da7a:	45 84 c9             	test   r9b,r9b
    da7d:	0f 84 fd 00 00 00    	je     db80 <ft_strlcpy+0x1c0>
    da83:	44 88 0b             	mov    BYTE PTR [rbx],r9b
    da86:	48 83 c3 01          	add    rbx,0x1
    da8a:	48 83 c5 01          	add    rbp,0x1
    da8e:	44 0f b6 55 00       	movzx  r10d,BYTE PTR [rbp+0x0]
    da93:	45 84 d2             	test   r10b,r10b
    da96:	0f 84 e4 00 00 00    	je     db80 <ft_strlcpy+0x1c0>
    da9c:	44 88 13             	mov    BYTE PTR [rbx],r10b
    da9f:	48 83 c3 01          	add    rbx,0x1
    daa3:	48 83 c5 01          	add    rbp,0x1
    daa7:	44 0f b6 5d 00       	movzx  r11d,BYTE PTR [rbp+0x0]
    daac:	45 84 db             	test   r11b,r11b
    daaf:	0f 84 cb 00 00 00    	je     db80 <ft_strlcpy+0x1c0>
    dab5:	44 88 1b             	mov    BYTE PTR [rbx],r11b
    dab8:	48 83 c3 01          	add    rbx,0x1
    dabc:	48 83 c5 01          	add    rbp,0x1
    dac0:	44 0f b6 65 00       	movzx  r12d,BYTE PTR [rbp+0x0]
    dac5:	45 84 e4             	test   r12b,r12b
    dac8:	0f 84 b2 00 00 00    	je     db80 <ft_strlcpy+0x1c0>
    dace:	48 83 c3 01          	add    rbx,0x1
    dad2:	48 83 c5 01          	add    rbp,0x1
    dad6:	44 88 63 ff          	mov    BYTE PTR [rbx-0x1],r12b
    dada:	48 39 da             	cmp    rdx,rbx
    dadd:	0f 84 9d 00 00 00    	je     db80 <ft_strlcpy+0x1c0>
    dae3:	0f b6 4d 00          	movzx  ecx,BYTE PTR [rbp+0x0]
    dae7:	84 c9                	test   cl,cl
    dae9:	0f 84 91 00 00 00    	je     db80 <ft_strlcpy+0x1c0>
    daef:	88 0b                	mov    BYTE PTR [rbx],cl
    daf1:	0f b6 75 01          	movzx  esi,BYTE PTR [rbp+0x1]
    daf5:	48 8d 43 01          	lea    rax,[rbx+0x1]
    daf9:	48 89 c3             	mov    rbx,rax
    dafc:	40 84 f6             	test   sil,sil
    daff:	74 7f                	je     db80 <ft_strlcpy+0x1c0>
    db01:	40 88 33             	mov    BYTE PTR [rbx],sil
    db04:	0f b6 7d 02          	movzx  edi,BYTE PTR [rbp+0x2]
    db08:	48 83 c3 01          	add    rbx,0x1
    db0c:	40 84 ff             	test   dil,dil
    db0f:	74 6f                	je     db80 <ft_strlcpy+0x1c0>
    db11:	40 88 78 01          	mov    BYTE PTR [rax+0x1],dil
    db15:	44 0f b6 4d 03       	movzx  r9d,BYTE PTR [rbp+0x3]
    db1a:	48 8d 58 02          	lea    rbx,[rax+0x2]
    db1e:	45 84 c9             	test   r9b,r9b
    db21:	74 5d                	je     db80 <ft_strlcpy+0x1c0>
    db23:	44 88 48 02          	mov    BYTE PTR [rax+0x2],r9b
    db27:	44 0f b6 55 04       	movzx  r10d,BYTE PTR [rbp+0x4]
    db2c:	48 8d 58 03          	lea    rbx,[rax+0x3]
    db30:	45 84 d2             	test   r10b,r10b
    db33:	74 4b                	je     db80 <ft_strlcpy+0x1c0>
    db35:	44 88 50 03          	mov    BYTE PTR [rax+0x3],r10b
    db39:	44 0f b6 5d 05       	movzx  r11d,BYTE PTR [rbp+0x5]
    db3e:	48 8d 58 04          	lea    rbx,[rax+0x4]
    db42:	45 84 db             	test   r11b,r11b
    db45:	74 39                	je     db80 <ft_strlcpy+0x1c0>
    db47:	44 88 58 04          	mov    BYTE PTR [rax+0x4],r11b
    db4b:	44 0f b6 65 06       	movzx  r12d,BYTE PTR [rbp+0x6]
    db50:	48 8d 58 05          	lea    rbx,[rax+0x5]
    db54:	45 84 e4             	test   r12b,r12b
    db57:	74 27                	je     db80 <ft_strlcpy+0x1c0>
    db59:	44 88 60 05          	mov    BYTE PTR [rax+0x5],r12b
    db5d:	0f b6 4d 07          	movzx  ecx,BYTE PTR [rbp+0x7]
    db61:	48 8d 58 06          	lea    rbx,[rax+0x6]
    db65:	84 c9                	test   cl,cl
    db67:	74 17                	je     db80 <ft_strlcpy+0x1c0>
    db69:	48 8d 58 07          	lea    rbx,[rax+0x7]
    db6d:	48 83 c5 08          	add    rbp,0x8
    db71:	88 4b ff             	mov    BYTE PTR [rbx-0x1],cl
    db74:	48 39 da             	cmp    rdx,rbx
    db77:	0f 85 66 ff ff ff    	jne    dae3 <ft_strlcpy+0x123>
    db7d:	0f 1f 00             	nop    DWORD PTR [rax]
    db80:	c6 03 00             	mov    BYTE PTR [rbx],0x0
    db83:	5b                   	pop    rbx
    db84:	4c 89 c0             	mov    rax,r8
    db87:	5d                   	pop    rbp
    db88:	41 5c                	pop    r12
    db8a:	c3                   	ret    
    db8b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000db90 <ft_calloc>:
    db90:	f3 0f 1e fa          	endbr64 
    db94:	48 85 ff             	test   rdi,rdi
    db97:	74 47                	je     dbe0 <ft_calloc+0x50>
    db99:	48 85 f6             	test   rsi,rsi
    db9c:	74 42                	je     dbe0 <ft_calloc+0x50>
    db9e:	41 55                	push   r13
    dba0:	48 89 f8             	mov    rax,rdi
    dba3:	41 54                	push   r12
    dba5:	48 83 ec 08          	sub    rsp,0x8
    dba9:	48 f7 e6             	mul    rsi
    dbac:	49 89 c4             	mov    r12,rax
    dbaf:	70 36                	jo     dbe7 <ft_calloc+0x57>
    dbb1:	48 89 c7             	mov    rdi,rax
    dbb4:	e8 57 4a ff ff       	call   2610 <malloc@plt>
    dbb9:	49 89 c5             	mov    r13,rax
    dbbc:	48 85 c0             	test   rax,rax
    dbbf:	74 0b                	je     dbcc <ft_calloc+0x3c>
    dbc1:	4c 89 e6             	mov    rsi,r12
    dbc4:	48 89 c7             	mov    rdi,rax
    dbc7:	e8 74 0e 00 00       	call   ea40 <ft_bzero>
    dbcc:	48 83 c4 08          	add    rsp,0x8
    dbd0:	4c 89 e8             	mov    rax,r13
    dbd3:	41 5c                	pop    r12
    dbd5:	41 5d                	pop    r13
    dbd7:	c3                   	ret    
    dbd8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    dbdf:	00 
    dbe0:	31 ff                	xor    edi,edi
    dbe2:	e9 29 4a ff ff       	jmp    2610 <malloc@plt>
    dbe7:	45 31 ed             	xor    r13d,r13d
    dbea:	eb e0                	jmp    dbcc <ft_calloc+0x3c>
    dbec:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000dbf0 <ft_strdup>:
    dbf0:	f3 0f 1e fa          	endbr64 
    dbf4:	41 55                	push   r13
    dbf6:	41 54                	push   r12
    dbf8:	55                   	push   rbp
    dbf9:	48 89 fd             	mov    rbp,rdi
    dbfc:	e8 3f df ff ff       	call   bb40 <ft_strlen>
    dc01:	4c 8d 68 01          	lea    r13,[rax+0x1]
    dc05:	4c 89 ef             	mov    rdi,r13
    dc08:	e8 03 4a ff ff       	call   2610 <malloc@plt>
    dc0d:	49 89 c4             	mov    r12,rax
    dc10:	48 85 c0             	test   rax,rax
    dc13:	74 0e                	je     dc23 <ft_strdup+0x33>
    dc15:	4c 89 ea             	mov    rdx,r13
    dc18:	48 89 ee             	mov    rsi,rbp
    dc1b:	48 89 c7             	mov    rdi,rax
    dc1e:	e8 9d fd ff ff       	call   d9c0 <ft_strlcpy>
    dc23:	4c 89 e0             	mov    rax,r12
    dc26:	5d                   	pop    rbp
    dc27:	41 5c                	pop    r12
    dc29:	41 5d                	pop    r13
    dc2b:	c3                   	ret    
    dc2c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000dc30 <ft_strndup_malloc>:
    dc30:	f3 0f 1e fa          	endbr64 
    dc34:	55                   	push   rbp
    dc35:	48 89 f5             	mov    rbp,rsi
    dc38:	53                   	push   rbx
    dc39:	48 89 fb             	mov    rbx,rdi
    dc3c:	48 8d 7e 01          	lea    rdi,[rsi+0x1]
    dc40:	48 83 ec 08          	sub    rsp,0x8
    dc44:	e8 c7 49 ff ff       	call   2610 <malloc@plt>
    dc49:	49 89 c0             	mov    r8,rax
    dc4c:	48 85 c0             	test   rax,rax
    dc4f:	0f 84 91 01 00 00    	je     dde6 <ft_strndup_malloc+0x1b6>
    dc55:	0f b6 13             	movzx  edx,BYTE PTR [rbx]
    dc58:	48 85 ed             	test   rbp,rbp
    dc5b:	0f 84 8f 01 00 00    	je     ddf0 <ft_strndup_malloc+0x1c0>
    dc61:	84 d2                	test   dl,dl
    dc63:	0f 84 87 01 00 00    	je     ddf0 <ft_strndup_malloc+0x1c0>
    dc69:	48 8d 4d ff          	lea    rcx,[rbp-0x1]
    dc6d:	31 c0                	xor    eax,eax
    dc6f:	83 e1 07             	and    ecx,0x7
    dc72:	0f 84 be 00 00 00    	je     dd36 <ft_strndup_malloc+0x106>
    dc78:	b8 01 00 00 00       	mov    eax,0x1
    dc7d:	41 88 10             	mov    BYTE PTR [r8],dl
    dc80:	0f b6 14 03          	movzx  edx,BYTE PTR [rbx+rax*1]
    dc84:	48 83 fd 01          	cmp    rbp,0x1
    dc88:	0f 86 52 01 00 00    	jbe    dde0 <ft_strndup_malloc+0x1b0>
    dc8e:	84 d2                	test   dl,dl
    dc90:	0f 84 4a 01 00 00    	je     dde0 <ft_strndup_malloc+0x1b0>
    dc96:	48 83 f9 01          	cmp    rcx,0x1
    dc9a:	0f 84 96 00 00 00    	je     dd36 <ft_strndup_malloc+0x106>
    dca0:	48 83 f9 02          	cmp    rcx,0x2
    dca4:	74 7c                	je     dd22 <ft_strndup_malloc+0xf2>
    dca6:	48 83 f9 03          	cmp    rcx,0x3
    dcaa:	74 62                	je     dd0e <ft_strndup_malloc+0xde>
    dcac:	48 83 f9 04          	cmp    rcx,0x4
    dcb0:	74 48                	je     dcfa <ft_strndup_malloc+0xca>
    dcb2:	48 83 f9 05          	cmp    rcx,0x5
    dcb6:	74 2e                	je     dce6 <ft_strndup_malloc+0xb6>
    dcb8:	48 83 f9 06          	cmp    rcx,0x6
    dcbc:	74 14                	je     dcd2 <ft_strndup_malloc+0xa2>
    dcbe:	41 88 14 00          	mov    BYTE PTR [r8+rax*1],dl
    dcc2:	48 83 c0 01          	add    rax,0x1
    dcc6:	0f b6 14 03          	movzx  edx,BYTE PTR [rbx+rax*1]
    dcca:	84 d2                	test   dl,dl
    dccc:	0f 84 0e 01 00 00    	je     dde0 <ft_strndup_malloc+0x1b0>
    dcd2:	41 88 14 00          	mov    BYTE PTR [r8+rax*1],dl
    dcd6:	48 83 c0 01          	add    rax,0x1
    dcda:	0f b6 14 03          	movzx  edx,BYTE PTR [rbx+rax*1]
    dcde:	84 d2                	test   dl,dl
    dce0:	0f 84 fa 00 00 00    	je     dde0 <ft_strndup_malloc+0x1b0>
    dce6:	41 88 14 00          	mov    BYTE PTR [r8+rax*1],dl
    dcea:	48 83 c0 01          	add    rax,0x1
    dcee:	0f b6 14 03          	movzx  edx,BYTE PTR [rbx+rax*1]
    dcf2:	84 d2                	test   dl,dl
    dcf4:	0f 84 e6 00 00 00    	je     dde0 <ft_strndup_malloc+0x1b0>
    dcfa:	41 88 14 00          	mov    BYTE PTR [r8+rax*1],dl
    dcfe:	48 83 c0 01          	add    rax,0x1
    dd02:	0f b6 14 03          	movzx  edx,BYTE PTR [rbx+rax*1]
    dd06:	84 d2                	test   dl,dl
    dd08:	0f 84 d2 00 00 00    	je     dde0 <ft_strndup_malloc+0x1b0>
    dd0e:	41 88 14 00          	mov    BYTE PTR [r8+rax*1],dl
    dd12:	48 83 c0 01          	add    rax,0x1
    dd16:	0f b6 14 03          	movzx  edx,BYTE PTR [rbx+rax*1]
    dd1a:	84 d2                	test   dl,dl
    dd1c:	0f 84 be 00 00 00    	je     dde0 <ft_strndup_malloc+0x1b0>
    dd22:	41 88 14 00          	mov    BYTE PTR [r8+rax*1],dl
    dd26:	48 83 c0 01          	add    rax,0x1
    dd2a:	0f b6 14 03          	movzx  edx,BYTE PTR [rbx+rax*1]
    dd2e:	84 d2                	test   dl,dl
    dd30:	0f 84 aa 00 00 00    	je     dde0 <ft_strndup_malloc+0x1b0>
    dd36:	41 88 14 00          	mov    BYTE PTR [r8+rax*1],dl
    dd3a:	48 8d 50 01          	lea    rdx,[rax+0x1]
    dd3e:	0f b6 34 13          	movzx  esi,BYTE PTR [rbx+rdx*1]
    dd42:	48 89 d0             	mov    rax,rdx
    dd45:	48 39 d5             	cmp    rbp,rdx
    dd48:	0f 86 92 00 00 00    	jbe    dde0 <ft_strndup_malloc+0x1b0>
    dd4e:	40 84 f6             	test   sil,sil
    dd51:	0f 84 89 00 00 00    	je     dde0 <ft_strndup_malloc+0x1b0>
    dd57:	48 83 c0 01          	add    rax,0x1
    dd5b:	41 88 34 10          	mov    BYTE PTR [r8+rdx*1],sil
    dd5f:	0f b6 3c 03          	movzx  edi,BYTE PTR [rbx+rax*1]
    dd63:	40 84 ff             	test   dil,dil
    dd66:	74 78                	je     dde0 <ft_strndup_malloc+0x1b0>
    dd68:	44 0f b6 4c 13 02    	movzx  r9d,BYTE PTR [rbx+rdx*1+0x2]
    dd6e:	41 88 3c 00          	mov    BYTE PTR [r8+rax*1],dil
    dd72:	48 8d 42 02          	lea    rax,[rdx+0x2]
    dd76:	45 84 c9             	test   r9b,r9b
    dd79:	74 65                	je     dde0 <ft_strndup_malloc+0x1b0>
    dd7b:	44 0f b6 54 13 03    	movzx  r10d,BYTE PTR [rbx+rdx*1+0x3]
    dd81:	45 88 4c 10 02       	mov    BYTE PTR [r8+rdx*1+0x2],r9b
    dd86:	48 8d 42 03          	lea    rax,[rdx+0x3]
    dd8a:	45 84 d2             	test   r10b,r10b
    dd8d:	74 51                	je     dde0 <ft_strndup_malloc+0x1b0>
    dd8f:	44 0f b6 5c 13 04    	movzx  r11d,BYTE PTR [rbx+rdx*1+0x4]
    dd95:	45 88 54 10 03       	mov    BYTE PTR [r8+rdx*1+0x3],r10b
    dd9a:	48 8d 42 04          	lea    rax,[rdx+0x4]
    dd9e:	45 84 db             	test   r11b,r11b
    dda1:	74 3d                	je     dde0 <ft_strndup_malloc+0x1b0>
    dda3:	0f b6 4c 13 05       	movzx  ecx,BYTE PTR [rbx+rdx*1+0x5]
    dda8:	45 88 5c 10 04       	mov    BYTE PTR [r8+rdx*1+0x4],r11b
    ddad:	48 8d 42 05          	lea    rax,[rdx+0x5]
    ddb1:	84 c9                	test   cl,cl
    ddb3:	74 2b                	je     dde0 <ft_strndup_malloc+0x1b0>
    ddb5:	0f b6 74 13 06       	movzx  esi,BYTE PTR [rbx+rdx*1+0x6]
    ddba:	41 88 4c 10 05       	mov    BYTE PTR [r8+rdx*1+0x5],cl
    ddbf:	48 8d 42 06          	lea    rax,[rdx+0x6]
    ddc3:	40 84 f6             	test   sil,sil
    ddc6:	74 18                	je     dde0 <ft_strndup_malloc+0x1b0>
    ddc8:	41 88 74 10 06       	mov    BYTE PTR [r8+rdx*1+0x6],sil
    ddcd:	48 8d 42 07          	lea    rax,[rdx+0x7]
    ddd1:	0f b6 54 13 07       	movzx  edx,BYTE PTR [rbx+rdx*1+0x7]
    ddd6:	84 d2                	test   dl,dl
    ddd8:	0f 85 58 ff ff ff    	jne    dd36 <ft_strndup_malloc+0x106>
    ddde:	66 90                	xchg   ax,ax
    dde0:	4c 01 c0             	add    rax,r8
    dde3:	c6 00 00             	mov    BYTE PTR [rax],0x0
    dde6:	48 83 c4 08          	add    rsp,0x8
    ddea:	4c 89 c0             	mov    rax,r8
    dded:	5b                   	pop    rbx
    ddee:	5d                   	pop    rbp
    ddef:	c3                   	ret    
    ddf0:	4c 89 c0             	mov    rax,r8
    ddf3:	eb ee                	jmp    dde3 <ft_strndup_malloc+0x1b3>
    ddf5:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    ddfc:	00 00 00 
    ddff:	90                   	nop

000000000000de00 <ft_itoa>:
    de00:	f3 0f 1e fa          	endbr64 
    de04:	41 54                	push   r12
    de06:	31 f6                	xor    esi,esi
    de08:	55                   	push   rbp
    de09:	48 bd 67 66 66 66 66 	movabs rbp,0x6666666666666667
    de10:	66 66 66 
    de13:	53                   	push   rbx
    de14:	48 63 df             	movsxd rbx,edi
    de17:	48 89 d9             	mov    rcx,rbx
    de1a:	48 85 db             	test   rbx,rbx
    de1d:	0f 84 ad 01 00 00    	je     dfd0 <ft_itoa+0x1d0>
    de23:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    de28:	48 89 c8             	mov    rax,rcx
    de2b:	48 89 cf             	mov    rdi,rcx
    de2e:	48 83 c6 01          	add    rsi,0x1
    de32:	48 f7 ed             	imul   rbp
    de35:	48 c1 ff 3f          	sar    rdi,0x3f
    de39:	48 c1 fa 02          	sar    rdx,0x2
    de3d:	48 89 d1             	mov    rcx,rdx
    de40:	48 29 f9             	sub    rcx,rdi
    de43:	75 e3                	jne    de28 <ft_itoa+0x28>
    de45:	49 89 dc             	mov    r12,rbx
    de48:	49 c1 ec 3f          	shr    r12,0x3f
    de4c:	49 01 f4             	add    r12,rsi
    de4f:	49 8d 7c 24 01       	lea    rdi,[r12+0x1]
    de54:	e8 b7 47 ff ff       	call   2610 <malloc@plt>
    de59:	49 89 c0             	mov    r8,rax
    de5c:	48 85 c0             	test   rax,rax
    de5f:	0f 84 1b 01 00 00    	je     df80 <ft_itoa+0x180>
    de65:	4e 8d 1c 20          	lea    r11,[rax+r12*1]
    de69:	49 89 c1             	mov    r9,rax
    de6c:	41 c6 03 00          	mov    BYTE PTR [r11],0x0
    de70:	48 85 db             	test   rbx,rbx
    de73:	0f 88 17 01 00 00    	js     df90 <ft_itoa+0x190>
    de79:	49 8d 4b ff          	lea    rcx,[r11-0x1]
    de7d:	4d 8d 61 ff          	lea    r12,[r9-0x1]
    de81:	4c 39 c9             	cmp    rcx,r9
    de84:	0f 82 f6 00 00 00    	jb     df80 <ft_itoa+0x180>
    de8a:	49 b9 cd cc cc cc cc 	movabs r9,0xcccccccccccccccd
    de91:	cc cc cc 
    de94:	48 89 cf             	mov    rdi,rcx
    de97:	4c 29 e7             	sub    rdi,r12
    de9a:	83 e7 03             	and    edi,0x3
    de9d:	74 5b                	je     defa <ft_itoa+0xfa>
    de9f:	48 83 ff 01          	cmp    rdi,0x1
    dea3:	74 2b                	je     ded0 <ft_itoa+0xd0>
    dea5:	48 83 ff 02          	cmp    rdi,0x2
    dea9:	0f 85 41 01 00 00    	jne    dff0 <ft_itoa+0x1f0>
    deaf:	48 89 d8             	mov    rax,rbx
    deb2:	48 83 e9 01          	sub    rcx,0x1
    deb6:	49 f7 e1             	mul    r9
    deb9:	48 c1 ea 03          	shr    rdx,0x3
    debd:	4c 8d 1c 92          	lea    r11,[rdx+rdx*4]
    dec1:	4d 01 db             	add    r11,r11
    dec4:	4c 29 db             	sub    rbx,r11
    dec7:	83 c3 30             	add    ebx,0x30
    deca:	88 59 01             	mov    BYTE PTR [rcx+0x1],bl
    decd:	48 89 d3             	mov    rbx,rdx
    ded0:	48 89 d8             	mov    rax,rbx
    ded3:	48 83 e9 01          	sub    rcx,0x1
    ded7:	49 f7 e1             	mul    r9
    deda:	48 c1 ea 03          	shr    rdx,0x3
    dede:	48 8d 34 92          	lea    rsi,[rdx+rdx*4]
    dee2:	48 01 f6             	add    rsi,rsi
    dee5:	48 29 f3             	sub    rbx,rsi
    dee8:	83 c3 30             	add    ebx,0x30
    deeb:	88 59 01             	mov    BYTE PTR [rcx+0x1],bl
    deee:	48 89 d3             	mov    rbx,rdx
    def1:	49 39 cc             	cmp    r12,rcx
    def4:	0f 84 86 00 00 00    	je     df80 <ft_itoa+0x180>
    defa:	48 89 d8             	mov    rax,rbx
    defd:	48 83 e9 04          	sub    rcx,0x4
    df01:	49 f7 e1             	mul    r9
    df04:	48 89 d5             	mov    rbp,rdx
    df07:	48 c1 ed 03          	shr    rbp,0x3
    df0b:	48 89 e8             	mov    rax,rbp
    df0e:	48 8d 7c ad 00       	lea    rdi,[rbp+rbp*4+0x0]
    df13:	49 f7 e1             	mul    r9
    df16:	48 01 ff             	add    rdi,rdi
    df19:	48 29 fb             	sub    rbx,rdi
    df1c:	83 c3 30             	add    ebx,0x30
    df1f:	49 89 d2             	mov    r10,rdx
    df22:	88 59 04             	mov    BYTE PTR [rcx+0x4],bl
    df25:	49 c1 ea 03          	shr    r10,0x3
    df29:	4c 89 d0             	mov    rax,r10
    df2c:	4f 8d 1c 92          	lea    r11,[r10+r10*4]
    df30:	49 f7 e1             	mul    r9
    df33:	4d 01 db             	add    r11,r11
    df36:	4c 29 dd             	sub    rbp,r11
    df39:	83 c5 30             	add    ebp,0x30
    df3c:	48 89 d6             	mov    rsi,rdx
    df3f:	40 88 69 03          	mov    BYTE PTR [rcx+0x3],bpl
    df43:	48 c1 ee 03          	shr    rsi,0x3
    df47:	48 89 f0             	mov    rax,rsi
    df4a:	48 8d 1c b6          	lea    rbx,[rsi+rsi*4]
    df4e:	49 f7 e1             	mul    r9
    df51:	48 01 db             	add    rbx,rbx
    df54:	49 29 da             	sub    r10,rbx
    df57:	41 83 c2 30          	add    r10d,0x30
    df5b:	48 89 d3             	mov    rbx,rdx
    df5e:	44 88 51 02          	mov    BYTE PTR [rcx+0x2],r10b
    df62:	48 c1 eb 03          	shr    rbx,0x3
    df66:	48 8d 2c 9b          	lea    rbp,[rbx+rbx*4]
    df6a:	48 01 ed             	add    rbp,rbp
    df6d:	48 29 ee             	sub    rsi,rbp
    df70:	83 c6 30             	add    esi,0x30
    df73:	40 88 71 01          	mov    BYTE PTR [rcx+0x1],sil
    df77:	49 39 cc             	cmp    r12,rcx
    df7a:	0f 85 7a ff ff ff    	jne    defa <ft_itoa+0xfa>
    df80:	5b                   	pop    rbx
    df81:	4c 89 c0             	mov    rax,r8
    df84:	5d                   	pop    rbp
    df85:	41 5c                	pop    r12
    df87:	c3                   	ret    
    df88:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    df8f:	00 
    df90:	c6 00 2d             	mov    BYTE PTR [rax],0x2d
    df93:	4c 8d 48 01          	lea    r9,[rax+0x1]
    df97:	48 89 d8             	mov    rax,rbx
    df9a:	49 89 da             	mov    r10,rbx
    df9d:	48 f7 ed             	imul   rbp
    dfa0:	49 c1 fa 3f          	sar    r10,0x3f
    dfa4:	49 83 eb 01          	sub    r11,0x1
    dfa8:	48 c1 fa 02          	sar    rdx,0x2
    dfac:	48 89 d6             	mov    rsi,rdx
    dfaf:	4c 29 d6             	sub    rsi,r10
    dfb2:	48 8d 2c b6          	lea    rbp,[rsi+rsi*4]
    dfb6:	48 01 ed             	add    rbp,rbp
    dfb9:	48 29 eb             	sub    rbx,rbp
    dfbc:	83 c3 30             	add    ebx,0x30
    dfbf:	41 88 5b 01          	mov    BYTE PTR [r11+0x1],bl
    dfc3:	4c 89 d3             	mov    rbx,r10
    dfc6:	48 29 d3             	sub    rbx,rdx
    dfc9:	e9 ab fe ff ff       	jmp    de79 <ft_itoa+0x79>
    dfce:	66 90                	xchg   ax,ax
    dfd0:	bf 02 00 00 00       	mov    edi,0x2
    dfd5:	41 bc 30 00 00 00    	mov    r12d,0x30
    dfdb:	e8 30 46 ff ff       	call   2610 <malloc@plt>
    dfe0:	49 89 c0             	mov    r8,rax
    dfe3:	66 44 89 20          	mov    WORD PTR [rax],r12w
    dfe7:	5b                   	pop    rbx
    dfe8:	4c 89 c0             	mov    rax,r8
    dfeb:	5d                   	pop    rbp
    dfec:	41 5c                	pop    r12
    dfee:	c3                   	ret    
    dfef:	90                   	nop
    dff0:	48 89 d8             	mov    rax,rbx
    dff3:	49 f7 e1             	mul    r9
    dff6:	48 c1 ea 03          	shr    rdx,0x3
    dffa:	4c 8d 14 92          	lea    r10,[rdx+rdx*4]
    dffe:	4d 01 d2             	add    r10,r10
    e001:	4c 29 d3             	sub    rbx,r10
    e004:	83 c3 30             	add    ebx,0x30
    e007:	88 19                	mov    BYTE PTR [rcx],bl
    e009:	48 89 d3             	mov    rbx,rdx
    e00c:	49 8d 4b fe          	lea    rcx,[r11-0x2]
    e010:	e9 9a fe ff ff       	jmp    deaf <ft_itoa+0xaf>
    e015:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    e01c:	00 00 00 00 

000000000000e020 <ft_uitoa>:
    e020:	f3 0f 1e fa          	endbr64 
    e024:	48 b9 cd cc cc cc cc 	movabs rcx,0xcccccccccccccccd
    e02b:	cc cc cc 
    e02e:	41 54                	push   r12
    e030:	55                   	push   rbp
    e031:	31 ed                	xor    ebp,ebp
    e033:	53                   	push   rbx
    e034:	89 fb                	mov    ebx,edi
    e036:	48 89 da             	mov    rdx,rbx
    e039:	48 85 db             	test   rbx,rbx
    e03c:	0f 84 4e 01 00 00    	je     e190 <ft_uitoa+0x170>
    e042:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    e048:	48 89 d0             	mov    rax,rdx
    e04b:	49 89 ec             	mov    r12,rbp
    e04e:	48 83 c5 01          	add    rbp,0x1
    e052:	48 f7 e1             	mul    rcx
    e055:	48 c1 ea 03          	shr    rdx,0x3
    e059:	75 ed                	jne    e048 <ft_uitoa+0x28>
    e05b:	49 8d 7c 24 02       	lea    rdi,[r12+0x2]
    e060:	e8 ab 45 ff ff       	call   2610 <malloc@plt>
    e065:	49 89 c0             	mov    r8,rax
    e068:	48 85 c0             	test   rax,rax
    e06b:	0f 84 17 01 00 00    	je     e188 <ft_uitoa+0x168>
    e071:	c6 04 28 00          	mov    BYTE PTR [rax+rbp*1],0x0
    e075:	49 01 c4             	add    r12,rax
    e078:	0f 82 0a 01 00 00    	jb     e188 <ft_uitoa+0x168>
    e07e:	4c 89 e6             	mov    rsi,r12
    e081:	4c 8d 50 ff          	lea    r10,[rax-0x1]
    e085:	49 b9 cd cc cc cc cc 	movabs r9,0xcccccccccccccccd
    e08c:	cc cc cc 
    e08f:	48 29 c6             	sub    rsi,rax
    e092:	48 83 c6 01          	add    rsi,0x1
    e096:	83 e6 03             	and    esi,0x3
    e099:	74 5f                	je     e0fa <ft_uitoa+0xda>
    e09b:	48 83 fe 01          	cmp    rsi,0x1
    e09f:	74 2d                	je     e0ce <ft_uitoa+0xae>
    e0a1:	48 83 fe 02          	cmp    rsi,0x2
    e0a5:	0f 85 05 01 00 00    	jne    e1b0 <ft_uitoa+0x190>
    e0ab:	48 89 d8             	mov    rax,rbx
    e0ae:	49 83 ec 01          	sub    r12,0x1
    e0b2:	49 f7 e1             	mul    r9
    e0b5:	48 c1 ea 03          	shr    rdx,0x3
    e0b9:	4c 8d 1c 92          	lea    r11,[rdx+rdx*4]
    e0bd:	4d 01 db             	add    r11,r11
    e0c0:	4c 29 db             	sub    rbx,r11
    e0c3:	83 c3 30             	add    ebx,0x30
    e0c6:	41 88 5c 24 01       	mov    BYTE PTR [r12+0x1],bl
    e0cb:	48 89 d3             	mov    rbx,rdx
    e0ce:	48 89 d8             	mov    rax,rbx
    e0d1:	49 83 ec 01          	sub    r12,0x1
    e0d5:	49 f7 e1             	mul    r9
    e0d8:	48 c1 ea 03          	shr    rdx,0x3
    e0dc:	48 8d 2c 92          	lea    rbp,[rdx+rdx*4]
    e0e0:	48 01 ed             	add    rbp,rbp
    e0e3:	48 29 eb             	sub    rbx,rbp
    e0e6:	83 c3 30             	add    ebx,0x30
    e0e9:	41 88 5c 24 01       	mov    BYTE PTR [r12+0x1],bl
    e0ee:	48 89 d3             	mov    rbx,rdx
    e0f1:	4d 39 e2             	cmp    r10,r12
    e0f4:	0f 84 8e 00 00 00    	je     e188 <ft_uitoa+0x168>
    e0fa:	48 89 d8             	mov    rax,rbx
    e0fd:	49 83 ec 04          	sub    r12,0x4
    e101:	49 f7 e1             	mul    r9
    e104:	48 89 d1             	mov    rcx,rdx
    e107:	48 c1 e9 03          	shr    rcx,0x3
    e10b:	48 89 c8             	mov    rax,rcx
    e10e:	48 8d 34 89          	lea    rsi,[rcx+rcx*4]
    e112:	49 f7 e1             	mul    r9
    e115:	48 01 f6             	add    rsi,rsi
    e118:	48 29 f3             	sub    rbx,rsi
    e11b:	83 c3 30             	add    ebx,0x30
    e11e:	49 89 d3             	mov    r11,rdx
    e121:	41 88 5c 24 04       	mov    BYTE PTR [r12+0x4],bl
    e126:	49 c1 eb 03          	shr    r11,0x3
    e12a:	4c 89 d8             	mov    rax,r11
    e12d:	4b 8d 3c 9b          	lea    rdi,[r11+r11*4]
    e131:	49 f7 e1             	mul    r9
    e134:	48 01 ff             	add    rdi,rdi
    e137:	48 29 f9             	sub    rcx,rdi
    e13a:	83 c1 30             	add    ecx,0x30
    e13d:	48 89 d5             	mov    rbp,rdx
    e140:	41 88 4c 24 03       	mov    BYTE PTR [r12+0x3],cl
    e145:	48 c1 ed 03          	shr    rbp,0x3
    e149:	48 89 e8             	mov    rax,rbp
    e14c:	48 8d 5c ad 00       	lea    rbx,[rbp+rbp*4+0x0]
    e151:	48 89 ee             	mov    rsi,rbp
    e154:	49 f7 e1             	mul    r9
    e157:	48 01 db             	add    rbx,rbx
    e15a:	49 29 db             	sub    r11,rbx
    e15d:	41 83 c3 30          	add    r11d,0x30
    e161:	48 89 d3             	mov    rbx,rdx
    e164:	45 88 5c 24 02       	mov    BYTE PTR [r12+0x2],r11b
    e169:	48 c1 eb 03          	shr    rbx,0x3
    e16d:	48 8d 0c 9b          	lea    rcx,[rbx+rbx*4]
    e171:	48 01 c9             	add    rcx,rcx
    e174:	48 29 ce             	sub    rsi,rcx
    e177:	83 c6 30             	add    esi,0x30
    e17a:	41 88 74 24 01       	mov    BYTE PTR [r12+0x1],sil
    e17f:	4d 39 e2             	cmp    r10,r12
    e182:	0f 85 72 ff ff ff    	jne    e0fa <ft_uitoa+0xda>
    e188:	5b                   	pop    rbx
    e189:	4c 89 c0             	mov    rax,r8
    e18c:	5d                   	pop    rbp
    e18d:	41 5c                	pop    r12
    e18f:	c3                   	ret    
    e190:	bf 02 00 00 00       	mov    edi,0x2
    e195:	41 bc 30 00 00 00    	mov    r12d,0x30
    e19b:	e8 70 44 ff ff       	call   2610 <malloc@plt>
    e1a0:	49 89 c0             	mov    r8,rax
    e1a3:	66 44 89 20          	mov    WORD PTR [rax],r12w
    e1a7:	5b                   	pop    rbx
    e1a8:	4c 89 c0             	mov    rax,r8
    e1ab:	5d                   	pop    rbp
    e1ac:	41 5c                	pop    r12
    e1ae:	c3                   	ret    
    e1af:	90                   	nop
    e1b0:	48 89 d8             	mov    rax,rbx
    e1b3:	49 83 ec 01          	sub    r12,0x1
    e1b7:	49 f7 e1             	mul    r9
    e1ba:	48 c1 ea 03          	shr    rdx,0x3
    e1be:	48 8d 3c 92          	lea    rdi,[rdx+rdx*4]
    e1c2:	48 01 ff             	add    rdi,rdi
    e1c5:	48 29 fb             	sub    rbx,rdi
    e1c8:	83 c3 30             	add    ebx,0x30
    e1cb:	41 88 5c 24 01       	mov    BYTE PTR [r12+0x1],bl
    e1d0:	48 89 d3             	mov    rbx,rdx
    e1d3:	e9 d3 fe ff ff       	jmp    e0ab <ft_uitoa+0x8b>
    e1d8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    e1df:	00 

000000000000e1e0 <ft_ltoa>:
    e1e0:	f3 0f 1e fa          	endbr64 
    e1e4:	41 54                	push   r12
    e1e6:	55                   	push   rbp
    e1e7:	53                   	push   rbx
    e1e8:	48 85 ff             	test   rdi,rdi
    e1eb:	0f 84 bf 01 00 00    	je     e3b0 <ft_ltoa+0x1d0>
    e1f1:	48 89 fb             	mov    rbx,rdi
    e1f4:	48 89 f9             	mov    rcx,rdi
    e1f7:	31 f6                	xor    esi,esi
    e1f9:	48 bd 67 66 66 66 66 	movabs rbp,0x6666666666666667
    e200:	66 66 66 
    e203:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    e208:	48 89 c8             	mov    rax,rcx
    e20b:	48 89 cf             	mov    rdi,rcx
    e20e:	48 83 c6 01          	add    rsi,0x1
    e212:	48 f7 ed             	imul   rbp
    e215:	48 c1 ff 3f          	sar    rdi,0x3f
    e219:	48 c1 fa 02          	sar    rdx,0x2
    e21d:	48 89 d1             	mov    rcx,rdx
    e220:	48 29 f9             	sub    rcx,rdi
    e223:	75 e3                	jne    e208 <ft_ltoa+0x28>
    e225:	49 89 dc             	mov    r12,rbx
    e228:	49 c1 ec 3f          	shr    r12,0x3f
    e22c:	49 01 f4             	add    r12,rsi
    e22f:	49 8d 7c 24 01       	lea    rdi,[r12+0x1]
    e234:	e8 d7 43 ff ff       	call   2610 <malloc@plt>
    e239:	49 89 c0             	mov    r8,rax
    e23c:	48 85 c0             	test   rax,rax
    e23f:	0f 84 1b 01 00 00    	je     e360 <ft_ltoa+0x180>
    e245:	4e 8d 1c 20          	lea    r11,[rax+r12*1]
    e249:	49 89 c1             	mov    r9,rax
    e24c:	41 c6 03 00          	mov    BYTE PTR [r11],0x0
    e250:	48 85 db             	test   rbx,rbx
    e253:	0f 88 17 01 00 00    	js     e370 <ft_ltoa+0x190>
    e259:	49 8d 4b ff          	lea    rcx,[r11-0x1]
    e25d:	4d 8d 61 ff          	lea    r12,[r9-0x1]
    e261:	4c 39 c9             	cmp    rcx,r9
    e264:	0f 82 f6 00 00 00    	jb     e360 <ft_ltoa+0x180>
    e26a:	49 b9 cd cc cc cc cc 	movabs r9,0xcccccccccccccccd
    e271:	cc cc cc 
    e274:	48 89 cf             	mov    rdi,rcx
    e277:	4c 29 e7             	sub    rdi,r12
    e27a:	83 e7 03             	and    edi,0x3
    e27d:	74 5b                	je     e2da <ft_ltoa+0xfa>
    e27f:	48 83 ff 01          	cmp    rdi,0x1
    e283:	74 2b                	je     e2b0 <ft_ltoa+0xd0>
    e285:	48 83 ff 02          	cmp    rdi,0x2
    e289:	0f 85 41 01 00 00    	jne    e3d0 <ft_ltoa+0x1f0>
    e28f:	48 89 d8             	mov    rax,rbx
    e292:	48 83 e9 01          	sub    rcx,0x1
    e296:	49 f7 e1             	mul    r9
    e299:	48 c1 ea 03          	shr    rdx,0x3
    e29d:	4c 8d 1c 92          	lea    r11,[rdx+rdx*4]
    e2a1:	4d 01 db             	add    r11,r11
    e2a4:	4c 29 db             	sub    rbx,r11
    e2a7:	83 c3 30             	add    ebx,0x30
    e2aa:	88 59 01             	mov    BYTE PTR [rcx+0x1],bl
    e2ad:	48 89 d3             	mov    rbx,rdx
    e2b0:	48 89 d8             	mov    rax,rbx
    e2b3:	48 83 e9 01          	sub    rcx,0x1
    e2b7:	49 f7 e1             	mul    r9
    e2ba:	48 c1 ea 03          	shr    rdx,0x3
    e2be:	48 8d 34 92          	lea    rsi,[rdx+rdx*4]
    e2c2:	48 01 f6             	add    rsi,rsi
    e2c5:	48 29 f3             	sub    rbx,rsi
    e2c8:	83 c3 30             	add    ebx,0x30
    e2cb:	88 59 01             	mov    BYTE PTR [rcx+0x1],bl
    e2ce:	48 89 d3             	mov    rbx,rdx
    e2d1:	4c 39 e1             	cmp    rcx,r12
    e2d4:	0f 84 86 00 00 00    	je     e360 <ft_ltoa+0x180>
    e2da:	48 89 d8             	mov    rax,rbx
    e2dd:	48 83 e9 04          	sub    rcx,0x4
    e2e1:	49 f7 e1             	mul    r9
    e2e4:	48 89 d5             	mov    rbp,rdx
    e2e7:	48 c1 ed 03          	shr    rbp,0x3
    e2eb:	48 89 e8             	mov    rax,rbp
    e2ee:	48 8d 7c ad 00       	lea    rdi,[rbp+rbp*4+0x0]
    e2f3:	49 f7 e1             	mul    r9
    e2f6:	48 01 ff             	add    rdi,rdi
    e2f9:	48 29 fb             	sub    rbx,rdi
    e2fc:	83 c3 30             	add    ebx,0x30
    e2ff:	49 89 d2             	mov    r10,rdx
    e302:	88 59 04             	mov    BYTE PTR [rcx+0x4],bl
    e305:	49 c1 ea 03          	shr    r10,0x3
    e309:	4c 89 d0             	mov    rax,r10
    e30c:	4f 8d 1c 92          	lea    r11,[r10+r10*4]
    e310:	49 f7 e1             	mul    r9
    e313:	4d 01 db             	add    r11,r11
    e316:	4c 29 dd             	sub    rbp,r11
    e319:	83 c5 30             	add    ebp,0x30
    e31c:	48 89 d6             	mov    rsi,rdx
    e31f:	40 88 69 03          	mov    BYTE PTR [rcx+0x3],bpl
    e323:	48 c1 ee 03          	shr    rsi,0x3
    e327:	48 89 f0             	mov    rax,rsi
    e32a:	48 8d 1c b6          	lea    rbx,[rsi+rsi*4]
    e32e:	49 f7 e1             	mul    r9
    e331:	48 01 db             	add    rbx,rbx
    e334:	49 29 da             	sub    r10,rbx
    e337:	41 83 c2 30          	add    r10d,0x30
    e33b:	48 89 d3             	mov    rbx,rdx
    e33e:	44 88 51 02          	mov    BYTE PTR [rcx+0x2],r10b
    e342:	48 c1 eb 03          	shr    rbx,0x3
    e346:	48 8d 2c 9b          	lea    rbp,[rbx+rbx*4]
    e34a:	48 01 ed             	add    rbp,rbp
    e34d:	48 29 ee             	sub    rsi,rbp
    e350:	83 c6 30             	add    esi,0x30
    e353:	40 88 71 01          	mov    BYTE PTR [rcx+0x1],sil
    e357:	4c 39 e1             	cmp    rcx,r12
    e35a:	0f 85 7a ff ff ff    	jne    e2da <ft_ltoa+0xfa>
    e360:	5b                   	pop    rbx
    e361:	4c 89 c0             	mov    rax,r8
    e364:	5d                   	pop    rbp
    e365:	41 5c                	pop    r12
    e367:	c3                   	ret    
    e368:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    e36f:	00 
    e370:	c6 00 2d             	mov    BYTE PTR [rax],0x2d
    e373:	4c 8d 48 01          	lea    r9,[rax+0x1]
    e377:	48 89 d8             	mov    rax,rbx
    e37a:	49 89 da             	mov    r10,rbx
    e37d:	48 f7 ed             	imul   rbp
    e380:	49 c1 fa 3f          	sar    r10,0x3f
    e384:	49 83 eb 01          	sub    r11,0x1
    e388:	48 c1 fa 02          	sar    rdx,0x2
    e38c:	48 89 d6             	mov    rsi,rdx
    e38f:	4c 29 d6             	sub    rsi,r10
    e392:	48 8d 2c b6          	lea    rbp,[rsi+rsi*4]
    e396:	48 01 ed             	add    rbp,rbp
    e399:	48 29 eb             	sub    rbx,rbp
    e39c:	83 c3 30             	add    ebx,0x30
    e39f:	41 88 5b 01          	mov    BYTE PTR [r11+0x1],bl
    e3a3:	4c 89 d3             	mov    rbx,r10
    e3a6:	48 29 d3             	sub    rbx,rdx
    e3a9:	e9 ab fe ff ff       	jmp    e259 <ft_ltoa+0x79>
    e3ae:	66 90                	xchg   ax,ax
    e3b0:	bf 02 00 00 00       	mov    edi,0x2
    e3b5:	41 bc 30 00 00 00    	mov    r12d,0x30
    e3bb:	e8 50 42 ff ff       	call   2610 <malloc@plt>
    e3c0:	49 89 c0             	mov    r8,rax
    e3c3:	66 44 89 20          	mov    WORD PTR [rax],r12w
    e3c7:	5b                   	pop    rbx
    e3c8:	4c 89 c0             	mov    rax,r8
    e3cb:	5d                   	pop    rbp
    e3cc:	41 5c                	pop    r12
    e3ce:	c3                   	ret    
    e3cf:	90                   	nop
    e3d0:	48 89 d8             	mov    rax,rbx
    e3d3:	49 f7 e1             	mul    r9
    e3d6:	48 c1 ea 03          	shr    rdx,0x3
    e3da:	4c 8d 14 92          	lea    r10,[rdx+rdx*4]
    e3de:	4d 01 d2             	add    r10,r10
    e3e1:	4c 29 d3             	sub    rbx,r10
    e3e4:	83 c3 30             	add    ebx,0x30
    e3e7:	88 19                	mov    BYTE PTR [rcx],bl
    e3e9:	48 89 d3             	mov    rbx,rdx
    e3ec:	49 8d 4b fe          	lea    rcx,[r11-0x2]
    e3f0:	e9 9a fe ff ff       	jmp    e28f <ft_ltoa+0xaf>
    e3f5:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    e3fc:	00 00 00 00 

000000000000e400 <get_digit>:
    e400:	f3 0f 1e fa          	endbr64 
    e404:	45 31 c0             	xor    r8d,r8d
    e407:	48 85 ff             	test   rdi,rdi
    e40a:	74 31                	je     e43d <get_digit+0x3d>
    e40c:	48 b9 67 66 66 66 66 	movabs rcx,0x6666666666666667
    e413:	66 66 66 
    e416:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    e41d:	00 00 00 
    e420:	48 89 f8             	mov    rax,rdi
    e423:	48 89 fe             	mov    rsi,rdi
    e426:	49 83 c0 01          	add    r8,0x1
    e42a:	48 f7 e9             	imul   rcx
    e42d:	48 c1 fe 3f          	sar    rsi,0x3f
    e431:	48 c1 fa 02          	sar    rdx,0x2
    e435:	48 89 d7             	mov    rdi,rdx
    e438:	48 29 f7             	sub    rdi,rsi
    e43b:	75 e3                	jne    e420 <get_digit+0x20>
    e43d:	4c 89 c0             	mov    rax,r8
    e440:	c3                   	ret    
    e441:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    e448:	00 00 00 
    e44b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

000000000000e450 <ft_putstr_fd>:
    e450:	f3 0f 1e fa          	endbr64 
    e454:	41 54                	push   r12
    e456:	41 89 f4             	mov    r12d,esi
    e459:	55                   	push   rbp
    e45a:	48 89 fd             	mov    rbp,rdi
    e45d:	48 83 ec 08          	sub    rsp,0x8
    e461:	e8 da d6 ff ff       	call   bb40 <ft_strlen>
    e466:	48 89 ee             	mov    rsi,rbp
    e469:	44 89 e7             	mov    edi,r12d
    e46c:	48 89 c2             	mov    rdx,rax
    e46f:	e8 9c 44 ff ff       	call   2910 <write@plt>
    e474:	48 83 c4 08          	add    rsp,0x8
    e478:	5d                   	pop    rbp
    e479:	41 5c                	pop    r12
    e47b:	c3                   	ret    
    e47c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000e480 <ft_putendl_fd>:
    e480:	f3 0f 1e fa          	endbr64 
    e484:	55                   	push   rbp
    e485:	89 f5                	mov    ebp,esi
    e487:	53                   	push   rbx
    e488:	48 83 ec 08          	sub    rsp,0x8
    e48c:	e8 bf ff ff ff       	call   e450 <ft_putstr_fd>
    e491:	89 ef                	mov    edi,ebp
    e493:	ba 01 00 00 00       	mov    edx,0x1
    e498:	48 8d 35 c3 3e 00 00 	lea    rsi,[rip+0x3ec3]        # 12362 <_IO_stdin_used+0x362>
    e49f:	89 c3                	mov    ebx,eax
    e4a1:	e8 6a 44 ff ff       	call   2910 <write@plt>
    e4a6:	48 83 c4 08          	add    rsp,0x8
    e4aa:	01 d8                	add    eax,ebx
    e4ac:	5b                   	pop    rbx
    e4ad:	5d                   	pop    rbp
    e4ae:	c3                   	ret    
    e4af:	90                   	nop

000000000000e4b0 <indexof>:
    e4b0:	f3 0f 1e fa          	endbr64 
    e4b4:	0f b6 17             	movzx  edx,BYTE PTR [rdi]
    e4b7:	84 d2                	test   dl,dl
    e4b9:	74 1d                	je     e4d8 <indexof+0x28>
    e4bb:	48 89 f8             	mov    rax,rdi
    e4be:	eb 0c                	jmp    e4cc <indexof+0x1c>
    e4c0:	0f b6 50 01          	movzx  edx,BYTE PTR [rax+0x1]
    e4c4:	48 83 c0 01          	add    rax,0x1
    e4c8:	84 d2                	test   dl,dl
    e4ca:	74 0c                	je     e4d8 <indexof+0x28>
    e4cc:	40 38 d6             	cmp    sil,dl
    e4cf:	75 ef                	jne    e4c0 <indexof+0x10>
    e4d1:	29 f8                	sub    eax,edi
    e4d3:	c3                   	ret    
    e4d4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    e4d8:	b8 ff ff ff ff       	mov    eax,0xffffffff
    e4dd:	c3                   	ret    
    e4de:	66 90                	xchg   ax,ax

000000000000e4e0 <try_format_str>:
    e4e0:	f3 0f 1e fa          	endbr64 
    e4e4:	41 55                	push   r13
    e4e6:	49 89 fd             	mov    r13,rdi
    e4e9:	41 54                	push   r12
    e4eb:	45 31 e4             	xor    r12d,r12d
    e4ee:	55                   	push   rbp
    e4ef:	48 89 d5             	mov    rbp,rdx
    e4f2:	53                   	push   rbx
    e4f3:	48 89 f3             	mov    rbx,rsi
    e4f6:	48 83 ec 08          	sub    rsp,0x8
    e4fa:	48 8b 07             	mov    rax,QWORD PTR [rdi]
    e4fd:	80 38 00             	cmp    BYTE PTR [rax],0x0
    e500:	75 36                	jne    e538 <try_format_str+0x58>
    e502:	e9 7a 01 00 00       	jmp    e681 <try_format_str+0x1a1>
    e507:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    e50e:	00 00 
    e510:	ba 01 00 00 00       	mov    edx,0x1
    e515:	bf 01 00 00 00       	mov    edi,0x1
    e51a:	e8 f1 43 ff ff       	call   2910 <write@plt>
    e51f:	49 8b 7d 00          	mov    rdi,QWORD PTR [r13+0x0]
    e523:	41 01 c4             	add    r12d,eax
    e526:	48 8d 4f 01          	lea    rcx,[rdi+0x1]
    e52a:	49 89 4d 00          	mov    QWORD PTR [r13+0x0],rcx
    e52e:	80 7f 01 00          	cmp    BYTE PTR [rdi+0x1],0x0
    e532:	0f 84 49 01 00 00    	je     e681 <try_format_str+0x1a1>
    e538:	48 c7 45 00 00 00 00 	mov    QWORD PTR [rbp+0x0],0x0
    e53f:	00 
    e540:	c7 45 08 00 00 00 00 	mov    DWORD PTR [rbp+0x8],0x0
    e547:	49 8b 75 00          	mov    rsi,QWORD PTR [r13+0x0]
    e54b:	80 3e 25             	cmp    BYTE PTR [rsi],0x25
    e54e:	75 c0                	jne    e510 <try_format_str+0x30>
    e550:	48 83 c6 01          	add    rsi,0x1
    e554:	49 89 75 00          	mov    QWORD PTR [r13+0x0],rsi
    e558:	0f be 3e             	movsx  edi,BYTE PTR [rsi]
    e55b:	49 89 f0             	mov    r8,rsi
    e55e:	40 80 ff 2d          	cmp    dil,0x2d
    e562:	74 24                	je     e588 <try_format_str+0xa8>
    e564:	40 80 ff 2b          	cmp    dil,0x2b
    e568:	74 26                	je     e590 <try_format_str+0xb0>
    e56a:	40 80 ff 20          	cmp    dil,0x20
    e56e:	74 30                	je     e5a0 <try_format_str+0xc0>
    e570:	40 80 ff 30          	cmp    dil,0x30
    e574:	74 3a                	je     e5b0 <try_format_str+0xd0>
    e576:	40 80 ff 23          	cmp    dil,0x23
    e57a:	75 44                	jne    e5c0 <try_format_str+0xe0>
    e57c:	80 4d 00 10          	or     BYTE PTR [rbp+0x0],0x10
    e580:	eb ce                	jmp    e550 <try_format_str+0x70>
    e582:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    e588:	80 4d 00 02          	or     BYTE PTR [rbp+0x0],0x2
    e58c:	eb c2                	jmp    e550 <try_format_str+0x70>
    e58e:	66 90                	xchg   ax,ax
    e590:	80 4d 00 01          	or     BYTE PTR [rbp+0x0],0x1
    e594:	eb ba                	jmp    e550 <try_format_str+0x70>
    e596:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    e59d:	00 00 00 
    e5a0:	80 4d 00 04          	or     BYTE PTR [rbp+0x0],0x4
    e5a4:	eb aa                	jmp    e550 <try_format_str+0x70>
    e5a6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    e5ad:	00 00 00 
    e5b0:	80 4d 00 08          	or     BYTE PTR [rbp+0x0],0x8
    e5b4:	eb 9a                	jmp    e550 <try_format_str+0x70>
    e5b6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    e5bd:	00 00 00 
    e5c0:	40 80 ff 2a          	cmp    dil,0x2a
    e5c4:	75 31                	jne    e5f7 <try_format_str+0x117>
    e5c6:	e9 c4 00 00 00       	jmp    e68f <try_format_str+0x1af>
    e5cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    e5d0:	8b 55 04             	mov    edx,DWORD PTR [rbp+0x4]
    e5d3:	49 8b 7d 00          	mov    rdi,QWORD PTR [r13+0x0]
    e5d7:	8d 34 92             	lea    esi,[rdx+rdx*4]
    e5da:	4c 8d 57 01          	lea    r10,[rdi+0x1]
    e5de:	01 f6                	add    esi,esi
    e5e0:	89 75 04             	mov    DWORD PTR [rbp+0x4],esi
    e5e3:	0f be 0f             	movsx  ecx,BYTE PTR [rdi]
    e5e6:	44 8d 4c 0e d0       	lea    r9d,[rsi+rcx*1-0x30]
    e5eb:	44 89 4d 04          	mov    DWORD PTR [rbp+0x4],r9d
    e5ef:	4d 89 55 00          	mov    QWORD PTR [r13+0x0],r10
    e5f3:	0f be 7f 01          	movsx  edi,BYTE PTR [rdi+0x1]
    e5f7:	e8 54 eb ff ff       	call   d150 <ft_isdigit>
    e5fc:	85 c0                	test   eax,eax
    e5fe:	75 d0                	jne    e5d0 <try_format_str+0xf0>
    e600:	4d 8b 45 00          	mov    r8,QWORD PTR [r13+0x0]
    e604:	41 80 38 2e          	cmp    BYTE PTR [r8],0x2e
    e608:	75 5a                	jne    e664 <try_format_str+0x184>
    e60a:	4d 8d 48 01          	lea    r9,[r8+0x1]
    e60e:	4d 89 4d 00          	mov    QWORD PTR [r13+0x0],r9
    e612:	80 4d 00 20          	or     BYTE PTR [rbp+0x0],0x20
    e616:	41 0f be 78 01       	movsx  edi,BYTE PTR [r8+0x1]
    e61b:	40 80 ff 2a          	cmp    dil,0x2a
    e61f:	75 3a                	jne    e65b <try_format_str+0x17b>
    e621:	e9 a4 00 00 00       	jmp    e6ca <try_format_str+0x1ea>
    e626:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    e62d:	00 00 00 
    e630:	44 8b 45 08          	mov    r8d,DWORD PTR [rbp+0x8]
    e634:	4d 8b 4d 00          	mov    r9,QWORD PTR [r13+0x0]
    e638:	43 8d 3c 80          	lea    edi,[r8+r8*4]
    e63c:	4d 8d 59 01          	lea    r11,[r9+0x1]
    e640:	01 ff                	add    edi,edi
    e642:	89 7d 08             	mov    DWORD PTR [rbp+0x8],edi
    e645:	41 0f be 09          	movsx  ecx,BYTE PTR [r9]
    e649:	44 8d 54 0f d0       	lea    r10d,[rdi+rcx*1-0x30]
    e64e:	44 89 55 08          	mov    DWORD PTR [rbp+0x8],r10d
    e652:	4d 89 5d 00          	mov    QWORD PTR [r13+0x0],r11
    e656:	41 0f be 79 01       	movsx  edi,BYTE PTR [r9+0x1]
    e65b:	e8 f0 ea ff ff       	call   d150 <ft_isdigit>
    e660:	85 c0                	test   eax,eax
    e662:	75 cc                	jne    e630 <try_format_str+0x150>
    e664:	48 89 ea             	mov    rdx,rbp
    e667:	48 89 de             	mov    rsi,rbx
    e66a:	4c 89 ef             	mov    rdi,r13
    e66d:	e8 8e 06 00 00       	call   ed00 <check_conversion>
    e672:	83 f8 ff             	cmp    eax,0xffffffff
    e675:	0f 85 a4 fe ff ff    	jne    e51f <try_format_str+0x3f>
    e67b:	41 bc ff ff ff ff    	mov    r12d,0xffffffff
    e681:	48 83 c4 08          	add    rsp,0x8
    e685:	44 89 e0             	mov    eax,r12d
    e688:	5b                   	pop    rbx
    e689:	5d                   	pop    rbp
    e68a:	41 5c                	pop    r12
    e68c:	41 5d                	pop    r13
    e68e:	c3                   	ret    
    e68f:	44 8b 1b             	mov    r11d,DWORD PTR [rbx]
    e692:	41 83 fb 2f          	cmp    r11d,0x2f
    e696:	77 20                	ja     e6b8 <try_format_str+0x1d8>
    e698:	44 89 da             	mov    edx,r11d
    e69b:	41 83 c3 08          	add    r11d,0x8
    e69f:	48 03 53 10          	add    rdx,QWORD PTR [rbx+0x10]
    e6a3:	44 89 1b             	mov    DWORD PTR [rbx],r11d
    e6a6:	8b 32                	mov    esi,DWORD PTR [rdx]
    e6a8:	49 83 c0 01          	add    r8,0x1
    e6ac:	89 75 04             	mov    DWORD PTR [rbp+0x4],esi
    e6af:	4d 89 45 00          	mov    QWORD PTR [r13+0x0],r8
    e6b3:	e9 4c ff ff ff       	jmp    e604 <try_format_str+0x124>
    e6b8:	48 8b 53 08          	mov    rdx,QWORD PTR [rbx+0x8]
    e6bc:	48 8d 42 08          	lea    rax,[rdx+0x8]
    e6c0:	48 89 43 08          	mov    QWORD PTR [rbx+0x8],rax
    e6c4:	4d 8b 45 00          	mov    r8,QWORD PTR [r13+0x0]
    e6c8:	eb dc                	jmp    e6a6 <try_format_str+0x1c6>
    e6ca:	8b 03                	mov    eax,DWORD PTR [rbx]
    e6cc:	83 f8 2f             	cmp    eax,0x2f
    e6cf:	77 1f                	ja     e6f0 <try_format_str+0x210>
    e6d1:	89 c6                	mov    esi,eax
    e6d3:	83 c0 08             	add    eax,0x8
    e6d6:	48 03 73 10          	add    rsi,QWORD PTR [rbx+0x10]
    e6da:	89 03                	mov    DWORD PTR [rbx],eax
    e6dc:	44 8b 06             	mov    r8d,DWORD PTR [rsi]
    e6df:	49 83 c1 01          	add    r9,0x1
    e6e3:	44 89 45 08          	mov    DWORD PTR [rbp+0x8],r8d
    e6e7:	4d 89 4d 00          	mov    QWORD PTR [r13+0x0],r9
    e6eb:	e9 74 ff ff ff       	jmp    e664 <try_format_str+0x184>
    e6f0:	48 8b 73 08          	mov    rsi,QWORD PTR [rbx+0x8]
    e6f4:	48 8d 56 08          	lea    rdx,[rsi+0x8]
    e6f8:	48 89 53 08          	mov    QWORD PTR [rbx+0x8],rdx
    e6fc:	4d 8b 4d 00          	mov    r9,QWORD PTR [r13+0x0]
    e700:	eb da                	jmp    e6dc <try_format_str+0x1fc>
    e702:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    e709:	00 00 00 00 
    e70d:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000e710 <ft_printf>:
    e710:	f3 0f 1e fa          	endbr64 
    e714:	48 81 ec f8 00 00 00 	sub    rsp,0xf8
    e71b:	48 89 7c 24 08       	mov    QWORD PTR [rsp+0x8],rdi
    e720:	48 89 74 24 48       	mov    QWORD PTR [rsp+0x48],rsi
    e725:	48 89 54 24 50       	mov    QWORD PTR [rsp+0x50],rdx
    e72a:	48 89 4c 24 58       	mov    QWORD PTR [rsp+0x58],rcx
    e72f:	4c 89 44 24 60       	mov    QWORD PTR [rsp+0x60],r8
    e734:	4c 89 4c 24 68       	mov    QWORD PTR [rsp+0x68],r9
    e739:	84 c0                	test   al,al
    e73b:	74 45                	je     e782 <ft_printf+0x72>
    e73d:	c5 f8 29 44 24 70    	vmovaps XMMWORD PTR [rsp+0x70],xmm0
    e743:	c5 f8 29 8c 24 80 00 	vmovaps XMMWORD PTR [rsp+0x80],xmm1
    e74a:	00 00 
    e74c:	c5 f8 29 94 24 90 00 	vmovaps XMMWORD PTR [rsp+0x90],xmm2
    e753:	00 00 
    e755:	c5 f8 29 9c 24 a0 00 	vmovaps XMMWORD PTR [rsp+0xa0],xmm3
    e75c:	00 00 
    e75e:	c5 f8 29 a4 24 b0 00 	vmovaps XMMWORD PTR [rsp+0xb0],xmm4
    e765:	00 00 
    e767:	c5 f8 29 ac 24 c0 00 	vmovaps XMMWORD PTR [rsp+0xc0],xmm5
    e76e:	00 00 
    e770:	c5 f8 29 b4 24 d0 00 	vmovaps XMMWORD PTR [rsp+0xd0],xmm6
    e777:	00 00 
    e779:	c5 f8 29 bc 24 e0 00 	vmovaps XMMWORD PTR [rsp+0xe0],xmm7
    e780:	00 00 
    e782:	31 d2                	xor    edx,edx
    e784:	48 8d 35 d8 3b 00 00 	lea    rsi,[rip+0x3bd8]        # 12363 <_IO_stdin_used+0x363>
    e78b:	bf 01 00 00 00       	mov    edi,0x1
    e790:	e8 7b 41 ff ff       	call   2910 <write@plt>
    e795:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
    e799:	74 5c                	je     e7f7 <ft_printf+0xe7>
    e79b:	48 83 7c 24 08 00    	cmp    QWORD PTR [rsp+0x8],0x0
    e7a1:	74 54                	je     e7f7 <ft_printf+0xe7>
    e7a3:	48 8d 84 24 00 01 00 	lea    rax,[rsp+0x100]
    e7aa:	00 
    e7ab:	48 8d 4c 24 40       	lea    rcx,[rsp+0x40]
    e7b0:	48 c7 44 24 1c 00 00 	mov    QWORD PTR [rsp+0x1c],0x0
    e7b7:	00 00 
    e7b9:	48 8d 54 24 1c       	lea    rdx,[rsp+0x1c]
    e7be:	48 8d 74 24 28       	lea    rsi,[rsp+0x28]
    e7c3:	c7 44 24 24 00 00 00 	mov    DWORD PTR [rsp+0x24],0x0
    e7ca:	00 
    e7cb:	48 8d 7c 24 08       	lea    rdi,[rsp+0x8]
    e7d0:	c7 44 24 28 08 00 00 	mov    DWORD PTR [rsp+0x28],0x8
    e7d7:	00 
    e7d8:	c7 44 24 2c 30 00 00 	mov    DWORD PTR [rsp+0x2c],0x30
    e7df:	00 
    e7e0:	48 89 44 24 30       	mov    QWORD PTR [rsp+0x30],rax
    e7e5:	48 89 4c 24 38       	mov    QWORD PTR [rsp+0x38],rcx
    e7ea:	e8 f1 fc ff ff       	call   e4e0 <try_format_str>
    e7ef:	48 81 c4 f8 00 00 00 	add    rsp,0xf8
    e7f6:	c3                   	ret    
    e7f7:	b8 ff ff ff ff       	mov    eax,0xffffffff
    e7fc:	eb f1                	jmp    e7ef <ft_printf+0xdf>
    e7fe:	66 90                	xchg   ax,ax

000000000000e800 <check_flags>:
    e800:	f3 0f 1e fa          	endbr64 
    e804:	48 8b 07             	mov    rax,QWORD PTR [rdi]
    e807:	eb 2e                	jmp    e837 <check_flags+0x37>
    e809:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    e810:	80 fa 2b             	cmp    dl,0x2b
    e813:	74 33                	je     e848 <check_flags+0x48>
    e815:	80 fa 20             	cmp    dl,0x20
    e818:	74 36                	je     e850 <check_flags+0x50>
    e81a:	80 fa 30             	cmp    dl,0x30
    e81d:	74 39                	je     e858 <check_flags+0x58>
    e81f:	80 fa 23             	cmp    dl,0x23
    e822:	75 3c                	jne    e860 <check_flags+0x60>
    e824:	80 0e 10             	or     BYTE PTR [rsi],0x10
    e827:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    e82e:	00 00 
    e830:	48 83 c0 01          	add    rax,0x1
    e834:	48 89 07             	mov    QWORD PTR [rdi],rax
    e837:	0f b6 10             	movzx  edx,BYTE PTR [rax]
    e83a:	80 fa 2d             	cmp    dl,0x2d
    e83d:	75 d1                	jne    e810 <check_flags+0x10>
    e83f:	80 0e 02             	or     BYTE PTR [rsi],0x2
    e842:	eb ec                	jmp    e830 <check_flags+0x30>
    e844:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    e848:	80 0e 01             	or     BYTE PTR [rsi],0x1
    e84b:	eb e3                	jmp    e830 <check_flags+0x30>
    e84d:	0f 1f 00             	nop    DWORD PTR [rax]
    e850:	80 0e 04             	or     BYTE PTR [rsi],0x4
    e853:	eb db                	jmp    e830 <check_flags+0x30>
    e855:	0f 1f 00             	nop    DWORD PTR [rax]
    e858:	80 0e 08             	or     BYTE PTR [rsi],0x8
    e85b:	eb d3                	jmp    e830 <check_flags+0x30>
    e85d:	0f 1f 00             	nop    DWORD PTR [rax]
    e860:	c3                   	ret    
    e861:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    e868:	00 00 00 00 
    e86c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000e870 <check_width>:
    e870:	f3 0f 1e fa          	endbr64 
    e874:	55                   	push   rbp
    e875:	48 89 fd             	mov    rbp,rdi
    e878:	53                   	push   rbx
    e879:	48 89 d3             	mov    rbx,rdx
    e87c:	48 83 ec 08          	sub    rsp,0x8
    e880:	48 8b 07             	mov    rax,QWORD PTR [rdi]
    e883:	0f be 38             	movsx  edi,BYTE PTR [rax]
    e886:	40 80 ff 2a          	cmp    dil,0x2a
    e88a:	75 29                	jne    e8b5 <check_width+0x45>
    e88c:	eb 3a                	jmp    e8c8 <check_width+0x58>
    e88e:	66 90                	xchg   ax,ax
    e890:	8b 43 04             	mov    eax,DWORD PTR [rbx+0x4]
    e893:	48 8b 55 00          	mov    rdx,QWORD PTR [rbp+0x0]
    e897:	8d 34 80             	lea    esi,[rax+rax*4]
    e89a:	4c 8d 42 01          	lea    r8,[rdx+0x1]
    e89e:	01 f6                	add    esi,esi
    e8a0:	89 73 04             	mov    DWORD PTR [rbx+0x4],esi
    e8a3:	0f be 0a             	movsx  ecx,BYTE PTR [rdx]
    e8a6:	8d 7c 0e d0          	lea    edi,[rsi+rcx*1-0x30]
    e8aa:	89 7b 04             	mov    DWORD PTR [rbx+0x4],edi
    e8ad:	4c 89 45 00          	mov    QWORD PTR [rbp+0x0],r8
    e8b1:	0f be 7a 01          	movsx  edi,BYTE PTR [rdx+0x1]
    e8b5:	e8 96 e8 ff ff       	call   d150 <ft_isdigit>
    e8ba:	85 c0                	test   eax,eax
    e8bc:	75 d2                	jne    e890 <check_width+0x20>
    e8be:	48 83 c4 08          	add    rsp,0x8
    e8c2:	5b                   	pop    rbx
    e8c3:	5d                   	pop    rbp
    e8c4:	c3                   	ret    
    e8c5:	0f 1f 00             	nop    DWORD PTR [rax]
    e8c8:	44 8b 0e             	mov    r9d,DWORD PTR [rsi]
    e8cb:	41 83 f9 2f          	cmp    r9d,0x2f
    e8cf:	77 27                	ja     e8f8 <check_width+0x88>
    e8d1:	45 89 ca             	mov    r10d,r9d
    e8d4:	41 83 c1 08          	add    r9d,0x8
    e8d8:	4c 03 56 10          	add    r10,QWORD PTR [rsi+0x10]
    e8dc:	44 89 0e             	mov    DWORD PTR [rsi],r9d
    e8df:	41 8b 32             	mov    esi,DWORD PTR [r10]
    e8e2:	48 83 c0 01          	add    rax,0x1
    e8e6:	89 73 04             	mov    DWORD PTR [rbx+0x4],esi
    e8e9:	48 89 45 00          	mov    QWORD PTR [rbp+0x0],rax
    e8ed:	48 83 c4 08          	add    rsp,0x8
    e8f1:	5b                   	pop    rbx
    e8f2:	5d                   	pop    rbp
    e8f3:	c3                   	ret    
    e8f4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    e8f8:	4c 8b 56 08          	mov    r10,QWORD PTR [rsi+0x8]
    e8fc:	4d 8d 5a 08          	lea    r11,[r10+0x8]
    e900:	4c 89 5e 08          	mov    QWORD PTR [rsi+0x8],r11
    e904:	48 8b 45 00          	mov    rax,QWORD PTR [rbp+0x0]
    e908:	eb d5                	jmp    e8df <check_width+0x6f>
    e90a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

000000000000e910 <check_precision>:
    e910:	f3 0f 1e fa          	endbr64 
    e914:	48 8b 07             	mov    rax,QWORD PTR [rdi]
    e917:	80 38 2e             	cmp    BYTE PTR [rax],0x2e
    e91a:	0f 85 90 00 00 00    	jne    e9b0 <check_precision+0xa0>
    e920:	55                   	push   rbp
    e921:	48 89 fd             	mov    rbp,rdi
    e924:	53                   	push   rbx
    e925:	48 89 d3             	mov    rbx,rdx
    e928:	48 8d 50 01          	lea    rdx,[rax+0x1]
    e92c:	48 83 ec 08          	sub    rsp,0x8
    e930:	48 89 17             	mov    QWORD PTR [rdi],rdx
    e933:	80 0b 20             	or     BYTE PTR [rbx],0x20
    e936:	0f be 78 01          	movsx  edi,BYTE PTR [rax+0x1]
    e93a:	40 80 ff 2a          	cmp    dil,0x2a
    e93e:	75 57                	jne    e997 <check_precision+0x87>
    e940:	44 8b 16             	mov    r10d,DWORD PTR [rsi]
    e943:	41 83 fa 2f          	cmp    r10d,0x2f
    e947:	77 6f                	ja     e9b8 <check_precision+0xa8>
    e949:	45 89 d3             	mov    r11d,r10d
    e94c:	41 83 c2 08          	add    r10d,0x8
    e950:	4c 03 5e 10          	add    r11,QWORD PTR [rsi+0x10]
    e954:	44 89 16             	mov    DWORD PTR [rsi],r10d
    e957:	41 8b 33             	mov    esi,DWORD PTR [r11]
    e95a:	48 83 c2 01          	add    rdx,0x1
    e95e:	89 73 08             	mov    DWORD PTR [rbx+0x8],esi
    e961:	48 89 55 00          	mov    QWORD PTR [rbp+0x0],rdx
    e965:	48 83 c4 08          	add    rsp,0x8
    e969:	5b                   	pop    rbx
    e96a:	5d                   	pop    rbp
    e96b:	c3                   	ret    
    e96c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    e970:	8b 53 08             	mov    edx,DWORD PTR [rbx+0x8]
    e973:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
    e977:	8d 34 92             	lea    esi,[rdx+rdx*4]
    e97a:	4c 8d 4f 01          	lea    r9,[rdi+0x1]
    e97e:	01 f6                	add    esi,esi
    e980:	89 73 08             	mov    DWORD PTR [rbx+0x8],esi
    e983:	0f be 0f             	movsx  ecx,BYTE PTR [rdi]
    e986:	44 8d 44 0e d0       	lea    r8d,[rsi+rcx*1-0x30]
    e98b:	44 89 43 08          	mov    DWORD PTR [rbx+0x8],r8d
    e98f:	4c 89 4d 00          	mov    QWORD PTR [rbp+0x0],r9
    e993:	0f be 7f 01          	movsx  edi,BYTE PTR [rdi+0x1]
    e997:	e8 b4 e7 ff ff       	call   d150 <ft_isdigit>
    e99c:	85 c0                	test   eax,eax
    e99e:	75 d0                	jne    e970 <check_precision+0x60>
    e9a0:	48 83 c4 08          	add    rsp,0x8
    e9a4:	5b                   	pop    rbx
    e9a5:	5d                   	pop    rbp
    e9a6:	c3                   	ret    
    e9a7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    e9ae:	00 00 
    e9b0:	c3                   	ret    
    e9b1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    e9b8:	4c 8b 5e 08          	mov    r11,QWORD PTR [rsi+0x8]
    e9bc:	49 8d 43 08          	lea    rax,[r11+0x8]
    e9c0:	48 89 46 08          	mov    QWORD PTR [rsi+0x8],rax
    e9c4:	48 8b 55 00          	mov    rdx,QWORD PTR [rbp+0x0]
    e9c8:	eb 8d                	jmp    e957 <check_precision+0x47>
    e9ca:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

000000000000e9d0 <ft_realloc>:
    e9d0:	f3 0f 1e fa          	endbr64 
    e9d4:	41 55                	push   r13
    e9d6:	49 89 fd             	mov    r13,rdi
    e9d9:	48 89 d7             	mov    rdi,rdx
    e9dc:	41 54                	push   r12
    e9de:	55                   	push   rbp
    e9df:	48 89 f5             	mov    rbp,rsi
    e9e2:	be 01 00 00 00       	mov    esi,0x1
    e9e7:	53                   	push   rbx
    e9e8:	48 89 d3             	mov    rbx,rdx
    e9eb:	48 83 ec 08          	sub    rsp,0x8
    e9ef:	e8 2c 3e ff ff       	call   2820 <calloc@plt>
    e9f4:	49 89 c4             	mov    r12,rax
    e9f7:	48 85 c0             	test   rax,rax
    e9fa:	74 2e                	je     ea2a <ft_realloc+0x5a>
    e9fc:	39 eb                	cmp    ebx,ebp
    e9fe:	89 e8                	mov    eax,ebp
    ea00:	4c 89 e7             	mov    rdi,r12
    ea03:	4c 89 ee             	mov    rsi,r13
    ea06:	0f 4e c3             	cmovle eax,ebx
    ea09:	48 63 d0             	movsxd rdx,eax
    ea0c:	e8 5f e7 ff ff       	call   d170 <ft_memcpy>
    ea11:	4c 89 ef             	mov    rdi,r13
    ea14:	49 89 c4             	mov    r12,rax
    ea17:	e8 b4 3c ff ff       	call   26d0 <free@plt>
    ea1c:	48 83 c4 08          	add    rsp,0x8
    ea20:	4c 89 e0             	mov    rax,r12
    ea23:	5b                   	pop    rbx
    ea24:	5d                   	pop    rbp
    ea25:	41 5c                	pop    r12
    ea27:	41 5d                	pop    r13
    ea29:	c3                   	ret    
    ea2a:	48 8d 35 33 39 00 00 	lea    rsi,[rip+0x3933]        # 12364 <_IO_stdin_used+0x364>
    ea31:	31 ff                	xor    edi,edi
    ea33:	e8 18 de ff ff       	call   c850 <ft_assert>
    ea38:	eb e2                	jmp    ea1c <ft_realloc+0x4c>
    ea3a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

000000000000ea40 <ft_bzero>:
    ea40:	f3 0f 1e fa          	endbr64 
    ea44:	48 89 f2             	mov    rdx,rsi
    ea47:	48 85 f6             	test   rsi,rsi
    ea4a:	74 0c                	je     ea58 <ft_bzero+0x18>
    ea4c:	31 f6                	xor    esi,esi
    ea4e:	e9 bd 3a ff ff       	jmp    2510 <memset@plt>
    ea53:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    ea58:	c3                   	ret    
    ea59:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

000000000000ea60 <format_conversion_c>:
    ea60:	f3 0f 1e fa          	endbr64 
    ea64:	55                   	push   rbp
    ea65:	40 0f be ef          	movsx  ebp,dil
    ea69:	53                   	push   rbx
    ea6a:	48 83 ec 08          	sub    rsp,0x8
    ea6e:	8b 56 04             	mov    edx,DWORD PTR [rsi+0x4]
    ea71:	85 d2                	test   edx,edx
    ea73:	74 6b                	je     eae0 <format_conversion_c+0x80>
    ea75:	48 89 f3             	mov    rbx,rsi
    ea78:	f6 06 02             	test   BYTE PTR [rsi],0x2
    ea7b:	75 33                	jne    eab0 <format_conversion_c+0x50>
    ea7d:	83 ea 01             	sub    edx,0x1
    ea80:	be 01 00 00 00       	mov    esi,0x1
    ea85:	bf 20 00 00 00       	mov    edi,0x20
    ea8a:	e8 01 0b 00 00       	call   f590 <write_repeated_char>
    ea8f:	89 ef                	mov    edi,ebp
    ea91:	be 01 00 00 00       	mov    esi,0x1
    ea96:	89 c3                	mov    ebx,eax
    ea98:	e8 13 0d 00 00       	call   f7b0 <ft_putchar_fd>
    ea9d:	48 83 c4 08          	add    rsp,0x8
    eaa1:	01 d8                	add    eax,ebx
    eaa3:	5b                   	pop    rbx
    eaa4:	5d                   	pop    rbp
    eaa5:	c3                   	ret    
    eaa6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    eaad:	00 00 00 
    eab0:	89 ef                	mov    edi,ebp
    eab2:	be 01 00 00 00       	mov    esi,0x1
    eab7:	e8 f4 0c 00 00       	call   f7b0 <ft_putchar_fd>
    eabc:	8b 53 04             	mov    edx,DWORD PTR [rbx+0x4]
    eabf:	be 01 00 00 00       	mov    esi,0x1
    eac4:	bf 20 00 00 00       	mov    edi,0x20
    eac9:	89 c5                	mov    ebp,eax
    eacb:	29 c2                	sub    edx,eax
    eacd:	e8 be 0a 00 00       	call   f590 <write_repeated_char>
    ead2:	48 83 c4 08          	add    rsp,0x8
    ead6:	01 e8                	add    eax,ebp
    ead8:	5b                   	pop    rbx
    ead9:	5d                   	pop    rbp
    eada:	c3                   	ret    
    eadb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    eae0:	48 83 c4 08          	add    rsp,0x8
    eae4:	89 ef                	mov    edi,ebp
    eae6:	be 01 00 00 00       	mov    esi,0x1
    eaeb:	5b                   	pop    rbx
    eaec:	5d                   	pop    rbp
    eaed:	e9 be 0c 00 00       	jmp    f7b0 <ft_putchar_fd>
    eaf2:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    eaf9:	00 00 00 00 
    eafd:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000eb00 <convert_flag_s_width>:
    eb00:	f3 0f 1e fa          	endbr64 
    eb04:	41 55                	push   r13
    eb06:	41 89 d5             	mov    r13d,edx
    eb09:	41 54                	push   r12
    eb0b:	55                   	push   rbp
    eb0c:	48 89 f5             	mov    rbp,rsi
    eb0f:	53                   	push   rbx
    eb10:	48 89 fb             	mov    rbx,rdi
    eb13:	48 89 f7             	mov    rdi,rsi
    eb16:	48 83 ec 08          	sub    rsp,0x8
    eb1a:	e8 21 d0 ff ff       	call   bb40 <ft_strlen>
    eb1f:	8b 53 04             	mov    edx,DWORD PTR [rbx+0x4]
    eb22:	85 d2                	test   edx,edx
    eb24:	0f 84 86 00 00 00    	je     ebb0 <convert_flag_s_width+0xb0>
    eb2a:	f6 03 02             	test   BYTE PTR [rbx],0x2
    eb2d:	75 41                	jne    eb70 <convert_flag_s_width+0x70>
    eb2f:	41 39 c5             	cmp    r13d,eax
    eb32:	be 01 00 00 00       	mov    esi,0x1
    eb37:	bf 20 00 00 00       	mov    edi,0x20
    eb3c:	41 0f 4e c5          	cmovle eax,r13d
    eb40:	29 c2                	sub    edx,eax
    eb42:	41 89 c4             	mov    r12d,eax
    eb45:	e8 46 0a 00 00       	call   f590 <write_repeated_char>
    eb4a:	44 89 ea             	mov    edx,r13d
    eb4d:	48 89 ef             	mov    rdi,rbp
    eb50:	be 01 00 00 00       	mov    esi,0x1
    eb55:	41 01 c4             	add    r12d,eax
    eb58:	e8 d3 09 00 00       	call   f530 <print_strn_fd>
    eb5d:	48 83 c4 08          	add    rsp,0x8
    eb61:	44 89 e0             	mov    eax,r12d
    eb64:	5b                   	pop    rbx
    eb65:	5d                   	pop    rbp
    eb66:	41 5c                	pop    r12
    eb68:	41 5d                	pop    r13
    eb6a:	c3                   	ret    
    eb6b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    eb70:	44 89 ea             	mov    edx,r13d
    eb73:	48 89 ef             	mov    rdi,rbp
    eb76:	be 01 00 00 00       	mov    esi,0x1
    eb7b:	e8 b0 09 00 00       	call   f530 <print_strn_fd>
    eb80:	8b 53 04             	mov    edx,DWORD PTR [rbx+0x4]
    eb83:	be 01 00 00 00       	mov    esi,0x1
    eb88:	bf 20 00 00 00       	mov    edi,0x20
    eb8d:	41 89 c4             	mov    r12d,eax
    eb90:	29 c2                	sub    edx,eax
    eb92:	e8 f9 09 00 00       	call   f590 <write_repeated_char>
    eb97:	48 83 c4 08          	add    rsp,0x8
    eb9b:	41 01 c4             	add    r12d,eax
    eb9e:	5b                   	pop    rbx
    eb9f:	5d                   	pop    rbp
    eba0:	44 89 e0             	mov    eax,r12d
    eba3:	41 5c                	pop    r12
    eba5:	41 5d                	pop    r13
    eba7:	c3                   	ret    
    eba8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    ebaf:	00 
    ebb0:	48 83 c4 08          	add    rsp,0x8
    ebb4:	44 89 ea             	mov    edx,r13d
    ebb7:	48 89 ef             	mov    rdi,rbp
    ebba:	be 01 00 00 00       	mov    esi,0x1
    ebbf:	5b                   	pop    rbx
    ebc0:	5d                   	pop    rbp
    ebc1:	41 5c                	pop    r12
    ebc3:	41 5d                	pop    r13
    ebc5:	e9 66 09 00 00       	jmp    f530 <print_strn_fd>
    ebca:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

000000000000ebd0 <format_conversion_s>:
    ebd0:	f3 0f 1e fa          	endbr64 
    ebd4:	41 56                	push   r14
    ebd6:	48 85 ff             	test   rdi,rdi
    ebd9:	41 55                	push   r13
    ebdb:	49 89 f5             	mov    r13,rsi
    ebde:	41 54                	push   r12
    ebe0:	4c 8d 25 96 37 00 00 	lea    r12,[rip+0x3796]        # 1237d <_IO_stdin_used+0x37d>
    ebe7:	49 0f 44 fc          	cmove  rdi,r12
    ebeb:	55                   	push   rbp
    ebec:	53                   	push   rbx
    ebed:	48 89 fd             	mov    rbp,rdi
    ebf0:	f6 06 20             	test   BYTE PTR [rsi],0x20
    ebf3:	74 14                	je     ec09 <format_conversion_s+0x39>
    ebf5:	48 8d 35 88 37 00 00 	lea    rsi,[rip+0x3788]        # 12384 <_IO_stdin_used+0x384>
    ebfc:	e8 6f cf ff ff       	call   bb70 <ft_strcmp>
    ec01:	85 c0                	test   eax,eax
    ec03:	0f 85 a7 00 00 00    	jne    ecb0 <format_conversion_s+0xe0>
    ec09:	48 89 ef             	mov    rdi,rbp
    ec0c:	e8 2f cf ff ff       	call   bb40 <ft_strlen>
    ec11:	48 89 ef             	mov    rdi,rbp
    ec14:	48 89 c3             	mov    rbx,rax
    ec17:	41 89 c6             	mov    r14d,eax
    ec1a:	e8 21 cf ff ff       	call   bb40 <ft_strlen>
    ec1f:	41 8b 55 04          	mov    edx,DWORD PTR [r13+0x4]
    ec23:	85 d2                	test   edx,edx
    ec25:	0f 84 bd 00 00 00    	je     ece8 <format_conversion_s+0x118>
    ec2b:	41 f6 45 00 02       	test   BYTE PTR [r13+0x0],0x2
    ec30:	75 3e                	jne    ec70 <format_conversion_s+0xa0>
    ec32:	39 c3                	cmp    ebx,eax
    ec34:	be 01 00 00 00       	mov    esi,0x1
    ec39:	bf 20 00 00 00       	mov    edi,0x20
    ec3e:	0f 4f d8             	cmovg  ebx,eax
    ec41:	29 da                	sub    edx,ebx
    ec43:	e8 48 09 00 00       	call   f590 <write_repeated_char>
    ec48:	44 89 f2             	mov    edx,r14d
    ec4b:	48 89 ef             	mov    rdi,rbp
    ec4e:	be 01 00 00 00       	mov    esi,0x1
    ec53:	44 8d 24 03          	lea    r12d,[rbx+rax*1]
    ec57:	e8 d4 08 00 00       	call   f530 <print_strn_fd>
    ec5c:	5b                   	pop    rbx
    ec5d:	44 89 e0             	mov    eax,r12d
    ec60:	5d                   	pop    rbp
    ec61:	41 5c                	pop    r12
    ec63:	41 5d                	pop    r13
    ec65:	41 5e                	pop    r14
    ec67:	c3                   	ret    
    ec68:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    ec6f:	00 
    ec70:	89 da                	mov    edx,ebx
    ec72:	48 89 ef             	mov    rdi,rbp
    ec75:	be 01 00 00 00       	mov    esi,0x1
    ec7a:	e8 b1 08 00 00       	call   f530 <print_strn_fd>
    ec7f:	41 8b 55 04          	mov    edx,DWORD PTR [r13+0x4]
    ec83:	be 01 00 00 00       	mov    esi,0x1
    ec88:	bf 20 00 00 00       	mov    edi,0x20
    ec8d:	41 89 c4             	mov    r12d,eax
    ec90:	29 c2                	sub    edx,eax
    ec92:	e8 f9 08 00 00       	call   f590 <write_repeated_char>
    ec97:	5b                   	pop    rbx
    ec98:	5d                   	pop    rbp
    ec99:	41 01 c4             	add    r12d,eax
    ec9c:	44 89 e0             	mov    eax,r12d
    ec9f:	41 5c                	pop    r12
    eca1:	41 5d                	pop    r13
    eca3:	41 5e                	pop    r14
    eca5:	c3                   	ret    
    eca6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    ecad:	00 00 00 
    ecb0:	4c 89 e6             	mov    rsi,r12
    ecb3:	48 89 ef             	mov    rdi,rbp
    ecb6:	e8 b5 ce ff ff       	call   bb70 <ft_strcmp>
    ecbb:	41 8b 55 08          	mov    edx,DWORD PTR [r13+0x8]
    ecbf:	85 c0                	test   eax,eax
    ecc1:	75 0e                	jne    ecd1 <format_conversion_s+0x101>
    ecc3:	83 fa 05             	cmp    edx,0x5
    ecc6:	48 8d 05 96 36 00 00 	lea    rax,[rip+0x3696]        # 12363 <_IO_stdin_used+0x363>
    eccd:	48 0f 46 e8          	cmovbe rbp,rax
    ecd1:	5b                   	pop    rbx
    ecd2:	48 89 ee             	mov    rsi,rbp
    ecd5:	4c 89 ef             	mov    rdi,r13
    ecd8:	5d                   	pop    rbp
    ecd9:	41 5c                	pop    r12
    ecdb:	41 5d                	pop    r13
    ecdd:	41 5e                	pop    r14
    ecdf:	e9 1c fe ff ff       	jmp    eb00 <convert_flag_s_width>
    ece4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    ece8:	89 da                	mov    edx,ebx
    ecea:	48 89 ef             	mov    rdi,rbp
    eced:	5b                   	pop    rbx
    ecee:	be 01 00 00 00       	mov    esi,0x1
    ecf3:	5d                   	pop    rbp
    ecf4:	41 5c                	pop    r12
    ecf6:	41 5d                	pop    r13
    ecf8:	41 5e                	pop    r14
    ecfa:	e9 31 08 00 00       	jmp    f530 <print_strn_fd>
    ecff:	90                   	nop

000000000000ed00 <check_conversion>:
    ed00:	f3 0f 1e fa          	endbr64 
    ed04:	41 54                	push   r12
    ed06:	48 89 f1             	mov    rcx,rsi
    ed09:	55                   	push   rbp
    ed0a:	48 89 d5             	mov    rbp,rdx
    ed0d:	53                   	push   rbx
    ed0e:	48 8b 07             	mov    rax,QWORD PTR [rdi]
    ed11:	0f b6 10             	movzx  edx,BYTE PTR [rax]
    ed14:	80 fa 63             	cmp    dl,0x63
    ed17:	74 37                	je     ed50 <check_conversion+0x50>
    ed19:	80 fa 25             	cmp    dl,0x25
    ed1c:	0f 84 a6 01 00 00    	je     eec8 <check_conversion+0x1c8>
    ed22:	83 ea 58             	sub    edx,0x58
    ed25:	80 fa 20             	cmp    dl,0x20
    ed28:	77 16                	ja     ed40 <check_conversion+0x40>
    ed2a:	48 8d 35 5b 36 00 00 	lea    rsi,[rip+0x365b]        # 1238c <_IO_stdin_used+0x38c>
    ed31:	0f b6 da             	movzx  ebx,dl
    ed34:	48 63 3c 9e          	movsxd rdi,DWORD PTR [rsi+rbx*4]
    ed38:	48 01 f7             	add    rdi,rsi
    ed3b:	3e ff e7             	notrack jmp rdi
    ed3e:	66 90                	xchg   ax,ax
    ed40:	b8 ff ff ff ff       	mov    eax,0xffffffff
    ed45:	5b                   	pop    rbx
    ed46:	5d                   	pop    rbp
    ed47:	41 5c                	pop    r12
    ed49:	c3                   	ret    
    ed4a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    ed50:	8b 36                	mov    esi,DWORD PTR [rsi]
    ed52:	83 fe 2f             	cmp    esi,0x2f
    ed55:	77 51                	ja     eda8 <check_conversion+0xa8>
    ed57:	89 f7                	mov    edi,esi
    ed59:	83 c6 08             	add    esi,0x8
    ed5c:	48 03 79 10          	add    rdi,QWORD PTR [rcx+0x10]
    ed60:	89 31                	mov    DWORD PTR [rcx],esi
    ed62:	8b 55 04             	mov    edx,DWORD PTR [rbp+0x4]
    ed65:	44 0f be 27          	movsx  r12d,BYTE PTR [rdi]
    ed69:	85 d2                	test   edx,edx
    ed6b:	0f 84 27 02 00 00    	je     ef98 <check_conversion+0x298>
    ed71:	f6 45 00 02          	test   BYTE PTR [rbp+0x0],0x2
    ed75:	0f 84 65 01 00 00    	je     eee0 <check_conversion+0x1e0>
    ed7b:	be 01 00 00 00       	mov    esi,0x1
    ed80:	44 89 e7             	mov    edi,r12d
    ed83:	e8 28 0a 00 00       	call   f7b0 <ft_putchar_fd>
    ed88:	8b 55 04             	mov    edx,DWORD PTR [rbp+0x4]
    ed8b:	be 01 00 00 00       	mov    esi,0x1
    ed90:	bf 20 00 00 00       	mov    edi,0x20
    ed95:	89 c3                	mov    ebx,eax
    ed97:	29 c2                	sub    edx,eax
    ed99:	e8 f2 07 00 00       	call   f590 <write_repeated_char>
    ed9e:	01 d8                	add    eax,ebx
    eda0:	eb a3                	jmp    ed45 <check_conversion+0x45>
    eda2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    eda8:	48 8b 79 08          	mov    rdi,QWORD PTR [rcx+0x8]
    edac:	4c 8d 47 08          	lea    r8,[rdi+0x8]
    edb0:	4c 89 41 08          	mov    QWORD PTR [rcx+0x8],r8
    edb4:	eb ac                	jmp    ed62 <check_conversion+0x62>
    edb6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    edbd:	00 00 00 
    edc0:	44 8b 11             	mov    r10d,DWORD PTR [rcx]
    edc3:	41 83 fa 2f          	cmp    r10d,0x2f
    edc7:	0f 87 b3 01 00 00    	ja     ef80 <check_conversion+0x280>
    edcd:	45 89 d3             	mov    r11d,r10d
    edd0:	41 83 c2 08          	add    r10d,0x8
    edd4:	4c 03 59 10          	add    r11,QWORD PTR [rcx+0x10]
    edd8:	44 89 11             	mov    DWORD PTR [rcx],r10d
    eddb:	41 8b 3b             	mov    edi,DWORD PTR [r11]
    edde:	5b                   	pop    rbx
    eddf:	48 89 ee             	mov    rsi,rbp
    ede2:	5d                   	pop    rbp
    ede3:	41 5c                	pop    r12
    ede5:	e9 46 02 00 00       	jmp    f030 <format_conversion_d_i>
    edea:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    edf0:	44 8b 01             	mov    r8d,DWORD PTR [rcx]
    edf3:	41 83 f8 2f          	cmp    r8d,0x2f
    edf7:	0f 87 6b 01 00 00    	ja     ef68 <check_conversion+0x268>
    edfd:	45 89 c1             	mov    r9d,r8d
    ee00:	41 83 c0 08          	add    r8d,0x8
    ee04:	4c 03 49 10          	add    r9,QWORD PTR [rcx+0x10]
    ee08:	44 89 01             	mov    DWORD PTR [rcx],r8d
    ee0b:	41 8b 39             	mov    edi,DWORD PTR [r9]
    ee0e:	5b                   	pop    rbx
    ee0f:	48 89 ee             	mov    rsi,rbp
    ee12:	5d                   	pop    rbp
    ee13:	41 5c                	pop    r12
    ee15:	e9 96 02 00 00       	jmp    f0b0 <format_conversion_x>
    ee1a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    ee20:	8b 01                	mov    eax,DWORD PTR [rcx]
    ee22:	83 f8 2f             	cmp    eax,0x2f
    ee25:	0f 87 25 01 00 00    	ja     ef50 <check_conversion+0x250>
    ee2b:	89 c3                	mov    ebx,eax
    ee2d:	83 c0 08             	add    eax,0x8
    ee30:	48 03 59 10          	add    rbx,QWORD PTR [rcx+0x10]
    ee34:	89 01                	mov    DWORD PTR [rcx],eax
    ee36:	8b 3b                	mov    edi,DWORD PTR [rbx]
    ee38:	48 89 ee             	mov    rsi,rbp
    ee3b:	5b                   	pop    rbx
    ee3c:	5d                   	pop    rbp
    ee3d:	41 5c                	pop    r12
    ee3f:	e9 ac 02 00 00       	jmp    f0f0 <format_conversion_upper_x>
    ee44:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    ee48:	8b 19                	mov    ebx,DWORD PTR [rcx]
    ee4a:	83 fb 2f             	cmp    ebx,0x2f
    ee4d:	0f 87 e5 00 00 00    	ja     ef38 <check_conversion+0x238>
    ee53:	89 da                	mov    edx,ebx
    ee55:	83 c3 08             	add    ebx,0x8
    ee58:	48 03 51 10          	add    rdx,QWORD PTR [rcx+0x10]
    ee5c:	89 19                	mov    DWORD PTR [rcx],ebx
    ee5e:	48 8b 3a             	mov    rdi,QWORD PTR [rdx]
    ee61:	5b                   	pop    rbx
    ee62:	48 89 ee             	mov    rsi,rbp
    ee65:	5d                   	pop    rbp
    ee66:	41 5c                	pop    r12
    ee68:	e9 63 fd ff ff       	jmp    ebd0 <format_conversion_s>
    ee6d:	0f 1f 00             	nop    DWORD PTR [rax]
    ee70:	44 8b 19             	mov    r11d,DWORD PTR [rcx]
    ee73:	41 83 fb 2f          	cmp    r11d,0x2f
    ee77:	0f 87 a3 00 00 00    	ja     ef20 <check_conversion+0x220>
    ee7d:	45 89 dc             	mov    r12d,r11d
    ee80:	41 83 c3 08          	add    r11d,0x8
    ee84:	4c 03 61 10          	add    r12,QWORD PTR [rcx+0x10]
    ee88:	44 89 19             	mov    DWORD PTR [rcx],r11d
    ee8b:	41 8b 3c 24          	mov    edi,DWORD PTR [r12]
    ee8f:	5b                   	pop    rbx
    ee90:	48 89 ee             	mov    rsi,rbp
    ee93:	5d                   	pop    rbp
    ee94:	41 5c                	pop    r12
    ee96:	e9 d5 01 00 00       	jmp    f070 <format_conversion_u>
    ee9b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    eea0:	8b 39                	mov    edi,DWORD PTR [rcx]
    eea2:	83 ff 2f             	cmp    edi,0x2f
    eea5:	77 69                	ja     ef10 <check_conversion+0x210>
    eea7:	41 89 f8             	mov    r8d,edi
    eeaa:	83 c7 08             	add    edi,0x8
    eead:	4c 03 41 10          	add    r8,QWORD PTR [rcx+0x10]
    eeb1:	89 39                	mov    DWORD PTR [rcx],edi
    eeb3:	49 8b 38             	mov    rdi,QWORD PTR [r8]
    eeb6:	5b                   	pop    rbx
    eeb7:	48 89 ee             	mov    rsi,rbp
    eeba:	5d                   	pop    rbp
    eebb:	41 5c                	pop    r12
    eebd:	e9 0e 01 00 00       	jmp    efd0 <format_conversion_p>
    eec2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    eec8:	5b                   	pop    rbx
    eec9:	be 01 00 00 00       	mov    esi,0x1
    eece:	5d                   	pop    rbp
    eecf:	bf 25 00 00 00       	mov    edi,0x25
    eed4:	41 5c                	pop    r12
    eed6:	e9 d5 08 00 00       	jmp    f7b0 <ft_putchar_fd>
    eedb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    eee0:	83 ea 01             	sub    edx,0x1
    eee3:	be 01 00 00 00       	mov    esi,0x1
    eee8:	bf 20 00 00 00       	mov    edi,0x20
    eeed:	e8 9e 06 00 00       	call   f590 <write_repeated_char>
    eef2:	be 01 00 00 00       	mov    esi,0x1
    eef7:	44 89 e7             	mov    edi,r12d
    eefa:	89 c5                	mov    ebp,eax
    eefc:	e8 af 08 00 00       	call   f7b0 <ft_putchar_fd>
    ef01:	01 e8                	add    eax,ebp
    ef03:	e9 3d fe ff ff       	jmp    ed45 <check_conversion+0x45>
    ef08:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    ef0f:	00 
    ef10:	4c 8b 41 08          	mov    r8,QWORD PTR [rcx+0x8]
    ef14:	4d 8d 48 08          	lea    r9,[r8+0x8]
    ef18:	4c 89 49 08          	mov    QWORD PTR [rcx+0x8],r9
    ef1c:	eb 95                	jmp    eeb3 <check_conversion+0x1b3>
    ef1e:	66 90                	xchg   ax,ax
    ef20:	4c 8b 61 08          	mov    r12,QWORD PTR [rcx+0x8]
    ef24:	49 8d 44 24 08       	lea    rax,[r12+0x8]
    ef29:	48 89 41 08          	mov    QWORD PTR [rcx+0x8],rax
    ef2d:	e9 59 ff ff ff       	jmp    ee8b <check_conversion+0x18b>
    ef32:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    ef38:	48 8b 51 08          	mov    rdx,QWORD PTR [rcx+0x8]
    ef3c:	48 8d 72 08          	lea    rsi,[rdx+0x8]
    ef40:	48 89 71 08          	mov    QWORD PTR [rcx+0x8],rsi
    ef44:	e9 15 ff ff ff       	jmp    ee5e <check_conversion+0x15e>
    ef49:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    ef50:	48 8b 59 08          	mov    rbx,QWORD PTR [rcx+0x8]
    ef54:	48 8d 53 08          	lea    rdx,[rbx+0x8]
    ef58:	48 89 51 08          	mov    QWORD PTR [rcx+0x8],rdx
    ef5c:	e9 d5 fe ff ff       	jmp    ee36 <check_conversion+0x136>
    ef61:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    ef68:	4c 8b 49 08          	mov    r9,QWORD PTR [rcx+0x8]
    ef6c:	4d 8d 51 08          	lea    r10,[r9+0x8]
    ef70:	4c 89 51 08          	mov    QWORD PTR [rcx+0x8],r10
    ef74:	e9 92 fe ff ff       	jmp    ee0b <check_conversion+0x10b>
    ef79:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    ef80:	4c 8b 59 08          	mov    r11,QWORD PTR [rcx+0x8]
    ef84:	4d 8d 63 08          	lea    r12,[r11+0x8]
    ef88:	4c 89 61 08          	mov    QWORD PTR [rcx+0x8],r12
    ef8c:	e9 4a fe ff ff       	jmp    eddb <check_conversion+0xdb>
    ef91:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    ef98:	5b                   	pop    rbx
    ef99:	44 89 e7             	mov    edi,r12d
    ef9c:	5d                   	pop    rbp
    ef9d:	be 01 00 00 00       	mov    esi,0x1
    efa2:	41 5c                	pop    r12
    efa4:	e9 07 08 00 00       	jmp    f7b0 <ft_putchar_fd>
    efa9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

000000000000efb0 <format_conversion_percent>:
    efb0:	f3 0f 1e fa          	endbr64 
    efb4:	be 01 00 00 00       	mov    esi,0x1
    efb9:	bf 25 00 00 00       	mov    edi,0x25
    efbe:	e9 ed 07 00 00       	jmp    f7b0 <ft_putchar_fd>
    efc3:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    efca:	00 00 00 
    efcd:	0f 1f 00             	nop    DWORD PTR [rax]

000000000000efd0 <format_conversion_p>:
    efd0:	f3 0f 1e fa          	endbr64 
    efd4:	41 54                	push   r12
    efd6:	55                   	push   rbp
    efd7:	48 89 f5             	mov    rbp,rsi
    efda:	48 83 ec 28          	sub    rsp,0x28
    efde:	48 85 ff             	test   rdi,rdi
    efe1:	74 2d                	je     f010 <format_conversion_p+0x40>
    efe3:	49 89 e4             	mov    r12,rsp
    efe6:	48 89 fe             	mov    rsi,rdi
    efe9:	48 8d 15 20 34 00 00 	lea    rdx,[rip+0x3420]        # 12410 <_IO_stdin_used+0x410>
    eff0:	4c 89 e7             	mov    rdi,r12
    eff3:	e8 48 01 00 00       	call   f140 <sprint_long_hexa>
    eff8:	80 4d 00 10          	or     BYTE PTR [rbp+0x0],0x10
    effc:	4c 89 e6             	mov    rsi,r12
    efff:	48 89 ef             	mov    rdi,rbp
    f002:	e8 b9 0e 00 00       	call   fec0 <convert_digit>
    f007:	48 83 c4 28          	add    rsp,0x28
    f00b:	5d                   	pop    rbp
    f00c:	41 5c                	pop    r12
    f00e:	c3                   	ret    
    f00f:	90                   	nop
    f010:	48 83 c4 28          	add    rsp,0x28
    f014:	48 8d 3d 69 33 00 00 	lea    rdi,[rip+0x3369]        # 12384 <_IO_stdin_used+0x384>
    f01b:	5d                   	pop    rbp
    f01c:	41 5c                	pop    r12
    f01e:	e9 ad fb ff ff       	jmp    ebd0 <format_conversion_s>
    f023:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    f02a:	00 00 00 00 
    f02e:	66 90                	xchg   ax,ax

000000000000f030 <format_conversion_d_i>:
    f030:	f3 0f 1e fa          	endbr64 
    f034:	41 54                	push   r12
    f036:	41 89 f8             	mov    r8d,edi
    f039:	55                   	push   rbp
    f03a:	48 89 f5             	mov    rbp,rsi
    f03d:	48 83 ec 18          	sub    rsp,0x18
    f041:	85 ff                	test   edi,edi
    f043:	79 03                	jns    f048 <format_conversion_d_i+0x18>
    f045:	80 0e 80             	or     BYTE PTR [rsi],0x80
    f048:	80 65 00 ef          	and    BYTE PTR [rbp+0x0],0xef
    f04c:	4c 8d 64 24 04       	lea    r12,[rsp+0x4]
    f051:	44 89 c6             	mov    esi,r8d
    f054:	4c 89 e7             	mov    rdi,r12
    f057:	e8 64 0a 00 00       	call   fac0 <sprint_abs_toa>
    f05c:	4c 89 e6             	mov    rsi,r12
    f05f:	48 89 ef             	mov    rdi,rbp
    f062:	e8 59 0e 00 00       	call   fec0 <convert_digit>
    f067:	48 83 c4 18          	add    rsp,0x18
    f06b:	5d                   	pop    rbp
    f06c:	41 5c                	pop    r12
    f06e:	c3                   	ret    
    f06f:	90                   	nop

000000000000f070 <format_conversion_u>:
    f070:	f3 0f 1e fa          	endbr64 
    f074:	41 54                	push   r12
    f076:	55                   	push   rbp
    f077:	48 89 f5             	mov    rbp,rsi
    f07a:	48 83 ec 18          	sub    rsp,0x18
    f07e:	80 26 ea             	and    BYTE PTR [rsi],0xea
    f081:	89 fe                	mov    esi,edi
    f083:	4c 8d 64 24 04       	lea    r12,[rsp+0x4]
    f088:	4c 89 e7             	mov    rdi,r12
    f08b:	e8 e0 08 00 00       	call   f970 <sprint_uitoa>
    f090:	4c 89 e6             	mov    rsi,r12
    f093:	48 89 ef             	mov    rdi,rbp
    f096:	e8 25 0e 00 00       	call   fec0 <convert_digit>
    f09b:	48 83 c4 18          	add    rsp,0x18
    f09f:	5d                   	pop    rbp
    f0a0:	41 5c                	pop    r12
    f0a2:	c3                   	ret    
    f0a3:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    f0aa:	00 00 00 00 
    f0ae:	66 90                	xchg   ax,ax

000000000000f0b0 <format_conversion_x>:
    f0b0:	f3 0f 1e fa          	endbr64 
    f0b4:	41 54                	push   r12
    f0b6:	55                   	push   rbp
    f0b7:	48 89 f5             	mov    rbp,rsi
    f0ba:	48 83 ec 28          	sub    rsp,0x28
    f0be:	85 ff                	test   edi,edi
    f0c0:	75 03                	jne    f0c5 <format_conversion_x+0x15>
    f0c2:	80 26 ef             	and    BYTE PTR [rsi],0xef
    f0c5:	80 65 00 fa          	and    BYTE PTR [rbp+0x0],0xfa
    f0c9:	49 89 e4             	mov    r12,rsp
    f0cc:	48 8d 15 3d 33 00 00 	lea    rdx,[rip+0x333d]        # 12410 <_IO_stdin_used+0x410>
    f0d3:	89 fe                	mov    esi,edi
    f0d5:	4c 89 e7             	mov    rdi,r12
    f0d8:	e8 63 00 00 00       	call   f140 <sprint_long_hexa>
    f0dd:	4c 89 e6             	mov    rsi,r12
    f0e0:	48 89 ef             	mov    rdi,rbp
    f0e3:	e8 d8 0d 00 00       	call   fec0 <convert_digit>
    f0e8:	48 83 c4 28          	add    rsp,0x28
    f0ec:	5d                   	pop    rbp
    f0ed:	41 5c                	pop    r12
    f0ef:	c3                   	ret    

000000000000f0f0 <format_conversion_upper_x>:
    f0f0:	f3 0f 1e fa          	endbr64 
    f0f4:	41 54                	push   r12
    f0f6:	55                   	push   rbp
    f0f7:	48 89 f5             	mov    rbp,rsi
    f0fa:	48 83 ec 28          	sub    rsp,0x28
    f0fe:	85 ff                	test   edi,edi
    f100:	75 03                	jne    f105 <format_conversion_upper_x+0x15>
    f102:	80 26 ef             	and    BYTE PTR [rsi],0xef
    f105:	0f b6 45 00          	movzx  eax,BYTE PTR [rbp+0x0]
    f109:	49 89 e4             	mov    r12,rsp
    f10c:	89 fe                	mov    esi,edi
    f10e:	48 8d 15 0c 33 00 00 	lea    rdx,[rip+0x330c]        # 12421 <_IO_stdin_used+0x421>
    f115:	4c 89 e7             	mov    rdi,r12
    f118:	83 e0 ba             	and    eax,0xffffffba
    f11b:	83 c8 40             	or     eax,0x40
    f11e:	88 45 00             	mov    BYTE PTR [rbp+0x0],al
    f121:	e8 1a 00 00 00       	call   f140 <sprint_long_hexa>
    f126:	4c 89 e6             	mov    rsi,r12
    f129:	48 89 ef             	mov    rdi,rbp
    f12c:	e8 8f 0d 00 00       	call   fec0 <convert_digit>
    f131:	48 83 c4 28          	add    rsp,0x28
    f135:	5d                   	pop    rbp
    f136:	41 5c                	pop    r12
    f138:	c3                   	ret    
    f139:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

000000000000f140 <sprint_long_hexa>:
    f140:	f3 0f 1e fa          	endbr64 
    f144:	48 89 f1             	mov    rcx,rsi
    f147:	c5 f9 ef c0          	vpxor  xmm0,xmm0,xmm0
    f14b:	48 c1 ee 3c          	shr    rsi,0x3c
    f14f:	c6 47 10 00          	mov    BYTE PTR [rdi+0x10],0x0
    f153:	48 89 f8             	mov    rax,rdi
    f156:	c5 fa 7f 07          	vmovdqu XMMWORD PTR [rdi],xmm0
    f15a:	0f b6 3c 32          	movzx  edi,BYTE PTR [rdx+rsi*1]
    f15e:	49 89 c8             	mov    r8,rcx
    f161:	40 80 ff 30          	cmp    dil,0x30
    f165:	40 88 38             	mov    BYTE PTR [rax],dil
    f168:	0f 84 63 01 00 00    	je     f2d1 <sprint_long_hexa+0x191>
    f16e:	49 c1 e8 38          	shr    r8,0x38
    f172:	41 ba 01 00 00 00    	mov    r10d,0x1
    f178:	41 83 e0 0f          	and    r8d,0xf
    f17c:	46 0f b6 0c 02       	movzx  r9d,BYTE PTR [rdx+r8*1]
    f181:	44 88 48 01          	mov    BYTE PTR [rax+0x1],r9b
    f185:	48 89 ce             	mov    rsi,rcx
    f188:	4d 8d 5a 01          	lea    r11,[r10+0x1]
    f18c:	48 c1 ee 34          	shr    rsi,0x34
    f190:	83 e6 0f             	and    esi,0xf
    f193:	0f b6 3c 32          	movzx  edi,BYTE PTR [rdx+rsi*1]
    f197:	42 88 7c 10 01       	mov    BYTE PTR [rax+r10*1+0x1],dil
    f19c:	49 89 ca             	mov    r10,rcx
    f19f:	4d 8d 4b 01          	lea    r9,[r11+0x1]
    f1a3:	49 c1 ea 30          	shr    r10,0x30
    f1a7:	41 83 e2 0f          	and    r10d,0xf
    f1ab:	42 0f b6 34 12       	movzx  esi,BYTE PTR [rdx+r10*1]
    f1b0:	42 88 74 18 01       	mov    BYTE PTR [rax+r11*1+0x1],sil
    f1b5:	49 89 cb             	mov    r11,rcx
    f1b8:	4d 8d 41 01          	lea    r8,[r9+0x1]
    f1bc:	49 c1 eb 2c          	shr    r11,0x2c
    f1c0:	41 83 e3 0f          	and    r11d,0xf
    f1c4:	46 0f b6 14 1a       	movzx  r10d,BYTE PTR [rdx+r11*1]
    f1c9:	46 88 54 08 01       	mov    BYTE PTR [rax+r9*1+0x1],r10b
    f1ce:	49 89 c9             	mov    r9,rcx
    f1d1:	49 8d 78 01          	lea    rdi,[r8+0x1]
    f1d5:	49 c1 e9 28          	shr    r9,0x28
    f1d9:	41 83 e1 0f          	and    r9d,0xf
    f1dd:	46 0f b6 1c 0a       	movzx  r11d,BYTE PTR [rdx+r9*1]
    f1e2:	46 88 5c 00 01       	mov    BYTE PTR [rax+r8*1+0x1],r11b
    f1e7:	49 89 c9             	mov    r9,rcx
    f1ea:	4c 8d 47 01          	lea    r8,[rdi+0x1]
    f1ee:	49 c1 e9 24          	shr    r9,0x24
    f1f2:	41 83 e1 0f          	and    r9d,0xf
    f1f6:	46 0f b6 1c 0a       	movzx  r11d,BYTE PTR [rdx+r9*1]
    f1fb:	44 88 5c 38 01       	mov    BYTE PTR [rax+rdi*1+0x1],r11b
    f200:	48 89 ce             	mov    rsi,rcx
    f203:	4d 8d 50 01          	lea    r10,[r8+0x1]
    f207:	48 c1 ee 20          	shr    rsi,0x20
    f20b:	83 e6 0f             	and    esi,0xf
    f20e:	44 0f b6 0c 32       	movzx  r9d,BYTE PTR [rdx+rsi*1]
    f213:	46 88 4c 00 01       	mov    BYTE PTR [rax+r8*1+0x1],r9b
    f218:	48 89 ce             	mov    rsi,rcx
    f21b:	4d 8d 5a 01          	lea    r11,[r10+0x1]
    f21f:	48 c1 ee 1c          	shr    rsi,0x1c
    f223:	83 e6 0f             	and    esi,0xf
    f226:	44 0f b6 0c 32       	movzx  r9d,BYTE PTR [rdx+rsi*1]
    f22b:	46 88 4c 10 01       	mov    BYTE PTR [rax+r10*1+0x1],r9b
    f230:	49 89 ca             	mov    r10,rcx
    f233:	49 8d 7b 01          	lea    rdi,[r11+0x1]
    f237:	49 c1 ea 18          	shr    r10,0x18
    f23b:	41 83 e2 0f          	and    r10d,0xf
    f23f:	42 0f b6 34 12       	movzx  esi,BYTE PTR [rdx+r10*1]
    f244:	42 88 74 18 01       	mov    BYTE PTR [rax+r11*1+0x1],sil
    f249:	49 89 cb             	mov    r11,rcx
    f24c:	4c 8d 47 01          	lea    r8,[rdi+0x1]
    f250:	49 c1 eb 14          	shr    r11,0x14
    f254:	41 83 e3 0f          	and    r11d,0xf
    f258:	46 0f b6 14 1a       	movzx  r10d,BYTE PTR [rdx+r11*1]
    f25d:	44 88 54 38 01       	mov    BYTE PTR [rax+rdi*1+0x1],r10b
    f262:	49 89 cb             	mov    r11,rcx
    f265:	4d 8d 48 01          	lea    r9,[r8+0x1]
    f269:	49 c1 eb 10          	shr    r11,0x10
    f26d:	41 83 e3 0f          	and    r11d,0xf
    f271:	46 0f b6 14 1a       	movzx  r10d,BYTE PTR [rdx+r11*1]
    f276:	46 88 54 00 01       	mov    BYTE PTR [rax+r8*1+0x1],r10b
    f27b:	49 89 cb             	mov    r11,rcx
    f27e:	4d 8d 41 01          	lea    r8,[r9+0x1]
    f282:	49 c1 eb 0c          	shr    r11,0xc
    f286:	41 83 e3 0f          	and    r11d,0xf
    f28a:	46 0f b6 14 1a       	movzx  r10d,BYTE PTR [rdx+r11*1]
    f28f:	46 88 54 08 01       	mov    BYTE PTR [rax+r9*1+0x1],r10b
    f294:	48 89 ce             	mov    rsi,rcx
    f297:	49 8d 78 01          	lea    rdi,[r8+0x1]
    f29b:	48 c1 ee 08          	shr    rsi,0x8
    f29f:	83 e6 0f             	and    esi,0xf
    f2a2:	44 0f b6 0c 32       	movzx  r9d,BYTE PTR [rdx+rsi*1]
    f2a7:	46 88 4c 00 01       	mov    BYTE PTR [rax+r8*1+0x1],r9b
    f2ac:	48 89 ce             	mov    rsi,rcx
    f2af:	4c 8d 57 01          	lea    r10,[rdi+0x1]
    f2b3:	48 c1 ee 04          	shr    rsi,0x4
    f2b7:	83 e6 0f             	and    esi,0xf
    f2ba:	44 0f b6 0c 32       	movzx  r9d,BYTE PTR [rdx+rsi*1]
    f2bf:	44 88 4c 38 01       	mov    BYTE PTR [rax+rdi*1+0x1],r9b
    f2c4:	83 e1 0f             	and    ecx,0xf
    f2c7:	0f b6 14 0a          	movzx  edx,BYTE PTR [rdx+rcx*1]
    f2cb:	42 88 54 10 01       	mov    BYTE PTR [rax+r10*1+0x1],dl
    f2d0:	c3                   	ret    
    f2d1:	49 c1 e8 38          	shr    r8,0x38
    f2d5:	41 83 e0 0f          	and    r8d,0xf
    f2d9:	46 0f b6 1c 02       	movzx  r11d,BYTE PTR [rdx+r8*1]
    f2de:	44 88 18             	mov    BYTE PTR [rax],r11b
    f2e1:	41 80 fb 30          	cmp    r11b,0x30
    f2e5:	0f 85 6c 01 00 00    	jne    f457 <sprint_long_hexa+0x317>
    f2eb:	49 89 c8             	mov    r8,rcx
    f2ee:	49 c1 e8 34          	shr    r8,0x34
    f2f2:	41 83 e0 0f          	and    r8d,0xf
    f2f6:	46 0f b6 0c 02       	movzx  r9d,BYTE PTR [rdx+r8*1]
    f2fb:	44 88 08             	mov    BYTE PTR [rax],r9b
    f2fe:	41 80 f9 30          	cmp    r9b,0x30
    f302:	0f 85 b4 01 00 00    	jne    f4bc <sprint_long_hexa+0x37c>
    f308:	48 89 cf             	mov    rdi,rcx
    f30b:	48 c1 ef 30          	shr    rdi,0x30
    f30f:	83 e7 0f             	and    edi,0xf
    f312:	44 0f b6 04 3a       	movzx  r8d,BYTE PTR [rdx+rdi*1]
    f317:	44 88 00             	mov    BYTE PTR [rax],r8b
    f31a:	41 80 f8 30          	cmp    r8b,0x30
    f31e:	0f 85 90 01 00 00    	jne    f4b4 <sprint_long_hexa+0x374>
    f324:	48 89 ce             	mov    rsi,rcx
    f327:	48 c1 ee 2c          	shr    rsi,0x2c
    f32b:	83 e6 0f             	and    esi,0xf
    f32e:	0f b6 3c 32          	movzx  edi,BYTE PTR [rdx+rsi*1]
    f332:	40 88 38             	mov    BYTE PTR [rax],dil
    f335:	40 80 ff 30          	cmp    dil,0x30
    f339:	0f 85 6d 01 00 00    	jne    f4ac <sprint_long_hexa+0x36c>
    f33f:	49 89 ca             	mov    r10,rcx
    f342:	49 c1 ea 28          	shr    r10,0x28
    f346:	41 83 e2 0f          	and    r10d,0xf
    f34a:	42 0f b6 34 12       	movzx  esi,BYTE PTR [rdx+r10*1]
    f34f:	40 88 30             	mov    BYTE PTR [rax],sil
    f352:	40 80 fe 30          	cmp    sil,0x30
    f356:	0f 85 49 01 00 00    	jne    f4a5 <sprint_long_hexa+0x365>
    f35c:	49 89 c8             	mov    r8,rcx
    f35f:	49 c1 e8 24          	shr    r8,0x24
    f363:	41 83 e0 0f          	and    r8d,0xf
    f367:	46 0f b6 14 02       	movzx  r10d,BYTE PTR [rdx+r8*1]
    f36c:	44 88 10             	mov    BYTE PTR [rax],r10b
    f36f:	41 80 fa 30          	cmp    r10b,0x30
    f373:	0f 85 24 01 00 00    	jne    f49d <sprint_long_hexa+0x35d>
    f379:	48 89 cf             	mov    rdi,rcx
    f37c:	48 c1 ef 20          	shr    rdi,0x20
    f380:	83 e7 0f             	and    edi,0xf
    f383:	44 0f b6 1c 3a       	movzx  r11d,BYTE PTR [rdx+rdi*1]
    f388:	44 88 18             	mov    BYTE PTR [rax],r11b
    f38b:	41 80 fb 30          	cmp    r11b,0x30
    f38f:	0f 85 00 01 00 00    	jne    f495 <sprint_long_hexa+0x355>
    f395:	49 89 c8             	mov    r8,rcx
    f398:	49 c1 e8 1c          	shr    r8,0x1c
    f39c:	41 83 e0 0f          	and    r8d,0xf
    f3a0:	42 0f b6 3c 02       	movzx  edi,BYTE PTR [rdx+r8*1]
    f3a5:	40 88 38             	mov    BYTE PTR [rax],dil
    f3a8:	40 80 ff 30          	cmp    dil,0x30
    f3ac:	0f 85 db 00 00 00    	jne    f48d <sprint_long_hexa+0x34d>
    f3b2:	49 89 c9             	mov    r9,rcx
    f3b5:	49 c1 e9 18          	shr    r9,0x18
    f3b9:	41 83 e1 0f          	and    r9d,0xf
    f3bd:	46 0f b6 04 0a       	movzx  r8d,BYTE PTR [rdx+r9*1]
    f3c2:	44 88 00             	mov    BYTE PTR [rax],r8b
    f3c5:	41 80 f8 30          	cmp    r8b,0x30
    f3c9:	0f 85 b7 00 00 00    	jne    f486 <sprint_long_hexa+0x346>
    f3cf:	48 89 ce             	mov    rsi,rcx
    f3d2:	48 c1 ee 14          	shr    rsi,0x14
    f3d6:	83 e6 0f             	and    esi,0xf
    f3d9:	44 0f b6 0c 32       	movzx  r9d,BYTE PTR [rdx+rsi*1]
    f3de:	44 88 08             	mov    BYTE PTR [rax],r9b
    f3e1:	41 80 f9 30          	cmp    r9b,0x30
    f3e5:	0f 85 93 00 00 00    	jne    f47e <sprint_long_hexa+0x33e>
    f3eb:	48 89 cf             	mov    rdi,rcx
    f3ee:	48 c1 ef 10          	shr    rdi,0x10
    f3f2:	83 e7 0f             	and    edi,0xf
    f3f5:	0f b6 34 3a          	movzx  esi,BYTE PTR [rdx+rdi*1]
    f3f9:	40 88 30             	mov    BYTE PTR [rax],sil
    f3fc:	40 80 fe 30          	cmp    sil,0x30
    f400:	75 74                	jne    f476 <sprint_long_hexa+0x336>
    f402:	49 89 c8             	mov    r8,rcx
    f405:	49 c1 e8 0c          	shr    r8,0xc
    f409:	41 83 e0 0f          	and    r8d,0xf
    f40d:	42 0f b6 3c 02       	movzx  edi,BYTE PTR [rdx+r8*1]
    f412:	40 88 38             	mov    BYTE PTR [rax],dil
    f415:	40 80 ff 30          	cmp    dil,0x30
    f419:	75 53                	jne    f46e <sprint_long_hexa+0x32e>
    f41b:	49 89 cb             	mov    r11,rcx
    f41e:	49 c1 eb 08          	shr    r11,0x8
    f422:	41 83 e3 0f          	and    r11d,0xf
    f426:	46 0f b6 14 1a       	movzx  r10d,BYTE PTR [rdx+r11*1]
    f42b:	44 88 10             	mov    BYTE PTR [rax],r10b
    f42e:	41 80 fa 30          	cmp    r10b,0x30
    f432:	75 33                	jne    f467 <sprint_long_hexa+0x327>
    f434:	49 89 c8             	mov    r8,rcx
    f437:	49 c1 e8 04          	shr    r8,0x4
    f43b:	41 83 e0 0f          	and    r8d,0xf
    f43f:	46 0f b6 1c 02       	movzx  r11d,BYTE PTR [rdx+r8*1]
    f444:	44 88 18             	mov    BYTE PTR [rax],r11b
    f447:	41 80 fb 30          	cmp    r11b,0x30
    f44b:	75 12                	jne    f45f <sprint_long_hexa+0x31f>
    f44d:	83 e1 0f             	and    ecx,0xf
    f450:	0f b6 0c 0a          	movzx  ecx,BYTE PTR [rdx+rcx*1]
    f454:	88 08                	mov    BYTE PTR [rax],cl
    f456:	c3                   	ret    
    f457:	45 31 d2             	xor    r10d,r10d
    f45a:	e9 26 fd ff ff       	jmp    f185 <sprint_long_hexa+0x45>
    f45f:	45 31 d2             	xor    r10d,r10d
    f462:	e9 5d fe ff ff       	jmp    f2c4 <sprint_long_hexa+0x184>
    f467:	31 ff                	xor    edi,edi
    f469:	e9 3e fe ff ff       	jmp    f2ac <sprint_long_hexa+0x16c>
    f46e:	45 31 c0             	xor    r8d,r8d
    f471:	e9 1e fe ff ff       	jmp    f294 <sprint_long_hexa+0x154>
    f476:	45 31 c9             	xor    r9d,r9d
    f479:	e9 fd fd ff ff       	jmp    f27b <sprint_long_hexa+0x13b>
    f47e:	45 31 c0             	xor    r8d,r8d
    f481:	e9 dc fd ff ff       	jmp    f262 <sprint_long_hexa+0x122>
    f486:	31 ff                	xor    edi,edi
    f488:	e9 bc fd ff ff       	jmp    f249 <sprint_long_hexa+0x109>
    f48d:	45 31 db             	xor    r11d,r11d
    f490:	e9 9b fd ff ff       	jmp    f230 <sprint_long_hexa+0xf0>
    f495:	45 31 d2             	xor    r10d,r10d
    f498:	e9 7b fd ff ff       	jmp    f218 <sprint_long_hexa+0xd8>
    f49d:	45 31 c0             	xor    r8d,r8d
    f4a0:	e9 5b fd ff ff       	jmp    f200 <sprint_long_hexa+0xc0>
    f4a5:	31 ff                	xor    edi,edi
    f4a7:	e9 3b fd ff ff       	jmp    f1e7 <sprint_long_hexa+0xa7>
    f4ac:	45 31 c0             	xor    r8d,r8d
    f4af:	e9 1a fd ff ff       	jmp    f1ce <sprint_long_hexa+0x8e>
    f4b4:	45 31 c9             	xor    r9d,r9d
    f4b7:	e9 f9 fc ff ff       	jmp    f1b5 <sprint_long_hexa+0x75>
    f4bc:	45 31 db             	xor    r11d,r11d
    f4bf:	e9 d8 fc ff ff       	jmp    f19c <sprint_long_hexa+0x5c>
    f4c4:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    f4cb:	00 00 00 00 
    f4cf:	90                   	nop

000000000000f4d0 <get_ascii_digit>:
    f4d0:	f3 0f 1e fa          	endbr64 
    f4d4:	0f b6 07             	movzx  eax,BYTE PTR [rdi]
    f4d7:	3c 2d                	cmp    al,0x2d
    f4d9:	74 3d                	je     f518 <get_ascii_digit+0x48>
    f4db:	41 b8 01 00 00 00    	mov    r8d,0x1
    f4e1:	3c 30                	cmp    al,0x30
    f4e3:	74 2a                	je     f50f <get_ascii_digit+0x3f>
    f4e5:	45 31 c0             	xor    r8d,r8d
    f4e8:	84 c0                	test   al,al
    f4ea:	74 23                	je     f50f <get_ascii_digit+0x3f>
    f4ec:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    f4f0:	8d 50 d0             	lea    edx,[rax-0x30]
    f4f3:	80 fa 09             	cmp    dl,0x9
    f4f6:	76 0a                	jbe    f502 <get_ascii_digit+0x32>
    f4f8:	83 e0 df             	and    eax,0xffffffdf
    f4fb:	83 e8 41             	sub    eax,0x41
    f4fe:	3c 19                	cmp    al,0x19
    f500:	77 0d                	ja     f50f <get_ascii_digit+0x3f>
    f502:	49 83 c0 01          	add    r8,0x1
    f506:	42 0f b6 04 07       	movzx  eax,BYTE PTR [rdi+r8*1]
    f50b:	84 c0                	test   al,al
    f50d:	75 e1                	jne    f4f0 <get_ascii_digit+0x20>
    f50f:	4c 89 c0             	mov    rax,r8
    f512:	c3                   	ret    
    f513:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    f518:	0f b6 47 01          	movzx  eax,BYTE PTR [rdi+0x1]
    f51c:	48 83 c7 01          	add    rdi,0x1
    f520:	eb c3                	jmp    f4e5 <get_ascii_digit+0x15>
    f522:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    f529:	00 00 00 
    f52c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

000000000000f530 <print_strn_fd>:
    f530:	f3 0f 1e fa          	endbr64 
    f534:	41 55                	push   r13
    f536:	41 54                	push   r12
    f538:	41 89 f4             	mov    r12d,esi
    f53b:	55                   	push   rbp
    f53c:	48 89 fd             	mov    rbp,rdi
    f53f:	53                   	push   rbx
    f540:	89 d3                	mov    ebx,edx
    f542:	48 83 ec 08          	sub    rsp,0x8
    f546:	e8 f5 c5 ff ff       	call   bb40 <ft_strlen>
    f54b:	39 d8                	cmp    eax,ebx
    f54d:	7f 21                	jg     f570 <print_strn_fd+0x40>
    f54f:	44 89 e6             	mov    esi,r12d
    f552:	48 89 ef             	mov    rdi,rbp
    f555:	41 89 c5             	mov    r13d,eax
    f558:	e8 f3 ee ff ff       	call   e450 <ft_putstr_fd>
    f55d:	48 83 c4 08          	add    rsp,0x8
    f561:	44 89 e8             	mov    eax,r13d
    f564:	5b                   	pop    rbx
    f565:	5d                   	pop    rbp
    f566:	41 5c                	pop    r12
    f568:	41 5d                	pop    r13
    f56a:	c3                   	ret    
    f56b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    f570:	48 63 d3             	movsxd rdx,ebx
    f573:	48 89 ee             	mov    rsi,rbp
    f576:	44 89 e7             	mov    edi,r12d
    f579:	e8 92 33 ff ff       	call   2910 <write@plt>
    f57e:	48 83 c4 08          	add    rsp,0x8
    f582:	41 89 c5             	mov    r13d,eax
    f585:	5b                   	pop    rbx
    f586:	5d                   	pop    rbp
    f587:	44 89 e8             	mov    eax,r13d
    f58a:	41 5c                	pop    r12
    f58c:	41 5d                	pop    r13
    f58e:	c3                   	ret    
    f58f:	90                   	nop

000000000000f590 <write_repeated_char>:
    f590:	f3 0f 1e fa          	endbr64 
    f594:	41 57                	push   r15
    f596:	41 56                	push   r14
    f598:	41 55                	push   r13
    f59a:	41 54                	push   r12
    f59c:	45 31 e4             	xor    r12d,r12d
    f59f:	55                   	push   rbp
    f5a0:	53                   	push   rbx
    f5a1:	48 81 ec 18 04 00 00 	sub    rsp,0x418
    f5a8:	85 d2                	test   edx,edx
    f5aa:	0f 8e 50 01 00 00    	jle    f700 <write_repeated_char+0x170>
    f5b0:	89 d5                	mov    ebp,edx
    f5b2:	40 0f b6 c7          	movzx  eax,dil
    f5b6:	41 89 f5             	mov    r13d,esi
    f5b9:	b9 80 00 00 00       	mov    ecx,0x80
    f5be:	48 ba 01 01 01 01 01 	movabs rdx,0x101010101010101
    f5c5:	01 01 01 
    f5c8:	8d 75 ff             	lea    esi,[rbp-0x1]
    f5cb:	4c 8d 7c 24 10       	lea    r15,[rsp+0x10]
    f5d0:	4c 63 f5             	movsxd r14,ebp
    f5d3:	81 e6 00 fc ff ff    	and    esi,0xfffffc00
    f5d9:	48 0f af c2          	imul   rax,rdx
    f5dd:	4c 89 ff             	mov    rdi,r15
    f5e0:	8d 9e 00 04 00 00    	lea    ebx,[rsi+0x400]
    f5e6:	c1 ee 0a             	shr    esi,0xa
    f5e9:	83 c6 01             	add    esi,0x1
    f5ec:	89 5c 24 0c          	mov    DWORD PTR [rsp+0xc],ebx
    f5f0:	31 db                	xor    ebx,ebx
    f5f2:	f3 48 ab             	rep stos QWORD PTR es:[rdi],rax
    f5f5:	83 e6 03             	and    esi,0x3
    f5f8:	74 78                	je     f672 <write_repeated_char+0xe2>
    f5fa:	83 fe 01             	cmp    esi,0x1
    f5fd:	74 4a                	je     f649 <write_repeated_char+0xb9>
    f5ff:	83 fe 02             	cmp    esi,0x2
    f602:	74 24                	je     f628 <write_repeated_char+0x98>
    f604:	bb 00 04 00 00       	mov    ebx,0x400
    f609:	81 fd 00 04 00 00    	cmp    ebp,0x400
    f60f:	0f 8c 7f 01 00 00    	jl     f794 <write_repeated_char+0x204>
    f615:	ba 00 04 00 00       	mov    edx,0x400
    f61a:	4c 89 fe             	mov    rsi,r15
    f61d:	44 89 ef             	mov    edi,r13d
    f620:	e8 eb 32 ff ff       	call   2910 <write@plt>
    f625:	41 89 c4             	mov    r12d,eax
    f628:	81 c3 00 04 00 00    	add    ebx,0x400
    f62e:	39 dd                	cmp    ebp,ebx
    f630:	0f 8c 3a 01 00 00    	jl     f770 <write_repeated_char+0x1e0>
    f636:	ba 00 04 00 00       	mov    edx,0x400
    f63b:	4c 89 fe             	mov    rsi,r15
    f63e:	44 89 ef             	mov    edi,r13d
    f641:	e8 ca 32 ff ff       	call   2910 <write@plt>
    f646:	41 01 c4             	add    r12d,eax
    f649:	81 c3 00 04 00 00    	add    ebx,0x400
    f64f:	39 dd                	cmp    ebp,ebx
    f651:	0f 8d 8c 00 00 00    	jge    f6e3 <write_repeated_char+0x153>
    f657:	4c 89 f2             	mov    rdx,r14
    f65a:	4c 89 fe             	mov    rsi,r15
    f65d:	44 89 ef             	mov    edi,r13d
    f660:	e8 ab 32 ff ff       	call   2910 <write@plt>
    f665:	41 01 c4             	add    r12d,eax
    f668:	3b 5c 24 0c          	cmp    ebx,DWORD PTR [rsp+0xc]
    f66c:	0f 84 8e 00 00 00    	je     f700 <write_repeated_char+0x170>
    f672:	81 c3 00 04 00 00    	add    ebx,0x400
    f678:	39 dd                	cmp    ebp,ebx
    f67a:	0f 8c d0 00 00 00    	jl     f750 <write_repeated_char+0x1c0>
    f680:	ba 00 04 00 00       	mov    edx,0x400
    f685:	4c 89 fe             	mov    rsi,r15
    f688:	44 89 ef             	mov    edi,r13d
    f68b:	e8 80 32 ff ff       	call   2910 <write@plt>
    f690:	41 01 c4             	add    r12d,eax
    f693:	44 8d 83 00 04 00 00 	lea    r8d,[rbx+0x400]
    f69a:	44 39 c5             	cmp    ebp,r8d
    f69d:	0f 8c 8d 00 00 00    	jl     f730 <write_repeated_char+0x1a0>
    f6a3:	ba 00 04 00 00       	mov    edx,0x400
    f6a8:	4c 89 fe             	mov    rsi,r15
    f6ab:	44 89 ef             	mov    edi,r13d
    f6ae:	e8 5d 32 ff ff       	call   2910 <write@plt>
    f6b3:	41 01 c4             	add    r12d,eax
    f6b6:	44 8d 8b 00 08 00 00 	lea    r9d,[rbx+0x800]
    f6bd:	44 39 cd             	cmp    ebp,r9d
    f6c0:	7c 56                	jl     f718 <write_repeated_char+0x188>
    f6c2:	ba 00 04 00 00       	mov    edx,0x400
    f6c7:	4c 89 fe             	mov    rsi,r15
    f6ca:	44 89 ef             	mov    edi,r13d
    f6cd:	e8 3e 32 ff ff       	call   2910 <write@plt>
    f6d2:	41 01 c4             	add    r12d,eax
    f6d5:	81 c3 00 0c 00 00    	add    ebx,0xc00
    f6db:	39 dd                	cmp    ebp,ebx
    f6dd:	0f 8c 74 ff ff ff    	jl     f657 <write_repeated_char+0xc7>
    f6e3:	ba 00 04 00 00       	mov    edx,0x400
    f6e8:	4c 89 fe             	mov    rsi,r15
    f6eb:	44 89 ef             	mov    edi,r13d
    f6ee:	e8 1d 32 ff ff       	call   2910 <write@plt>
    f6f3:	41 01 c4             	add    r12d,eax
    f6f6:	3b 5c 24 0c          	cmp    ebx,DWORD PTR [rsp+0xc]
    f6fa:	0f 85 72 ff ff ff    	jne    f672 <write_repeated_char+0xe2>
    f700:	48 81 c4 18 04 00 00 	add    rsp,0x418
    f707:	44 89 e0             	mov    eax,r12d
    f70a:	5b                   	pop    rbx
    f70b:	5d                   	pop    rbp
    f70c:	41 5c                	pop    r12
    f70e:	41 5d                	pop    r13
    f710:	41 5e                	pop    r14
    f712:	41 5f                	pop    r15
    f714:	c3                   	ret    
    f715:	0f 1f 00             	nop    DWORD PTR [rax]
    f718:	4c 89 f2             	mov    rdx,r14
    f71b:	4c 89 fe             	mov    rsi,r15
    f71e:	44 89 ef             	mov    edi,r13d
    f721:	e8 ea 31 ff ff       	call   2910 <write@plt>
    f726:	41 01 c4             	add    r12d,eax
    f729:	eb aa                	jmp    f6d5 <write_repeated_char+0x145>
    f72b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    f730:	4c 89 f2             	mov    rdx,r14
    f733:	4c 89 fe             	mov    rsi,r15
    f736:	44 89 ef             	mov    edi,r13d
    f739:	e8 d2 31 ff ff       	call   2910 <write@plt>
    f73e:	41 01 c4             	add    r12d,eax
    f741:	e9 70 ff ff ff       	jmp    f6b6 <write_repeated_char+0x126>
    f746:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    f74d:	00 00 00 
    f750:	4c 89 f2             	mov    rdx,r14
    f753:	4c 89 fe             	mov    rsi,r15
    f756:	44 89 ef             	mov    edi,r13d
    f759:	e8 b2 31 ff ff       	call   2910 <write@plt>
    f75e:	41 01 c4             	add    r12d,eax
    f761:	e9 2d ff ff ff       	jmp    f693 <write_repeated_char+0x103>
    f766:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    f76d:	00 00 00 
    f770:	4c 89 f2             	mov    rdx,r14
    f773:	4c 89 fe             	mov    rsi,r15
    f776:	44 89 ef             	mov    edi,r13d
    f779:	81 c3 00 04 00 00    	add    ebx,0x400
    f77f:	e8 8c 31 ff ff       	call   2910 <write@plt>
    f784:	41 01 c4             	add    r12d,eax
    f787:	39 dd                	cmp    ebp,ebx
    f789:	0f 8d 54 ff ff ff    	jge    f6e3 <write_repeated_char+0x153>
    f78f:	e9 c3 fe ff ff       	jmp    f657 <write_repeated_char+0xc7>
    f794:	4c 89 f2             	mov    rdx,r14
    f797:	4c 89 fe             	mov    rsi,r15
    f79a:	44 89 ef             	mov    edi,r13d
    f79d:	e8 6e 31 ff ff       	call   2910 <write@plt>
    f7a2:	41 89 c4             	mov    r12d,eax
    f7a5:	e9 7e fe ff ff       	jmp    f628 <write_repeated_char+0x98>
    f7aa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

000000000000f7b0 <ft_putchar_fd>:
    f7b0:	f3 0f 1e fa          	endbr64 
    f7b4:	48 83 ec 18          	sub    rsp,0x18
    f7b8:	41 89 f8             	mov    r8d,edi
    f7bb:	ba 01 00 00 00       	mov    edx,0x1
    f7c0:	89 f7                	mov    edi,esi
    f7c2:	48 8d 74 24 0c       	lea    rsi,[rsp+0xc]
    f7c7:	44 88 44 24 0c       	mov    BYTE PTR [rsp+0xc],r8b
    f7cc:	e8 3f 31 ff ff       	call   2910 <write@plt>
    f7d1:	48 83 c4 18          	add    rsp,0x18
    f7d5:	c3                   	ret    
    f7d6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    f7dd:	00 00 00 

000000000000f7e0 <sprint_itoa>:
    f7e0:	f3 0f 1e fa          	endbr64 
    f7e4:	55                   	push   rbp
    f7e5:	53                   	push   rbx
    f7e6:	48 89 fb             	mov    rbx,rdi
    f7e9:	48 83 ec 08          	sub    rsp,0x8
    f7ed:	85 f6                	test   esi,esi
    f7ef:	0f 84 3b 01 00 00    	je     f930 <sprint_itoa+0x150>
    f7f5:	89 f5                	mov    ebp,esi
    f7f7:	0f 88 23 01 00 00    	js     f920 <sprint_itoa+0x140>
    f7fd:	48 63 fd             	movsxd rdi,ebp
    f800:	e8 fb eb ff ff       	call   e400 <get_digit>
    f805:	89 e9                	mov    ecx,ebp
    f807:	f7 d9                	neg    ecx
    f809:	48 8d 34 03          	lea    rsi,[rbx+rax*1]
    f80d:	0f 48 cd             	cmovs  ecx,ebp
    f810:	c6 06 00             	mov    BYTE PTR [rsi],0x0
    f813:	41 89 cb             	mov    r11d,ecx
    f816:	48 39 f3             	cmp    rbx,rsi
    f819:	0f 83 f9 00 00 00    	jae    f918 <sprint_itoa+0x138>
    f81f:	49 b8 cd cc cc cc cc 	movabs r8,0xcccccccccccccccd
    f826:	cc cc cc 
    f829:	48 89 f0             	mov    rax,rsi
    f82c:	48 29 d8             	sub    rax,rbx
    f82f:	83 e0 03             	and    eax,0x3
    f832:	74 5d                	je     f891 <sprint_itoa+0xb1>
    f834:	48 83 f8 01          	cmp    rax,0x1
    f838:	74 2c                	je     f866 <sprint_itoa+0x86>
    f83a:	48 83 f8 02          	cmp    rax,0x2
    f83e:	0f 85 fc 00 00 00    	jne    f940 <sprint_itoa+0x160>
    f844:	4c 89 d8             	mov    rax,r11
    f847:	48 83 ee 01          	sub    rsi,0x1
    f84b:	49 f7 e0             	mul    r8
    f84e:	48 c1 ea 03          	shr    rdx,0x3
    f852:	4c 8d 0c 92          	lea    r9,[rdx+rdx*4]
    f856:	4d 01 c9             	add    r9,r9
    f859:	4d 29 cb             	sub    r11,r9
    f85c:	41 83 c3 30          	add    r11d,0x30
    f860:	44 88 1e             	mov    BYTE PTR [rsi],r11b
    f863:	49 89 d3             	mov    r11,rdx
    f866:	4c 89 d8             	mov    rax,r11
    f869:	48 83 ee 01          	sub    rsi,0x1
    f86d:	49 f7 e0             	mul    r8
    f870:	48 c1 ea 03          	shr    rdx,0x3
    f874:	4c 8d 14 92          	lea    r10,[rdx+rdx*4]
    f878:	4d 01 d2             	add    r10,r10
    f87b:	4d 29 d3             	sub    r11,r10
    f87e:	41 83 c3 30          	add    r11d,0x30
    f882:	44 88 1e             	mov    BYTE PTR [rsi],r11b
    f885:	49 89 d3             	mov    r11,rdx
    f888:	48 39 f3             	cmp    rbx,rsi
    f88b:	0f 84 87 00 00 00    	je     f918 <sprint_itoa+0x138>
    f891:	4c 89 d8             	mov    rax,r11
    f894:	48 83 ee 04          	sub    rsi,0x4
    f898:	49 f7 e0             	mul    r8
    f89b:	48 c1 ea 03          	shr    rdx,0x3
    f89f:	48 89 d0             	mov    rax,rdx
    f8a2:	48 89 d5             	mov    rbp,rdx
    f8a5:	48 8d 0c 92          	lea    rcx,[rdx+rdx*4]
    f8a9:	49 f7 e0             	mul    r8
    f8ac:	48 01 c9             	add    rcx,rcx
    f8af:	49 29 cb             	sub    r11,rcx
    f8b2:	41 83 c3 30          	add    r11d,0x30
    f8b6:	48 c1 ea 03          	shr    rdx,0x3
    f8ba:	44 88 5e 03          	mov    BYTE PTR [rsi+0x3],r11b
    f8be:	48 89 d0             	mov    rax,rdx
    f8c1:	49 89 d1             	mov    r9,rdx
    f8c4:	48 8d 3c 92          	lea    rdi,[rdx+rdx*4]
    f8c8:	49 f7 e0             	mul    r8
    f8cb:	48 01 ff             	add    rdi,rdi
    f8ce:	48 29 fd             	sub    rbp,rdi
    f8d1:	83 c5 30             	add    ebp,0x30
    f8d4:	48 c1 ea 03          	shr    rdx,0x3
    f8d8:	40 88 6e 02          	mov    BYTE PTR [rsi+0x2],bpl
    f8dc:	48 89 d0             	mov    rax,rdx
    f8df:	49 89 d2             	mov    r10,rdx
    f8e2:	4c 8d 1c 92          	lea    r11,[rdx+rdx*4]
    f8e6:	49 f7 e0             	mul    r8
    f8e9:	4d 01 db             	add    r11,r11
    f8ec:	4d 29 d9             	sub    r9,r11
    f8ef:	41 83 c1 30          	add    r9d,0x30
    f8f3:	49 89 d3             	mov    r11,rdx
    f8f6:	44 88 4e 01          	mov    BYTE PTR [rsi+0x1],r9b
    f8fa:	49 c1 eb 03          	shr    r11,0x3
    f8fe:	4b 8d 2c 9b          	lea    rbp,[r11+r11*4]
    f902:	48 01 ed             	add    rbp,rbp
    f905:	49 29 ea             	sub    r10,rbp
    f908:	41 83 c2 30          	add    r10d,0x30
    f90c:	44 88 16             	mov    BYTE PTR [rsi],r10b
    f90f:	48 39 f3             	cmp    rbx,rsi
    f912:	0f 85 79 ff ff ff    	jne    f891 <sprint_itoa+0xb1>
    f918:	48 83 c4 08          	add    rsp,0x8
    f91c:	5b                   	pop    rbx
    f91d:	5d                   	pop    rbp
    f91e:	c3                   	ret    
    f91f:	90                   	nop
    f920:	c6 07 2d             	mov    BYTE PTR [rdi],0x2d
    f923:	48 83 c3 01          	add    rbx,0x1
    f927:	e9 d1 fe ff ff       	jmp    f7fd <sprint_itoa+0x1d>
    f92c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    f930:	be 30 00 00 00       	mov    esi,0x30
    f935:	66 89 37             	mov    WORD PTR [rdi],si
    f938:	48 83 c4 08          	add    rsp,0x8
    f93c:	5b                   	pop    rbx
    f93d:	5d                   	pop    rbp
    f93e:	c3                   	ret    
    f93f:	90                   	nop
    f940:	4c 89 d8             	mov    rax,r11
    f943:	48 83 ee 01          	sub    rsi,0x1
    f947:	49 f7 e0             	mul    r8
    f94a:	48 c1 ea 03          	shr    rdx,0x3
    f94e:	48 8d 3c 92          	lea    rdi,[rdx+rdx*4]
    f952:	48 01 ff             	add    rdi,rdi
    f955:	49 29 fb             	sub    r11,rdi
    f958:	41 83 c3 30          	add    r11d,0x30
    f95c:	44 88 1e             	mov    BYTE PTR [rsi],r11b
    f95f:	49 89 d3             	mov    r11,rdx
    f962:	e9 dd fe ff ff       	jmp    f844 <sprint_itoa+0x64>
    f967:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    f96e:	00 00 

000000000000f970 <sprint_uitoa>:
    f970:	f3 0f 1e fa          	endbr64 
    f974:	41 54                	push   r12
    f976:	49 89 fc             	mov    r12,rdi
    f979:	55                   	push   rbp
    f97a:	89 f5                	mov    ebp,esi
    f97c:	53                   	push   rbx
    f97d:	48 89 ef             	mov    rdi,rbp
    f980:	e8 7b ea ff ff       	call   e400 <get_digit>
    f985:	85 ed                	test   ebp,ebp
    f987:	0f 84 23 01 00 00    	je     fab0 <sprint_uitoa+0x140>
    f98d:	49 8d 14 04          	lea    rdx,[r12+rax*1]
    f991:	c6 02 00             	mov    BYTE PTR [rdx],0x0
    f994:	49 39 d4             	cmp    r12,rdx
    f997:	0f 83 0b 01 00 00    	jae    faa8 <sprint_uitoa+0x138>
    f99d:	4c 89 e0             	mov    rax,r12
    f9a0:	48 89 eb             	mov    rbx,rbp
    f9a3:	b9 cd cc cc cc       	mov    ecx,0xcccccccd
    f9a8:	48 f7 d0             	not    rax
    f9ab:	48 01 d0             	add    rax,rdx
    f9ae:	83 e0 03             	and    eax,0x3
    f9b1:	0f 84 cf 00 00 00    	je     fa86 <sprint_uitoa+0x116>
    f9b7:	48 0f af e9          	imul   rbp,rcx
    f9bb:	48 83 ea 01          	sub    rdx,0x1
    f9bf:	48 c1 ed 23          	shr    rbp,0x23
    f9c3:	8d 74 ad 00          	lea    esi,[rbp+rbp*4+0x0]
    f9c7:	89 ed                	mov    ebp,ebp
    f9c9:	01 f6                	add    esi,esi
    f9cb:	29 f3                	sub    ebx,esi
    f9cd:	83 c3 30             	add    ebx,0x30
    f9d0:	88 1a                	mov    BYTE PTR [rdx],bl
    f9d2:	48 89 eb             	mov    rbx,rbp
    f9d5:	48 83 f8 01          	cmp    rax,0x1
    f9d9:	0f 84 a7 00 00 00    	je     fa86 <sprint_uitoa+0x116>
    f9df:	48 83 f8 02          	cmp    rax,0x2
    f9e3:	74 1e                	je     fa03 <sprint_uitoa+0x93>
    f9e5:	48 0f af e9          	imul   rbp,rcx
    f9e9:	48 83 ea 01          	sub    rdx,0x1
    f9ed:	48 c1 ed 23          	shr    rbp,0x23
    f9f1:	8d 7c ad 00          	lea    edi,[rbp+rbp*4+0x0]
    f9f5:	89 ed                	mov    ebp,ebp
    f9f7:	01 ff                	add    edi,edi
    f9f9:	29 fb                	sub    ebx,edi
    f9fb:	83 c3 30             	add    ebx,0x30
    f9fe:	88 1a                	mov    BYTE PTR [rdx],bl
    fa00:	48 89 eb             	mov    rbx,rbp
    fa03:	48 0f af e9          	imul   rbp,rcx
    fa07:	48 83 ea 01          	sub    rdx,0x1
    fa0b:	48 c1 ed 23          	shr    rbp,0x23
    fa0f:	44 8d 44 ad 00       	lea    r8d,[rbp+rbp*4+0x0]
    fa14:	89 ed                	mov    ebp,ebp
    fa16:	45 01 c0             	add    r8d,r8d
    fa19:	44 29 c3             	sub    ebx,r8d
    fa1c:	83 c3 30             	add    ebx,0x30
    fa1f:	88 1a                	mov    BYTE PTR [rdx],bl
    fa21:	48 89 eb             	mov    rbx,rbp
    fa24:	eb 60                	jmp    fa86 <sprint_uitoa+0x116>
    fa26:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    fa2d:	00 00 00 
    fa30:	41 89 eb             	mov    r11d,ebp
    fa33:	48 83 ea 04          	sub    rdx,0x4
    fa37:	4c 0f af d9          	imul   r11,rcx
    fa3b:	49 c1 eb 23          	shr    r11,0x23
    fa3f:	45 89 d8             	mov    r8d,r11d
    fa42:	43 8d 04 9b          	lea    eax,[r11+r11*4]
    fa46:	4c 0f af c1          	imul   r8,rcx
    fa4a:	01 c0                	add    eax,eax
    fa4c:	29 c5                	sub    ebp,eax
    fa4e:	83 c5 30             	add    ebp,0x30
    fa51:	49 c1 e8 23          	shr    r8,0x23
    fa55:	40 88 6a 02          	mov    BYTE PTR [rdx+0x2],bpl
    fa59:	44 89 c3             	mov    ebx,r8d
    fa5c:	43 8d 34 80          	lea    esi,[r8+r8*4]
    fa60:	48 0f af d9          	imul   rbx,rcx
    fa64:	01 f6                	add    esi,esi
    fa66:	41 29 f3             	sub    r11d,esi
    fa69:	41 83 c3 30          	add    r11d,0x30
    fa6d:	48 c1 eb 23          	shr    rbx,0x23
    fa71:	44 88 5a 01          	mov    BYTE PTR [rdx+0x1],r11b
    fa75:	8d 3c 9b             	lea    edi,[rbx+rbx*4]
    fa78:	89 dd                	mov    ebp,ebx
    fa7a:	01 ff                	add    edi,edi
    fa7c:	41 29 f8             	sub    r8d,edi
    fa7f:	41 83 c0 30          	add    r8d,0x30
    fa83:	44 88 02             	mov    BYTE PTR [rdx],r8b
    fa86:	48 0f af e9          	imul   rbp,rcx
    fa8a:	4c 8d 4a ff          	lea    r9,[rdx-0x1]
    fa8e:	48 c1 ed 23          	shr    rbp,0x23
    fa92:	44 8d 54 ad 00       	lea    r10d,[rbp+rbp*4+0x0]
    fa97:	45 01 d2             	add    r10d,r10d
    fa9a:	44 29 d3             	sub    ebx,r10d
    fa9d:	83 c3 30             	add    ebx,0x30
    faa0:	88 5a ff             	mov    BYTE PTR [rdx-0x1],bl
    faa3:	4d 39 cc             	cmp    r12,r9
    faa6:	75 88                	jne    fa30 <sprint_uitoa+0xc0>
    faa8:	5b                   	pop    rbx
    faa9:	5d                   	pop    rbp
    faaa:	41 5c                	pop    r12
    faac:	c3                   	ret    
    faad:	0f 1f 00             	nop    DWORD PTR [rax]
    fab0:	ba 30 00 00 00       	mov    edx,0x30
    fab5:	5b                   	pop    rbx
    fab6:	5d                   	pop    rbp
    fab7:	66 41 89 14 24       	mov    WORD PTR [r12],dx
    fabc:	41 5c                	pop    r12
    fabe:	c3                   	ret    
    fabf:	90                   	nop

000000000000fac0 <sprint_abs_toa>:
    fac0:	f3 0f 1e fa          	endbr64 
    fac4:	55                   	push   rbp
    fac5:	53                   	push   rbx
    fac6:	48 89 fb             	mov    rbx,rdi
    fac9:	48 63 fe             	movsxd rdi,esi
    facc:	48 89 fd             	mov    rbp,rdi
    facf:	48 83 ec 08          	sub    rsp,0x8
    fad3:	e8 28 e9 ff ff       	call   e400 <get_digit>
    fad8:	85 ed                	test   ebp,ebp
    fada:	0f 84 20 01 00 00    	je     fc00 <sprint_abs_toa+0x140>
    fae0:	89 e9                	mov    ecx,ebp
    fae2:	48 8d 34 03          	lea    rsi,[rbx+rax*1]
    fae6:	f7 d9                	neg    ecx
    fae8:	c6 06 00             	mov    BYTE PTR [rsi],0x0
    faeb:	0f 48 cd             	cmovs  ecx,ebp
    faee:	41 89 cb             	mov    r11d,ecx
    faf1:	48 39 f3             	cmp    rbx,rsi
    faf4:	0f 83 f9 00 00 00    	jae    fbf3 <sprint_abs_toa+0x133>
    fafa:	49 b8 cd cc cc cc cc 	movabs r8,0xcccccccccccccccd
    fb01:	cc cc cc 
    fb04:	48 89 f0             	mov    rax,rsi
    fb07:	48 29 d8             	sub    rax,rbx
    fb0a:	83 e0 03             	and    eax,0x3
    fb0d:	74 5d                	je     fb6c <sprint_abs_toa+0xac>
    fb0f:	48 83 f8 01          	cmp    rax,0x1
    fb13:	74 2c                	je     fb41 <sprint_abs_toa+0x81>
    fb15:	48 83 f8 02          	cmp    rax,0x2
    fb19:	0f 85 f1 00 00 00    	jne    fc10 <sprint_abs_toa+0x150>
    fb1f:	4c 89 d8             	mov    rax,r11
    fb22:	48 83 ee 01          	sub    rsi,0x1
    fb26:	49 f7 e0             	mul    r8
    fb29:	48 c1 ea 03          	shr    rdx,0x3
    fb2d:	4c 8d 0c 92          	lea    r9,[rdx+rdx*4]
    fb31:	4d 01 c9             	add    r9,r9
    fb34:	4d 29 cb             	sub    r11,r9
    fb37:	41 83 c3 30          	add    r11d,0x30
    fb3b:	44 88 1e             	mov    BYTE PTR [rsi],r11b
    fb3e:	49 89 d3             	mov    r11,rdx
    fb41:	4c 89 d8             	mov    rax,r11
    fb44:	48 83 ee 01          	sub    rsi,0x1
    fb48:	49 f7 e0             	mul    r8
    fb4b:	48 c1 ea 03          	shr    rdx,0x3
    fb4f:	4c 8d 14 92          	lea    r10,[rdx+rdx*4]
    fb53:	4d 01 d2             	add    r10,r10
    fb56:	4d 29 d3             	sub    r11,r10
    fb59:	41 83 c3 30          	add    r11d,0x30
    fb5d:	44 88 1e             	mov    BYTE PTR [rsi],r11b
    fb60:	49 89 d3             	mov    r11,rdx
    fb63:	48 39 f3             	cmp    rbx,rsi
    fb66:	0f 84 87 00 00 00    	je     fbf3 <sprint_abs_toa+0x133>
    fb6c:	4c 89 d8             	mov    rax,r11
    fb6f:	48 83 ee 04          	sub    rsi,0x4
    fb73:	49 f7 e0             	mul    r8
    fb76:	48 c1 ea 03          	shr    rdx,0x3
    fb7a:	48 89 d0             	mov    rax,rdx
    fb7d:	48 89 d5             	mov    rbp,rdx
    fb80:	48 8d 0c 92          	lea    rcx,[rdx+rdx*4]
    fb84:	49 f7 e0             	mul    r8
    fb87:	48 01 c9             	add    rcx,rcx
    fb8a:	49 29 cb             	sub    r11,rcx
    fb8d:	41 83 c3 30          	add    r11d,0x30
    fb91:	48 c1 ea 03          	shr    rdx,0x3
    fb95:	44 88 5e 03          	mov    BYTE PTR [rsi+0x3],r11b
    fb99:	48 89 d0             	mov    rax,rdx
    fb9c:	49 89 d1             	mov    r9,rdx
    fb9f:	48 8d 3c 92          	lea    rdi,[rdx+rdx*4]
    fba3:	49 f7 e0             	mul    r8
    fba6:	48 01 ff             	add    rdi,rdi
    fba9:	48 29 fd             	sub    rbp,rdi
    fbac:	83 c5 30             	add    ebp,0x30
    fbaf:	48 c1 ea 03          	shr    rdx,0x3
    fbb3:	40 88 6e 02          	mov    BYTE PTR [rsi+0x2],bpl
    fbb7:	48 89 d0             	mov    rax,rdx
    fbba:	49 89 d2             	mov    r10,rdx
    fbbd:	4c 8d 1c 92          	lea    r11,[rdx+rdx*4]
    fbc1:	49 f7 e0             	mul    r8
    fbc4:	4d 01 db             	add    r11,r11
    fbc7:	4d 29 d9             	sub    r9,r11
    fbca:	41 83 c1 30          	add    r9d,0x30
    fbce:	49 89 d3             	mov    r11,rdx
    fbd1:	44 88 4e 01          	mov    BYTE PTR [rsi+0x1],r9b
    fbd5:	49 c1 eb 03          	shr    r11,0x3
    fbd9:	4b 8d 2c 9b          	lea    rbp,[r11+r11*4]
    fbdd:	48 01 ed             	add    rbp,rbp
    fbe0:	49 29 ea             	sub    r10,rbp
    fbe3:	41 83 c2 30          	add    r10d,0x30
    fbe7:	44 88 16             	mov    BYTE PTR [rsi],r10b
    fbea:	48 39 f3             	cmp    rbx,rsi
    fbed:	0f 85 79 ff ff ff    	jne    fb6c <sprint_abs_toa+0xac>
    fbf3:	48 83 c4 08          	add    rsp,0x8
    fbf7:	5b                   	pop    rbx
    fbf8:	5d                   	pop    rbp
    fbf9:	c3                   	ret    
    fbfa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    fc00:	be 30 00 00 00       	mov    esi,0x30
    fc05:	66 89 33             	mov    WORD PTR [rbx],si
    fc08:	48 83 c4 08          	add    rsp,0x8
    fc0c:	5b                   	pop    rbx
    fc0d:	5d                   	pop    rbp
    fc0e:	c3                   	ret    
    fc0f:	90                   	nop
    fc10:	4c 89 d8             	mov    rax,r11
    fc13:	48 83 ee 01          	sub    rsi,0x1
    fc17:	49 f7 e0             	mul    r8
    fc1a:	48 c1 ea 03          	shr    rdx,0x3
    fc1e:	48 8d 3c 92          	lea    rdi,[rdx+rdx*4]
    fc22:	48 01 ff             	add    rdi,rdi
    fc25:	49 29 fb             	sub    r11,rdi
    fc28:	41 83 c3 30          	add    r11d,0x30
    fc2c:	44 88 1e             	mov    BYTE PTR [rsi],r11b
    fc2f:	49 89 d3             	mov    r11,rdx
    fc32:	e9 e8 fe ff ff       	jmp    fb1f <sprint_abs_toa+0x5f>
    fc37:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    fc3e:	00 00 

000000000000fc40 <write_basic>:
    fc40:	f3 0f 1e fa          	endbr64 
    fc44:	41 55                	push   r13
    fc46:	41 54                	push   r12
    fc48:	55                   	push   rbp
    fc49:	48 89 f5             	mov    rbp,rsi
    fc4c:	53                   	push   rbx
    fc4d:	48 89 fb             	mov    rbx,rdi
    fc50:	48 83 ec 08          	sub    rsp,0x8
    fc54:	0f b6 07             	movzx  eax,BYTE PTR [rdi]
    fc57:	84 c0                	test   al,al
    fc59:	0f 88 a9 00 00 00    	js     fd08 <write_basic+0xc8>
    fc5f:	a8 01                	test   al,0x1
    fc61:	0f 85 81 00 00 00    	jne    fce8 <write_basic+0xa8>
    fc67:	45 31 e4             	xor    r12d,r12d
    fc6a:	a8 04                	test   al,0x4
    fc6c:	0f 85 ce 00 00 00    	jne    fd40 <write_basic+0x100>
    fc72:	a8 10                	test   al,0x10
    fc74:	74 1c                	je     fc92 <write_basic+0x52>
    fc76:	be 01 00 00 00       	mov    esi,0x1
    fc7b:	a8 40                	test   al,0x40
    fc7d:	0f 85 a5 00 00 00    	jne    fd28 <write_basic+0xe8>
    fc83:	48 8d 3d a8 27 00 00 	lea    rdi,[rip+0x27a8]        # 12432 <_IO_stdin_used+0x432>
    fc8a:	e8 c1 e7 ff ff       	call   e450 <ft_putstr_fd>
    fc8f:	41 01 c4             	add    r12d,eax
    fc92:	44 8b 6b 08          	mov    r13d,DWORD PTR [rbx+0x8]
    fc96:	48 89 ef             	mov    rdi,rbp
    fc99:	e8 32 f8 ff ff       	call   f4d0 <get_ascii_digit>
    fc9e:	be 01 00 00 00       	mov    esi,0x1
    fca3:	bf 30 00 00 00       	mov    edi,0x30
    fca8:	44 89 ea             	mov    edx,r13d
    fcab:	29 c2                	sub    edx,eax
    fcad:	e8 de f8 ff ff       	call   f590 <write_repeated_char>
    fcb2:	41 01 c4             	add    r12d,eax
    fcb5:	f6 03 20             	test   BYTE PTR [rbx],0x20
    fcb8:	74 0d                	je     fcc7 <write_basic+0x87>
    fcba:	8b 53 08             	mov    edx,DWORD PTR [rbx+0x8]
    fcbd:	85 d2                	test   edx,edx
    fcbf:	75 06                	jne    fcc7 <write_basic+0x87>
    fcc1:	80 7d 00 30          	cmp    BYTE PTR [rbp+0x0],0x30
    fcc5:	74 10                	je     fcd7 <write_basic+0x97>
    fcc7:	be 01 00 00 00       	mov    esi,0x1
    fccc:	48 89 ef             	mov    rdi,rbp
    fccf:	e8 7c e7 ff ff       	call   e450 <ft_putstr_fd>
    fcd4:	41 01 c4             	add    r12d,eax
    fcd7:	48 83 c4 08          	add    rsp,0x8
    fcdb:	44 89 e0             	mov    eax,r12d
    fcde:	5b                   	pop    rbx
    fcdf:	5d                   	pop    rbp
    fce0:	41 5c                	pop    r12
    fce2:	41 5d                	pop    r13
    fce4:	c3                   	ret    
    fce5:	0f 1f 00             	nop    DWORD PTR [rax]
    fce8:	be 01 00 00 00       	mov    esi,0x1
    fced:	bf 2b 00 00 00       	mov    edi,0x2b
    fcf2:	e8 b9 fa ff ff       	call   f7b0 <ft_putchar_fd>
    fcf7:	41 89 c4             	mov    r12d,eax
    fcfa:	0f b6 03             	movzx  eax,BYTE PTR [rbx]
    fcfd:	e9 70 ff ff ff       	jmp    fc72 <write_basic+0x32>
    fd02:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    fd08:	be 01 00 00 00       	mov    esi,0x1
    fd0d:	bf 2d 00 00 00       	mov    edi,0x2d
    fd12:	e8 99 fa ff ff       	call   f7b0 <ft_putchar_fd>
    fd17:	41 89 c4             	mov    r12d,eax
    fd1a:	0f b6 03             	movzx  eax,BYTE PTR [rbx]
    fd1d:	e9 50 ff ff ff       	jmp    fc72 <write_basic+0x32>
    fd22:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    fd28:	48 8d 3d 06 27 00 00 	lea    rdi,[rip+0x2706]        # 12435 <_IO_stdin_used+0x435>
    fd2f:	e8 1c e7 ff ff       	call   e450 <ft_putstr_fd>
    fd34:	41 01 c4             	add    r12d,eax
    fd37:	e9 56 ff ff ff       	jmp    fc92 <write_basic+0x52>
    fd3c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    fd40:	be 01 00 00 00       	mov    esi,0x1
    fd45:	bf 20 00 00 00       	mov    edi,0x20
    fd4a:	e8 61 fa ff ff       	call   f7b0 <ft_putchar_fd>
    fd4f:	41 89 c4             	mov    r12d,eax
    fd52:	0f b6 03             	movzx  eax,BYTE PTR [rbx]
    fd55:	e9 18 ff ff ff       	jmp    fc72 <write_basic+0x32>
    fd5a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

000000000000fd60 <write_special_flag>:
    fd60:	f3 0f 1e fa          	endbr64 
    fd64:	41 54                	push   r12
    fd66:	53                   	push   rbx
    fd67:	48 89 fb             	mov    rbx,rdi
    fd6a:	48 83 ec 08          	sub    rsp,0x8
    fd6e:	0f b6 17             	movzx  edx,BYTE PTR [rdi]
    fd71:	84 d2                	test   dl,dl
    fd73:	78 5b                	js     fdd0 <write_special_flag+0x70>
    fd75:	f6 c2 01             	test   dl,0x1
    fd78:	75 36                	jne    fdb0 <write_special_flag+0x50>
    fd7a:	45 31 e4             	xor    r12d,r12d
    fd7d:	f6 c2 04             	test   dl,0x4
    fd80:	0f 85 8a 00 00 00    	jne    fe10 <write_special_flag+0xb0>
    fd86:	f6 c2 10             	test   dl,0x10
    fd89:	74 19                	je     fda4 <write_special_flag+0x44>
    fd8b:	83 e2 40             	and    edx,0x40
    fd8e:	be 01 00 00 00       	mov    esi,0x1
    fd93:	75 5b                	jne    fdf0 <write_special_flag+0x90>
    fd95:	48 8d 3d 96 26 00 00 	lea    rdi,[rip+0x2696]        # 12432 <_IO_stdin_used+0x432>
    fd9c:	e8 af e6 ff ff       	call   e450 <ft_putstr_fd>
    fda1:	41 01 c4             	add    r12d,eax
    fda4:	48 83 c4 08          	add    rsp,0x8
    fda8:	44 89 e0             	mov    eax,r12d
    fdab:	5b                   	pop    rbx
    fdac:	41 5c                	pop    r12
    fdae:	c3                   	ret    
    fdaf:	90                   	nop
    fdb0:	be 01 00 00 00       	mov    esi,0x1
    fdb5:	bf 2b 00 00 00       	mov    edi,0x2b
    fdba:	e8 f1 f9 ff ff       	call   f7b0 <ft_putchar_fd>
    fdbf:	0f b6 13             	movzx  edx,BYTE PTR [rbx]
    fdc2:	41 89 c4             	mov    r12d,eax
    fdc5:	eb bf                	jmp    fd86 <write_special_flag+0x26>
    fdc7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    fdce:	00 00 
    fdd0:	be 01 00 00 00       	mov    esi,0x1
    fdd5:	bf 2d 00 00 00       	mov    edi,0x2d
    fdda:	e8 d1 f9 ff ff       	call   f7b0 <ft_putchar_fd>
    fddf:	0f b6 13             	movzx  edx,BYTE PTR [rbx]
    fde2:	41 89 c4             	mov    r12d,eax
    fde5:	eb 9f                	jmp    fd86 <write_special_flag+0x26>
    fde7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    fdee:	00 00 
    fdf0:	48 8d 3d 3e 26 00 00 	lea    rdi,[rip+0x263e]        # 12435 <_IO_stdin_used+0x435>
    fdf7:	e8 54 e6 ff ff       	call   e450 <ft_putstr_fd>
    fdfc:	48 83 c4 08          	add    rsp,0x8
    fe00:	41 01 c4             	add    r12d,eax
    fe03:	5b                   	pop    rbx
    fe04:	44 89 e0             	mov    eax,r12d
    fe07:	41 5c                	pop    r12
    fe09:	c3                   	ret    
    fe0a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    fe10:	be 01 00 00 00       	mov    esi,0x1
    fe15:	bf 20 00 00 00       	mov    edi,0x20
    fe1a:	e8 91 f9 ff ff       	call   f7b0 <ft_putchar_fd>
    fe1f:	0f b6 13             	movzx  edx,BYTE PTR [rbx]
    fe22:	41 89 c4             	mov    r12d,eax
    fe25:	e9 5c ff ff ff       	jmp    fd86 <write_special_flag+0x26>
    fe2a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

000000000000fe30 <convert_zero_flag>:
    fe30:	f3 0f 1e fa          	endbr64 
    fe34:	41 54                	push   r12
    fe36:	55                   	push   rbp
    fe37:	48 89 fd             	mov    rbp,rdi
    fe3a:	48 89 f7             	mov    rdi,rsi
    fe3d:	53                   	push   rbx
    fe3e:	e8 8d f6 ff ff       	call   f4d0 <get_ascii_digit>
    fe43:	0f b6 55 00          	movzx  edx,BYTE PTR [rbp+0x0]
    fe47:	49 89 c4             	mov    r12,rax
    fe4a:	89 d0                	mov    eax,edx
    fe4c:	c0 e8 04             	shr    al,0x4
    fe4f:	83 e0 01             	and    eax,0x1
    fe52:	f6 c2 08             	test   dl,0x8
    fe55:	75 41                	jne    fe98 <convert_zero_flag+0x68>
    fe57:	81 e2 85 00 00 00    	and    edx,0x85
    fe5d:	0f b6 f8             	movzx  edi,al
    fe60:	8b 55 04             	mov    edx,DWORD PTR [rbp+0x4]
    fe63:	0f 95 c1             	setne  cl
    fe66:	0f b6 f1             	movzx  esi,cl
    fe69:	44 8d 04 7e          	lea    r8d,[rsi+rdi*2]
    fe6d:	be 01 00 00 00       	mov    esi,0x1
    fe72:	bf 20 00 00 00       	mov    edi,0x20
    fe77:	44 29 c2             	sub    edx,r8d
    fe7a:	44 29 e2             	sub    edx,r12d
    fe7d:	e8 0e f7 ff ff       	call   f590 <write_repeated_char>
    fe82:	48 89 ef             	mov    rdi,rbp
    fe85:	41 89 c4             	mov    r12d,eax
    fe88:	e8 d3 fe ff ff       	call   fd60 <write_special_flag>
    fe8d:	5b                   	pop    rbx
    fe8e:	5d                   	pop    rbp
    fe8f:	44 01 e0             	add    eax,r12d
    fe92:	41 5c                	pop    r12
    fe94:	c3                   	ret    
    fe95:	0f 1f 00             	nop    DWORD PTR [rax]
    fe98:	48 89 ef             	mov    rdi,rbp
    fe9b:	e8 c0 fe ff ff       	call   fd60 <write_special_flag>
    fea0:	8b 55 04             	mov    edx,DWORD PTR [rbp+0x4]
    fea3:	be 01 00 00 00       	mov    esi,0x1
    fea8:	bf 30 00 00 00       	mov    edi,0x30
    fead:	89 c3                	mov    ebx,eax
    feaf:	44 29 e2             	sub    edx,r12d
    feb2:	29 c2                	sub    edx,eax
    feb4:	e8 d7 f6 ff ff       	call   f590 <write_repeated_char>
    feb9:	01 d8                	add    eax,ebx
    febb:	5b                   	pop    rbx
    febc:	5d                   	pop    rbp
    febd:	41 5c                	pop    r12
    febf:	c3                   	ret    

000000000000fec0 <convert_digit>:
    fec0:	f3 0f 1e fa          	endbr64 
    fec4:	41 56                	push   r14
    fec6:	41 55                	push   r13
    fec8:	41 54                	push   r12
    feca:	49 89 f4             	mov    r12,rsi
    fecd:	55                   	push   rbp
    fece:	48 89 fd             	mov    rbp,rdi
    fed1:	53                   	push   rbx
    fed2:	0f b6 07             	movzx  eax,BYTE PTR [rdi]
    fed5:	89 c2                	mov    edx,eax
    fed7:	c0 ea 04             	shr    dl,0x4
    feda:	83 e2 01             	and    edx,0x1
    fedd:	a8 02                	test   al,0x2
    fedf:	0f 85 eb 00 00 00    	jne    ffd0 <convert_digit+0x110>
    fee5:	a8 20                	test   al,0x20
    fee7:	75 27                	jne    ff10 <convert_digit+0x50>
    fee9:	e8 42 ff ff ff       	call   fe30 <convert_zero_flag>
    feee:	4c 89 e7             	mov    rdi,r12
    fef1:	be 01 00 00 00       	mov    esi,0x1
    fef6:	89 c3                	mov    ebx,eax
    fef8:	e8 53 e5 ff ff       	call   e450 <ft_putstr_fd>
    fefd:	01 d8                	add    eax,ebx
    feff:	5b                   	pop    rbx
    ff00:	5d                   	pop    rbp
    ff01:	41 5c                	pop    r12
    ff03:	41 5d                	pop    r13
    ff05:	41 5e                	pop    r14
    ff07:	c3                   	ret    
    ff08:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    ff0f:	00 
    ff10:	a8 85                	test   al,0x85
    ff12:	0f b6 fa             	movzx  edi,dl
    ff15:	0f 95 c1             	setne  cl
    ff18:	0f b6 f1             	movzx  esi,cl
    ff1b:	44 8d 2c 7e          	lea    r13d,[rsi+rdi*2]
    ff1f:	4c 89 e7             	mov    rdi,r12
    ff22:	e8 a9 f5 ff ff       	call   f4d0 <get_ascii_digit>
    ff27:	44 8b 75 08          	mov    r14d,DWORD PTR [rbp+0x8]
    ff2b:	4c 89 e7             	mov    rdi,r12
    ff2e:	44 01 e8             	add    eax,r13d
    ff31:	44 39 f0             	cmp    eax,r14d
    ff34:	41 0f 4c c6          	cmovl  eax,r14d
    ff38:	89 c3                	mov    ebx,eax
    ff3a:	e8 91 f5 ff ff       	call   f4d0 <get_ascii_digit>
    ff3f:	4d 63 cd             	movsxd r9,r13d
    ff42:	49 01 c1             	add    r9,rax
    ff45:	4d 39 ce             	cmp    r14,r9
    ff48:	0f 82 b2 00 00 00    	jb     10000 <convert_digit+0x140>
    ff4e:	8b 55 04             	mov    edx,DWORD PTR [rbp+0x4]
    ff51:	be 01 00 00 00       	mov    esi,0x1
    ff56:	bf 20 00 00 00       	mov    edi,0x20
    ff5b:	44 29 ea             	sub    edx,r13d
    ff5e:	29 da                	sub    edx,ebx
    ff60:	e8 2b f6 ff ff       	call   f590 <write_repeated_char>
    ff65:	89 c3                	mov    ebx,eax
    ff67:	48 89 ef             	mov    rdi,rbp
    ff6a:	e8 f1 fd ff ff       	call   fd60 <write_special_flag>
    ff6f:	44 8b 75 08          	mov    r14d,DWORD PTR [rbp+0x8]
    ff73:	4c 89 e7             	mov    rdi,r12
    ff76:	41 89 c5             	mov    r13d,eax
    ff79:	e8 52 f5 ff ff       	call   f4d0 <get_ascii_digit>
    ff7e:	44 89 f2             	mov    edx,r14d
    ff81:	be 01 00 00 00       	mov    esi,0x1
    ff86:	bf 30 00 00 00       	mov    edi,0x30
    ff8b:	29 c2                	sub    edx,eax
    ff8d:	e8 fe f5 ff ff       	call   f590 <write_repeated_char>
    ff92:	41 01 c5             	add    r13d,eax
    ff95:	f6 45 00 20          	test   BYTE PTR [rbp+0x0],0x20
    ff99:	74 10                	je     ffab <convert_digit+0xeb>
    ff9b:	44 8b 55 08          	mov    r10d,DWORD PTR [rbp+0x8]
    ff9f:	45 85 d2             	test   r10d,r10d
    ffa2:	75 07                	jne    ffab <convert_digit+0xeb>
    ffa4:	41 80 3c 24 30       	cmp    BYTE PTR [r12],0x30
    ffa9:	74 10                	je     ffbb <convert_digit+0xfb>
    ffab:	be 01 00 00 00       	mov    esi,0x1
    ffb0:	4c 89 e7             	mov    rdi,r12
    ffb3:	e8 98 e4 ff ff       	call   e450 <ft_putstr_fd>
    ffb8:	41 01 c5             	add    r13d,eax
    ffbb:	42 8d 04 2b          	lea    eax,[rbx+r13*1]
    ffbf:	5b                   	pop    rbx
    ffc0:	5d                   	pop    rbp
    ffc1:	41 5c                	pop    r12
    ffc3:	41 5d                	pop    r13
    ffc5:	41 5e                	pop    r14
    ffc7:	c3                   	ret    
    ffc8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    ffcf:	00 
    ffd0:	e8 6b fc ff ff       	call   fc40 <write_basic>
    ffd5:	8b 55 04             	mov    edx,DWORD PTR [rbp+0x4]
    ffd8:	be 01 00 00 00       	mov    esi,0x1
    ffdd:	bf 20 00 00 00       	mov    edi,0x20
    ffe2:	41 89 c4             	mov    r12d,eax
    ffe5:	29 c2                	sub    edx,eax
    ffe7:	e8 a4 f5 ff ff       	call   f590 <write_repeated_char>
    ffec:	5b                   	pop    rbx
    ffed:	5d                   	pop    rbp
    ffee:	44 01 e0             	add    eax,r12d
    fff1:	41 5c                	pop    r12
    fff3:	41 5d                	pop    r13
    fff5:	41 5e                	pop    r14
    fff7:	c3                   	ret    
    fff8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    ffff:	00 
   10000:	44 03 6d 08          	add    r13d,DWORD PTR [rbp+0x8]
   10004:	8b 55 04             	mov    edx,DWORD PTR [rbp+0x4]
   10007:	be 01 00 00 00       	mov    esi,0x1
   1000c:	bf 20 00 00 00       	mov    edi,0x20
   10011:	41 39 dd             	cmp    r13d,ebx
   10014:	44 0f 4c eb          	cmovl  r13d,ebx
   10018:	44 29 ea             	sub    edx,r13d
   1001b:	e8 70 f5 ff ff       	call   f590 <write_repeated_char>
   10020:	89 c3                	mov    ebx,eax
   10022:	e9 40 ff ff ff       	jmp    ff67 <convert_digit+0xa7>
   10027:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
   1002e:	00 00 

0000000000010030 <get_count_by_flag>:
   10030:	f3 0f 1e fa          	endbr64 
   10034:	0f b6 07             	movzx  eax,BYTE PTR [rdi]
   10037:	31 d2                	xor    edx,edx
   10039:	a8 85                	test   al,0x85
   1003b:	0f 95 c2             	setne  dl
   1003e:	c0 e8 04             	shr    al,0x4
   10041:	83 e0 01             	and    eax,0x1
   10044:	8d 04 42             	lea    eax,[rdx+rax*2]
   10047:	c3                   	ret    
   10048:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
   1004f:	00 

0000000000010050 <mlx_int_deal_shm>:
   10050:	f3 0f 1e fa          	endbr64 
   10054:	41 54                	push   r12
   10056:	55                   	push   rbp
   10057:	53                   	push   rbx
   10058:	48 89 fb             	mov    rbx,rdi
   1005b:	48 83 ec 40          	sub    rsp,0x40
   1005f:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
   10062:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
   10069:	00 00 
   1006b:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
   10070:	31 c0                	xor    eax,eax
   10072:	48 8d 74 24 0c       	lea    rsi,[rsp+0xc]
   10077:	48 8d 4c 24 08       	lea    rcx,[rsp+0x8]
   1007c:	48 89 f2             	mov    rdx,rsi
   1007f:	e8 bc 26 ff ff       	call   2740 <XShmQueryVersion@plt>
   10084:	ba ff ff ff ff       	mov    edx,0xffffffff
   10089:	89 43 48             	mov    DWORD PTR [rbx+0x48],eax
   1008c:	85 c0                	test   eax,eax
   1008e:	74 0c                	je     1009c <mlx_int_deal_shm+0x4c>
   10090:	8b 44 24 08          	mov    eax,DWORD PTR [rsp+0x8]
   10094:	85 c0                	test   eax,eax
   10096:	0f 85 94 00 00 00    	jne    10130 <mlx_int_deal_shm+0xe0>
   1009c:	89 53 4c             	mov    DWORD PTR [rbx+0x4c],edx
   1009f:	4c 8d 64 24 10       	lea    r12,[rsp+0x10]
   100a4:	be 20 00 00 00       	mov    esi,0x20
   100a9:	4c 89 e7             	mov    rdi,r12
   100ac:	e8 cf 26 ff ff       	call   2780 <gethostname@plt>
   100b1:	48 8d 3d 80 23 00 00 	lea    rdi,[rip+0x2380]        # 12438 <_IO_stdin_used+0x438>
   100b8:	e8 f3 26 ff ff       	call   27b0 <getenv@plt>
   100bd:	48 89 c5             	mov    rbp,rax
   100c0:	48 85 c0             	test   rax,rax
   100c3:	74 4b                	je     10110 <mlx_int_deal_shm+0xc0>
   100c5:	0f b6 00             	movzx  eax,BYTE PTR [rax]
   100c8:	3c 3a                	cmp    al,0x3a
   100ca:	74 44                	je     10110 <mlx_int_deal_shm+0xc0>
   100cc:	84 c0                	test   al,al
   100ce:	74 40                	je     10110 <mlx_int_deal_shm+0xc0>
   100d0:	4c 89 e7             	mov    rdi,r12
   100d3:	e8 18 26 ff ff       	call   26f0 <strlen@plt>
   100d8:	4c 89 e6             	mov    rsi,r12
   100db:	48 89 ef             	mov    rdi,rbp
   100de:	48 89 c2             	mov    rdx,rax
   100e1:	e8 1a 25 ff ff       	call   2600 <strncmp@plt>
   100e6:	85 c0                	test   eax,eax
   100e8:	74 26                	je     10110 <mlx_int_deal_shm+0xc0>
   100ea:	ba 09 00 00 00       	mov    edx,0x9
   100ef:	48 8d 35 4a 23 00 00 	lea    rsi,[rip+0x234a]        # 12440 <_IO_stdin_used+0x440>
   100f6:	48 89 ef             	mov    rdi,rbp
   100f9:	e8 02 25 ff ff       	call   2600 <strncmp@plt>
   100fe:	85 c0                	test   eax,eax
   10100:	74 0e                	je     10110 <mlx_int_deal_shm+0xc0>
   10102:	48 8b 05 8f 23 00 00 	mov    rax,QWORD PTR [rip+0x238f]        # 12498 <_IO_stdin_used+0x498>
   10109:	48 89 43 48          	mov    QWORD PTR [rbx+0x48],rax
   1010d:	0f 1f 00             	nop    DWORD PTR [rax]
   10110:	48 8b 44 24 38       	mov    rax,QWORD PTR [rsp+0x38]
   10115:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
   1011c:	00 00 
   1011e:	75 1f                	jne    1013f <mlx_int_deal_shm+0xef>
   10120:	48 83 c4 40          	add    rsp,0x40
   10124:	31 c0                	xor    eax,eax
   10126:	5b                   	pop    rbx
   10127:	5d                   	pop    rbp
   10128:	41 5c                	pop    r12
   1012a:	c3                   	ret    
   1012b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   10130:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
   10133:	e8 c8 27 ff ff       	call   2900 <XShmPixmapFormat@plt>
   10138:	89 c2                	mov    edx,eax
   1013a:	e9 5d ff ff ff       	jmp    1009c <mlx_int_deal_shm+0x4c>
   1013f:	e8 ac 26 ff ff       	call   27f0 <__stack_chk_fail@plt>
   10144:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1014b:	00 00 00 00 
   1014f:	90                   	nop

0000000000010150 <mlx_int_rgb_conversion>:
   10150:	f3 0f 1e fa          	endbr64 
   10154:	66 0f ef c0          	pxor   xmm0,xmm0
   10158:	48 c7 47 64 00 00 00 	mov    QWORD PTR [rdi+0x64],0x0
   1015f:	00 
   10160:	48 89 f9             	mov    rcx,rdi
   10163:	0f 11 47 54          	movups XMMWORD PTR [rdi+0x54],xmm0
   10167:	48 8b 7f 18          	mov    rdi,QWORD PTR [rdi+0x18]
   1016b:	48 8b 47 18          	mov    rax,QWORD PTR [rdi+0x18]
   1016f:	a8 01                	test   al,0x1
   10171:	75 1c                	jne    1018f <mlx_int_rgb_conversion+0x3f>
   10173:	ba 01 00 00 00       	mov    edx,0x1
   10178:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
   1017f:	00 
   10180:	48 d1 e8             	shr    rax,1
   10183:	89 d6                	mov    esi,edx
   10185:	83 c2 01             	add    edx,0x1
   10188:	a8 01                	test   al,0x1
   1018a:	74 f4                	je     10180 <mlx_int_rgb_conversion+0x30>
   1018c:	89 71 54             	mov    DWORD PTR [rcx+0x54],esi
   1018f:	ba 01 00 00 00       	mov    edx,0x1
   10194:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   10198:	48 d1 e8             	shr    rax,1
   1019b:	89 d6                	mov    esi,edx
   1019d:	83 c2 01             	add    edx,0x1
   101a0:	a8 01                	test   al,0x1
   101a2:	75 f4                	jne    10198 <mlx_int_rgb_conversion+0x48>
   101a4:	48 89 47 18          	mov    QWORD PTR [rdi+0x18],rax
   101a8:	48 8b 47 20          	mov    rax,QWORD PTR [rdi+0x20]
   101ac:	89 71 58             	mov    DWORD PTR [rcx+0x58],esi
   101af:	a8 01                	test   al,0x1
   101b1:	75 1c                	jne    101cf <mlx_int_rgb_conversion+0x7f>
   101b3:	ba 01 00 00 00       	mov    edx,0x1
   101b8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
   101bf:	00 
   101c0:	48 d1 e8             	shr    rax,1
   101c3:	89 d6                	mov    esi,edx
   101c5:	83 c2 01             	add    edx,0x1
   101c8:	a8 01                	test   al,0x1
   101ca:	74 f4                	je     101c0 <mlx_int_rgb_conversion+0x70>
   101cc:	89 71 5c             	mov    DWORD PTR [rcx+0x5c],esi
   101cf:	ba 01 00 00 00       	mov    edx,0x1
   101d4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   101d8:	48 d1 e8             	shr    rax,1
   101db:	89 d6                	mov    esi,edx
   101dd:	83 c2 01             	add    edx,0x1
   101e0:	a8 01                	test   al,0x1
   101e2:	75 f4                	jne    101d8 <mlx_int_rgb_conversion+0x88>
   101e4:	48 89 47 20          	mov    QWORD PTR [rdi+0x20],rax
   101e8:	48 8b 47 28          	mov    rax,QWORD PTR [rdi+0x28]
   101ec:	89 71 60             	mov    DWORD PTR [rcx+0x60],esi
   101ef:	a8 01                	test   al,0x1
   101f1:	75 1c                	jne    1020f <mlx_int_rgb_conversion+0xbf>
   101f3:	ba 01 00 00 00       	mov    edx,0x1
   101f8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
   101ff:	00 
   10200:	48 d1 e8             	shr    rax,1
   10203:	89 d6                	mov    esi,edx
   10205:	83 c2 01             	add    edx,0x1
   10208:	a8 01                	test   al,0x1
   1020a:	74 f4                	je     10200 <mlx_int_rgb_conversion+0xb0>
   1020c:	89 71 64             	mov    DWORD PTR [rcx+0x64],esi
   1020f:	ba 01 00 00 00       	mov    edx,0x1
   10214:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   10218:	48 d1 e8             	shr    rax,1
   1021b:	89 d6                	mov    esi,edx
   1021d:	83 c2 01             	add    edx,0x1
   10220:	a8 01                	test   al,0x1
   10222:	75 f4                	jne    10218 <mlx_int_rgb_conversion+0xc8>
   10224:	48 89 47 28          	mov    QWORD PTR [rdi+0x28],rax
   10228:	31 c0                	xor    eax,eax
   1022a:	89 71 68             	mov    DWORD PTR [rcx+0x68],esi
   1022d:	c3                   	ret    
   1022e:	66 90                	xchg   ax,ax

0000000000010230 <mlx_init>:
   10230:	f3 0f 1e fa          	endbr64 
   10234:	41 54                	push   r12
   10236:	bf 88 00 00 00       	mov    edi,0x88
   1023b:	e8 d0 23 ff ff       	call   2610 <malloc@plt>
   10240:	49 89 c4             	mov    r12,rax
   10243:	48 85 c0             	test   rax,rax
   10246:	0f 84 e5 00 00 00    	je     10331 <mlx_init+0x101>
   1024c:	48 8d 3d 10 21 00 00 	lea    rdi,[rip+0x2110]        # 12363 <_IO_stdin_used+0x363>
   10253:	e8 48 24 ff ff       	call   26a0 <XOpenDisplay@plt>
   10258:	49 89 04 24          	mov    QWORD PTR [r12],rax
   1025c:	48 89 c2             	mov    rdx,rax
   1025f:	48 85 c0             	test   rax,rax
   10262:	0f 84 f8 00 00 00    	je     10360 <mlx_init+0x130>
   10268:	48 63 80 e0 00 00 00 	movsxd rax,DWORD PTR [rax+0xe0]
   1026f:	4c 89 e7             	mov    rdi,r12
   10272:	48 89 c1             	mov    rcx,rax
   10275:	48 c1 e0 07          	shl    rax,0x7
   10279:	48 03 82 e8 00 00 00 	add    rax,QWORD PTR [rdx+0xe8]
   10280:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
   10284:	66 0f 6e c1          	movd   xmm0,ecx
   10288:	49 89 54 24 08       	mov    QWORD PTR [r12+0x8],rdx
   1028d:	48 8b 50 50          	mov    rdx,QWORD PTR [rax+0x50]
   10291:	8b 40 38             	mov    eax,DWORD PTR [rax+0x38]
   10294:	49 89 54 24 20       	mov    QWORD PTR [r12+0x20],rdx
   10299:	66 0f 6e c8          	movd   xmm1,eax
   1029d:	66 0f 62 c1          	punpckldq xmm0,xmm1
   102a1:	66 41 0f d6 44 24 10 	movq   QWORD PTR [r12+0x10],xmm0
   102a8:	e8 33 05 00 00       	call   107e0 <mlx_int_get_visual>
   102ad:	83 f8 ff             	cmp    eax,0xffffffff
   102b0:	0f 84 b7 00 00 00    	je     1036d <mlx_init+0x13d>
   102b6:	49 c7 44 24 30 00 00 	mov    QWORD PTR [r12+0x30],0x0
   102bd:	00 00 
   102bf:	49 8b 3c 24          	mov    rdi,QWORD PTR [r12]
   102c3:	31 d2                	xor    edx,edx
   102c5:	48 8d 35 7e 21 00 00 	lea    rsi,[rip+0x217e]        # 1244a <_IO_stdin_used+0x44a>
   102cc:	49 c7 44 24 38 00 00 	mov    QWORD PTR [r12+0x38],0x0
   102d3:	00 00 
   102d5:	49 c7 44 24 40 00 00 	mov    QWORD PTR [r12+0x40],0x0
   102dc:	00 00 
   102de:	41 c7 44 24 50 01 00 	mov    DWORD PTR [r12+0x50],0x1
   102e5:	00 00 
   102e7:	e8 54 25 ff ff       	call   2840 <XInternAtom@plt>
   102ec:	49 8b 3c 24          	mov    rdi,QWORD PTR [r12]
   102f0:	31 d2                	xor    edx,edx
   102f2:	48 8d 35 62 21 00 00 	lea    rsi,[rip+0x2162]        # 1245b <_IO_stdin_used+0x45b>
   102f9:	49 89 44 24 70       	mov    QWORD PTR [r12+0x70],rax
   102fe:	e8 3d 25 ff ff       	call   2840 <XInternAtom@plt>
   10303:	4c 89 e7             	mov    rdi,r12
   10306:	49 89 44 24 78       	mov    QWORD PTR [r12+0x78],rax
   1030b:	31 c0                	xor    eax,eax
   1030d:	e8 3e fd ff ff       	call   10050 <mlx_int_deal_shm>
   10312:	41 8b 44 24 28       	mov    eax,DWORD PTR [r12+0x28]
   10317:	85 c0                	test   eax,eax
   10319:	75 25                	jne    10340 <mlx_init+0x110>
   1031b:	4c 89 e7             	mov    rdi,r12
   1031e:	31 c0                	xor    eax,eax
   10320:	e8 2b fe ff ff       	call   10150 <mlx_int_rgb_conversion>
   10325:	41 c7 84 24 80 00 00 	mov    DWORD PTR [r12+0x80],0x0
   1032c:	00 00 00 00 00 
   10331:	4c 89 e0             	mov    rax,r12
   10334:	41 5c                	pop    r12
   10336:	c3                   	ret    
   10337:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
   1033e:	00 00 
   10340:	49 8b 54 24 18       	mov    rdx,QWORD PTR [r12+0x18]
   10345:	49 8b 74 24 08       	mov    rsi,QWORD PTR [r12+0x8]
   1034a:	31 c9                	xor    ecx,ecx
   1034c:	49 8b 3c 24          	mov    rdi,QWORD PTR [r12]
   10350:	e8 fb 22 ff ff       	call   2650 <XCreateColormap@plt>
   10355:	49 89 44 24 20       	mov    QWORD PTR [r12+0x20],rax
   1035a:	eb bf                	jmp    1031b <mlx_init+0xeb>
   1035c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   10360:	4c 89 e7             	mov    rdi,r12
   10363:	45 31 e4             	xor    r12d,r12d
   10366:	e8 65 23 ff ff       	call   26d0 <free@plt>
   1036b:	eb c4                	jmp    10331 <mlx_init+0x101>
   1036d:	48 8d 3d f4 20 00 00 	lea    rdi,[rip+0x20f4]        # 12468 <_IO_stdin_used+0x468>
   10374:	e8 07 22 ff ff       	call   2580 <puts@plt>
   10379:	bf 01 00 00 00       	mov    edi,0x1
   1037e:	e8 1d 22 ff ff       	call   25a0 <exit@plt>
   10383:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
   1038a:	00 00 00 
   1038d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000010390 <mlx_new_window>:
   10390:	f3 0f 1e fa          	endbr64 
   10394:	41 57                	push   r15
   10396:	49 89 cf             	mov    r15,rcx
   10399:	41 56                	push   r14
   1039b:	41 89 d6             	mov    r14d,edx
   1039e:	41 55                	push   r13
   103a0:	41 89 f5             	mov    r13d,esi
   103a3:	41 54                	push   r12
   103a5:	55                   	push   rbp
   103a6:	48 89 fd             	mov    rbp,rdi
   103a9:	48 81 ec 00 01 00 00 	sub    rsp,0x100
   103b0:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
   103b7:	00 00 
   103b9:	48 89 84 24 f8 00 00 	mov    QWORD PTR [rsp+0xf8],rax
   103c0:	00 
   103c1:	31 c0                	xor    eax,eax
   103c3:	48 8b 47 20          	mov    rax,QWORD PTR [rdi+0x20]
   103c7:	bf a8 03 00 00       	mov    edi,0x3a8
   103cc:	48 c7 44 24 08 00 00 	mov    QWORD PTR [rsp+0x8],0x0
   103d3:	00 00 
   103d5:	48 c7 44 24 18 ff ff 	mov    QWORD PTR [rsp+0x18],0xffffffffffffffff
   103dc:	ff ff 
   103de:	48 89 44 24 60       	mov    QWORD PTR [rsp+0x60],rax
   103e3:	48 c7 44 24 48 ff ff 	mov    QWORD PTR [rsp+0x48],0xffffff
   103ea:	ff 00 
   103ec:	e8 1f 22 ff ff       	call   2610 <malloc@plt>
   103f1:	49 89 c4             	mov    r12,rax
   103f4:	48 85 c0             	test   rax,rax
   103f7:	0f 84 d2 00 00 00    	je     104cf <mlx_new_window+0x13f>
   103fd:	48 89 e0             	mov    rax,rsp
   10400:	48 8b 75 08          	mov    rsi,QWORD PTR [rbp+0x8]
   10404:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
   10408:	45 89 f1             	mov    r9d,r14d
   1040b:	50                   	push   rax
   1040c:	45 89 e8             	mov    r8d,r13d
   1040f:	31 c9                	xor    ecx,ecx
   10411:	31 d2                	xor    edx,edx
   10413:	68 0a 28 00 00       	push   0x280a
   10418:	ff 75 18             	push   QWORD PTR [rbp+0x18]
   1041b:	6a 01                	push   0x1
   1041d:	6a 00                	push   0x0
   1041f:	6a 00                	push   0x0
   10421:	e8 0a 22 ff ff       	call   2630 <XCreateWindow@plt>
   10426:	48 83 c4 30          	add    rsp,0x30
   1042a:	44 89 f1             	mov    ecx,r14d
   1042d:	44 89 ea             	mov    edx,r13d
   10430:	48 89 c6             	mov    rsi,rax
   10433:	49 89 04 24          	mov    QWORD PTR [r12],rax
   10437:	48 89 ef             	mov    rdi,rbp
   1043a:	31 c0                	xor    eax,eax
   1043c:	e8 7f 02 00 00       	call   106c0 <mlx_int_anti_resize_win>
   10441:	49 8b 34 24          	mov    rsi,QWORD PTR [r12]
   10445:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
   10449:	4c 89 fa             	mov    rdx,r15
   1044c:	e8 0f 21 ff ff       	call   2560 <XStoreName@plt>
   10451:	49 8b 34 24          	mov    rsi,QWORD PTR [r12]
   10455:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
   10459:	48 8d 55 70          	lea    rdx,[rbp+0x70]
   1045d:	b9 01 00 00 00       	mov    ecx,0x1
   10462:	e8 09 23 ff ff       	call   2770 <XSetWMProtocols@plt>
   10467:	49 8b 34 24          	mov    rsi,QWORD PTR [r12]
   1046b:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
   1046f:	66 0f 76 c0          	pcmpeqd xmm0,xmm0
   10473:	48 8d 4c 24 70       	lea    rcx,[rsp+0x70]
   10478:	ba 07 00 00 00       	mov    edx,0x7
   1047d:	0f 11 44 24 78       	movups XMMWORD PTR [rsp+0x78],xmm0
   10482:	c7 44 24 70 03 00 00 	mov    DWORD PTR [rsp+0x70],0x3
   10489:	00 
   1048a:	e8 11 23 ff ff       	call   27a0 <XCreateGC@plt>
   1048f:	49 8d 54 24 48       	lea    rdx,[r12+0x48]
   10494:	b9 6c 00 00 00       	mov    ecx,0x6c
   10499:	66 48 0f 6e c0       	movq   xmm0,rax
   1049e:	48 89 d7             	mov    rdi,rdx
   104a1:	31 c0                	xor    eax,eax
   104a3:	0f 16 45 30          	movhps xmm0,QWORD PTR [rbp+0x30]
   104a7:	4c 89 65 30          	mov    QWORD PTR [rbp+0x30],r12
   104ab:	41 0f 11 44 24 08    	movups XMMWORD PTR [r12+0x8],xmm0
   104b1:	f3 48 ab             	rep stos QWORD PTR es:[rdi],rax
   104b4:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
   104b8:	49 8b 34 24          	mov    rsi,QWORD PTR [r12]
   104bc:	e8 1f 24 ff ff       	call   28e0 <XMapRaised@plt>
   104c1:	49 8b 34 24          	mov    rsi,QWORD PTR [r12]
   104c5:	48 89 ef             	mov    rdi,rbp
   104c8:	31 c0                	xor    eax,eax
   104ca:	e8 a1 02 00 00       	call   10770 <mlx_int_wait_first_expose>
   104cf:	48 8b 84 24 f8 00 00 	mov    rax,QWORD PTR [rsp+0xf8]
   104d6:	00 
   104d7:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
   104de:	00 00 
   104e0:	75 14                	jne    104f6 <mlx_new_window+0x166>
   104e2:	48 81 c4 00 01 00 00 	add    rsp,0x100
   104e9:	4c 89 e0             	mov    rax,r12
   104ec:	5d                   	pop    rbp
   104ed:	41 5c                	pop    r12
   104ef:	41 5d                	pop    r13
   104f1:	41 5e                	pop    r14
   104f3:	41 5f                	pop    r15
   104f5:	c3                   	ret    
   104f6:	e8 f5 22 ff ff       	call   27f0 <__stack_chk_fail@plt>
   104fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010500 <mlx_loop_end>:
   10500:	f3 0f 1e fa          	endbr64 
   10504:	c7 87 80 00 00 00 01 	mov    DWORD PTR [rdi+0x80],0x1
   1050b:	00 00 00 
   1050e:	b8 01 00 00 00       	mov    eax,0x1
   10513:	c3                   	ret    
   10514:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1051b:	00 00 00 00 
   1051f:	90                   	nop

0000000000010520 <mlx_loop>:
   10520:	f3 0f 1e fa          	endbr64 
   10524:	41 54                	push   r12
   10526:	55                   	push   rbp
   10527:	48 8d 2d f2 6a 00 00 	lea    rbp,[rip+0x6af2]        # 17020 <mlx_int_param_event>
   1052e:	53                   	push   rbx
   1052f:	48 89 fb             	mov    rbx,rdi
   10532:	48 81 ec e0 00 00 00 	sub    rsp,0xe0
   10539:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
   10540:	00 00 
   10542:	48 89 84 24 d8 00 00 	mov    QWORD PTR [rsp+0xd8],rax
   10549:	00 
   1054a:	31 c0                	xor    eax,eax
   1054c:	e8 3f 0b 00 00       	call   11090 <mlx_int_set_win_event_mask>
   10551:	c7 43 50 00 00 00 00 	mov    DWORD PTR [rbx+0x50],0x0
   10558:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
   1055f:	00 
   10560:	48 83 7b 30 00       	cmp    QWORD PTR [rbx+0x30],0x0
   10565:	0f 84 9d 00 00 00    	je     10608 <mlx_loop+0xe8>
   1056b:	8b 83 80 00 00 00    	mov    eax,DWORD PTR [rbx+0x80]
   10571:	85 c0                	test   eax,eax
   10573:	0f 85 8f 00 00 00    	jne    10608 <mlx_loop+0xe8>
   10579:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   10580:	48 83 7b 38 00       	cmp    QWORD PTR [rbx+0x38],0x0
   10585:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
   10588:	74 09                	je     10593 <mlx_loop+0x73>
   1058a:	e8 d1 23 ff ff       	call   2960 <XPending@plt>
   1058f:	85 c0                	test   eax,eax
   10591:	74 4b                	je     105de <mlx_loop+0xbe>
   10593:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
   10596:	4c 8d 64 24 10       	lea    r12,[rsp+0x10]
   1059b:	4c 89 e6             	mov    rsi,r12
   1059e:	e8 ad 21 ff ff       	call   2750 <XNextEvent@plt>
   105a3:	48 8b 53 30          	mov    rdx,QWORD PTR [rbx+0x30]
   105a7:	48 85 d2             	test   rdx,rdx
   105aa:	74 28                	je     105d4 <mlx_loop+0xb4>
   105ac:	48 8b 44 24 30       	mov    rax,QWORD PTR [rsp+0x30]
   105b1:	eb 0e                	jmp    105c1 <mlx_loop+0xa1>
   105b3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   105b8:	48 8b 52 10          	mov    rdx,QWORD PTR [rdx+0x10]
   105bc:	48 85 d2             	test   rdx,rdx
   105bf:	74 13                	je     105d4 <mlx_loop+0xb4>
   105c1:	48 39 02             	cmp    QWORD PTR [rdx],rax
   105c4:	75 f2                	jne    105b8 <mlx_loop+0x98>
   105c6:	8b 44 24 10          	mov    eax,DWORD PTR [rsp+0x10]
   105ca:	83 f8 21             	cmp    eax,0x21
   105cd:	74 61                	je     10630 <mlx_loop+0x110>
   105cf:	83 f8 23             	cmp    eax,0x23
   105d2:	7e 67                	jle    1063b <mlx_loop+0x11b>
   105d4:	8b 93 80 00 00 00    	mov    edx,DWORD PTR [rbx+0x80]
   105da:	85 d2                	test   edx,edx
   105dc:	74 a2                	je     10580 <mlx_loop+0x60>
   105de:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
   105e1:	31 f6                	xor    esi,esi
   105e3:	e8 e8 21 ff ff       	call   27d0 <XSync@plt>
   105e8:	48 8b 53 38          	mov    rdx,QWORD PTR [rbx+0x38]
   105ec:	48 85 d2             	test   rdx,rdx
   105ef:	0f 84 6b ff ff ff    	je     10560 <mlx_loop+0x40>
   105f5:	31 c0                	xor    eax,eax
   105f7:	48 8b 7b 40          	mov    rdi,QWORD PTR [rbx+0x40]
   105fb:	ff d2                	call   rdx
   105fd:	48 83 7b 30 00       	cmp    QWORD PTR [rbx+0x30],0x0
   10602:	0f 85 63 ff ff ff    	jne    1056b <mlx_loop+0x4b>
   10608:	48 8b 84 24 d8 00 00 	mov    rax,QWORD PTR [rsp+0xd8]
   1060f:	00 
   10610:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
   10617:	00 00 
   10619:	75 75                	jne    10690 <mlx_loop+0x170>
   1061b:	48 81 c4 e0 00 00 00 	add    rsp,0xe0
   10622:	31 c0                	xor    eax,eax
   10624:	5b                   	pop    rbx
   10625:	5d                   	pop    rbp
   10626:	41 5c                	pop    r12
   10628:	c3                   	ret    
   10629:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   10630:	48 8b 4b 78          	mov    rcx,QWORD PTR [rbx+0x78]
   10634:	48 39 4c 24 38       	cmp    QWORD PTR [rsp+0x38],rcx
   10639:	74 20                	je     1065b <mlx_loop+0x13b>
   1063b:	48 63 c8             	movsxd rcx,eax
   1063e:	48 8d 04 49          	lea    rax,[rcx+rcx*2]
   10642:	48 83 7c c2 50 00    	cmp    QWORD PTR [rdx+rax*8+0x50],0x0
   10648:	74 8a                	je     105d4 <mlx_loop+0xb4>
   1064a:	4c 89 e6             	mov    rsi,r12
   1064d:	48 89 df             	mov    rdi,rbx
   10650:	31 c0                	xor    eax,eax
   10652:	ff 54 cd 00          	call   QWORD PTR [rbp+rcx*8+0x0]
   10656:	e9 79 ff ff ff       	jmp    105d4 <mlx_loop+0xb4>
   1065b:	48 8b 73 70          	mov    rsi,QWORD PTR [rbx+0x70]
   1065f:	48 39 74 24 48       	cmp    QWORD PTR [rsp+0x48],rsi
   10664:	75 d5                	jne    1063b <mlx_loop+0x11b>
   10666:	48 8b 8a e8 01 00 00 	mov    rcx,QWORD PTR [rdx+0x1e8]
   1066d:	48 85 c9             	test   rcx,rcx
   10670:	74 c9                	je     1063b <mlx_loop+0x11b>
   10672:	48 89 54 24 08       	mov    QWORD PTR [rsp+0x8],rdx
   10677:	48 8b ba f0 01 00 00 	mov    rdi,QWORD PTR [rdx+0x1f0]
   1067e:	31 c0                	xor    eax,eax
   10680:	ff d1                	call   rcx
   10682:	8b 44 24 10          	mov    eax,DWORD PTR [rsp+0x10]
   10686:	48 8b 54 24 08       	mov    rdx,QWORD PTR [rsp+0x8]
   1068b:	e9 3f ff ff ff       	jmp    105cf <mlx_loop+0xaf>
   10690:	e8 5b 21 ff ff       	call   27f0 <__stack_chk_fail@plt>
   10695:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
   1069c:	00 00 00 
   1069f:	90                   	nop

00000000000106a0 <mlx_key_hook>:
   106a0:	f3 0f 1e fa          	endbr64 
   106a4:	48 89 b7 98 00 00 00 	mov    QWORD PTR [rdi+0x98],rsi
   106ab:	48 89 97 a0 00 00 00 	mov    QWORD PTR [rdi+0xa0],rdx
   106b2:	c7 87 90 00 00 00 02 	mov    DWORD PTR [rdi+0x90],0x2
   106b9:	00 00 00 
   106bc:	c3                   	ret    
   106bd:	0f 1f 00             	nop    DWORD PTR [rax]

00000000000106c0 <mlx_int_anti_resize_win>:
   106c0:	f3 0f 1e fa          	endbr64 
   106c4:	41 54                	push   r12
   106c6:	66 0f 6e d1          	movd   xmm2,ecx
   106ca:	66 0f 6e c2          	movd   xmm0,edx
   106ce:	55                   	push   rbp
   106cf:	66 0f 62 c2          	punpckldq xmm0,xmm2
   106d3:	48 89 f5             	mov    rbp,rsi
   106d6:	53                   	push   rbx
   106d7:	66 0f 6f c8          	movdqa xmm1,xmm0
   106db:	48 89 fb             	mov    rbx,rdi
   106de:	66 0f 6c c8          	punpcklqdq xmm1,xmm0
   106e2:	48 81 ec 90 00 00 00 	sub    rsp,0x90
   106e9:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
   106ec:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
   106f3:	00 00 
   106f5:	48 89 84 24 88 00 00 	mov    QWORD PTR [rsp+0x88],rax
   106fc:	00 
   106fd:	31 c0                	xor    eax,eax
   106ff:	4c 8d 64 24 30       	lea    r12,[rsp+0x30]
   10704:	48 8d 4c 24 28       	lea    rcx,[rsp+0x28]
   10709:	0f 29 0c 24          	movaps XMMWORD PTR [rsp],xmm1
   1070d:	4c 89 e2             	mov    rdx,r12
   10710:	66 0f d6 44 24 18    	movq   QWORD PTR [rsp+0x18],xmm0
   10716:	e8 55 1e ff ff       	call   2570 <XGetWMNormalHints@plt>
   1071b:	66 0f 6f 0c 24       	movdqa xmm1,XMMWORD PTR [rsp]
   10720:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
   10723:	4c 89 e2             	mov    rdx,r12
   10726:	f3 0f 7e 44 24 18    	movq   xmm0,QWORD PTR [rsp+0x18]
   1072c:	48 89 ee             	mov    rsi,rbp
   1072f:	48 c7 44 24 30 3c 00 	mov    QWORD PTR [rsp+0x30],0x3c
   10736:	00 00 
   10738:	0f 29 4c 24 40       	movaps XMMWORD PTR [rsp+0x40],xmm1
   1073d:	66 0f d6 44 24 50    	movq   QWORD PTR [rsp+0x50],xmm0
   10743:	e8 d8 1e ff ff       	call   2620 <XSetWMNormalHints@plt>
   10748:	48 8b 84 24 88 00 00 	mov    rax,QWORD PTR [rsp+0x88]
   1074f:	00 
   10750:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
   10757:	00 00 
   10759:	75 0e                	jne    10769 <mlx_int_anti_resize_win+0xa9>
   1075b:	48 81 c4 90 00 00 00 	add    rsp,0x90
   10762:	31 c0                	xor    eax,eax
   10764:	5b                   	pop    rbx
   10765:	5d                   	pop    rbp
   10766:	41 5c                	pop    r12
   10768:	c3                   	ret    
   10769:	e8 82 20 ff ff       	call   27f0 <__stack_chk_fail@plt>
   1076e:	66 90                	xchg   ax,ax

0000000000010770 <mlx_int_wait_first_expose>:
   10770:	f3 0f 1e fa          	endbr64 
   10774:	55                   	push   rbp
   10775:	ba 00 80 00 00       	mov    edx,0x8000
   1077a:	53                   	push   rbx
   1077b:	48 89 fb             	mov    rbx,rdi
   1077e:	48 81 ec d8 00 00 00 	sub    rsp,0xd8
   10785:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
   10788:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
   1078f:	00 00 
   10791:	48 89 84 24 c8 00 00 	mov    QWORD PTR [rsp+0xc8],rax
   10798:	00 
   10799:	31 c0                	xor    eax,eax
   1079b:	48 89 e5             	mov    rbp,rsp
   1079e:	48 89 e9             	mov    rcx,rbp
   107a1:	e8 ba 1f ff ff       	call   2760 <XWindowEvent@plt>
   107a6:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
   107a9:	48 89 ee             	mov    rsi,rbp
   107ac:	e8 df 1f ff ff       	call   2790 <XPutBackEvent@plt>
   107b1:	48 8b 84 24 c8 00 00 	mov    rax,QWORD PTR [rsp+0xc8]
   107b8:	00 
   107b9:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
   107c0:	00 00 
   107c2:	75 0c                	jne    107d0 <mlx_int_wait_first_expose+0x60>
   107c4:	48 81 c4 d8 00 00 00 	add    rsp,0xd8
   107cb:	31 c0                	xor    eax,eax
   107cd:	5b                   	pop    rbx
   107ce:	5d                   	pop    rbp
   107cf:	c3                   	ret    
   107d0:	e8 1b 20 ff ff       	call   27f0 <__stack_chk_fail@plt>
   107d5:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
   107dc:	00 00 00 
   107df:	90                   	nop

00000000000107e0 <mlx_int_get_visual>:
   107e0:	f3 0f 1e fa          	endbr64 
   107e4:	41 54                	push   r12
   107e6:	45 31 e4             	xor    r12d,r12d
   107e9:	53                   	push   rbx
   107ea:	48 89 fb             	mov    rbx,rdi
   107ed:	48 83 ec 68          	sub    rsp,0x68
   107f1:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
   107f8:	00 00 
   107fa:	48 89 44 24 58       	mov    QWORD PTR [rsp+0x58],rax
   107ff:	31 c0                	xor    eax,eax
   10801:	c7 47 28 00 00 00 00 	mov    DWORD PTR [rdi+0x28],0x0
   10808:	48 63 43 10          	movsxd rax,DWORD PTR [rbx+0x10]
   1080c:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
   1080f:	48 c1 e0 07          	shl    rax,0x7
   10813:	48 03 87 e8 00 00 00 	add    rax,QWORD PTR [rdi+0xe8]
   1081a:	48 8b 40 40          	mov    rax,QWORD PTR [rax+0x40]
   1081e:	83 78 10 04          	cmp    DWORD PTR [rax+0x10],0x4
   10822:	48 89 43 18          	mov    QWORD PTR [rbx+0x18],rax
   10826:	74 36                	je     1085e <mlx_int_get_visual+0x7e>
   10828:	8b 43 14             	mov    eax,DWORD PTR [rbx+0x14]
   1082b:	48 8d 4c 24 0c       	lea    rcx,[rsp+0xc]
   10830:	48 8d 54 24 10       	lea    rdx,[rsp+0x10]
   10835:	be 0c 00 00 00       	mov    esi,0xc
   1083a:	c7 44 24 28 04 00 00 	mov    DWORD PTR [rsp+0x28],0x4
   10841:	00 
   10842:	89 44 24 24          	mov    DWORD PTR [rsp+0x24],eax
   10846:	e8 05 20 ff ff       	call   2850 <XGetVisualInfo@plt>
   1084b:	48 85 c0             	test   rax,rax
   1084e:	74 29                	je     10879 <mlx_int_get_visual+0x99>
   10850:	48 8b 00             	mov    rax,QWORD PTR [rax]
   10853:	c7 43 28 01 00 00 00 	mov    DWORD PTR [rbx+0x28],0x1
   1085a:	48 89 43 18          	mov    QWORD PTR [rbx+0x18],rax
   1085e:	48 8b 44 24 58       	mov    rax,QWORD PTR [rsp+0x58]
   10863:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
   1086a:	00 00 
   1086c:	75 13                	jne    10881 <mlx_int_get_visual+0xa1>
   1086e:	48 83 c4 68          	add    rsp,0x68
   10872:	44 89 e0             	mov    eax,r12d
   10875:	5b                   	pop    rbx
   10876:	41 5c                	pop    r12
   10878:	c3                   	ret    
   10879:	41 bc ff ff ff ff    	mov    r12d,0xffffffff
   1087f:	eb dd                	jmp    1085e <mlx_int_get_visual+0x7e>
   10881:	e8 6a 1f ff ff       	call   27f0 <__stack_chk_fail@plt>
   10886:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
   1088d:	00 00 00 

0000000000010890 <shm_att_pb>:
   10890:	f3 0f 1e fa          	endbr64 
   10894:	8b 46 20             	mov    eax,DWORD PTR [rsi+0x20]
   10897:	25 00 ff ff 00       	and    eax,0xffff00
   1089c:	3d 00 92 01 00       	cmp    eax,0x19200
   108a1:	74 0d                	je     108b0 <shm_att_pb+0x20>
   108a3:	c7 05 cb 6a 00 00 01 	mov    DWORD PTR [rip+0x6acb],0x1        # 17378 <mlx_X_error>
   108aa:	00 00 00 
   108ad:	c3                   	ret    
   108ae:	66 90                	xchg   ax,ax
   108b0:	48 83 ec 08          	sub    rsp,0x8
   108b4:	ba 38 00 00 00       	mov    edx,0x38
   108b9:	bf 02 00 00 00       	mov    edi,0x2
   108be:	48 8d 35 db 1b 00 00 	lea    rsi,[rip+0x1bdb]        # 124a0 <_IO_stdin_used+0x4a0>
   108c5:	e8 46 20 ff ff       	call   2910 <write@plt>
   108ca:	c7 05 a4 6a 00 00 01 	mov    DWORD PTR [rip+0x6aa4],0x1        # 17378 <mlx_X_error>
   108d1:	00 00 00 
   108d4:	48 83 c4 08          	add    rsp,0x8
   108d8:	c3                   	ret    
   108d9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000108e0 <mlx_int_new_xshm_image>:
   108e0:	f3 0f 1e fa          	endbr64 
   108e4:	41 57                	push   r15
   108e6:	41 56                	push   r14
   108e8:	41 55                	push   r13
   108ea:	41 89 d5             	mov    r13d,edx
   108ed:	41 54                	push   r12
   108ef:	41 89 f4             	mov    r12d,esi
   108f2:	be 01 00 00 00       	mov    esi,0x1
   108f7:	55                   	push   rbp
   108f8:	89 cd                	mov    ebp,ecx
   108fa:	53                   	push   rbx
   108fb:	48 89 fb             	mov    rbx,rdi
   108fe:	bf 58 00 00 00       	mov    edi,0x58
   10903:	48 83 ec 18          	sub    rsp,0x18
   10907:	e8 14 1f ff ff       	call   2820 <calloc@plt>
   1090c:	49 89 c7             	mov    r15,rax
   1090f:	48 85 c0             	test   rax,rax
   10912:	0f 84 3d 01 00 00    	je     10a55 <mlx_int_new_xshm_image+0x175>
   10918:	41 55                	push   r13
   1091a:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
   1091d:	4c 8d 70 38          	lea    r14,[rax+0x38]
   10921:	45 31 c0             	xor    r8d,r8d
   10924:	41 54                	push   r12
   10926:	8b 53 14             	mov    edx,DWORD PTR [rbx+0x14]
   10929:	4d 89 f1             	mov    r9,r14
   1092c:	89 e9                	mov    ecx,ebp
   1092e:	48 8b 73 18          	mov    rsi,QWORD PTR [rbx+0x18]
   10932:	e8 e9 1d ff ff       	call   2720 <XShmCreateImage@plt>
   10937:	49 89 07             	mov    QWORD PTR [r15],rax
   1093a:	5f                   	pop    rdi
   1093b:	41 58                	pop    r8
   1093d:	48 85 c0             	test   rax,rax
   10940:	0f 84 53 01 00 00    	je     10a99 <mlx_int_new_xshm_image+0x1b9>
   10946:	41 8d 74 24 20       	lea    esi,[r12+0x20]
   1094b:	66 0f 6e 40 2c       	movd   xmm0,DWORD PTR [rax+0x2c]
   10950:	66 0f 6e 50 30       	movd   xmm2,DWORD PTR [rax+0x30]
   10955:	41 89 6f 2c          	mov    DWORD PTR [r15+0x2c],ebp
   10959:	41 0f af f5          	imul   esi,r13d
   1095d:	66 41 0f 6e dd       	movd   xmm3,r13d
   10962:	66 41 0f 6e cc       	movd   xmm1,r12d
   10967:	31 ff                	xor    edi,edi
   10969:	66 0f 62 c2          	punpckldq xmm0,xmm2
   1096d:	66 0f 62 cb          	punpckldq xmm1,xmm3
   10971:	ba ff 03 00 00       	mov    edx,0x3ff
   10976:	66 0f 6c c1          	punpcklqdq xmm0,xmm1
   1097a:	c1 e6 02             	shl    esi,0x2
   1097d:	41 0f 11 47 18       	movups XMMWORD PTR [r15+0x18],xmm0
   10982:	48 63 f6             	movsxd rsi,esi
   10985:	e8 a6 1e ff ff       	call   2830 <shmget@plt>
   1098a:	41 89 47 40          	mov    DWORD PTR [r15+0x40],eax
   1098e:	89 c7                	mov    edi,eax
   10990:	83 f8 ff             	cmp    eax,0xffffffff
   10993:	0f 84 f7 00 00 00    	je     10a90 <mlx_int_new_xshm_image+0x1b0>
   10999:	49 8b 0f             	mov    rcx,QWORD PTR [r15]
   1099c:	31 d2                	xor    edx,edx
   1099e:	31 f6                	xor    esi,esi
   109a0:	48 89 4c 24 08       	mov    QWORD PTR [rsp+0x8],rcx
   109a5:	e8 c6 1f ff ff       	call   2970 <shmat@plt>
   109aa:	48 8b 4c 24 08       	mov    rcx,QWORD PTR [rsp+0x8]
   109af:	48 89 41 10          	mov    QWORD PTR [rcx+0x10],rax
   109b3:	49 89 47 48          	mov    QWORD PTR [r15+0x48],rax
   109b7:	49 89 47 30          	mov    QWORD PTR [r15+0x30],rax
   109bb:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
   109bf:	0f 84 be 00 00 00    	je     10a83 <mlx_int_new_xshm_image+0x1a3>
   109c5:	41 c7 47 50 00 00 00 	mov    DWORD PTR [r15+0x50],0x0
   109cc:	00 
   109cd:	48 8d 3d bc fe ff ff 	lea    rdi,[rip+0xfffffffffffffebc]        # 10890 <shm_att_pb>
   109d4:	c7 05 9a 69 00 00 00 	mov    DWORD PTR [rip+0x699a],0x0        # 17378 <mlx_X_error>
   109db:	00 00 00 
   109de:	e8 9d 1e ff ff       	call   2880 <XSetErrorHandler@plt>
   109e3:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
   109e6:	4c 89 f6             	mov    rsi,r14
   109e9:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
   109ee:	e8 1d 1e ff ff       	call   2810 <XShmAttach@plt>
   109f3:	85 c0                	test   eax,eax
   109f5:	74 79                	je     10a70 <mlx_int_new_xshm_image+0x190>
   109f7:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
   109fa:	31 f6                	xor    esi,esi
   109fc:	e8 cf 1d ff ff       	call   27d0 <XSync@plt>
   10a01:	8b 35 71 69 00 00    	mov    esi,DWORD PTR [rip+0x6971]        # 17378 <mlx_X_error>
   10a07:	85 f6                	test   esi,esi
   10a09:	75 65                	jne    10a70 <mlx_int_new_xshm_image+0x190>
   10a0b:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
   10a10:	e8 6b 1e ff ff       	call   2880 <XSetErrorHandler@plt>
   10a15:	41 8b 7f 40          	mov    edi,DWORD PTR [r15+0x40]
   10a19:	31 d2                	xor    edx,edx
   10a1b:	31 f6                	xor    esi,esi
   10a1d:	e8 9e 1e ff ff       	call   28c0 <shmctl@plt>
   10a22:	39 6b 4c             	cmp    DWORD PTR [rbx+0x4c],ebp
   10a25:	0f 84 95 00 00 00    	je     10ac0 <mlx_int_new_xshm_image+0x1e0>
   10a2b:	48 8b 73 08          	mov    rsi,QWORD PTR [rbx+0x8]
   10a2f:	44 8b 43 14          	mov    r8d,DWORD PTR [rbx+0x14]
   10a33:	44 89 e2             	mov    edx,r12d
   10a36:	44 89 e9             	mov    ecx,r13d
   10a39:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
   10a3c:	e8 8f 1e ff ff       	call   28d0 <XCreatePixmap@plt>
   10a41:	ba 02 00 00 00       	mov    edx,0x2
   10a46:	49 89 47 08          	mov    QWORD PTR [r15+0x8],rax
   10a4a:	8b 43 50             	mov    eax,DWORD PTR [rbx+0x50]
   10a4d:	41 89 57 28          	mov    DWORD PTR [r15+0x28],edx
   10a51:	85 c0                	test   eax,eax
   10a53:	75 5b                	jne    10ab0 <mlx_int_new_xshm_image+0x1d0>
   10a55:	48 83 c4 18          	add    rsp,0x18
   10a59:	4c 89 f8             	mov    rax,r15
   10a5c:	5b                   	pop    rbx
   10a5d:	5d                   	pop    rbp
   10a5e:	41 5c                	pop    r12
   10a60:	41 5d                	pop    r13
   10a62:	41 5e                	pop    r14
   10a64:	41 5f                	pop    r15
   10a66:	c3                   	ret    
   10a67:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
   10a6e:	00 00 
   10a70:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
   10a75:	e8 06 1e ff ff       	call   2880 <XSetErrorHandler@plt>
   10a7a:	49 8b 7f 30          	mov    rdi,QWORD PTR [r15+0x30]
   10a7e:	e8 bd 1a ff ff       	call   2540 <shmdt@plt>
   10a83:	41 8b 7f 40          	mov    edi,DWORD PTR [r15+0x40]
   10a87:	31 d2                	xor    edx,edx
   10a89:	31 f6                	xor    esi,esi
   10a8b:	e8 30 1e ff ff       	call   28c0 <shmctl@plt>
   10a90:	49 8b 07             	mov    rax,QWORD PTR [r15]
   10a93:	48 89 c7             	mov    rdi,rax
   10a96:	ff 50 60             	call   QWORD PTR [rax+0x60]
   10a99:	4c 89 ff             	mov    rdi,r15
   10a9c:	45 31 ff             	xor    r15d,r15d
   10a9f:	e8 2c 1c ff ff       	call   26d0 <free@plt>
   10aa4:	eb af                	jmp    10a55 <mlx_int_new_xshm_image+0x175>
   10aa6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
   10aad:	00 00 00 
   10ab0:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
   10ab3:	e8 08 1d ff ff       	call   27c0 <XFlush@plt>
   10ab8:	eb 9b                	jmp    10a55 <mlx_int_new_xshm_image+0x175>
   10aba:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
   10ac0:	8b 43 14             	mov    eax,DWORD PTR [rbx+0x14]
   10ac3:	48 83 ec 08          	sub    rsp,0x8
   10ac7:	49 8b 57 48          	mov    rdx,QWORD PTR [r15+0x48]
   10acb:	4c 89 f1             	mov    rcx,r14
   10ace:	48 8b 73 08          	mov    rsi,QWORD PTR [rbx+0x8]
   10ad2:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
   10ad5:	45 89 e9             	mov    r9d,r13d
   10ad8:	45 89 e0             	mov    r8d,r12d
   10adb:	50                   	push   rax
   10adc:	e8 ef 1a ff ff       	call   25d0 <XShmCreatePixmap@plt>
   10ae1:	5a                   	pop    rdx
   10ae2:	ba 03 00 00 00       	mov    edx,0x3
   10ae7:	59                   	pop    rcx
   10ae8:	e9 59 ff ff ff       	jmp    10a46 <mlx_int_new_xshm_image+0x166>
   10aed:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000010af0 <mlx_int_new_image>:
   10af0:	f3 0f 1e fa          	endbr64 
   10af4:	41 56                	push   r14
   10af6:	41 89 d6             	mov    r14d,edx
   10af9:	41 55                	push   r13
   10afb:	41 89 f5             	mov    r13d,esi
   10afe:	41 54                	push   r12
   10b00:	55                   	push   rbp
   10b01:	89 cd                	mov    ebp,ecx
   10b03:	53                   	push   rbx
   10b04:	48 89 fb             	mov    rbx,rdi
   10b07:	bf 58 00 00 00       	mov    edi,0x58
   10b0c:	e8 ff 1a ff ff       	call   2610 <malloc@plt>
   10b11:	49 89 c4             	mov    r12,rax
   10b14:	48 85 c0             	test   rax,rax
   10b17:	0f 84 b5 00 00 00    	je     10bd2 <mlx_int_new_image+0xe2>
   10b1d:	41 8d 7d 20          	lea    edi,[r13+0x20]
   10b21:	be 01 00 00 00       	mov    esi,0x1
   10b26:	41 0f af fe          	imul   edi,r14d
   10b2a:	c1 e7 02             	shl    edi,0x2
   10b2d:	48 63 ff             	movsxd rdi,edi
   10b30:	e8 eb 1c ff ff       	call   2820 <calloc@plt>
   10b35:	49 89 44 24 30       	mov    QWORD PTR [r12+0x30],rax
   10b3a:	49 89 c1             	mov    r9,rax
   10b3d:	48 85 c0             	test   rax,rax
   10b40:	0f 84 bc 00 00 00    	je     10c02 <mlx_int_new_image+0x112>
   10b46:	6a 00                	push   0x0
   10b48:	8b 53 14             	mov    edx,DWORD PTR [rbx+0x14]
   10b4b:	45 31 c0             	xor    r8d,r8d
   10b4e:	89 e9                	mov    ecx,ebp
   10b50:	48 8b 73 18          	mov    rsi,QWORD PTR [rbx+0x18]
   10b54:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
   10b57:	6a 20                	push   0x20
   10b59:	41 56                	push   r14
   10b5b:	41 55                	push   r13
   10b5d:	e8 5e 1a ff ff       	call   25c0 <XCreateImage@plt>
   10b62:	48 83 c4 20          	add    rsp,0x20
   10b66:	49 89 04 24          	mov    QWORD PTR [r12],rax
   10b6a:	48 85 c0             	test   rax,rax
   10b6d:	0f 84 85 00 00 00    	je     10bf8 <mlx_int_new_image+0x108>
   10b73:	66 0f 6e 40 2c       	movd   xmm0,DWORD PTR [rax+0x2c]
   10b78:	66 0f 6e 58 30       	movd   xmm3,DWORD PTR [rax+0x30]
   10b7d:	44 89 f1             	mov    ecx,r14d
   10b80:	44 89 ea             	mov    edx,r13d
   10b83:	66 41 0f 6e d6       	movd   xmm2,r14d
   10b88:	66 41 0f 6e cd       	movd   xmm1,r13d
   10b8d:	48 8b 73 08          	mov    rsi,QWORD PTR [rbx+0x8]
   10b91:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
   10b94:	66 0f 62 ca          	punpckldq xmm1,xmm2
   10b98:	66 0f 62 c3          	punpckldq xmm0,xmm3
   10b9c:	44 8b 43 14          	mov    r8d,DWORD PTR [rbx+0x14]
   10ba0:	49 c7 44 24 10 00 00 	mov    QWORD PTR [r12+0x10],0x0
   10ba7:	00 00 
   10ba9:	66 0f 6c c1          	punpcklqdq xmm0,xmm1
   10bad:	41 0f 11 44 24 18    	movups XMMWORD PTR [r12+0x18],xmm0
   10bb3:	e8 18 1d ff ff       	call   28d0 <XCreatePixmap@plt>
   10bb8:	41 89 6c 24 2c       	mov    DWORD PTR [r12+0x2c],ebp
   10bbd:	49 89 44 24 08       	mov    QWORD PTR [r12+0x8],rax
   10bc2:	8b 43 50             	mov    eax,DWORD PTR [rbx+0x50]
   10bc5:	41 c7 44 24 28 01 00 	mov    DWORD PTR [r12+0x28],0x1
   10bcc:	00 00 
   10bce:	85 c0                	test   eax,eax
   10bd0:	75 0e                	jne    10be0 <mlx_int_new_image+0xf0>
   10bd2:	5b                   	pop    rbx
   10bd3:	4c 89 e0             	mov    rax,r12
   10bd6:	5d                   	pop    rbp
   10bd7:	41 5c                	pop    r12
   10bd9:	41 5d                	pop    r13
   10bdb:	41 5e                	pop    r14
   10bdd:	c3                   	ret    
   10bde:	66 90                	xchg   ax,ax
   10be0:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
   10be3:	e8 d8 1b ff ff       	call   27c0 <XFlush@plt>
   10be8:	5b                   	pop    rbx
   10be9:	4c 89 e0             	mov    rax,r12
   10bec:	5d                   	pop    rbp
   10bed:	41 5c                	pop    r12
   10bef:	41 5d                	pop    r13
   10bf1:	41 5e                	pop    r14
   10bf3:	c3                   	ret    
   10bf4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   10bf8:	49 8b 7c 24 30       	mov    rdi,QWORD PTR [r12+0x30]
   10bfd:	e8 ce 1a ff ff       	call   26d0 <free@plt>
   10c02:	4c 89 e7             	mov    rdi,r12
   10c05:	45 31 e4             	xor    r12d,r12d
   10c08:	e8 c3 1a ff ff       	call   26d0 <free@plt>
   10c0d:	eb c3                	jmp    10bd2 <mlx_int_new_image+0xe2>
   10c0f:	90                   	nop

0000000000010c10 <mlx_new_image>:
   10c10:	f3 0f 1e fa          	endbr64 
   10c14:	41 55                	push   r13
   10c16:	41 89 d5             	mov    r13d,edx
   10c19:	41 54                	push   r12
   10c1b:	41 89 f4             	mov    r12d,esi
   10c1e:	55                   	push   rbp
   10c1f:	8b 47 48             	mov    eax,DWORD PTR [rdi+0x48]
   10c22:	48 89 fd             	mov    rbp,rdi
   10c25:	85 c0                	test   eax,eax
   10c27:	74 17                	je     10c40 <mlx_new_image+0x30>
   10c29:	b9 02 00 00 00       	mov    ecx,0x2
   10c2e:	e8 ad fc ff ff       	call   108e0 <mlx_int_new_xshm_image>
   10c33:	48 85 c0             	test   rax,rax
   10c36:	74 08                	je     10c40 <mlx_new_image+0x30>
   10c38:	5d                   	pop    rbp
   10c39:	41 5c                	pop    r12
   10c3b:	41 5d                	pop    r13
   10c3d:	c3                   	ret    
   10c3e:	66 90                	xchg   ax,ax
   10c40:	44 89 ea             	mov    edx,r13d
   10c43:	44 89 e6             	mov    esi,r12d
   10c46:	48 89 ef             	mov    rdi,rbp
   10c49:	b9 02 00 00 00       	mov    ecx,0x2
   10c4e:	5d                   	pop    rbp
   10c4f:	41 5c                	pop    r12
   10c51:	41 5d                	pop    r13
   10c53:	e9 98 fe ff ff       	jmp    10af0 <mlx_int_new_image>
   10c58:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
   10c5f:	00 

0000000000010c60 <mlx_new_image2>:
   10c60:	f3 0f 1e fa          	endbr64 
   10c64:	41 55                	push   r13
   10c66:	41 89 d5             	mov    r13d,edx
   10c69:	41 54                	push   r12
   10c6b:	41 89 f4             	mov    r12d,esi
   10c6e:	55                   	push   rbp
   10c6f:	8b 47 48             	mov    eax,DWORD PTR [rdi+0x48]
   10c72:	48 89 fd             	mov    rbp,rdi
   10c75:	85 c0                	test   eax,eax
   10c77:	74 17                	je     10c90 <mlx_new_image2+0x30>
   10c79:	b9 01 00 00 00       	mov    ecx,0x1
   10c7e:	e8 5d fc ff ff       	call   108e0 <mlx_int_new_xshm_image>
   10c83:	48 85 c0             	test   rax,rax
   10c86:	74 08                	je     10c90 <mlx_new_image2+0x30>
   10c88:	5d                   	pop    rbp
   10c89:	41 5c                	pop    r12
   10c8b:	41 5d                	pop    r13
   10c8d:	c3                   	ret    
   10c8e:	66 90                	xchg   ax,ax
   10c90:	44 89 ea             	mov    edx,r13d
   10c93:	44 89 e6             	mov    esi,r12d
   10c96:	48 89 ef             	mov    rdi,rbp
   10c99:	b9 01 00 00 00       	mov    ecx,0x1
   10c9e:	5d                   	pop    rbp
   10c9f:	41 5c                	pop    r12
   10ca1:	41 5d                	pop    r13
   10ca3:	e9 48 fe ff ff       	jmp    10af0 <mlx_int_new_image>
   10ca8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
   10caf:	00 

0000000000010cb0 <mlx_get_data_addr>:
   10cb0:	f3 0f 1e fa          	endbr64 
   10cb4:	8b 47 1c             	mov    eax,DWORD PTR [rdi+0x1c]
   10cb7:	89 06                	mov    DWORD PTR [rsi],eax
   10cb9:	8b 47 18             	mov    eax,DWORD PTR [rdi+0x18]
   10cbc:	89 02                	mov    DWORD PTR [rdx],eax
   10cbe:	48 8b 07             	mov    rax,QWORD PTR [rdi]
   10cc1:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
   10cc4:	89 01                	mov    DWORD PTR [rcx],eax
   10cc6:	48 8b 47 30          	mov    rax,QWORD PTR [rdi+0x30]
   10cca:	c3                   	ret    
   10ccb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010cd0 <mlx_put_image_to_window>:
   10cd0:	f3 0f 1e fa          	endbr64 
   10cd4:	41 57                	push   r15
   10cd6:	41 56                	push   r14
   10cd8:	45 89 c6             	mov    r14d,r8d
   10cdb:	41 55                	push   r13
   10cdd:	41 89 cd             	mov    r13d,ecx
   10ce0:	41 54                	push   r12
   10ce2:	49 89 f4             	mov    r12,rsi
   10ce5:	55                   	push   rbp
   10ce6:	48 89 fd             	mov    rbp,rdi
   10ce9:	53                   	push   rbx
   10cea:	48 89 d3             	mov    rbx,rdx
   10ced:	48 83 ec 18          	sub    rsp,0x18
   10cf1:	4c 8b 7a 10          	mov    r15,QWORD PTR [rdx+0x10]
   10cf5:	4c 8b 56 08          	mov    r10,QWORD PTR [rsi+0x8]
   10cf9:	4d 85 ff             	test   r15,r15
   10cfc:	74 14                	je     10d12 <mlx_put_image_to_window+0x42>
   10cfe:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
   10d01:	44 89 c1             	mov    ecx,r8d
   10d04:	44 89 ea             	mov    edx,r13d
   10d07:	4c 89 fe             	mov    rsi,r15
   10d0a:	e8 11 1c ff ff       	call   2920 <XSetClipOrigin@plt>
   10d0f:	4d 89 fa             	mov    r10,r15
   10d12:	8b 43 28             	mov    eax,DWORD PTR [rbx+0x28]
   10d15:	83 f8 02             	cmp    eax,0x2
   10d18:	0f 84 a2 00 00 00    	je     10dc0 <mlx_put_image_to_window+0xf0>
   10d1e:	83 f8 01             	cmp    eax,0x1
   10d21:	74 5d                	je     10d80 <mlx_put_image_to_window+0xb0>
   10d23:	8b 43 24             	mov    eax,DWORD PTR [rbx+0x24]
   10d26:	41 56                	push   r14
   10d28:	45 31 c9             	xor    r9d,r9d
   10d2b:	45 31 c0             	xor    r8d,r8d
   10d2e:	48 8b 73 08          	mov    rsi,QWORD PTR [rbx+0x8]
   10d32:	49 8b 14 24          	mov    rdx,QWORD PTR [r12]
   10d36:	41 55                	push   r13
   10d38:	4c 89 d1             	mov    rcx,r10
   10d3b:	50                   	push   rax
   10d3c:	8b 43 20             	mov    eax,DWORD PTR [rbx+0x20]
   10d3f:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
   10d43:	50                   	push   rax
   10d44:	e8 97 19 ff ff       	call   26e0 <XCopyArea@plt>
   10d49:	8b 45 50             	mov    eax,DWORD PTR [rbp+0x50]
   10d4c:	48 83 c4 20          	add    rsp,0x20
   10d50:	85 c0                	test   eax,eax
   10d52:	75 14                	jne    10d68 <mlx_put_image_to_window+0x98>
   10d54:	48 83 c4 18          	add    rsp,0x18
   10d58:	5b                   	pop    rbx
   10d59:	5d                   	pop    rbp
   10d5a:	41 5c                	pop    r12
   10d5c:	41 5d                	pop    r13
   10d5e:	41 5e                	pop    r14
   10d60:	41 5f                	pop    r15
   10d62:	c3                   	ret    
   10d63:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   10d68:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
   10d6c:	48 83 c4 18          	add    rsp,0x18
   10d70:	5b                   	pop    rbx
   10d71:	5d                   	pop    rbp
   10d72:	41 5c                	pop    r12
   10d74:	41 5d                	pop    r13
   10d76:	41 5e                	pop    r14
   10d78:	41 5f                	pop    r15
   10d7a:	e9 41 1a ff ff       	jmp    27c0 <XFlush@plt>
   10d7f:	90                   	nop
   10d80:	8b 43 24             	mov    eax,DWORD PTR [rbx+0x24]
   10d83:	4c 89 54 24 08       	mov    QWORD PTR [rsp+0x8],r10
   10d88:	45 31 c9             	xor    r9d,r9d
   10d8b:	45 31 c0             	xor    r8d,r8d
   10d8e:	49 8b 54 24 08       	mov    rdx,QWORD PTR [r12+0x8]
   10d93:	48 8b 73 08          	mov    rsi,QWORD PTR [rbx+0x8]
   10d97:	48 8b 0b             	mov    rcx,QWORD PTR [rbx]
   10d9a:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
   10d9e:	50                   	push   rax
   10d9f:	8b 43 20             	mov    eax,DWORD PTR [rbx+0x20]
   10da2:	50                   	push   rax
   10da3:	6a 00                	push   0x0
   10da5:	6a 00                	push   0x0
   10da7:	e8 54 1a ff ff       	call   2800 <XPutImage@plt>
   10dac:	48 83 c4 20          	add    rsp,0x20
   10db0:	4c 8b 54 24 08       	mov    r10,QWORD PTR [rsp+0x8]
   10db5:	e9 69 ff ff ff       	jmp    10d23 <mlx_put_image_to_window+0x53>
   10dba:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
   10dc0:	8b 43 24             	mov    eax,DWORD PTR [rbx+0x24]
   10dc3:	4c 89 54 24 08       	mov    QWORD PTR [rsp+0x8],r10
   10dc8:	48 83 ec 08          	sub    rsp,0x8
   10dcc:	45 31 c9             	xor    r9d,r9d
   10dcf:	49 8b 54 24 08       	mov    rdx,QWORD PTR [r12+0x8]
   10dd4:	48 8b 73 08          	mov    rsi,QWORD PTR [rbx+0x8]
   10dd8:	6a 00                	push   0x0
   10dda:	45 31 c0             	xor    r8d,r8d
   10ddd:	48 8b 0b             	mov    rcx,QWORD PTR [rbx]
   10de0:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
   10de4:	50                   	push   rax
   10de5:	8b 43 20             	mov    eax,DWORD PTR [rbx+0x20]
   10de8:	50                   	push   rax
   10de9:	6a 00                	push   0x0
   10deb:	6a 00                	push   0x0
   10ded:	e8 7e 1a ff ff       	call   2870 <XShmPutImage@plt>
   10df2:	48 83 c4 30          	add    rsp,0x30
   10df6:	8b 43 28             	mov    eax,DWORD PTR [rbx+0x28]
   10df9:	4c 8b 54 24 08       	mov    r10,QWORD PTR [rsp+0x8]
   10dfe:	e9 1b ff ff ff       	jmp    10d1e <mlx_put_image_to_window+0x4e>
   10e03:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
   10e0a:	00 00 00 
   10e0d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000010e10 <mlx_clear_window>:
   10e10:	f3 0f 1e fa          	endbr64 
   10e14:	53                   	push   rbx
   10e15:	48 89 fb             	mov    rbx,rdi
   10e18:	48 8b 36             	mov    rsi,QWORD PTR [rsi]
   10e1b:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
   10e1e:	e8 fd 16 ff ff       	call   2520 <XClearWindow@plt>
   10e23:	8b 43 50             	mov    eax,DWORD PTR [rbx+0x50]
   10e26:	85 c0                	test   eax,eax
   10e28:	75 06                	jne    10e30 <mlx_clear_window+0x20>
   10e2a:	5b                   	pop    rbx
   10e2b:	c3                   	ret    
   10e2c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   10e30:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
   10e33:	5b                   	pop    rbx
   10e34:	e9 87 19 ff ff       	jmp    27c0 <XFlush@plt>
   10e39:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000010e40 <mlx_destroy_window>:
   10e40:	f3 0f 1e fa          	endbr64 
   10e44:	55                   	push   rbp
   10e45:	48 89 f5             	mov    rbp,rsi
   10e48:	53                   	push   rbx
   10e49:	48 89 fb             	mov    rbx,rdi
   10e4c:	48 81 ec b8 03 00 00 	sub    rsp,0x3b8
   10e53:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
   10e5a:	00 00 
   10e5c:	48 89 84 24 a8 03 00 	mov    QWORD PTR [rsp+0x3a8],rax
   10e63:	00 
   10e64:	48 8b 47 30          	mov    rax,QWORD PTR [rdi+0x30]
   10e68:	48 89 44 24 10       	mov    QWORD PTR [rsp+0x10],rax
   10e6d:	48 85 c0             	test   rax,rax
   10e70:	74 34                	je     10ea6 <mlx_destroy_window+0x66>
   10e72:	48 89 e1             	mov    rcx,rsp
   10e75:	eb 18                	jmp    10e8f <mlx_destroy_window+0x4f>
   10e77:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
   10e7e:	00 00 
   10e80:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
   10e84:	48 85 d2             	test   rdx,rdx
   10e87:	74 18                	je     10ea1 <mlx_destroy_window+0x61>
   10e89:	48 89 c1             	mov    rcx,rax
   10e8c:	48 89 d0             	mov    rax,rdx
   10e8f:	48 39 c5             	cmp    rbp,rax
   10e92:	75 ec                	jne    10e80 <mlx_destroy_window+0x40>
   10e94:	48 8b 55 10          	mov    rdx,QWORD PTR [rbp+0x10]
   10e98:	48 89 51 10          	mov    QWORD PTR [rcx+0x10],rdx
   10e9c:	48 85 d2             	test   rdx,rdx
   10e9f:	75 eb                	jne    10e8c <mlx_destroy_window+0x4c>
   10ea1:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
   10ea6:	48 8b 75 00          	mov    rsi,QWORD PTR [rbp+0x0]
   10eaa:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
   10ead:	48 89 43 30          	mov    QWORD PTR [rbx+0x30],rax
   10eb1:	e8 4a 18 ff ff       	call   2700 <XDestroyWindow@plt>
   10eb6:	48 8b 75 08          	mov    rsi,QWORD PTR [rbp+0x8]
   10eba:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
   10ebd:	e8 6e 18 ff ff       	call   2730 <XFreeGC@plt>
   10ec2:	48 89 ef             	mov    rdi,rbp
   10ec5:	e8 06 18 ff ff       	call   26d0 <free@plt>
   10eca:	8b 43 50             	mov    eax,DWORD PTR [rbx+0x50]
   10ecd:	85 c0                	test   eax,eax
   10ecf:	75 1f                	jne    10ef0 <mlx_destroy_window+0xb0>
   10ed1:	48 8b 84 24 a8 03 00 	mov    rax,QWORD PTR [rsp+0x3a8]
   10ed8:	00 
   10ed9:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
   10ee0:	00 00 
   10ee2:	75 30                	jne    10f14 <mlx_destroy_window+0xd4>
   10ee4:	48 81 c4 b8 03 00 00 	add    rsp,0x3b8
   10eeb:	31 c0                	xor    eax,eax
   10eed:	5b                   	pop    rbx
   10eee:	5d                   	pop    rbp
   10eef:	c3                   	ret    
   10ef0:	48 8b 84 24 a8 03 00 	mov    rax,QWORD PTR [rsp+0x3a8]
   10ef7:	00 
   10ef8:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
   10eff:	00 00 
   10f01:	75 11                	jne    10f14 <mlx_destroy_window+0xd4>
   10f03:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
   10f06:	48 81 c4 b8 03 00 00 	add    rsp,0x3b8
   10f0d:	5b                   	pop    rbx
   10f0e:	5d                   	pop    rbp
   10f0f:	e9 ac 18 ff ff       	jmp    27c0 <XFlush@plt>
   10f14:	e8 d7 18 ff ff       	call   27f0 <__stack_chk_fail@plt>
   10f19:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000010f20 <mlx_int_param_undef>:
   10f20:	f3 0f 1e fa          	endbr64 
   10f24:	c3                   	ret    
   10f25:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
   10f2c:	00 00 00 00 

0000000000010f30 <mlx_int_param_ButtonPress>:
   10f30:	f3 0f 1e fa          	endbr64 
   10f34:	44 8b 56 44          	mov    r10d,DWORD PTR [rsi+0x44]
   10f38:	44 8b 4e 40          	mov    r9d,DWORD PTR [rsi+0x40]
   10f3c:	31 c0                	xor    eax,eax
   10f3e:	48 8b 8a b8 00 00 00 	mov    rcx,QWORD PTR [rdx+0xb8]
   10f45:	8b 7e 54             	mov    edi,DWORD PTR [rsi+0x54]
   10f48:	4c 8b 82 b0 00 00 00 	mov    r8,QWORD PTR [rdx+0xb0]
   10f4f:	44 89 ce             	mov    esi,r9d
   10f52:	44 89 d2             	mov    edx,r10d
   10f55:	41 ff e0             	jmp    r8
   10f58:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
   10f5f:	00 

0000000000010f60 <mlx_int_param_ButtonRelease>:
   10f60:	f3 0f 1e fa          	endbr64 
   10f64:	44 8b 56 44          	mov    r10d,DWORD PTR [rsi+0x44]
   10f68:	44 8b 4e 40          	mov    r9d,DWORD PTR [rsi+0x40]
   10f6c:	31 c0                	xor    eax,eax
   10f6e:	48 8b 8a d0 00 00 00 	mov    rcx,QWORD PTR [rdx+0xd0]
   10f75:	8b 7e 54             	mov    edi,DWORD PTR [rsi+0x54]
   10f78:	4c 8b 82 c8 00 00 00 	mov    r8,QWORD PTR [rdx+0xc8]
   10f7f:	44 89 ce             	mov    esi,r9d
   10f82:	44 89 d2             	mov    edx,r10d
   10f85:	41 ff e0             	jmp    r8
   10f88:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
   10f8f:	00 

0000000000010f90 <mlx_int_param_MotionNotify>:
   10f90:	f3 0f 1e fa          	endbr64 
   10f94:	4c 8b 8a e8 00 00 00 	mov    r9,QWORD PTR [rdx+0xe8]
   10f9b:	44 8b 46 44          	mov    r8d,DWORD PTR [rsi+0x44]
   10f9f:	31 c0                	xor    eax,eax
   10fa1:	8b 7e 40             	mov    edi,DWORD PTR [rsi+0x40]
   10fa4:	48 8b 8a e0 00 00 00 	mov    rcx,QWORD PTR [rdx+0xe0]
   10fab:	44 89 c6             	mov    esi,r8d
   10fae:	4c 89 ca             	mov    rdx,r9
   10fb1:	ff e1                	jmp    rcx
   10fb3:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
   10fba:	00 00 00 00 
   10fbe:	66 90                	xchg   ax,ax

0000000000010fc0 <mlx_int_param_generic>:
   10fc0:	f3 0f 1e fa          	endbr64 
   10fc4:	48 63 06             	movsxd rax,DWORD PTR [rsi]
   10fc7:	48 8d 04 40          	lea    rax,[rax+rax*2]
   10fcb:	48 8d 04 c2          	lea    rax,[rdx+rax*8]
   10fcf:	48 8b 50 50          	mov    rdx,QWORD PTR [rax+0x50]
   10fd3:	48 8b 78 58          	mov    rdi,QWORD PTR [rax+0x58]
   10fd7:	31 c0                	xor    eax,eax
   10fd9:	ff e2                	jmp    rdx
   10fdb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010fe0 <mlx_int_param_KeyPress>:
   10fe0:	f3 0f 1e fa          	endbr64 
   10fe4:	55                   	push   rbp
   10fe5:	31 c9                	xor    ecx,ecx
   10fe7:	53                   	push   rbx
   10fe8:	48 83 ec 08          	sub    rsp,0x8
   10fec:	0f b6 76 54          	movzx  esi,BYTE PTR [rsi+0x54]
   10ff0:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
   10ff3:	48 8b 9a 80 00 00 00 	mov    rbx,QWORD PTR [rdx+0x80]
   10ffa:	48 8b aa 88 00 00 00 	mov    rbp,QWORD PTR [rdx+0x88]
   11001:	31 d2                	xor    edx,edx
   11003:	e8 38 16 ff ff       	call   2640 <XkbKeycodeToKeysym@plt>
   11008:	48 83 c4 08          	add    rsp,0x8
   1100c:	48 89 c7             	mov    rdi,rax
   1100f:	48 89 ee             	mov    rsi,rbp
   11012:	48 89 d9             	mov    rcx,rbx
   11015:	31 c0                	xor    eax,eax
   11017:	5b                   	pop    rbx
   11018:	5d                   	pop    rbp
   11019:	ff e1                	jmp    rcx
   1101b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011020 <mlx_int_param_KeyRelease>:
   11020:	f3 0f 1e fa          	endbr64 
   11024:	55                   	push   rbp
   11025:	31 c9                	xor    ecx,ecx
   11027:	53                   	push   rbx
   11028:	48 83 ec 08          	sub    rsp,0x8
   1102c:	0f b6 76 54          	movzx  esi,BYTE PTR [rsi+0x54]
   11030:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
   11033:	48 8b 9a 98 00 00 00 	mov    rbx,QWORD PTR [rdx+0x98]
   1103a:	48 8b aa a0 00 00 00 	mov    rbp,QWORD PTR [rdx+0xa0]
   11041:	31 d2                	xor    edx,edx
   11043:	e8 f8 15 ff ff       	call   2640 <XkbKeycodeToKeysym@plt>
   11048:	48 83 c4 08          	add    rsp,0x8
   1104c:	48 89 c7             	mov    rdi,rax
   1104f:	48 89 ee             	mov    rsi,rbp
   11052:	48 89 d9             	mov    rcx,rbx
   11055:	31 c0                	xor    eax,eax
   11057:	5b                   	pop    rbx
   11058:	5d                   	pop    rbp
   11059:	ff e1                	jmp    rcx
   1105b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011060 <mlx_int_param_Expose>:
   11060:	f3 0f 1e fa          	endbr64 
   11064:	8b 46 38             	mov    eax,DWORD PTR [rsi+0x38]
   11067:	85 c0                	test   eax,eax
   11069:	75 15                	jne    11080 <mlx_int_param_Expose+0x20>
   1106b:	48 8b ba 78 01 00 00 	mov    rdi,QWORD PTR [rdx+0x178]
   11072:	31 c0                	xor    eax,eax
   11074:	48 8b 92 70 01 00 00 	mov    rdx,QWORD PTR [rdx+0x170]
   1107b:	ff e2                	jmp    rdx
   1107d:	0f 1f 00             	nop    DWORD PTR [rax]
   11080:	c3                   	ret    
   11081:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
   11088:	00 00 00 
   1108b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011090 <mlx_int_set_win_event_mask>:
   11090:	f3 0f 1e fa          	endbr64 
   11094:	41 54                	push   r12
   11096:	55                   	push   rbp
   11097:	53                   	push   rbx
   11098:	48 89 fb             	mov    rbx,rdi
   1109b:	48 83 c4 80          	add    rsp,0xffffffffffffff80
   1109f:	4c 8b 67 30          	mov    r12,QWORD PTR [rdi+0x30]
   110a3:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
   110aa:	00 00 
   110ac:	48 89 44 24 78       	mov    QWORD PTR [rsp+0x78],rax
   110b1:	31 c0                	xor    eax,eax
   110b3:	48 89 e5             	mov    rbp,rsp
   110b6:	4d 85 e4             	test   r12,r12
   110b9:	74 47                	je     11102 <mlx_int_set_win_event_mask+0x72>
   110bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   110c0:	49 8d 84 24 90 03 00 	lea    rax,[r12+0x390]
   110c7:	00 
   110c8:	49 8d 74 24 30       	lea    rsi,[r12+0x30]
   110cd:	31 d2                	xor    edx,edx
   110cf:	90                   	nop
   110d0:	48 63 08             	movsxd rcx,DWORD PTR [rax]
   110d3:	48 83 e8 18          	sub    rax,0x18
   110d7:	48 09 ca             	or     rdx,rcx
   110da:	48 39 c6             	cmp    rsi,rax
   110dd:	75 f1                	jne    110d0 <mlx_int_set_win_event_mask+0x40>
   110df:	49 8b 34 24          	mov    rsi,QWORD PTR [r12]
   110e3:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
   110e6:	48 89 54 24 48       	mov    QWORD PTR [rsp+0x48],rdx
   110eb:	48 89 e9             	mov    rcx,rbp
   110ee:	ba 00 08 00 00       	mov    edx,0x800
   110f3:	e8 88 18 ff ff       	call   2980 <XChangeWindowAttributes@plt>
   110f8:	4d 8b 64 24 10       	mov    r12,QWORD PTR [r12+0x10]
   110fd:	4d 85 e4             	test   r12,r12
   11100:	75 be                	jne    110c0 <mlx_int_set_win_event_mask+0x30>
   11102:	48 8b 44 24 78       	mov    rax,QWORD PTR [rsp+0x78]
   11107:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
   1110e:	00 00 
   11110:	75 0b                	jne    1111d <mlx_int_set_win_event_mask+0x8d>
   11112:	48 83 ec 80          	sub    rsp,0xffffffffffffff80
   11116:	31 c0                	xor    eax,eax
   11118:	5b                   	pop    rbx
   11119:	5d                   	pop    rbp
   1111a:	41 5c                	pop    r12
   1111c:	c3                   	ret    
   1111d:	e8 ce 16 ff ff       	call   27f0 <__stack_chk_fail@plt>
   11122:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
   11129:	00 00 00 
   1112c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000011130 <mlx_hook>:
   11130:	f3 0f 1e fa          	endbr64 
   11134:	48 63 f6             	movsxd rsi,esi
   11137:	48 8d 04 76          	lea    rax,[rsi+rsi*2]
   1113b:	48 8d 04 c7          	lea    rax,[rdi+rax*8]
   1113f:	48 89 48 50          	mov    QWORD PTR [rax+0x50],rcx
   11143:	4c 89 40 58          	mov    QWORD PTR [rax+0x58],r8
   11147:	89 50 48             	mov    DWORD PTR [rax+0x48],edx
   1114a:	c3                   	ret    
   1114b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011150 <mlx_do_key_autorepeatoff>:
   11150:	f3 0f 1e fa          	endbr64 
   11154:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
   11157:	e9 34 14 ff ff       	jmp    2590 <XAutoRepeatOff@plt>
   1115c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000011160 <mlx_do_key_autorepeaton>:
   11160:	f3 0f 1e fa          	endbr64 
   11164:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
   11167:	e9 14 15 ff ff       	jmp    2680 <XAutoRepeatOn@plt>
   1116c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000011170 <mlx_do_sync>:
   11170:	f3 0f 1e fa          	endbr64 
   11174:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
   11177:	31 f6                	xor    esi,esi
   11179:	e9 52 16 ff ff       	jmp    27d0 <XSync@plt>
   1117e:	66 90                	xchg   ax,ax

0000000000011180 <mlx_destroy_image>:
   11180:	f3 0f 1e fa          	endbr64 
   11184:	55                   	push   rbp
   11185:	48 89 f5             	mov    rbp,rsi
   11188:	53                   	push   rbx
   11189:	48 89 fb             	mov    rbx,rdi
   1118c:	48 83 ec 08          	sub    rsp,0x8
   11190:	8b 46 28             	mov    eax,DWORD PTR [rsi+0x28]
   11193:	83 e8 02             	sub    eax,0x2
   11196:	83 f8 01             	cmp    eax,0x1
   11199:	76 55                	jbe    111f0 <mlx_destroy_image+0x70>
   1119b:	48 8b 45 00          	mov    rax,QWORD PTR [rbp+0x0]
   1119f:	48 89 c7             	mov    rdi,rax
   111a2:	ff 50 60             	call   QWORD PTR [rax+0x60]
   111a5:	48 8b 75 08          	mov    rsi,QWORD PTR [rbp+0x8]
   111a9:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
   111ac:	e8 df 16 ff ff       	call   2890 <XFreePixmap@plt>
   111b1:	48 8b 75 10          	mov    rsi,QWORD PTR [rbp+0x10]
   111b5:	48 85 f6             	test   rsi,rsi
   111b8:	74 08                	je     111c2 <mlx_destroy_image+0x42>
   111ba:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
   111bd:	e8 6e 15 ff ff       	call   2730 <XFreeGC@plt>
   111c2:	48 89 ef             	mov    rdi,rbp
   111c5:	e8 06 15 ff ff       	call   26d0 <free@plt>
   111ca:	8b 43 50             	mov    eax,DWORD PTR [rbx+0x50]
   111cd:	85 c0                	test   eax,eax
   111cf:	75 0f                	jne    111e0 <mlx_destroy_image+0x60>
   111d1:	48 83 c4 08          	add    rsp,0x8
   111d5:	5b                   	pop    rbx
   111d6:	5d                   	pop    rbp
   111d7:	c3                   	ret    
   111d8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
   111df:	00 
   111e0:	48 8b 3b             	mov    rdi,QWORD PTR [rbx]
   111e3:	48 83 c4 08          	add    rsp,0x8
   111e7:	5b                   	pop    rbx
   111e8:	5d                   	pop    rbp
   111e9:	e9 d2 15 ff ff       	jmp    27c0 <XFlush@plt>
   111ee:	66 90                	xchg   ax,ax
   111f0:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
   111f3:	48 8d 76 38          	lea    rsi,[rsi+0x38]
   111f7:	e8 44 17 ff ff       	call   2940 <XShmDetach@plt>
   111fc:	48 8b 7d 48          	mov    rdi,QWORD PTR [rbp+0x48]
   11200:	e8 3b 13 ff ff       	call   2540 <shmdt@plt>
   11205:	eb 94                	jmp    1119b <mlx_destroy_image+0x1b>
   11207:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
   1120e:	00 00 

0000000000011210 <mlx_get_screen_size>:
   11210:	f3 0f 1e fa          	endbr64 
   11214:	55                   	push   rbp
   11215:	48 89 f5             	mov    rbp,rsi
   11218:	53                   	push   rbx
   11219:	48 89 d3             	mov    rbx,rdx
   1121c:	48 81 ec 98 00 00 00 	sub    rsp,0x98
   11223:	48 8b 77 08          	mov    rsi,QWORD PTR [rdi+0x8]
   11227:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
   1122a:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
   11231:	00 00 
   11233:	48 89 84 24 88 00 00 	mov    QWORD PTR [rsp+0x88],rax
   1123a:	00 
   1123b:	31 c0                	xor    eax,eax
   1123d:	48 89 e2             	mov    rdx,rsp
   11240:	e8 1b 16 ff ff       	call   2860 <XGetWindowAttributes@plt>
   11245:	8b 44 24 08          	mov    eax,DWORD PTR [rsp+0x8]
   11249:	89 45 00             	mov    DWORD PTR [rbp+0x0],eax
   1124c:	8b 44 24 0c          	mov    eax,DWORD PTR [rsp+0xc]
   11250:	89 03                	mov    DWORD PTR [rbx],eax
   11252:	48 8b 84 24 88 00 00 	mov    rax,QWORD PTR [rsp+0x88]
   11259:	00 
   1125a:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
   11261:	00 00 
   11263:	75 0c                	jne    11271 <mlx_get_screen_size+0x61>
   11265:	48 81 c4 98 00 00 00 	add    rsp,0x98
   1126c:	31 c0                	xor    eax,eax
   1126e:	5b                   	pop    rbx
   1126f:	5d                   	pop    rbp
   11270:	c3                   	ret    
   11271:	e8 7a 15 ff ff       	call   27f0 <__stack_chk_fail@plt>
   11276:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
   1127d:	00 00 00 

0000000000011280 <mlx_destroy_display>:
   11280:	f3 0f 1e fa          	endbr64 
   11284:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
   11287:	e9 84 14 ff ff       	jmp    2710 <XCloseDisplay@plt>

Disassembly of section .fini:

000000000001128c <_fini>:
   1128c:	f3 0f 1e fa          	endbr64 
   11290:	48 83 ec 08          	sub    rsp,0x8
   11294:	48 83 c4 08          	add    rsp,0x8
   11298:	c3                   	ret    
